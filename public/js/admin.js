/*! jQuery v3.6.0 | (c) OpenJS Foundation and other contributors | jquery.org/license */
!function(e,t){"use strict";"object"==typeof module&&"object"==typeof module.exports?module.exports=e.document?t(e,!0):function(e){if(!e.document)throw new Error("jQuery requires a window with a document");return t(e)}:t(e)}("undefined"!=typeof window?window:this,function(C,e){"use strict";var t=[],r=Object.getPrototypeOf,s=t.slice,g=t.flat?function(e){return t.flat.call(e)}:function(e){return t.concat.apply([],e)},u=t.push,i=t.indexOf,n={},o=n.toString,v=n.hasOwnProperty,a=v.toString,l=a.call(Object),y={},m=function(e){return"function"==typeof e&&"number"!=typeof e.nodeType&&"function"!=typeof e.item},x=function(e){return null!=e&&e===e.window},E=C.document,c={type:!0,src:!0,nonce:!0,noModule:!0};function b(e,t,n){var r,i,o=(n=n||E).createElement("script");if(o.text=e,t)for(r in c)(i=t[r]||t.getAttribute&&t.getAttribute(r))&&o.setAttribute(r,i);n.head.appendChild(o).parentNode.removeChild(o)}function w(e){return null==e?e+"":"object"==typeof e||"function"==typeof e?n[o.call(e)]||"object":typeof e}var f="3.6.0",S=function(e,t){return new S.fn.init(e,t)};function p(e){var t=!!e&&"length"in e&&e.length,n=w(e);return!m(e)&&!x(e)&&("array"===n||0===t||"number"==typeof t&&0<t&&t-1 in e)}S.fn=S.prototype={jquery:f,constructor:S,length:0,toArray:function(){return s.call(this)},get:function(e){return null==e?s.call(this):e<0?this[e+this.length]:this[e]},pushStack:function(e){var t=S.merge(this.constructor(),e);return t.prevObject=this,t},each:function(e){return S.each(this,e)},map:function(n){return this.pushStack(S.map(this,function(e,t){return n.call(e,t,e)}))},slice:function(){return this.pushStack(s.apply(this,arguments))},first:function(){return this.eq(0)},last:function(){return this.eq(-1)},even:function(){return this.pushStack(S.grep(this,function(e,t){return(t+1)%2}))},odd:function(){return this.pushStack(S.grep(this,function(e,t){return t%2}))},eq:function(e){var t=this.length,n=+e+(e<0?t:0);return this.pushStack(0<=n&&n<t?[this[n]]:[])},end:function(){return this.prevObject||this.constructor()},push:u,sort:t.sort,splice:t.splice},S.extend=S.fn.extend=function(){var e,t,n,r,i,o,a=arguments[0]||{},s=1,u=arguments.length,l=!1;for("boolean"==typeof a&&(l=a,a=arguments[s]||{},s++),"object"==typeof a||m(a)||(a={}),s===u&&(a=this,s--);s<u;s++)if(null!=(e=arguments[s]))for(t in e)r=e[t],"__proto__"!==t&&a!==r&&(l&&r&&(S.isPlainObject(r)||(i=Array.isArray(r)))?(n=a[t],o=i&&!Array.isArray(n)?[]:i||S.isPlainObject(n)?n:{},i=!1,a[t]=S.extend(l,o,r)):void 0!==r&&(a[t]=r));return a},S.extend({expando:"jQuery"+(f+Math.random()).replace(/\D/g,""),isReady:!0,error:function(e){throw new Error(e)},noop:function(){},isPlainObject:function(e){var t,n;return!(!e||"[object Object]"!==o.call(e))&&(!(t=r(e))||"function"==typeof(n=v.call(t,"constructor")&&t.constructor)&&a.call(n)===l)},isEmptyObject:function(e){var t;for(t in e)return!1;return!0},globalEval:function(e,t,n){b(e,{nonce:t&&t.nonce},n)},each:function(e,t){var n,r=0;if(p(e)){for(n=e.length;r<n;r++)if(!1===t.call(e[r],r,e[r]))break}else for(r in e)if(!1===t.call(e[r],r,e[r]))break;return e},makeArray:function(e,t){var n=t||[];return null!=e&&(p(Object(e))?S.merge(n,"string"==typeof e?[e]:e):u.call(n,e)),n},inArray:function(e,t,n){return null==t?-1:i.call(t,e,n)},merge:function(e,t){for(var n=+t.length,r=0,i=e.length;r<n;r++)e[i++]=t[r];return e.length=i,e},grep:function(e,t,n){for(var r=[],i=0,o=e.length,a=!n;i<o;i++)!t(e[i],i)!==a&&r.push(e[i]);return r},map:function(e,t,n){var r,i,o=0,a=[];if(p(e))for(r=e.length;o<r;o++)null!=(i=t(e[o],o,n))&&a.push(i);else for(o in e)null!=(i=t(e[o],o,n))&&a.push(i);return g(a)},guid:1,support:y}),"function"==typeof Symbol&&(S.fn[Symbol.iterator]=t[Symbol.iterator]),S.each("Boolean Number String Function Array Date RegExp Object Error Symbol".split(" "),function(e,t){n["[object "+t+"]"]=t.toLowerCase()});var d=function(n){var e,d,b,o,i,h,f,g,w,u,l,T,C,a,E,v,s,c,y,S="sizzle"+1*new Date,p=n.document,k=0,r=0,m=ue(),x=ue(),A=ue(),N=ue(),j=function(e,t){return e===t&&(l=!0),0},D={}.hasOwnProperty,t=[],q=t.pop,L=t.push,H=t.push,O=t.slice,P=function(e,t){for(var n=0,r=e.length;n<r;n++)if(e[n]===t)return n;return-1},R="checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped",M="[\\x20\\t\\r\\n\\f]",I="(?:\\\\[\\da-fA-F]{1,6}"+M+"?|\\\\[^\\r\\n\\f]|[\\w-]|[^\0-\\x7f])+",W="\\["+M+"*("+I+")(?:"+M+"*([*^$|!~]?=)"+M+"*(?:'((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\"|("+I+"))|)"+M+"*\\]",F=":("+I+")(?:\\((('((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\")|((?:\\\\.|[^\\\\()[\\]]|"+W+")*)|.*)\\)|)",B=new RegExp(M+"+","g"),$=new RegExp("^"+M+"+|((?:^|[^\\\\])(?:\\\\.)*)"+M+"+$","g"),_=new RegExp("^"+M+"*,"+M+"*"),z=new RegExp("^"+M+"*([>+~]|"+M+")"+M+"*"),U=new RegExp(M+"|>"),X=new RegExp(F),V=new RegExp("^"+I+"$"),G={ID:new RegExp("^#("+I+")"),CLASS:new RegExp("^\\.("+I+")"),TAG:new RegExp("^("+I+"|[*])"),ATTR:new RegExp("^"+W),PSEUDO:new RegExp("^"+F),CHILD:new RegExp("^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\("+M+"*(even|odd|(([+-]|)(\\d*)n|)"+M+"*(?:([+-]|)"+M+"*(\\d+)|))"+M+"*\\)|)","i"),bool:new RegExp("^(?:"+R+")$","i"),needsContext:new RegExp("^"+M+"*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\("+M+"*((?:-\\d)?\\d*)"+M+"*\\)|)(?=[^-]|$)","i")},Y=/HTML$/i,Q=/^(?:input|select|textarea|button)$/i,J=/^h\d$/i,K=/^[^{]+\{\s*\[native \w/,Z=/^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/,ee=/[+~]/,te=new RegExp("\\\\[\\da-fA-F]{1,6}"+M+"?|\\\\([^\\r\\n\\f])","g"),ne=function(e,t){var n="0x"+e.slice(1)-65536;return t||(n<0?String.fromCharCode(n+65536):String.fromCharCode(n>>10|55296,1023&n|56320))},re=/([\0-\x1f\x7f]|^-?\d)|^-$|[^\0-\x1f\x7f-\uFFFF\w-]/g,ie=function(e,t){return t?"\0"===e?"\ufffd":e.slice(0,-1)+"\\"+e.charCodeAt(e.length-1).toString(16)+" ":"\\"+e},oe=function(){T()},ae=be(function(e){return!0===e.disabled&&"fieldset"===e.nodeName.toLowerCase()},{dir:"parentNode",next:"legend"});try{H.apply(t=O.call(p.childNodes),p.childNodes),t[p.childNodes.length].nodeType}catch(e){H={apply:t.length?function(e,t){L.apply(e,O.call(t))}:function(e,t){var n=e.length,r=0;while(e[n++]=t[r++]);e.length=n-1}}}function se(t,e,n,r){var i,o,a,s,u,l,c,f=e&&e.ownerDocument,p=e?e.nodeType:9;if(n=n||[],"string"!=typeof t||!t||1!==p&&9!==p&&11!==p)return n;if(!r&&(T(e),e=e||C,E)){if(11!==p&&(u=Z.exec(t)))if(i=u[1]){if(9===p){if(!(a=e.getElementById(i)))return n;if(a.id===i)return n.push(a),n}else if(f&&(a=f.getElementById(i))&&y(e,a)&&a.id===i)return n.push(a),n}else{if(u[2])return H.apply(n,e.getElementsByTagName(t)),n;if((i=u[3])&&d.getElementsByClassName&&e.getElementsByClassName)return H.apply(n,e.getElementsByClassName(i)),n}if(d.qsa&&!N[t+" "]&&(!v||!v.test(t))&&(1!==p||"object"!==e.nodeName.toLowerCase())){if(c=t,f=e,1===p&&(U.test(t)||z.test(t))){(f=ee.test(t)&&ye(e.parentNode)||e)===e&&d.scope||((s=e.getAttribute("id"))?s=s.replace(re,ie):e.setAttribute("id",s=S)),o=(l=h(t)).length;while(o--)l[o]=(s?"#"+s:":scope")+" "+xe(l[o]);c=l.join(",")}try{return H.apply(n,f.querySelectorAll(c)),n}catch(e){N(t,!0)}finally{s===S&&e.removeAttribute("id")}}}return g(t.replace($,"$1"),e,n,r)}function ue(){var r=[];return function e(t,n){return r.push(t+" ")>b.cacheLength&&delete e[r.shift()],e[t+" "]=n}}function le(e){return e[S]=!0,e}function ce(e){var t=C.createElement("fieldset");try{return!!e(t)}catch(e){return!1}finally{t.parentNode&&t.parentNode.removeChild(t),t=null}}function fe(e,t){var n=e.split("|"),r=n.length;while(r--)b.attrHandle[n[r]]=t}function pe(e,t){var n=t&&e,r=n&&1===e.nodeType&&1===t.nodeType&&e.sourceIndex-t.sourceIndex;if(r)return r;if(n)while(n=n.nextSibling)if(n===t)return-1;return e?1:-1}function de(t){return function(e){return"input"===e.nodeName.toLowerCase()&&e.type===t}}function he(n){return function(e){var t=e.nodeName.toLowerCase();return("input"===t||"button"===t)&&e.type===n}}function ge(t){return function(e){return"form"in e?e.parentNode&&!1===e.disabled?"label"in e?"label"in e.parentNode?e.parentNode.disabled===t:e.disabled===t:e.isDisabled===t||e.isDisabled!==!t&&ae(e)===t:e.disabled===t:"label"in e&&e.disabled===t}}function ve(a){return le(function(o){return o=+o,le(function(e,t){var n,r=a([],e.length,o),i=r.length;while(i--)e[n=r[i]]&&(e[n]=!(t[n]=e[n]))})})}function ye(e){return e&&"undefined"!=typeof e.getElementsByTagName&&e}for(e in d=se.support={},i=se.isXML=function(e){var t=e&&e.namespaceURI,n=e&&(e.ownerDocument||e).documentElement;return!Y.test(t||n&&n.nodeName||"HTML")},T=se.setDocument=function(e){var t,n,r=e?e.ownerDocument||e:p;return r!=C&&9===r.nodeType&&r.documentElement&&(a=(C=r).documentElement,E=!i(C),p!=C&&(n=C.defaultView)&&n.top!==n&&(n.addEventListener?n.addEventListener("unload",oe,!1):n.attachEvent&&n.attachEvent("onunload",oe)),d.scope=ce(function(e){return a.appendChild(e).appendChild(C.createElement("div")),"undefined"!=typeof e.querySelectorAll&&!e.querySelectorAll(":scope fieldset div").length}),d.attributes=ce(function(e){return e.className="i",!e.getAttribute("className")}),d.getElementsByTagName=ce(function(e){return e.appendChild(C.createComment("")),!e.getElementsByTagName("*").length}),d.getElementsByClassName=K.test(C.getElementsByClassName),d.getById=ce(function(e){return a.appendChild(e).id=S,!C.getElementsByName||!C.getElementsByName(S).length}),d.getById?(b.filter.ID=function(e){var t=e.replace(te,ne);return function(e){return e.getAttribute("id")===t}},b.find.ID=function(e,t){if("undefined"!=typeof t.getElementById&&E){var n=t.getElementById(e);return n?[n]:[]}}):(b.filter.ID=function(e){var n=e.replace(te,ne);return function(e){var t="undefined"!=typeof e.getAttributeNode&&e.getAttributeNode("id");return t&&t.value===n}},b.find.ID=function(e,t){if("undefined"!=typeof t.getElementById&&E){var n,r,i,o=t.getElementById(e);if(o){if((n=o.getAttributeNode("id"))&&n.value===e)return[o];i=t.getElementsByName(e),r=0;while(o=i[r++])if((n=o.getAttributeNode("id"))&&n.value===e)return[o]}return[]}}),b.find.TAG=d.getElementsByTagName?function(e,t){return"undefined"!=typeof t.getElementsByTagName?t.getElementsByTagName(e):d.qsa?t.querySelectorAll(e):void 0}:function(e,t){var n,r=[],i=0,o=t.getElementsByTagName(e);if("*"===e){while(n=o[i++])1===n.nodeType&&r.push(n);return r}return o},b.find.CLASS=d.getElementsByClassName&&function(e,t){if("undefined"!=typeof t.getElementsByClassName&&E)return t.getElementsByClassName(e)},s=[],v=[],(d.qsa=K.test(C.querySelectorAll))&&(ce(function(e){var t;a.appendChild(e).innerHTML="<a id='"+S+"'></a><select id='"+S+"-\r\\' msallowcapture=''><option selected=''></option></select>",e.querySelectorAll("[msallowcapture^='']").length&&v.push("[*^$]="+M+"*(?:''|\"\")"),e.querySelectorAll("[selected]").length||v.push("\\["+M+"*(?:value|"+R+")"),e.querySelectorAll("[id~="+S+"-]").length||v.push("~="),(t=C.createElement("input")).setAttribute("name",""),e.appendChild(t),e.querySelectorAll("[name='']").length||v.push("\\["+M+"*name"+M+"*="+M+"*(?:''|\"\")"),e.querySelectorAll(":checked").length||v.push(":checked"),e.querySelectorAll("a#"+S+"+*").length||v.push(".#.+[+~]"),e.querySelectorAll("\\\f"),v.push("[\\r\\n\\f]")}),ce(function(e){e.innerHTML="<a href='' disabled='disabled'></a><select disabled='disabled'><option/></select>";var t=C.createElement("input");t.setAttribute("type","hidden"),e.appendChild(t).setAttribute("name","D"),e.querySelectorAll("[name=d]").length&&v.push("name"+M+"*[*^$|!~]?="),2!==e.querySelectorAll(":enabled").length&&v.push(":enabled",":disabled"),a.appendChild(e).disabled=!0,2!==e.querySelectorAll(":disabled").length&&v.push(":enabled",":disabled"),e.querySelectorAll("*,:x"),v.push(",.*:")})),(d.matchesSelector=K.test(c=a.matches||a.webkitMatchesSelector||a.mozMatchesSelector||a.oMatchesSelector||a.msMatchesSelector))&&ce(function(e){d.disconnectedMatch=c.call(e,"*"),c.call(e,"[s!='']:x"),s.push("!=",F)}),v=v.length&&new RegExp(v.join("|")),s=s.length&&new RegExp(s.join("|")),t=K.test(a.compareDocumentPosition),y=t||K.test(a.contains)?function(e,t){var n=9===e.nodeType?e.documentElement:e,r=t&&t.parentNode;return e===r||!(!r||1!==r.nodeType||!(n.contains?n.contains(r):e.compareDocumentPosition&&16&e.compareDocumentPosition(r)))}:function(e,t){if(t)while(t=t.parentNode)if(t===e)return!0;return!1},j=t?function(e,t){if(e===t)return l=!0,0;var n=!e.compareDocumentPosition-!t.compareDocumentPosition;return n||(1&(n=(e.ownerDocument||e)==(t.ownerDocument||t)?e.compareDocumentPosition(t):1)||!d.sortDetached&&t.compareDocumentPosition(e)===n?e==C||e.ownerDocument==p&&y(p,e)?-1:t==C||t.ownerDocument==p&&y(p,t)?1:u?P(u,e)-P(u,t):0:4&n?-1:1)}:function(e,t){if(e===t)return l=!0,0;var n,r=0,i=e.parentNode,o=t.parentNode,a=[e],s=[t];if(!i||!o)return e==C?-1:t==C?1:i?-1:o?1:u?P(u,e)-P(u,t):0;if(i===o)return pe(e,t);n=e;while(n=n.parentNode)a.unshift(n);n=t;while(n=n.parentNode)s.unshift(n);while(a[r]===s[r])r++;return r?pe(a[r],s[r]):a[r]==p?-1:s[r]==p?1:0}),C},se.matches=function(e,t){return se(e,null,null,t)},se.matchesSelector=function(e,t){if(T(e),d.matchesSelector&&E&&!N[t+" "]&&(!s||!s.test(t))&&(!v||!v.test(t)))try{var n=c.call(e,t);if(n||d.disconnectedMatch||e.document&&11!==e.document.nodeType)return n}catch(e){N(t,!0)}return 0<se(t,C,null,[e]).length},se.contains=function(e,t){return(e.ownerDocument||e)!=C&&T(e),y(e,t)},se.attr=function(e,t){(e.ownerDocument||e)!=C&&T(e);var n=b.attrHandle[t.toLowerCase()],r=n&&D.call(b.attrHandle,t.toLowerCase())?n(e,t,!E):void 0;return void 0!==r?r:d.attributes||!E?e.getAttribute(t):(r=e.getAttributeNode(t))&&r.specified?r.value:null},se.escape=function(e){return(e+"").replace(re,ie)},se.error=function(e){throw new Error("Syntax error, unrecognized expression: "+e)},se.uniqueSort=function(e){var t,n=[],r=0,i=0;if(l=!d.detectDuplicates,u=!d.sortStable&&e.slice(0),e.sort(j),l){while(t=e[i++])t===e[i]&&(r=n.push(i));while(r--)e.splice(n[r],1)}return u=null,e},o=se.getText=function(e){var t,n="",r=0,i=e.nodeType;if(i){if(1===i||9===i||11===i){if("string"==typeof e.textContent)return e.textContent;for(e=e.firstChild;e;e=e.nextSibling)n+=o(e)}else if(3===i||4===i)return e.nodeValue}else while(t=e[r++])n+=o(t);return n},(b=se.selectors={cacheLength:50,createPseudo:le,match:G,attrHandle:{},find:{},relative:{">":{dir:"parentNode",first:!0}," ":{dir:"parentNode"},"+":{dir:"previousSibling",first:!0},"~":{dir:"previousSibling"}},preFilter:{ATTR:function(e){return e[1]=e[1].replace(te,ne),e[3]=(e[3]||e[4]||e[5]||"").replace(te,ne),"~="===e[2]&&(e[3]=" "+e[3]+" "),e.slice(0,4)},CHILD:function(e){return e[1]=e[1].toLowerCase(),"nth"===e[1].slice(0,3)?(e[3]||se.error(e[0]),e[4]=+(e[4]?e[5]+(e[6]||1):2*("even"===e[3]||"odd"===e[3])),e[5]=+(e[7]+e[8]||"odd"===e[3])):e[3]&&se.error(e[0]),e},PSEUDO:function(e){var t,n=!e[6]&&e[2];return G.CHILD.test(e[0])?null:(e[3]?e[2]=e[4]||e[5]||"":n&&X.test(n)&&(t=h(n,!0))&&(t=n.indexOf(")",n.length-t)-n.length)&&(e[0]=e[0].slice(0,t),e[2]=n.slice(0,t)),e.slice(0,3))}},filter:{TAG:function(e){var t=e.replace(te,ne).toLowerCase();return"*"===e?function(){return!0}:function(e){return e.nodeName&&e.nodeName.toLowerCase()===t}},CLASS:function(e){var t=m[e+" "];return t||(t=new RegExp("(^|"+M+")"+e+"("+M+"|$)"))&&m(e,function(e){return t.test("string"==typeof e.className&&e.className||"undefined"!=typeof e.getAttribute&&e.getAttribute("class")||"")})},ATTR:function(n,r,i){return function(e){var t=se.attr(e,n);return null==t?"!="===r:!r||(t+="","="===r?t===i:"!="===r?t!==i:"^="===r?i&&0===t.indexOf(i):"*="===r?i&&-1<t.indexOf(i):"$="===r?i&&t.slice(-i.length)===i:"~="===r?-1<(" "+t.replace(B," ")+" ").indexOf(i):"|="===r&&(t===i||t.slice(0,i.length+1)===i+"-"))}},CHILD:function(h,e,t,g,v){var y="nth"!==h.slice(0,3),m="last"!==h.slice(-4),x="of-type"===e;return 1===g&&0===v?function(e){return!!e.parentNode}:function(e,t,n){var r,i,o,a,s,u,l=y!==m?"nextSibling":"previousSibling",c=e.parentNode,f=x&&e.nodeName.toLowerCase(),p=!n&&!x,d=!1;if(c){if(y){while(l){a=e;while(a=a[l])if(x?a.nodeName.toLowerCase()===f:1===a.nodeType)return!1;u=l="only"===h&&!u&&"nextSibling"}return!0}if(u=[m?c.firstChild:c.lastChild],m&&p){d=(s=(r=(i=(o=(a=c)[S]||(a[S]={}))[a.uniqueID]||(o[a.uniqueID]={}))[h]||[])[0]===k&&r[1])&&r[2],a=s&&c.childNodes[s];while(a=++s&&a&&a[l]||(d=s=0)||u.pop())if(1===a.nodeType&&++d&&a===e){i[h]=[k,s,d];break}}else if(p&&(d=s=(r=(i=(o=(a=e)[S]||(a[S]={}))[a.uniqueID]||(o[a.uniqueID]={}))[h]||[])[0]===k&&r[1]),!1===d)while(a=++s&&a&&a[l]||(d=s=0)||u.pop())if((x?a.nodeName.toLowerCase()===f:1===a.nodeType)&&++d&&(p&&((i=(o=a[S]||(a[S]={}))[a.uniqueID]||(o[a.uniqueID]={}))[h]=[k,d]),a===e))break;return(d-=v)===g||d%g==0&&0<=d/g}}},PSEUDO:function(e,o){var t,a=b.pseudos[e]||b.setFilters[e.toLowerCase()]||se.error("unsupported pseudo: "+e);return a[S]?a(o):1<a.length?(t=[e,e,"",o],b.setFilters.hasOwnProperty(e.toLowerCase())?le(function(e,t){var n,r=a(e,o),i=r.length;while(i--)e[n=P(e,r[i])]=!(t[n]=r[i])}):function(e){return a(e,0,t)}):a}},pseudos:{not:le(function(e){var r=[],i=[],s=f(e.replace($,"$1"));return s[S]?le(function(e,t,n,r){var i,o=s(e,null,r,[]),a=e.length;while(a--)(i=o[a])&&(e[a]=!(t[a]=i))}):function(e,t,n){return r[0]=e,s(r,null,n,i),r[0]=null,!i.pop()}}),has:le(function(t){return function(e){return 0<se(t,e).length}}),contains:le(function(t){return t=t.replace(te,ne),function(e){return-1<(e.textContent||o(e)).indexOf(t)}}),lang:le(function(n){return V.test(n||"")||se.error("unsupported lang: "+n),n=n.replace(te,ne).toLowerCase(),function(e){var t;do{if(t=E?e.lang:e.getAttribute("xml:lang")||e.getAttribute("lang"))return(t=t.toLowerCase())===n||0===t.indexOf(n+"-")}while((e=e.parentNode)&&1===e.nodeType);return!1}}),target:function(e){var t=n.location&&n.location.hash;return t&&t.slice(1)===e.id},root:function(e){return e===a},focus:function(e){return e===C.activeElement&&(!C.hasFocus||C.hasFocus())&&!!(e.type||e.href||~e.tabIndex)},enabled:ge(!1),disabled:ge(!0),checked:function(e){var t=e.nodeName.toLowerCase();return"input"===t&&!!e.checked||"option"===t&&!!e.selected},selected:function(e){return e.parentNode&&e.parentNode.selectedIndex,!0===e.selected},empty:function(e){for(e=e.firstChild;e;e=e.nextSibling)if(e.nodeType<6)return!1;return!0},parent:function(e){return!b.pseudos.empty(e)},header:function(e){return J.test(e.nodeName)},input:function(e){return Q.test(e.nodeName)},button:function(e){var t=e.nodeName.toLowerCase();return"input"===t&&"button"===e.type||"button"===t},text:function(e){var t;return"input"===e.nodeName.toLowerCase()&&"text"===e.type&&(null==(t=e.getAttribute("type"))||"text"===t.toLowerCase())},first:ve(function(){return[0]}),last:ve(function(e,t){return[t-1]}),eq:ve(function(e,t,n){return[n<0?n+t:n]}),even:ve(function(e,t){for(var n=0;n<t;n+=2)e.push(n);return e}),odd:ve(function(e,t){for(var n=1;n<t;n+=2)e.push(n);return e}),lt:ve(function(e,t,n){for(var r=n<0?n+t:t<n?t:n;0<=--r;)e.push(r);return e}),gt:ve(function(e,t,n){for(var r=n<0?n+t:n;++r<t;)e.push(r);return e})}}).pseudos.nth=b.pseudos.eq,{radio:!0,checkbox:!0,file:!0,password:!0,image:!0})b.pseudos[e]=de(e);for(e in{submit:!0,reset:!0})b.pseudos[e]=he(e);function me(){}function xe(e){for(var t=0,n=e.length,r="";t<n;t++)r+=e[t].value;return r}function be(s,e,t){var u=e.dir,l=e.next,c=l||u,f=t&&"parentNode"===c,p=r++;return e.first?function(e,t,n){while(e=e[u])if(1===e.nodeType||f)return s(e,t,n);return!1}:function(e,t,n){var r,i,o,a=[k,p];if(n){while(e=e[u])if((1===e.nodeType||f)&&s(e,t,n))return!0}else while(e=e[u])if(1===e.nodeType||f)if(i=(o=e[S]||(e[S]={}))[e.uniqueID]||(o[e.uniqueID]={}),l&&l===e.nodeName.toLowerCase())e=e[u]||e;else{if((r=i[c])&&r[0]===k&&r[1]===p)return a[2]=r[2];if((i[c]=a)[2]=s(e,t,n))return!0}return!1}}function we(i){return 1<i.length?function(e,t,n){var r=i.length;while(r--)if(!i[r](e,t,n))return!1;return!0}:i[0]}function Te(e,t,n,r,i){for(var o,a=[],s=0,u=e.length,l=null!=t;s<u;s++)(o=e[s])&&(n&&!n(o,r,i)||(a.push(o),l&&t.push(s)));return a}function Ce(d,h,g,v,y,e){return v&&!v[S]&&(v=Ce(v)),y&&!y[S]&&(y=Ce(y,e)),le(function(e,t,n,r){var i,o,a,s=[],u=[],l=t.length,c=e||function(e,t,n){for(var r=0,i=t.length;r<i;r++)se(e,t[r],n);return n}(h||"*",n.nodeType?[n]:n,[]),f=!d||!e&&h?c:Te(c,s,d,n,r),p=g?y||(e?d:l||v)?[]:t:f;if(g&&g(f,p,n,r),v){i=Te(p,u),v(i,[],n,r),o=i.length;while(o--)(a=i[o])&&(p[u[o]]=!(f[u[o]]=a))}if(e){if(y||d){if(y){i=[],o=p.length;while(o--)(a=p[o])&&i.push(f[o]=a);y(null,p=[],i,r)}o=p.length;while(o--)(a=p[o])&&-1<(i=y?P(e,a):s[o])&&(e[i]=!(t[i]=a))}}else p=Te(p===t?p.splice(l,p.length):p),y?y(null,t,p,r):H.apply(t,p)})}function Ee(e){for(var i,t,n,r=e.length,o=b.relative[e[0].type],a=o||b.relative[" "],s=o?1:0,u=be(function(e){return e===i},a,!0),l=be(function(e){return-1<P(i,e)},a,!0),c=[function(e,t,n){var r=!o&&(n||t!==w)||((i=t).nodeType?u(e,t,n):l(e,t,n));return i=null,r}];s<r;s++)if(t=b.relative[e[s].type])c=[be(we(c),t)];else{if((t=b.filter[e[s].type].apply(null,e[s].matches))[S]){for(n=++s;n<r;n++)if(b.relative[e[n].type])break;return Ce(1<s&&we(c),1<s&&xe(e.slice(0,s-1).concat({value:" "===e[s-2].type?"*":""})).replace($,"$1"),t,s<n&&Ee(e.slice(s,n)),n<r&&Ee(e=e.slice(n)),n<r&&xe(e))}c.push(t)}return we(c)}return me.prototype=b.filters=b.pseudos,b.setFilters=new me,h=se.tokenize=function(e,t){var n,r,i,o,a,s,u,l=x[e+" "];if(l)return t?0:l.slice(0);a=e,s=[],u=b.preFilter;while(a){for(o in n&&!(r=_.exec(a))||(r&&(a=a.slice(r[0].length)||a),s.push(i=[])),n=!1,(r=z.exec(a))&&(n=r.shift(),i.push({value:n,type:r[0].replace($," ")}),a=a.slice(n.length)),b.filter)!(r=G[o].exec(a))||u[o]&&!(r=u[o](r))||(n=r.shift(),i.push({value:n,type:o,matches:r}),a=a.slice(n.length));if(!n)break}return t?a.length:a?se.error(e):x(e,s).slice(0)},f=se.compile=function(e,t){var n,v,y,m,x,r,i=[],o=[],a=A[e+" "];if(!a){t||(t=h(e)),n=t.length;while(n--)(a=Ee(t[n]))[S]?i.push(a):o.push(a);(a=A(e,(v=o,m=0<(y=i).length,x=0<v.length,r=function(e,t,n,r,i){var o,a,s,u=0,l="0",c=e&&[],f=[],p=w,d=e||x&&b.find.TAG("*",i),h=k+=null==p?1:Math.random()||.1,g=d.length;for(i&&(w=t==C||t||i);l!==g&&null!=(o=d[l]);l++){if(x&&o){a=0,t||o.ownerDocument==C||(T(o),n=!E);while(s=v[a++])if(s(o,t||C,n)){r.push(o);break}i&&(k=h)}m&&((o=!s&&o)&&u--,e&&c.push(o))}if(u+=l,m&&l!==u){a=0;while(s=y[a++])s(c,f,t,n);if(e){if(0<u)while(l--)c[l]||f[l]||(f[l]=q.call(r));f=Te(f)}H.apply(r,f),i&&!e&&0<f.length&&1<u+y.length&&se.uniqueSort(r)}return i&&(k=h,w=p),c},m?le(r):r))).selector=e}return a},g=se.select=function(e,t,n,r){var i,o,a,s,u,l="function"==typeof e&&e,c=!r&&h(e=l.selector||e);if(n=n||[],1===c.length){if(2<(o=c[0]=c[0].slice(0)).length&&"ID"===(a=o[0]).type&&9===t.nodeType&&E&&b.relative[o[1].type]){if(!(t=(b.find.ID(a.matches[0].replace(te,ne),t)||[])[0]))return n;l&&(t=t.parentNode),e=e.slice(o.shift().value.length)}i=G.needsContext.test(e)?0:o.length;while(i--){if(a=o[i],b.relative[s=a.type])break;if((u=b.find[s])&&(r=u(a.matches[0].replace(te,ne),ee.test(o[0].type)&&ye(t.parentNode)||t))){if(o.splice(i,1),!(e=r.length&&xe(o)))return H.apply(n,r),n;break}}}return(l||f(e,c))(r,t,!E,n,!t||ee.test(e)&&ye(t.parentNode)||t),n},d.sortStable=S.split("").sort(j).join("")===S,d.detectDuplicates=!!l,T(),d.sortDetached=ce(function(e){return 1&e.compareDocumentPosition(C.createElement("fieldset"))}),ce(function(e){return e.innerHTML="<a href='#'></a>","#"===e.firstChild.getAttribute("href")})||fe("type|href|height|width",function(e,t,n){if(!n)return e.getAttribute(t,"type"===t.toLowerCase()?1:2)}),d.attributes&&ce(function(e){return e.innerHTML="<input/>",e.firstChild.setAttribute("value",""),""===e.firstChild.getAttribute("value")})||fe("value",function(e,t,n){if(!n&&"input"===e.nodeName.toLowerCase())return e.defaultValue}),ce(function(e){return null==e.getAttribute("disabled")})||fe(R,function(e,t,n){var r;if(!n)return!0===e[t]?t.toLowerCase():(r=e.getAttributeNode(t))&&r.specified?r.value:null}),se}(C);S.find=d,S.expr=d.selectors,S.expr[":"]=S.expr.pseudos,S.uniqueSort=S.unique=d.uniqueSort,S.text=d.getText,S.isXMLDoc=d.isXML,S.contains=d.contains,S.escapeSelector=d.escape;var h=function(e,t,n){var r=[],i=void 0!==n;while((e=e[t])&&9!==e.nodeType)if(1===e.nodeType){if(i&&S(e).is(n))break;r.push(e)}return r},T=function(e,t){for(var n=[];e;e=e.nextSibling)1===e.nodeType&&e!==t&&n.push(e);return n},k=S.expr.match.needsContext;function A(e,t){return e.nodeName&&e.nodeName.toLowerCase()===t.toLowerCase()}var N=/^<([a-z][^\/\0>:\x20\t\r\n\f]*)[\x20\t\r\n\f]*\/?>(?:<\/\1>|)$/i;function j(e,n,r){return m(n)?S.grep(e,function(e,t){return!!n.call(e,t,e)!==r}):n.nodeType?S.grep(e,function(e){return e===n!==r}):"string"!=typeof n?S.grep(e,function(e){return-1<i.call(n,e)!==r}):S.filter(n,e,r)}S.filter=function(e,t,n){var r=t[0];return n&&(e=":not("+e+")"),1===t.length&&1===r.nodeType?S.find.matchesSelector(r,e)?[r]:[]:S.find.matches(e,S.grep(t,function(e){return 1===e.nodeType}))},S.fn.extend({find:function(e){var t,n,r=this.length,i=this;if("string"!=typeof e)return this.pushStack(S(e).filter(function(){for(t=0;t<r;t++)if(S.contains(i[t],this))return!0}));for(n=this.pushStack([]),t=0;t<r;t++)S.find(e,i[t],n);return 1<r?S.uniqueSort(n):n},filter:function(e){return this.pushStack(j(this,e||[],!1))},not:function(e){return this.pushStack(j(this,e||[],!0))},is:function(e){return!!j(this,"string"==typeof e&&k.test(e)?S(e):e||[],!1).length}});var D,q=/^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]+))$/;(S.fn.init=function(e,t,n){var r,i;if(!e)return this;if(n=n||D,"string"==typeof e){if(!(r="<"===e[0]&&">"===e[e.length-1]&&3<=e.length?[null,e,null]:q.exec(e))||!r[1]&&t)return!t||t.jquery?(t||n).find(e):this.constructor(t).find(e);if(r[1]){if(t=t instanceof S?t[0]:t,S.merge(this,S.parseHTML(r[1],t&&t.nodeType?t.ownerDocument||t:E,!0)),N.test(r[1])&&S.isPlainObject(t))for(r in t)m(this[r])?this[r](t[r]):this.attr(r,t[r]);return this}return(i=E.getElementById(r[2]))&&(this[0]=i,this.length=1),this}return e.nodeType?(this[0]=e,this.length=1,this):m(e)?void 0!==n.ready?n.ready(e):e(S):S.makeArray(e,this)}).prototype=S.fn,D=S(E);var L=/^(?:parents|prev(?:Until|All))/,H={children:!0,contents:!0,next:!0,prev:!0};function O(e,t){while((e=e[t])&&1!==e.nodeType);return e}S.fn.extend({has:function(e){var t=S(e,this),n=t.length;return this.filter(function(){for(var e=0;e<n;e++)if(S.contains(this,t[e]))return!0})},closest:function(e,t){var n,r=0,i=this.length,o=[],a="string"!=typeof e&&S(e);if(!k.test(e))for(;r<i;r++)for(n=this[r];n&&n!==t;n=n.parentNode)if(n.nodeType<11&&(a?-1<a.index(n):1===n.nodeType&&S.find.matchesSelector(n,e))){o.push(n);break}return this.pushStack(1<o.length?S.uniqueSort(o):o)},index:function(e){return e?"string"==typeof e?i.call(S(e),this[0]):i.call(this,e.jquery?e[0]:e):this[0]&&this[0].parentNode?this.first().prevAll().length:-1},add:function(e,t){return this.pushStack(S.uniqueSort(S.merge(this.get(),S(e,t))))},addBack:function(e){return this.add(null==e?this.prevObject:this.prevObject.filter(e))}}),S.each({parent:function(e){var t=e.parentNode;return t&&11!==t.nodeType?t:null},parents:function(e){return h(e,"parentNode")},parentsUntil:function(e,t,n){return h(e,"parentNode",n)},next:function(e){return O(e,"nextSibling")},prev:function(e){return O(e,"previousSibling")},nextAll:function(e){return h(e,"nextSibling")},prevAll:function(e){return h(e,"previousSibling")},nextUntil:function(e,t,n){return h(e,"nextSibling",n)},prevUntil:function(e,t,n){return h(e,"previousSibling",n)},siblings:function(e){return T((e.parentNode||{}).firstChild,e)},children:function(e){return T(e.firstChild)},contents:function(e){return null!=e.contentDocument&&r(e.contentDocument)?e.contentDocument:(A(e,"template")&&(e=e.content||e),S.merge([],e.childNodes))}},function(r,i){S.fn[r]=function(e,t){var n=S.map(this,i,e);return"Until"!==r.slice(-5)&&(t=e),t&&"string"==typeof t&&(n=S.filter(t,n)),1<this.length&&(H[r]||S.uniqueSort(n),L.test(r)&&n.reverse()),this.pushStack(n)}});var P=/[^\x20\t\r\n\f]+/g;function R(e){return e}function M(e){throw e}function I(e,t,n,r){var i;try{e&&m(i=e.promise)?i.call(e).done(t).fail(n):e&&m(i=e.then)?i.call(e,t,n):t.apply(void 0,[e].slice(r))}catch(e){n.apply(void 0,[e])}}S.Callbacks=function(r){var e,n;r="string"==typeof r?(e=r,n={},S.each(e.match(P)||[],function(e,t){n[t]=!0}),n):S.extend({},r);var i,t,o,a,s=[],u=[],l=-1,c=function(){for(a=a||r.once,o=i=!0;u.length;l=-1){t=u.shift();while(++l<s.length)!1===s[l].apply(t[0],t[1])&&r.stopOnFalse&&(l=s.length,t=!1)}r.memory||(t=!1),i=!1,a&&(s=t?[]:"")},f={add:function(){return s&&(t&&!i&&(l=s.length-1,u.push(t)),function n(e){S.each(e,function(e,t){m(t)?r.unique&&f.has(t)||s.push(t):t&&t.length&&"string"!==w(t)&&n(t)})}(arguments),t&&!i&&c()),this},remove:function(){return S.each(arguments,function(e,t){var n;while(-1<(n=S.inArray(t,s,n)))s.splice(n,1),n<=l&&l--}),this},has:function(e){return e?-1<S.inArray(e,s):0<s.length},empty:function(){return s&&(s=[]),this},disable:function(){return a=u=[],s=t="",this},disabled:function(){return!s},lock:function(){return a=u=[],t||i||(s=t=""),this},locked:function(){return!!a},fireWith:function(e,t){return a||(t=[e,(t=t||[]).slice?t.slice():t],u.push(t),i||c()),this},fire:function(){return f.fireWith(this,arguments),this},fired:function(){return!!o}};return f},S.extend({Deferred:function(e){var o=[["notify","progress",S.Callbacks("memory"),S.Callbacks("memory"),2],["resolve","done",S.Callbacks("once memory"),S.Callbacks("once memory"),0,"resolved"],["reject","fail",S.Callbacks("once memory"),S.Callbacks("once memory"),1,"rejected"]],i="pending",a={state:function(){return i},always:function(){return s.done(arguments).fail(arguments),this},"catch":function(e){return a.then(null,e)},pipe:function(){var i=arguments;return S.Deferred(function(r){S.each(o,function(e,t){var n=m(i[t[4]])&&i[t[4]];s[t[1]](function(){var e=n&&n.apply(this,arguments);e&&m(e.promise)?e.promise().progress(r.notify).done(r.resolve).fail(r.reject):r[t[0]+"With"](this,n?[e]:arguments)})}),i=null}).promise()},then:function(t,n,r){var u=0;function l(i,o,a,s){return function(){var n=this,r=arguments,e=function(){var e,t;if(!(i<u)){if((e=a.apply(n,r))===o.promise())throw new TypeError("Thenable self-resolution");t=e&&("object"==typeof e||"function"==typeof e)&&e.then,m(t)?s?t.call(e,l(u,o,R,s),l(u,o,M,s)):(u++,t.call(e,l(u,o,R,s),l(u,o,M,s),l(u,o,R,o.notifyWith))):(a!==R&&(n=void 0,r=[e]),(s||o.resolveWith)(n,r))}},t=s?e:function(){try{e()}catch(e){S.Deferred.exceptionHook&&S.Deferred.exceptionHook(e,t.stackTrace),u<=i+1&&(a!==M&&(n=void 0,r=[e]),o.rejectWith(n,r))}};i?t():(S.Deferred.getStackHook&&(t.stackTrace=S.Deferred.getStackHook()),C.setTimeout(t))}}return S.Deferred(function(e){o[0][3].add(l(0,e,m(r)?r:R,e.notifyWith)),o[1][3].add(l(0,e,m(t)?t:R)),o[2][3].add(l(0,e,m(n)?n:M))}).promise()},promise:function(e){return null!=e?S.extend(e,a):a}},s={};return S.each(o,function(e,t){var n=t[2],r=t[5];a[t[1]]=n.add,r&&n.add(function(){i=r},o[3-e][2].disable,o[3-e][3].disable,o[0][2].lock,o[0][3].lock),n.add(t[3].fire),s[t[0]]=function(){return s[t[0]+"With"](this===s?void 0:this,arguments),this},s[t[0]+"With"]=n.fireWith}),a.promise(s),e&&e.call(s,s),s},when:function(e){var n=arguments.length,t=n,r=Array(t),i=s.call(arguments),o=S.Deferred(),a=function(t){return function(e){r[t]=this,i[t]=1<arguments.length?s.call(arguments):e,--n||o.resolveWith(r,i)}};if(n<=1&&(I(e,o.done(a(t)).resolve,o.reject,!n),"pending"===o.state()||m(i[t]&&i[t].then)))return o.then();while(t--)I(i[t],a(t),o.reject);return o.promise()}});var W=/^(Eval|Internal|Range|Reference|Syntax|Type|URI)Error$/;S.Deferred.exceptionHook=function(e,t){C.console&&C.console.warn&&e&&W.test(e.name)&&C.console.warn("jQuery.Deferred exception: "+e.message,e.stack,t)},S.readyException=function(e){C.setTimeout(function(){throw e})};var F=S.Deferred();function B(){E.removeEventListener("DOMContentLoaded",B),C.removeEventListener("load",B),S.ready()}S.fn.ready=function(e){return F.then(e)["catch"](function(e){S.readyException(e)}),this},S.extend({isReady:!1,readyWait:1,ready:function(e){(!0===e?--S.readyWait:S.isReady)||(S.isReady=!0)!==e&&0<--S.readyWait||F.resolveWith(E,[S])}}),S.ready.then=F.then,"complete"===E.readyState||"loading"!==E.readyState&&!E.documentElement.doScroll?C.setTimeout(S.ready):(E.addEventListener("DOMContentLoaded",B),C.addEventListener("load",B));var $=function(e,t,n,r,i,o,a){var s=0,u=e.length,l=null==n;if("object"===w(n))for(s in i=!0,n)$(e,t,s,n[s],!0,o,a);else if(void 0!==r&&(i=!0,m(r)||(a=!0),l&&(a?(t.call(e,r),t=null):(l=t,t=function(e,t,n){return l.call(S(e),n)})),t))for(;s<u;s++)t(e[s],n,a?r:r.call(e[s],s,t(e[s],n)));return i?e:l?t.call(e):u?t(e[0],n):o},_=/^-ms-/,z=/-([a-z])/g;function U(e,t){return t.toUpperCase()}function X(e){return e.replace(_,"ms-").replace(z,U)}var V=function(e){return 1===e.nodeType||9===e.nodeType||!+e.nodeType};function G(){this.expando=S.expando+G.uid++}G.uid=1,G.prototype={cache:function(e){var t=e[this.expando];return t||(t={},V(e)&&(e.nodeType?e[this.expando]=t:Object.defineProperty(e,this.expando,{value:t,configurable:!0}))),t},set:function(e,t,n){var r,i=this.cache(e);if("string"==typeof t)i[X(t)]=n;else for(r in t)i[X(r)]=t[r];return i},get:function(e,t){return void 0===t?this.cache(e):e[this.expando]&&e[this.expando][X(t)]},access:function(e,t,n){return void 0===t||t&&"string"==typeof t&&void 0===n?this.get(e,t):(this.set(e,t,n),void 0!==n?n:t)},remove:function(e,t){var n,r=e[this.expando];if(void 0!==r){if(void 0!==t){n=(t=Array.isArray(t)?t.map(X):(t=X(t))in r?[t]:t.match(P)||[]).length;while(n--)delete r[t[n]]}(void 0===t||S.isEmptyObject(r))&&(e.nodeType?e[this.expando]=void 0:delete e[this.expando])}},hasData:function(e){var t=e[this.expando];return void 0!==t&&!S.isEmptyObject(t)}};var Y=new G,Q=new G,J=/^(?:\{[\w\W]*\}|\[[\w\W]*\])$/,K=/[A-Z]/g;function Z(e,t,n){var r,i;if(void 0===n&&1===e.nodeType)if(r="data-"+t.replace(K,"-$&").toLowerCase(),"string"==typeof(n=e.getAttribute(r))){try{n="true"===(i=n)||"false"!==i&&("null"===i?null:i===+i+""?+i:J.test(i)?JSON.parse(i):i)}catch(e){}Q.set(e,t,n)}else n=void 0;return n}S.extend({hasData:function(e){return Q.hasData(e)||Y.hasData(e)},data:function(e,t,n){return Q.access(e,t,n)},removeData:function(e,t){Q.remove(e,t)},_data:function(e,t,n){return Y.access(e,t,n)},_removeData:function(e,t){Y.remove(e,t)}}),S.fn.extend({data:function(n,e){var t,r,i,o=this[0],a=o&&o.attributes;if(void 0===n){if(this.length&&(i=Q.get(o),1===o.nodeType&&!Y.get(o,"hasDataAttrs"))){t=a.length;while(t--)a[t]&&0===(r=a[t].name).indexOf("data-")&&(r=X(r.slice(5)),Z(o,r,i[r]));Y.set(o,"hasDataAttrs",!0)}return i}return"object"==typeof n?this.each(function(){Q.set(this,n)}):$(this,function(e){var t;if(o&&void 0===e)return void 0!==(t=Q.get(o,n))?t:void 0!==(t=Z(o,n))?t:void 0;this.each(function(){Q.set(this,n,e)})},null,e,1<arguments.length,null,!0)},removeData:function(e){return this.each(function(){Q.remove(this,e)})}}),S.extend({queue:function(e,t,n){var r;if(e)return t=(t||"fx")+"queue",r=Y.get(e,t),n&&(!r||Array.isArray(n)?r=Y.access(e,t,S.makeArray(n)):r.push(n)),r||[]},dequeue:function(e,t){t=t||"fx";var n=S.queue(e,t),r=n.length,i=n.shift(),o=S._queueHooks(e,t);"inprogress"===i&&(i=n.shift(),r--),i&&("fx"===t&&n.unshift("inprogress"),delete o.stop,i.call(e,function(){S.dequeue(e,t)},o)),!r&&o&&o.empty.fire()},_queueHooks:function(e,t){var n=t+"queueHooks";return Y.get(e,n)||Y.access(e,n,{empty:S.Callbacks("once memory").add(function(){Y.remove(e,[t+"queue",n])})})}}),S.fn.extend({queue:function(t,n){var e=2;return"string"!=typeof t&&(n=t,t="fx",e--),arguments.length<e?S.queue(this[0],t):void 0===n?this:this.each(function(){var e=S.queue(this,t,n);S._queueHooks(this,t),"fx"===t&&"inprogress"!==e[0]&&S.dequeue(this,t)})},dequeue:function(e){return this.each(function(){S.dequeue(this,e)})},clearQueue:function(e){return this.queue(e||"fx",[])},promise:function(e,t){var n,r=1,i=S.Deferred(),o=this,a=this.length,s=function(){--r||i.resolveWith(o,[o])};"string"!=typeof e&&(t=e,e=void 0),e=e||"fx";while(a--)(n=Y.get(o[a],e+"queueHooks"))&&n.empty&&(r++,n.empty.add(s));return s(),i.promise(t)}});var ee=/[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/.source,te=new RegExp("^(?:([+-])=|)("+ee+")([a-z%]*)$","i"),ne=["Top","Right","Bottom","Left"],re=E.documentElement,ie=function(e){return S.contains(e.ownerDocument,e)},oe={composed:!0};re.getRootNode&&(ie=function(e){return S.contains(e.ownerDocument,e)||e.getRootNode(oe)===e.ownerDocument});var ae=function(e,t){return"none"===(e=t||e).style.display||""===e.style.display&&ie(e)&&"none"===S.css(e,"display")};function se(e,t,n,r){var i,o,a=20,s=r?function(){return r.cur()}:function(){return S.css(e,t,"")},u=s(),l=n&&n[3]||(S.cssNumber[t]?"":"px"),c=e.nodeType&&(S.cssNumber[t]||"px"!==l&&+u)&&te.exec(S.css(e,t));if(c&&c[3]!==l){u/=2,l=l||c[3],c=+u||1;while(a--)S.style(e,t,c+l),(1-o)*(1-(o=s()/u||.5))<=0&&(a=0),c/=o;c*=2,S.style(e,t,c+l),n=n||[]}return n&&(c=+c||+u||0,i=n[1]?c+(n[1]+1)*n[2]:+n[2],r&&(r.unit=l,r.start=c,r.end=i)),i}var ue={};function le(e,t){for(var n,r,i,o,a,s,u,l=[],c=0,f=e.length;c<f;c++)(r=e[c]).style&&(n=r.style.display,t?("none"===n&&(l[c]=Y.get(r,"display")||null,l[c]||(r.style.display="")),""===r.style.display&&ae(r)&&(l[c]=(u=a=o=void 0,a=(i=r).ownerDocument,s=i.nodeName,(u=ue[s])||(o=a.body.appendChild(a.createElement(s)),u=S.css(o,"display"),o.parentNode.removeChild(o),"none"===u&&(u="block"),ue[s]=u)))):"none"!==n&&(l[c]="none",Y.set(r,"display",n)));for(c=0;c<f;c++)null!=l[c]&&(e[c].style.display=l[c]);return e}S.fn.extend({show:function(){return le(this,!0)},hide:function(){return le(this)},toggle:function(e){return"boolean"==typeof e?e?this.show():this.hide():this.each(function(){ae(this)?S(this).show():S(this).hide()})}});var ce,fe,pe=/^(?:checkbox|radio)$/i,de=/<([a-z][^\/\0>\x20\t\r\n\f]*)/i,he=/^$|^module$|\/(?:java|ecma)script/i;ce=E.createDocumentFragment().appendChild(E.createElement("div")),(fe=E.createElement("input")).setAttribute("type","radio"),fe.setAttribute("checked","checked"),fe.setAttribute("name","t"),ce.appendChild(fe),y.checkClone=ce.cloneNode(!0).cloneNode(!0).lastChild.checked,ce.innerHTML="<textarea>x</textarea>",y.noCloneChecked=!!ce.cloneNode(!0).lastChild.defaultValue,ce.innerHTML="<option></option>",y.option=!!ce.lastChild;var ge={thead:[1,"<table>","</table>"],col:[2,"<table><colgroup>","</colgroup></table>"],tr:[2,"<table><tbody>","</tbody></table>"],td:[3,"<table><tbody><tr>","</tr></tbody></table>"],_default:[0,"",""]};function ve(e,t){var n;return n="undefined"!=typeof e.getElementsByTagName?e.getElementsByTagName(t||"*"):"undefined"!=typeof e.querySelectorAll?e.querySelectorAll(t||"*"):[],void 0===t||t&&A(e,t)?S.merge([e],n):n}function ye(e,t){for(var n=0,r=e.length;n<r;n++)Y.set(e[n],"globalEval",!t||Y.get(t[n],"globalEval"))}ge.tbody=ge.tfoot=ge.colgroup=ge.caption=ge.thead,ge.th=ge.td,y.option||(ge.optgroup=ge.option=[1,"<select multiple='multiple'>","</select>"]);var me=/<|&#?\w+;/;function xe(e,t,n,r,i){for(var o,a,s,u,l,c,f=t.createDocumentFragment(),p=[],d=0,h=e.length;d<h;d++)if((o=e[d])||0===o)if("object"===w(o))S.merge(p,o.nodeType?[o]:o);else if(me.test(o)){a=a||f.appendChild(t.createElement("div")),s=(de.exec(o)||["",""])[1].toLowerCase(),u=ge[s]||ge._default,a.innerHTML=u[1]+S.htmlPrefilter(o)+u[2],c=u[0];while(c--)a=a.lastChild;S.merge(p,a.childNodes),(a=f.firstChild).textContent=""}else p.push(t.createTextNode(o));f.textContent="",d=0;while(o=p[d++])if(r&&-1<S.inArray(o,r))i&&i.push(o);else if(l=ie(o),a=ve(f.appendChild(o),"script"),l&&ye(a),n){c=0;while(o=a[c++])he.test(o.type||"")&&n.push(o)}return f}var be=/^([^.]*)(?:\.(.+)|)/;function we(){return!0}function Te(){return!1}function Ce(e,t){return e===function(){try{return E.activeElement}catch(e){}}()==("focus"===t)}function Ee(e,t,n,r,i,o){var a,s;if("object"==typeof t){for(s in"string"!=typeof n&&(r=r||n,n=void 0),t)Ee(e,s,n,r,t[s],o);return e}if(null==r&&null==i?(i=n,r=n=void 0):null==i&&("string"==typeof n?(i=r,r=void 0):(i=r,r=n,n=void 0)),!1===i)i=Te;else if(!i)return e;return 1===o&&(a=i,(i=function(e){return S().off(e),a.apply(this,arguments)}).guid=a.guid||(a.guid=S.guid++)),e.each(function(){S.event.add(this,t,i,r,n)})}function Se(e,i,o){o?(Y.set(e,i,!1),S.event.add(e,i,{namespace:!1,handler:function(e){var t,n,r=Y.get(this,i);if(1&e.isTrigger&&this[i]){if(r.length)(S.event.special[i]||{}).delegateType&&e.stopPropagation();else if(r=s.call(arguments),Y.set(this,i,r),t=o(this,i),this[i](),r!==(n=Y.get(this,i))||t?Y.set(this,i,!1):n={},r!==n)return e.stopImmediatePropagation(),e.preventDefault(),n&&n.value}else r.length&&(Y.set(this,i,{value:S.event.trigger(S.extend(r[0],S.Event.prototype),r.slice(1),this)}),e.stopImmediatePropagation())}})):void 0===Y.get(e,i)&&S.event.add(e,i,we)}S.event={global:{},add:function(t,e,n,r,i){var o,a,s,u,l,c,f,p,d,h,g,v=Y.get(t);if(V(t)){n.handler&&(n=(o=n).handler,i=o.selector),i&&S.find.matchesSelector(re,i),n.guid||(n.guid=S.guid++),(u=v.events)||(u=v.events=Object.create(null)),(a=v.handle)||(a=v.handle=function(e){return"undefined"!=typeof S&&S.event.triggered!==e.type?S.event.dispatch.apply(t,arguments):void 0}),l=(e=(e||"").match(P)||[""]).length;while(l--)d=g=(s=be.exec(e[l])||[])[1],h=(s[2]||"").split(".").sort(),d&&(f=S.event.special[d]||{},d=(i?f.delegateType:f.bindType)||d,f=S.event.special[d]||{},c=S.extend({type:d,origType:g,data:r,handler:n,guid:n.guid,selector:i,needsContext:i&&S.expr.match.needsContext.test(i),namespace:h.join(".")},o),(p=u[d])||((p=u[d]=[]).delegateCount=0,f.setup&&!1!==f.setup.call(t,r,h,a)||t.addEventListener&&t.addEventListener(d,a)),f.add&&(f.add.call(t,c),c.handler.guid||(c.handler.guid=n.guid)),i?p.splice(p.delegateCount++,0,c):p.push(c),S.event.global[d]=!0)}},remove:function(e,t,n,r,i){var o,a,s,u,l,c,f,p,d,h,g,v=Y.hasData(e)&&Y.get(e);if(v&&(u=v.events)){l=(t=(t||"").match(P)||[""]).length;while(l--)if(d=g=(s=be.exec(t[l])||[])[1],h=(s[2]||"").split(".").sort(),d){f=S.event.special[d]||{},p=u[d=(r?f.delegateType:f.bindType)||d]||[],s=s[2]&&new RegExp("(^|\\.)"+h.join("\\.(?:.*\\.|)")+"(\\.|$)"),a=o=p.length;while(o--)c=p[o],!i&&g!==c.origType||n&&n.guid!==c.guid||s&&!s.test(c.namespace)||r&&r!==c.selector&&("**"!==r||!c.selector)||(p.splice(o,1),c.selector&&p.delegateCount--,f.remove&&f.remove.call(e,c));a&&!p.length&&(f.teardown&&!1!==f.teardown.call(e,h,v.handle)||S.removeEvent(e,d,v.handle),delete u[d])}else for(d in u)S.event.remove(e,d+t[l],n,r,!0);S.isEmptyObject(u)&&Y.remove(e,"handle events")}},dispatch:function(e){var t,n,r,i,o,a,s=new Array(arguments.length),u=S.event.fix(e),l=(Y.get(this,"events")||Object.create(null))[u.type]||[],c=S.event.special[u.type]||{};for(s[0]=u,t=1;t<arguments.length;t++)s[t]=arguments[t];if(u.delegateTarget=this,!c.preDispatch||!1!==c.preDispatch.call(this,u)){a=S.event.handlers.call(this,u,l),t=0;while((i=a[t++])&&!u.isPropagationStopped()){u.currentTarget=i.elem,n=0;while((o=i.handlers[n++])&&!u.isImmediatePropagationStopped())u.rnamespace&&!1!==o.namespace&&!u.rnamespace.test(o.namespace)||(u.handleObj=o,u.data=o.data,void 0!==(r=((S.event.special[o.origType]||{}).handle||o.handler).apply(i.elem,s))&&!1===(u.result=r)&&(u.preventDefault(),u.stopPropagation()))}return c.postDispatch&&c.postDispatch.call(this,u),u.result}},handlers:function(e,t){var n,r,i,o,a,s=[],u=t.delegateCount,l=e.target;if(u&&l.nodeType&&!("click"===e.type&&1<=e.button))for(;l!==this;l=l.parentNode||this)if(1===l.nodeType&&("click"!==e.type||!0!==l.disabled)){for(o=[],a={},n=0;n<u;n++)void 0===a[i=(r=t[n]).selector+" "]&&(a[i]=r.needsContext?-1<S(i,this).index(l):S.find(i,this,null,[l]).length),a[i]&&o.push(r);o.length&&s.push({elem:l,handlers:o})}return l=this,u<t.length&&s.push({elem:l,handlers:t.slice(u)}),s},addProp:function(t,e){Object.defineProperty(S.Event.prototype,t,{enumerable:!0,configurable:!0,get:m(e)?function(){if(this.originalEvent)return e(this.originalEvent)}:function(){if(this.originalEvent)return this.originalEvent[t]},set:function(e){Object.defineProperty(this,t,{enumerable:!0,configurable:!0,writable:!0,value:e})}})},fix:function(e){return e[S.expando]?e:new S.Event(e)},special:{load:{noBubble:!0},click:{setup:function(e){var t=this||e;return pe.test(t.type)&&t.click&&A(t,"input")&&Se(t,"click",we),!1},trigger:function(e){var t=this||e;return pe.test(t.type)&&t.click&&A(t,"input")&&Se(t,"click"),!0},_default:function(e){var t=e.target;return pe.test(t.type)&&t.click&&A(t,"input")&&Y.get(t,"click")||A(t,"a")}},beforeunload:{postDispatch:function(e){void 0!==e.result&&e.originalEvent&&(e.originalEvent.returnValue=e.result)}}}},S.removeEvent=function(e,t,n){e.removeEventListener&&e.removeEventListener(t,n)},S.Event=function(e,t){if(!(this instanceof S.Event))return new S.Event(e,t);e&&e.type?(this.originalEvent=e,this.type=e.type,this.isDefaultPrevented=e.defaultPrevented||void 0===e.defaultPrevented&&!1===e.returnValue?we:Te,this.target=e.target&&3===e.target.nodeType?e.target.parentNode:e.target,this.currentTarget=e.currentTarget,this.relatedTarget=e.relatedTarget):this.type=e,t&&S.extend(this,t),this.timeStamp=e&&e.timeStamp||Date.now(),this[S.expando]=!0},S.Event.prototype={constructor:S.Event,isDefaultPrevented:Te,isPropagationStopped:Te,isImmediatePropagationStopped:Te,isSimulated:!1,preventDefault:function(){var e=this.originalEvent;this.isDefaultPrevented=we,e&&!this.isSimulated&&e.preventDefault()},stopPropagation:function(){var e=this.originalEvent;this.isPropagationStopped=we,e&&!this.isSimulated&&e.stopPropagation()},stopImmediatePropagation:function(){var e=this.originalEvent;this.isImmediatePropagationStopped=we,e&&!this.isSimulated&&e.stopImmediatePropagation(),this.stopPropagation()}},S.each({altKey:!0,bubbles:!0,cancelable:!0,changedTouches:!0,ctrlKey:!0,detail:!0,eventPhase:!0,metaKey:!0,pageX:!0,pageY:!0,shiftKey:!0,view:!0,"char":!0,code:!0,charCode:!0,key:!0,keyCode:!0,button:!0,buttons:!0,clientX:!0,clientY:!0,offsetX:!0,offsetY:!0,pointerId:!0,pointerType:!0,screenX:!0,screenY:!0,targetTouches:!0,toElement:!0,touches:!0,which:!0},S.event.addProp),S.each({focus:"focusin",blur:"focusout"},function(e,t){S.event.special[e]={setup:function(){return Se(this,e,Ce),!1},trigger:function(){return Se(this,e),!0},_default:function(){return!0},delegateType:t}}),S.each({mouseenter:"mouseover",mouseleave:"mouseout",pointerenter:"pointerover",pointerleave:"pointerout"},function(e,i){S.event.special[e]={delegateType:i,bindType:i,handle:function(e){var t,n=e.relatedTarget,r=e.handleObj;return n&&(n===this||S.contains(this,n))||(e.type=r.origType,t=r.handler.apply(this,arguments),e.type=i),t}}}),S.fn.extend({on:function(e,t,n,r){return Ee(this,e,t,n,r)},one:function(e,t,n,r){return Ee(this,e,t,n,r,1)},off:function(e,t,n){var r,i;if(e&&e.preventDefault&&e.handleObj)return r=e.handleObj,S(e.delegateTarget).off(r.namespace?r.origType+"."+r.namespace:r.origType,r.selector,r.handler),this;if("object"==typeof e){for(i in e)this.off(i,t,e[i]);return this}return!1!==t&&"function"!=typeof t||(n=t,t=void 0),!1===n&&(n=Te),this.each(function(){S.event.remove(this,e,n,t)})}});var ke=/<script|<style|<link/i,Ae=/checked\s*(?:[^=]|=\s*.checked.)/i,Ne=/^\s*<!(?:\[CDATA\[|--)|(?:\]\]|--)>\s*$/g;function je(e,t){return A(e,"table")&&A(11!==t.nodeType?t:t.firstChild,"tr")&&S(e).children("tbody")[0]||e}function De(e){return e.type=(null!==e.getAttribute("type"))+"/"+e.type,e}function qe(e){return"true/"===(e.type||"").slice(0,5)?e.type=e.type.slice(5):e.removeAttribute("type"),e}function Le(e,t){var n,r,i,o,a,s;if(1===t.nodeType){if(Y.hasData(e)&&(s=Y.get(e).events))for(i in Y.remove(t,"handle events"),s)for(n=0,r=s[i].length;n<r;n++)S.event.add(t,i,s[i][n]);Q.hasData(e)&&(o=Q.access(e),a=S.extend({},o),Q.set(t,a))}}function He(n,r,i,o){r=g(r);var e,t,a,s,u,l,c=0,f=n.length,p=f-1,d=r[0],h=m(d);if(h||1<f&&"string"==typeof d&&!y.checkClone&&Ae.test(d))return n.each(function(e){var t=n.eq(e);h&&(r[0]=d.call(this,e,t.html())),He(t,r,i,o)});if(f&&(t=(e=xe(r,n[0].ownerDocument,!1,n,o)).firstChild,1===e.childNodes.length&&(e=t),t||o)){for(s=(a=S.map(ve(e,"script"),De)).length;c<f;c++)u=e,c!==p&&(u=S.clone(u,!0,!0),s&&S.merge(a,ve(u,"script"))),i.call(n[c],u,c);if(s)for(l=a[a.length-1].ownerDocument,S.map(a,qe),c=0;c<s;c++)u=a[c],he.test(u.type||"")&&!Y.access(u,"globalEval")&&S.contains(l,u)&&(u.src&&"module"!==(u.type||"").toLowerCase()?S._evalUrl&&!u.noModule&&S._evalUrl(u.src,{nonce:u.nonce||u.getAttribute("nonce")},l):b(u.textContent.replace(Ne,""),u,l))}return n}function Oe(e,t,n){for(var r,i=t?S.filter(t,e):e,o=0;null!=(r=i[o]);o++)n||1!==r.nodeType||S.cleanData(ve(r)),r.parentNode&&(n&&ie(r)&&ye(ve(r,"script")),r.parentNode.removeChild(r));return e}S.extend({htmlPrefilter:function(e){return e},clone:function(e,t,n){var r,i,o,a,s,u,l,c=e.cloneNode(!0),f=ie(e);if(!(y.noCloneChecked||1!==e.nodeType&&11!==e.nodeType||S.isXMLDoc(e)))for(a=ve(c),r=0,i=(o=ve(e)).length;r<i;r++)s=o[r],u=a[r],void 0,"input"===(l=u.nodeName.toLowerCase())&&pe.test(s.type)?u.checked=s.checked:"input"!==l&&"textarea"!==l||(u.defaultValue=s.defaultValue);if(t)if(n)for(o=o||ve(e),a=a||ve(c),r=0,i=o.length;r<i;r++)Le(o[r],a[r]);else Le(e,c);return 0<(a=ve(c,"script")).length&&ye(a,!f&&ve(e,"script")),c},cleanData:function(e){for(var t,n,r,i=S.event.special,o=0;void 0!==(n=e[o]);o++)if(V(n)){if(t=n[Y.expando]){if(t.events)for(r in t.events)i[r]?S.event.remove(n,r):S.removeEvent(n,r,t.handle);n[Y.expando]=void 0}n[Q.expando]&&(n[Q.expando]=void 0)}}}),S.fn.extend({detach:function(e){return Oe(this,e,!0)},remove:function(e){return Oe(this,e)},text:function(e){return $(this,function(e){return void 0===e?S.text(this):this.empty().each(function(){1!==this.nodeType&&11!==this.nodeType&&9!==this.nodeType||(this.textContent=e)})},null,e,arguments.length)},append:function(){return He(this,arguments,function(e){1!==this.nodeType&&11!==this.nodeType&&9!==this.nodeType||je(this,e).appendChild(e)})},prepend:function(){return He(this,arguments,function(e){if(1===this.nodeType||11===this.nodeType||9===this.nodeType){var t=je(this,e);t.insertBefore(e,t.firstChild)}})},before:function(){return He(this,arguments,function(e){this.parentNode&&this.parentNode.insertBefore(e,this)})},after:function(){return He(this,arguments,function(e){this.parentNode&&this.parentNode.insertBefore(e,this.nextSibling)})},empty:function(){for(var e,t=0;null!=(e=this[t]);t++)1===e.nodeType&&(S.cleanData(ve(e,!1)),e.textContent="");return this},clone:function(e,t){return e=null!=e&&e,t=null==t?e:t,this.map(function(){return S.clone(this,e,t)})},html:function(e){return $(this,function(e){var t=this[0]||{},n=0,r=this.length;if(void 0===e&&1===t.nodeType)return t.innerHTML;if("string"==typeof e&&!ke.test(e)&&!ge[(de.exec(e)||["",""])[1].toLowerCase()]){e=S.htmlPrefilter(e);try{for(;n<r;n++)1===(t=this[n]||{}).nodeType&&(S.cleanData(ve(t,!1)),t.innerHTML=e);t=0}catch(e){}}t&&this.empty().append(e)},null,e,arguments.length)},replaceWith:function(){var n=[];return He(this,arguments,function(e){var t=this.parentNode;S.inArray(this,n)<0&&(S.cleanData(ve(this)),t&&t.replaceChild(e,this))},n)}}),S.each({appendTo:"append",prependTo:"prepend",insertBefore:"before",insertAfter:"after",replaceAll:"replaceWith"},function(e,a){S.fn[e]=function(e){for(var t,n=[],r=S(e),i=r.length-1,o=0;o<=i;o++)t=o===i?this:this.clone(!0),S(r[o])[a](t),u.apply(n,t.get());return this.pushStack(n)}});var Pe=new RegExp("^("+ee+")(?!px)[a-z%]+$","i"),Re=function(e){var t=e.ownerDocument.defaultView;return t&&t.opener||(t=C),t.getComputedStyle(e)},Me=function(e,t,n){var r,i,o={};for(i in t)o[i]=e.style[i],e.style[i]=t[i];for(i in r=n.call(e),t)e.style[i]=o[i];return r},Ie=new RegExp(ne.join("|"),"i");function We(e,t,n){var r,i,o,a,s=e.style;return(n=n||Re(e))&&(""!==(a=n.getPropertyValue(t)||n[t])||ie(e)||(a=S.style(e,t)),!y.pixelBoxStyles()&&Pe.test(a)&&Ie.test(t)&&(r=s.width,i=s.minWidth,o=s.maxWidth,s.minWidth=s.maxWidth=s.width=a,a=n.width,s.width=r,s.minWidth=i,s.maxWidth=o)),void 0!==a?a+"":a}function Fe(e,t){return{get:function(){if(!e())return(this.get=t).apply(this,arguments);delete this.get}}}!function(){function e(){if(l){u.style.cssText="position:absolute;left:-11111px;width:60px;margin-top:1px;padding:0;border:0",l.style.cssText="position:relative;display:block;box-sizing:border-box;overflow:scroll;margin:auto;border:1px;padding:1px;width:60%;top:1%",re.appendChild(u).appendChild(l);var e=C.getComputedStyle(l);n="1%"!==e.top,s=12===t(e.marginLeft),l.style.right="60%",o=36===t(e.right),r=36===t(e.width),l.style.position="absolute",i=12===t(l.offsetWidth/3),re.removeChild(u),l=null}}function t(e){return Math.round(parseFloat(e))}var n,r,i,o,a,s,u=E.createElement("div"),l=E.createElement("div");l.style&&(l.style.backgroundClip="content-box",l.cloneNode(!0).style.backgroundClip="",y.clearCloneStyle="content-box"===l.style.backgroundClip,S.extend(y,{boxSizingReliable:function(){return e(),r},pixelBoxStyles:function(){return e(),o},pixelPosition:function(){return e(),n},reliableMarginLeft:function(){return e(),s},scrollboxSize:function(){return e(),i},reliableTrDimensions:function(){var e,t,n,r;return null==a&&(e=E.createElement("table"),t=E.createElement("tr"),n=E.createElement("div"),e.style.cssText="position:absolute;left:-11111px;border-collapse:separate",t.style.cssText="border:1px solid",t.style.height="1px",n.style.height="9px",n.style.display="block",re.appendChild(e).appendChild(t).appendChild(n),r=C.getComputedStyle(t),a=parseInt(r.height,10)+parseInt(r.borderTopWidth,10)+parseInt(r.borderBottomWidth,10)===t.offsetHeight,re.removeChild(e)),a}}))}();var Be=["Webkit","Moz","ms"],$e=E.createElement("div").style,_e={};function ze(e){var t=S.cssProps[e]||_e[e];return t||(e in $e?e:_e[e]=function(e){var t=e[0].toUpperCase()+e.slice(1),n=Be.length;while(n--)if((e=Be[n]+t)in $e)return e}(e)||e)}var Ue=/^(none|table(?!-c[ea]).+)/,Xe=/^--/,Ve={position:"absolute",visibility:"hidden",display:"block"},Ge={letterSpacing:"0",fontWeight:"400"};function Ye(e,t,n){var r=te.exec(t);return r?Math.max(0,r[2]-(n||0))+(r[3]||"px"):t}function Qe(e,t,n,r,i,o){var a="width"===t?1:0,s=0,u=0;if(n===(r?"border":"content"))return 0;for(;a<4;a+=2)"margin"===n&&(u+=S.css(e,n+ne[a],!0,i)),r?("content"===n&&(u-=S.css(e,"padding"+ne[a],!0,i)),"margin"!==n&&(u-=S.css(e,"border"+ne[a]+"Width",!0,i))):(u+=S.css(e,"padding"+ne[a],!0,i),"padding"!==n?u+=S.css(e,"border"+ne[a]+"Width",!0,i):s+=S.css(e,"border"+ne[a]+"Width",!0,i));return!r&&0<=o&&(u+=Math.max(0,Math.ceil(e["offset"+t[0].toUpperCase()+t.slice(1)]-o-u-s-.5))||0),u}function Je(e,t,n){var r=Re(e),i=(!y.boxSizingReliable()||n)&&"border-box"===S.css(e,"boxSizing",!1,r),o=i,a=We(e,t,r),s="offset"+t[0].toUpperCase()+t.slice(1);if(Pe.test(a)){if(!n)return a;a="auto"}return(!y.boxSizingReliable()&&i||!y.reliableTrDimensions()&&A(e,"tr")||"auto"===a||!parseFloat(a)&&"inline"===S.css(e,"display",!1,r))&&e.getClientRects().length&&(i="border-box"===S.css(e,"boxSizing",!1,r),(o=s in e)&&(a=e[s])),(a=parseFloat(a)||0)+Qe(e,t,n||(i?"border":"content"),o,r,a)+"px"}function Ke(e,t,n,r,i){return new Ke.prototype.init(e,t,n,r,i)}S.extend({cssHooks:{opacity:{get:function(e,t){if(t){var n=We(e,"opacity");return""===n?"1":n}}}},cssNumber:{animationIterationCount:!0,columnCount:!0,fillOpacity:!0,flexGrow:!0,flexShrink:!0,fontWeight:!0,gridArea:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnStart:!0,gridRow:!0,gridRowEnd:!0,gridRowStart:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,widows:!0,zIndex:!0,zoom:!0},cssProps:{},style:function(e,t,n,r){if(e&&3!==e.nodeType&&8!==e.nodeType&&e.style){var i,o,a,s=X(t),u=Xe.test(t),l=e.style;if(u||(t=ze(s)),a=S.cssHooks[t]||S.cssHooks[s],void 0===n)return a&&"get"in a&&void 0!==(i=a.get(e,!1,r))?i:l[t];"string"===(o=typeof n)&&(i=te.exec(n))&&i[1]&&(n=se(e,t,i),o="number"),null!=n&&n==n&&("number"!==o||u||(n+=i&&i[3]||(S.cssNumber[s]?"":"px")),y.clearCloneStyle||""!==n||0!==t.indexOf("background")||(l[t]="inherit"),a&&"set"in a&&void 0===(n=a.set(e,n,r))||(u?l.setProperty(t,n):l[t]=n))}},css:function(e,t,n,r){var i,o,a,s=X(t);return Xe.test(t)||(t=ze(s)),(a=S.cssHooks[t]||S.cssHooks[s])&&"get"in a&&(i=a.get(e,!0,n)),void 0===i&&(i=We(e,t,r)),"normal"===i&&t in Ge&&(i=Ge[t]),""===n||n?(o=parseFloat(i),!0===n||isFinite(o)?o||0:i):i}}),S.each(["height","width"],function(e,u){S.cssHooks[u]={get:function(e,t,n){if(t)return!Ue.test(S.css(e,"display"))||e.getClientRects().length&&e.getBoundingClientRect().width?Je(e,u,n):Me(e,Ve,function(){return Je(e,u,n)})},set:function(e,t,n){var r,i=Re(e),o=!y.scrollboxSize()&&"absolute"===i.position,a=(o||n)&&"border-box"===S.css(e,"boxSizing",!1,i),s=n?Qe(e,u,n,a,i):0;return a&&o&&(s-=Math.ceil(e["offset"+u[0].toUpperCase()+u.slice(1)]-parseFloat(i[u])-Qe(e,u,"border",!1,i)-.5)),s&&(r=te.exec(t))&&"px"!==(r[3]||"px")&&(e.style[u]=t,t=S.css(e,u)),Ye(0,t,s)}}}),S.cssHooks.marginLeft=Fe(y.reliableMarginLeft,function(e,t){if(t)return(parseFloat(We(e,"marginLeft"))||e.getBoundingClientRect().left-Me(e,{marginLeft:0},function(){return e.getBoundingClientRect().left}))+"px"}),S.each({margin:"",padding:"",border:"Width"},function(i,o){S.cssHooks[i+o]={expand:function(e){for(var t=0,n={},r="string"==typeof e?e.split(" "):[e];t<4;t++)n[i+ne[t]+o]=r[t]||r[t-2]||r[0];return n}},"margin"!==i&&(S.cssHooks[i+o].set=Ye)}),S.fn.extend({css:function(e,t){return $(this,function(e,t,n){var r,i,o={},a=0;if(Array.isArray(t)){for(r=Re(e),i=t.length;a<i;a++)o[t[a]]=S.css(e,t[a],!1,r);return o}return void 0!==n?S.style(e,t,n):S.css(e,t)},e,t,1<arguments.length)}}),((S.Tween=Ke).prototype={constructor:Ke,init:function(e,t,n,r,i,o){this.elem=e,this.prop=n,this.easing=i||S.easing._default,this.options=t,this.start=this.now=this.cur(),this.end=r,this.unit=o||(S.cssNumber[n]?"":"px")},cur:function(){var e=Ke.propHooks[this.prop];return e&&e.get?e.get(this):Ke.propHooks._default.get(this)},run:function(e){var t,n=Ke.propHooks[this.prop];return this.options.duration?this.pos=t=S.easing[this.easing](e,this.options.duration*e,0,1,this.options.duration):this.pos=t=e,this.now=(this.end-this.start)*t+this.start,this.options.step&&this.options.step.call(this.elem,this.now,this),n&&n.set?n.set(this):Ke.propHooks._default.set(this),this}}).init.prototype=Ke.prototype,(Ke.propHooks={_default:{get:function(e){var t;return 1!==e.elem.nodeType||null!=e.elem[e.prop]&&null==e.elem.style[e.prop]?e.elem[e.prop]:(t=S.css(e.elem,e.prop,""))&&"auto"!==t?t:0},set:function(e){S.fx.step[e.prop]?S.fx.step[e.prop](e):1!==e.elem.nodeType||!S.cssHooks[e.prop]&&null==e.elem.style[ze(e.prop)]?e.elem[e.prop]=e.now:S.style(e.elem,e.prop,e.now+e.unit)}}}).scrollTop=Ke.propHooks.scrollLeft={set:function(e){e.elem.nodeType&&e.elem.parentNode&&(e.elem[e.prop]=e.now)}},S.easing={linear:function(e){return e},swing:function(e){return.5-Math.cos(e*Math.PI)/2},_default:"swing"},S.fx=Ke.prototype.init,S.fx.step={};var Ze,et,tt,nt,rt=/^(?:toggle|show|hide)$/,it=/queueHooks$/;function ot(){et&&(!1===E.hidden&&C.requestAnimationFrame?C.requestAnimationFrame(ot):C.setTimeout(ot,S.fx.interval),S.fx.tick())}function at(){return C.setTimeout(function(){Ze=void 0}),Ze=Date.now()}function st(e,t){var n,r=0,i={height:e};for(t=t?1:0;r<4;r+=2-t)i["margin"+(n=ne[r])]=i["padding"+n]=e;return t&&(i.opacity=i.width=e),i}function ut(e,t,n){for(var r,i=(lt.tweeners[t]||[]).concat(lt.tweeners["*"]),o=0,a=i.length;o<a;o++)if(r=i[o].call(n,t,e))return r}function lt(o,e,t){var n,a,r=0,i=lt.prefilters.length,s=S.Deferred().always(function(){delete u.elem}),u=function(){if(a)return!1;for(var e=Ze||at(),t=Math.max(0,l.startTime+l.duration-e),n=1-(t/l.duration||0),r=0,i=l.tweens.length;r<i;r++)l.tweens[r].run(n);return s.notifyWith(o,[l,n,t]),n<1&&i?t:(i||s.notifyWith(o,[l,1,0]),s.resolveWith(o,[l]),!1)},l=s.promise({elem:o,props:S.extend({},e),opts:S.extend(!0,{specialEasing:{},easing:S.easing._default},t),originalProperties:e,originalOptions:t,startTime:Ze||at(),duration:t.duration,tweens:[],createTween:function(e,t){var n=S.Tween(o,l.opts,e,t,l.opts.specialEasing[e]||l.opts.easing);return l.tweens.push(n),n},stop:function(e){var t=0,n=e?l.tweens.length:0;if(a)return this;for(a=!0;t<n;t++)l.tweens[t].run(1);return e?(s.notifyWith(o,[l,1,0]),s.resolveWith(o,[l,e])):s.rejectWith(o,[l,e]),this}}),c=l.props;for(!function(e,t){var n,r,i,o,a;for(n in e)if(i=t[r=X(n)],o=e[n],Array.isArray(o)&&(i=o[1],o=e[n]=o[0]),n!==r&&(e[r]=o,delete e[n]),(a=S.cssHooks[r])&&"expand"in a)for(n in o=a.expand(o),delete e[r],o)n in e||(e[n]=o[n],t[n]=i);else t[r]=i}(c,l.opts.specialEasing);r<i;r++)if(n=lt.prefilters[r].call(l,o,c,l.opts))return m(n.stop)&&(S._queueHooks(l.elem,l.opts.queue).stop=n.stop.bind(n)),n;return S.map(c,ut,l),m(l.opts.start)&&l.opts.start.call(o,l),l.progress(l.opts.progress).done(l.opts.done,l.opts.complete).fail(l.opts.fail).always(l.opts.always),S.fx.timer(S.extend(u,{elem:o,anim:l,queue:l.opts.queue})),l}S.Animation=S.extend(lt,{tweeners:{"*":[function(e,t){var n=this.createTween(e,t);return se(n.elem,e,te.exec(t),n),n}]},tweener:function(e,t){m(e)?(t=e,e=["*"]):e=e.match(P);for(var n,r=0,i=e.length;r<i;r++)n=e[r],lt.tweeners[n]=lt.tweeners[n]||[],lt.tweeners[n].unshift(t)},prefilters:[function(e,t,n){var r,i,o,a,s,u,l,c,f="width"in t||"height"in t,p=this,d={},h=e.style,g=e.nodeType&&ae(e),v=Y.get(e,"fxshow");for(r in n.queue||(null==(a=S._queueHooks(e,"fx")).unqueued&&(a.unqueued=0,s=a.empty.fire,a.empty.fire=function(){a.unqueued||s()}),a.unqueued++,p.always(function(){p.always(function(){a.unqueued--,S.queue(e,"fx").length||a.empty.fire()})})),t)if(i=t[r],rt.test(i)){if(delete t[r],o=o||"toggle"===i,i===(g?"hide":"show")){if("show"!==i||!v||void 0===v[r])continue;g=!0}d[r]=v&&v[r]||S.style(e,r)}if((u=!S.isEmptyObject(t))||!S.isEmptyObject(d))for(r in f&&1===e.nodeType&&(n.overflow=[h.overflow,h.overflowX,h.overflowY],null==(l=v&&v.display)&&(l=Y.get(e,"display")),"none"===(c=S.css(e,"display"))&&(l?c=l:(le([e],!0),l=e.style.display||l,c=S.css(e,"display"),le([e]))),("inline"===c||"inline-block"===c&&null!=l)&&"none"===S.css(e,"float")&&(u||(p.done(function(){h.display=l}),null==l&&(c=h.display,l="none"===c?"":c)),h.display="inline-block")),n.overflow&&(h.overflow="hidden",p.always(function(){h.overflow=n.overflow[0],h.overflowX=n.overflow[1],h.overflowY=n.overflow[2]})),u=!1,d)u||(v?"hidden"in v&&(g=v.hidden):v=Y.access(e,"fxshow",{display:l}),o&&(v.hidden=!g),g&&le([e],!0),p.done(function(){for(r in g||le([e]),Y.remove(e,"fxshow"),d)S.style(e,r,d[r])})),u=ut(g?v[r]:0,r,p),r in v||(v[r]=u.start,g&&(u.end=u.start,u.start=0))}],prefilter:function(e,t){t?lt.prefilters.unshift(e):lt.prefilters.push(e)}}),S.speed=function(e,t,n){var r=e&&"object"==typeof e?S.extend({},e):{complete:n||!n&&t||m(e)&&e,duration:e,easing:n&&t||t&&!m(t)&&t};return S.fx.off?r.duration=0:"number"!=typeof r.duration&&(r.duration in S.fx.speeds?r.duration=S.fx.speeds[r.duration]:r.duration=S.fx.speeds._default),null!=r.queue&&!0!==r.queue||(r.queue="fx"),r.old=r.complete,r.complete=function(){m(r.old)&&r.old.call(this),r.queue&&S.dequeue(this,r.queue)},r},S.fn.extend({fadeTo:function(e,t,n,r){return this.filter(ae).css("opacity",0).show().end().animate({opacity:t},e,n,r)},animate:function(t,e,n,r){var i=S.isEmptyObject(t),o=S.speed(e,n,r),a=function(){var e=lt(this,S.extend({},t),o);(i||Y.get(this,"finish"))&&e.stop(!0)};return a.finish=a,i||!1===o.queue?this.each(a):this.queue(o.queue,a)},stop:function(i,e,o){var a=function(e){var t=e.stop;delete e.stop,t(o)};return"string"!=typeof i&&(o=e,e=i,i=void 0),e&&this.queue(i||"fx",[]),this.each(function(){var e=!0,t=null!=i&&i+"queueHooks",n=S.timers,r=Y.get(this);if(t)r[t]&&r[t].stop&&a(r[t]);else for(t in r)r[t]&&r[t].stop&&it.test(t)&&a(r[t]);for(t=n.length;t--;)n[t].elem!==this||null!=i&&n[t].queue!==i||(n[t].anim.stop(o),e=!1,n.splice(t,1));!e&&o||S.dequeue(this,i)})},finish:function(a){return!1!==a&&(a=a||"fx"),this.each(function(){var e,t=Y.get(this),n=t[a+"queue"],r=t[a+"queueHooks"],i=S.timers,o=n?n.length:0;for(t.finish=!0,S.queue(this,a,[]),r&&r.stop&&r.stop.call(this,!0),e=i.length;e--;)i[e].elem===this&&i[e].queue===a&&(i[e].anim.stop(!0),i.splice(e,1));for(e=0;e<o;e++)n[e]&&n[e].finish&&n[e].finish.call(this);delete t.finish})}}),S.each(["toggle","show","hide"],function(e,r){var i=S.fn[r];S.fn[r]=function(e,t,n){return null==e||"boolean"==typeof e?i.apply(this,arguments):this.animate(st(r,!0),e,t,n)}}),S.each({slideDown:st("show"),slideUp:st("hide"),slideToggle:st("toggle"),fadeIn:{opacity:"show"},fadeOut:{opacity:"hide"},fadeToggle:{opacity:"toggle"}},function(e,r){S.fn[e]=function(e,t,n){return this.animate(r,e,t,n)}}),S.timers=[],S.fx.tick=function(){var e,t=0,n=S.timers;for(Ze=Date.now();t<n.length;t++)(e=n[t])()||n[t]!==e||n.splice(t--,1);n.length||S.fx.stop(),Ze=void 0},S.fx.timer=function(e){S.timers.push(e),S.fx.start()},S.fx.interval=13,S.fx.start=function(){et||(et=!0,ot())},S.fx.stop=function(){et=null},S.fx.speeds={slow:600,fast:200,_default:400},S.fn.delay=function(r,e){return r=S.fx&&S.fx.speeds[r]||r,e=e||"fx",this.queue(e,function(e,t){var n=C.setTimeout(e,r);t.stop=function(){C.clearTimeout(n)}})},tt=E.createElement("input"),nt=E.createElement("select").appendChild(E.createElement("option")),tt.type="checkbox",y.checkOn=""!==tt.value,y.optSelected=nt.selected,(tt=E.createElement("input")).value="t",tt.type="radio",y.radioValue="t"===tt.value;var ct,ft=S.expr.attrHandle;S.fn.extend({attr:function(e,t){return $(this,S.attr,e,t,1<arguments.length)},removeAttr:function(e){return this.each(function(){S.removeAttr(this,e)})}}),S.extend({attr:function(e,t,n){var r,i,o=e.nodeType;if(3!==o&&8!==o&&2!==o)return"undefined"==typeof e.getAttribute?S.prop(e,t,n):(1===o&&S.isXMLDoc(e)||(i=S.attrHooks[t.toLowerCase()]||(S.expr.match.bool.test(t)?ct:void 0)),void 0!==n?null===n?void S.removeAttr(e,t):i&&"set"in i&&void 0!==(r=i.set(e,n,t))?r:(e.setAttribute(t,n+""),n):i&&"get"in i&&null!==(r=i.get(e,t))?r:null==(r=S.find.attr(e,t))?void 0:r)},attrHooks:{type:{set:function(e,t){if(!y.radioValue&&"radio"===t&&A(e,"input")){var n=e.value;return e.setAttribute("type",t),n&&(e.value=n),t}}}},removeAttr:function(e,t){var n,r=0,i=t&&t.match(P);if(i&&1===e.nodeType)while(n=i[r++])e.removeAttribute(n)}}),ct={set:function(e,t,n){return!1===t?S.removeAttr(e,n):e.setAttribute(n,n),n}},S.each(S.expr.match.bool.source.match(/\w+/g),function(e,t){var a=ft[t]||S.find.attr;ft[t]=function(e,t,n){var r,i,o=t.toLowerCase();return n||(i=ft[o],ft[o]=r,r=null!=a(e,t,n)?o:null,ft[o]=i),r}});var pt=/^(?:input|select|textarea|button)$/i,dt=/^(?:a|area)$/i;function ht(e){return(e.match(P)||[]).join(" ")}function gt(e){return e.getAttribute&&e.getAttribute("class")||""}function vt(e){return Array.isArray(e)?e:"string"==typeof e&&e.match(P)||[]}S.fn.extend({prop:function(e,t){return $(this,S.prop,e,t,1<arguments.length)},removeProp:function(e){return this.each(function(){delete this[S.propFix[e]||e]})}}),S.extend({prop:function(e,t,n){var r,i,o=e.nodeType;if(3!==o&&8!==o&&2!==o)return 1===o&&S.isXMLDoc(e)||(t=S.propFix[t]||t,i=S.propHooks[t]),void 0!==n?i&&"set"in i&&void 0!==(r=i.set(e,n,t))?r:e[t]=n:i&&"get"in i&&null!==(r=i.get(e,t))?r:e[t]},propHooks:{tabIndex:{get:function(e){var t=S.find.attr(e,"tabindex");return t?parseInt(t,10):pt.test(e.nodeName)||dt.test(e.nodeName)&&e.href?0:-1}}},propFix:{"for":"htmlFor","class":"className"}}),y.optSelected||(S.propHooks.selected={get:function(e){var t=e.parentNode;return t&&t.parentNode&&t.parentNode.selectedIndex,null},set:function(e){var t=e.parentNode;t&&(t.selectedIndex,t.parentNode&&t.parentNode.selectedIndex)}}),S.each(["tabIndex","readOnly","maxLength","cellSpacing","cellPadding","rowSpan","colSpan","useMap","frameBorder","contentEditable"],function(){S.propFix[this.toLowerCase()]=this}),S.fn.extend({addClass:function(t){var e,n,r,i,o,a,s,u=0;if(m(t))return this.each(function(e){S(this).addClass(t.call(this,e,gt(this)))});if((e=vt(t)).length)while(n=this[u++])if(i=gt(n),r=1===n.nodeType&&" "+ht(i)+" "){a=0;while(o=e[a++])r.indexOf(" "+o+" ")<0&&(r+=o+" ");i!==(s=ht(r))&&n.setAttribute("class",s)}return this},removeClass:function(t){var e,n,r,i,o,a,s,u=0;if(m(t))return this.each(function(e){S(this).removeClass(t.call(this,e,gt(this)))});if(!arguments.length)return this.attr("class","");if((e=vt(t)).length)while(n=this[u++])if(i=gt(n),r=1===n.nodeType&&" "+ht(i)+" "){a=0;while(o=e[a++])while(-1<r.indexOf(" "+o+" "))r=r.replace(" "+o+" "," ");i!==(s=ht(r))&&n.setAttribute("class",s)}return this},toggleClass:function(i,t){var o=typeof i,a="string"===o||Array.isArray(i);return"boolean"==typeof t&&a?t?this.addClass(i):this.removeClass(i):m(i)?this.each(function(e){S(this).toggleClass(i.call(this,e,gt(this),t),t)}):this.each(function(){var e,t,n,r;if(a){t=0,n=S(this),r=vt(i);while(e=r[t++])n.hasClass(e)?n.removeClass(e):n.addClass(e)}else void 0!==i&&"boolean"!==o||((e=gt(this))&&Y.set(this,"__className__",e),this.setAttribute&&this.setAttribute("class",e||!1===i?"":Y.get(this,"__className__")||""))})},hasClass:function(e){var t,n,r=0;t=" "+e+" ";while(n=this[r++])if(1===n.nodeType&&-1<(" "+ht(gt(n))+" ").indexOf(t))return!0;return!1}});var yt=/\r/g;S.fn.extend({val:function(n){var r,e,i,t=this[0];return arguments.length?(i=m(n),this.each(function(e){var t;1===this.nodeType&&(null==(t=i?n.call(this,e,S(this).val()):n)?t="":"number"==typeof t?t+="":Array.isArray(t)&&(t=S.map(t,function(e){return null==e?"":e+""})),(r=S.valHooks[this.type]||S.valHooks[this.nodeName.toLowerCase()])&&"set"in r&&void 0!==r.set(this,t,"value")||(this.value=t))})):t?(r=S.valHooks[t.type]||S.valHooks[t.nodeName.toLowerCase()])&&"get"in r&&void 0!==(e=r.get(t,"value"))?e:"string"==typeof(e=t.value)?e.replace(yt,""):null==e?"":e:void 0}}),S.extend({valHooks:{option:{get:function(e){var t=S.find.attr(e,"value");return null!=t?t:ht(S.text(e))}},select:{get:function(e){var t,n,r,i=e.options,o=e.selectedIndex,a="select-one"===e.type,s=a?null:[],u=a?o+1:i.length;for(r=o<0?u:a?o:0;r<u;r++)if(((n=i[r]).selected||r===o)&&!n.disabled&&(!n.parentNode.disabled||!A(n.parentNode,"optgroup"))){if(t=S(n).val(),a)return t;s.push(t)}return s},set:function(e,t){var n,r,i=e.options,o=S.makeArray(t),a=i.length;while(a--)((r=i[a]).selected=-1<S.inArray(S.valHooks.option.get(r),o))&&(n=!0);return n||(e.selectedIndex=-1),o}}}}),S.each(["radio","checkbox"],function(){S.valHooks[this]={set:function(e,t){if(Array.isArray(t))return e.checked=-1<S.inArray(S(e).val(),t)}},y.checkOn||(S.valHooks[this].get=function(e){return null===e.getAttribute("value")?"on":e.value})}),y.focusin="onfocusin"in C;var mt=/^(?:focusinfocus|focusoutblur)$/,xt=function(e){e.stopPropagation()};S.extend(S.event,{trigger:function(e,t,n,r){var i,o,a,s,u,l,c,f,p=[n||E],d=v.call(e,"type")?e.type:e,h=v.call(e,"namespace")?e.namespace.split("."):[];if(o=f=a=n=n||E,3!==n.nodeType&&8!==n.nodeType&&!mt.test(d+S.event.triggered)&&(-1<d.indexOf(".")&&(d=(h=d.split(".")).shift(),h.sort()),u=d.indexOf(":")<0&&"on"+d,(e=e[S.expando]?e:new S.Event(d,"object"==typeof e&&e)).isTrigger=r?2:3,e.namespace=h.join("."),e.rnamespace=e.namespace?new RegExp("(^|\\.)"+h.join("\\.(?:.*\\.|)")+"(\\.|$)"):null,e.result=void 0,e.target||(e.target=n),t=null==t?[e]:S.makeArray(t,[e]),c=S.event.special[d]||{},r||!c.trigger||!1!==c.trigger.apply(n,t))){if(!r&&!c.noBubble&&!x(n)){for(s=c.delegateType||d,mt.test(s+d)||(o=o.parentNode);o;o=o.parentNode)p.push(o),a=o;a===(n.ownerDocument||E)&&p.push(a.defaultView||a.parentWindow||C)}i=0;while((o=p[i++])&&!e.isPropagationStopped())f=o,e.type=1<i?s:c.bindType||d,(l=(Y.get(o,"events")||Object.create(null))[e.type]&&Y.get(o,"handle"))&&l.apply(o,t),(l=u&&o[u])&&l.apply&&V(o)&&(e.result=l.apply(o,t),!1===e.result&&e.preventDefault());return e.type=d,r||e.isDefaultPrevented()||c._default&&!1!==c._default.apply(p.pop(),t)||!V(n)||u&&m(n[d])&&!x(n)&&((a=n[u])&&(n[u]=null),S.event.triggered=d,e.isPropagationStopped()&&f.addEventListener(d,xt),n[d](),e.isPropagationStopped()&&f.removeEventListener(d,xt),S.event.triggered=void 0,a&&(n[u]=a)),e.result}},simulate:function(e,t,n){var r=S.extend(new S.Event,n,{type:e,isSimulated:!0});S.event.trigger(r,null,t)}}),S.fn.extend({trigger:function(e,t){return this.each(function(){S.event.trigger(e,t,this)})},triggerHandler:function(e,t){var n=this[0];if(n)return S.event.trigger(e,t,n,!0)}}),y.focusin||S.each({focus:"focusin",blur:"focusout"},function(n,r){var i=function(e){S.event.simulate(r,e.target,S.event.fix(e))};S.event.special[r]={setup:function(){var e=this.ownerDocument||this.document||this,t=Y.access(e,r);t||e.addEventListener(n,i,!0),Y.access(e,r,(t||0)+1)},teardown:function(){var e=this.ownerDocument||this.document||this,t=Y.access(e,r)-1;t?Y.access(e,r,t):(e.removeEventListener(n,i,!0),Y.remove(e,r))}}});var bt=C.location,wt={guid:Date.now()},Tt=/\?/;S.parseXML=function(e){var t,n;if(!e||"string"!=typeof e)return null;try{t=(new C.DOMParser).parseFromString(e,"text/xml")}catch(e){}return n=t&&t.getElementsByTagName("parsererror")[0],t&&!n||S.error("Invalid XML: "+(n?S.map(n.childNodes,function(e){return e.textContent}).join("\n"):e)),t};var Ct=/\[\]$/,Et=/\r?\n/g,St=/^(?:submit|button|image|reset|file)$/i,kt=/^(?:input|select|textarea|keygen)/i;function At(n,e,r,i){var t;if(Array.isArray(e))S.each(e,function(e,t){r||Ct.test(n)?i(n,t):At(n+"["+("object"==typeof t&&null!=t?e:"")+"]",t,r,i)});else if(r||"object"!==w(e))i(n,e);else for(t in e)At(n+"["+t+"]",e[t],r,i)}S.param=function(e,t){var n,r=[],i=function(e,t){var n=m(t)?t():t;r[r.length]=encodeURIComponent(e)+"="+encodeURIComponent(null==n?"":n)};if(null==e)return"";if(Array.isArray(e)||e.jquery&&!S.isPlainObject(e))S.each(e,function(){i(this.name,this.value)});else for(n in e)At(n,e[n],t,i);return r.join("&")},S.fn.extend({serialize:function(){return S.param(this.serializeArray())},serializeArray:function(){return this.map(function(){var e=S.prop(this,"elements");return e?S.makeArray(e):this}).filter(function(){var e=this.type;return this.name&&!S(this).is(":disabled")&&kt.test(this.nodeName)&&!St.test(e)&&(this.checked||!pe.test(e))}).map(function(e,t){var n=S(this).val();return null==n?null:Array.isArray(n)?S.map(n,function(e){return{name:t.name,value:e.replace(Et,"\r\n")}}):{name:t.name,value:n.replace(Et,"\r\n")}}).get()}});var Nt=/%20/g,jt=/#.*$/,Dt=/([?&])_=[^&]*/,qt=/^(.*?):[ \t]*([^\r\n]*)$/gm,Lt=/^(?:GET|HEAD)$/,Ht=/^\/\//,Ot={},Pt={},Rt="*/".concat("*"),Mt=E.createElement("a");function It(o){return function(e,t){"string"!=typeof e&&(t=e,e="*");var n,r=0,i=e.toLowerCase().match(P)||[];if(m(t))while(n=i[r++])"+"===n[0]?(n=n.slice(1)||"*",(o[n]=o[n]||[]).unshift(t)):(o[n]=o[n]||[]).push(t)}}function Wt(t,i,o,a){var s={},u=t===Pt;function l(e){var r;return s[e]=!0,S.each(t[e]||[],function(e,t){var n=t(i,o,a);return"string"!=typeof n||u||s[n]?u?!(r=n):void 0:(i.dataTypes.unshift(n),l(n),!1)}),r}return l(i.dataTypes[0])||!s["*"]&&l("*")}function Ft(e,t){var n,r,i=S.ajaxSettings.flatOptions||{};for(n in t)void 0!==t[n]&&((i[n]?e:r||(r={}))[n]=t[n]);return r&&S.extend(!0,e,r),e}Mt.href=bt.href,S.extend({active:0,lastModified:{},etag:{},ajaxSettings:{url:bt.href,type:"GET",isLocal:/^(?:about|app|app-storage|.+-extension|file|res|widget):$/.test(bt.protocol),global:!0,processData:!0,async:!0,contentType:"application/x-www-form-urlencoded; charset=UTF-8",accepts:{"*":Rt,text:"text/plain",html:"text/html",xml:"application/xml, text/xml",json:"application/json, text/javascript"},contents:{xml:/\bxml\b/,html:/\bhtml/,json:/\bjson\b/},responseFields:{xml:"responseXML",text:"responseText",json:"responseJSON"},converters:{"* text":String,"text html":!0,"text json":JSON.parse,"text xml":S.parseXML},flatOptions:{url:!0,context:!0}},ajaxSetup:function(e,t){return t?Ft(Ft(e,S.ajaxSettings),t):Ft(S.ajaxSettings,e)},ajaxPrefilter:It(Ot),ajaxTransport:It(Pt),ajax:function(e,t){"object"==typeof e&&(t=e,e=void 0),t=t||{};var c,f,p,n,d,r,h,g,i,o,v=S.ajaxSetup({},t),y=v.context||v,m=v.context&&(y.nodeType||y.jquery)?S(y):S.event,x=S.Deferred(),b=S.Callbacks("once memory"),w=v.statusCode||{},a={},s={},u="canceled",T={readyState:0,getResponseHeader:function(e){var t;if(h){if(!n){n={};while(t=qt.exec(p))n[t[1].toLowerCase()+" "]=(n[t[1].toLowerCase()+" "]||[]).concat(t[2])}t=n[e.toLowerCase()+" "]}return null==t?null:t.join(", ")},getAllResponseHeaders:function(){return h?p:null},setRequestHeader:function(e,t){return null==h&&(e=s[e.toLowerCase()]=s[e.toLowerCase()]||e,a[e]=t),this},overrideMimeType:function(e){return null==h&&(v.mimeType=e),this},statusCode:function(e){var t;if(e)if(h)T.always(e[T.status]);else for(t in e)w[t]=[w[t],e[t]];return this},abort:function(e){var t=e||u;return c&&c.abort(t),l(0,t),this}};if(x.promise(T),v.url=((e||v.url||bt.href)+"").replace(Ht,bt.protocol+"//"),v.type=t.method||t.type||v.method||v.type,v.dataTypes=(v.dataType||"*").toLowerCase().match(P)||[""],null==v.crossDomain){r=E.createElement("a");try{r.href=v.url,r.href=r.href,v.crossDomain=Mt.protocol+"//"+Mt.host!=r.protocol+"//"+r.host}catch(e){v.crossDomain=!0}}if(v.data&&v.processData&&"string"!=typeof v.data&&(v.data=S.param(v.data,v.traditional)),Wt(Ot,v,t,T),h)return T;for(i in(g=S.event&&v.global)&&0==S.active++&&S.event.trigger("ajaxStart"),v.type=v.type.toUpperCase(),v.hasContent=!Lt.test(v.type),f=v.url.replace(jt,""),v.hasContent?v.data&&v.processData&&0===(v.contentType||"").indexOf("application/x-www-form-urlencoded")&&(v.data=v.data.replace(Nt,"+")):(o=v.url.slice(f.length),v.data&&(v.processData||"string"==typeof v.data)&&(f+=(Tt.test(f)?"&":"?")+v.data,delete v.data),!1===v.cache&&(f=f.replace(Dt,"$1"),o=(Tt.test(f)?"&":"?")+"_="+wt.guid+++o),v.url=f+o),v.ifModified&&(S.lastModified[f]&&T.setRequestHeader("If-Modified-Since",S.lastModified[f]),S.etag[f]&&T.setRequestHeader("If-None-Match",S.etag[f])),(v.data&&v.hasContent&&!1!==v.contentType||t.contentType)&&T.setRequestHeader("Content-Type",v.contentType),T.setRequestHeader("Accept",v.dataTypes[0]&&v.accepts[v.dataTypes[0]]?v.accepts[v.dataTypes[0]]+("*"!==v.dataTypes[0]?", "+Rt+"; q=0.01":""):v.accepts["*"]),v.headers)T.setRequestHeader(i,v.headers[i]);if(v.beforeSend&&(!1===v.beforeSend.call(y,T,v)||h))return T.abort();if(u="abort",b.add(v.complete),T.done(v.success),T.fail(v.error),c=Wt(Pt,v,t,T)){if(T.readyState=1,g&&m.trigger("ajaxSend",[T,v]),h)return T;v.async&&0<v.timeout&&(d=C.setTimeout(function(){T.abort("timeout")},v.timeout));try{h=!1,c.send(a,l)}catch(e){if(h)throw e;l(-1,e)}}else l(-1,"No Transport");function l(e,t,n,r){var i,o,a,s,u,l=t;h||(h=!0,d&&C.clearTimeout(d),c=void 0,p=r||"",T.readyState=0<e?4:0,i=200<=e&&e<300||304===e,n&&(s=function(e,t,n){var r,i,o,a,s=e.contents,u=e.dataTypes;while("*"===u[0])u.shift(),void 0===r&&(r=e.mimeType||t.getResponseHeader("Content-Type"));if(r)for(i in s)if(s[i]&&s[i].test(r)){u.unshift(i);break}if(u[0]in n)o=u[0];else{for(i in n){if(!u[0]||e.converters[i+" "+u[0]]){o=i;break}a||(a=i)}o=o||a}if(o)return o!==u[0]&&u.unshift(o),n[o]}(v,T,n)),!i&&-1<S.inArray("script",v.dataTypes)&&S.inArray("json",v.dataTypes)<0&&(v.converters["text script"]=function(){}),s=function(e,t,n,r){var i,o,a,s,u,l={},c=e.dataTypes.slice();if(c[1])for(a in e.converters)l[a.toLowerCase()]=e.converters[a];o=c.shift();while(o)if(e.responseFields[o]&&(n[e.responseFields[o]]=t),!u&&r&&e.dataFilter&&(t=e.dataFilter(t,e.dataType)),u=o,o=c.shift())if("*"===o)o=u;else if("*"!==u&&u!==o){if(!(a=l[u+" "+o]||l["* "+o]))for(i in l)if((s=i.split(" "))[1]===o&&(a=l[u+" "+s[0]]||l["* "+s[0]])){!0===a?a=l[i]:!0!==l[i]&&(o=s[0],c.unshift(s[1]));break}if(!0!==a)if(a&&e["throws"])t=a(t);else try{t=a(t)}catch(e){return{state:"parsererror",error:a?e:"No conversion from "+u+" to "+o}}}return{state:"success",data:t}}(v,s,T,i),i?(v.ifModified&&((u=T.getResponseHeader("Last-Modified"))&&(S.lastModified[f]=u),(u=T.getResponseHeader("etag"))&&(S.etag[f]=u)),204===e||"HEAD"===v.type?l="nocontent":304===e?l="notmodified":(l=s.state,o=s.data,i=!(a=s.error))):(a=l,!e&&l||(l="error",e<0&&(e=0))),T.status=e,T.statusText=(t||l)+"",i?x.resolveWith(y,[o,l,T]):x.rejectWith(y,[T,l,a]),T.statusCode(w),w=void 0,g&&m.trigger(i?"ajaxSuccess":"ajaxError",[T,v,i?o:a]),b.fireWith(y,[T,l]),g&&(m.trigger("ajaxComplete",[T,v]),--S.active||S.event.trigger("ajaxStop")))}return T},getJSON:function(e,t,n){return S.get(e,t,n,"json")},getScript:function(e,t){return S.get(e,void 0,t,"script")}}),S.each(["get","post"],function(e,i){S[i]=function(e,t,n,r){return m(t)&&(r=r||n,n=t,t=void 0),S.ajax(S.extend({url:e,type:i,dataType:r,data:t,success:n},S.isPlainObject(e)&&e))}}),S.ajaxPrefilter(function(e){var t;for(t in e.headers)"content-type"===t.toLowerCase()&&(e.contentType=e.headers[t]||"")}),S._evalUrl=function(e,t,n){return S.ajax({url:e,type:"GET",dataType:"script",cache:!0,async:!1,global:!1,converters:{"text script":function(){}},dataFilter:function(e){S.globalEval(e,t,n)}})},S.fn.extend({wrapAll:function(e){var t;return this[0]&&(m(e)&&(e=e.call(this[0])),t=S(e,this[0].ownerDocument).eq(0).clone(!0),this[0].parentNode&&t.insertBefore(this[0]),t.map(function(){var e=this;while(e.firstElementChild)e=e.firstElementChild;return e}).append(this)),this},wrapInner:function(n){return m(n)?this.each(function(e){S(this).wrapInner(n.call(this,e))}):this.each(function(){var e=S(this),t=e.contents();t.length?t.wrapAll(n):e.append(n)})},wrap:function(t){var n=m(t);return this.each(function(e){S(this).wrapAll(n?t.call(this,e):t)})},unwrap:function(e){return this.parent(e).not("body").each(function(){S(this).replaceWith(this.childNodes)}),this}}),S.expr.pseudos.hidden=function(e){return!S.expr.pseudos.visible(e)},S.expr.pseudos.visible=function(e){return!!(e.offsetWidth||e.offsetHeight||e.getClientRects().length)},S.ajaxSettings.xhr=function(){try{return new C.XMLHttpRequest}catch(e){}};var Bt={0:200,1223:204},$t=S.ajaxSettings.xhr();y.cors=!!$t&&"withCredentials"in $t,y.ajax=$t=!!$t,S.ajaxTransport(function(i){var o,a;if(y.cors||$t&&!i.crossDomain)return{send:function(e,t){var n,r=i.xhr();if(r.open(i.type,i.url,i.async,i.username,i.password),i.xhrFields)for(n in i.xhrFields)r[n]=i.xhrFields[n];for(n in i.mimeType&&r.overrideMimeType&&r.overrideMimeType(i.mimeType),i.crossDomain||e["X-Requested-With"]||(e["X-Requested-With"]="XMLHttpRequest"),e)r.setRequestHeader(n,e[n]);o=function(e){return function(){o&&(o=a=r.onload=r.onerror=r.onabort=r.ontimeout=r.onreadystatechange=null,"abort"===e?r.abort():"error"===e?"number"!=typeof r.status?t(0,"error"):t(r.status,r.statusText):t(Bt[r.status]||r.status,r.statusText,"text"!==(r.responseType||"text")||"string"!=typeof r.responseText?{binary:r.response}:{text:r.responseText},r.getAllResponseHeaders()))}},r.onload=o(),a=r.onerror=r.ontimeout=o("error"),void 0!==r.onabort?r.onabort=a:r.onreadystatechange=function(){4===r.readyState&&C.setTimeout(function(){o&&a()})},o=o("abort");try{r.send(i.hasContent&&i.data||null)}catch(e){if(o)throw e}},abort:function(){o&&o()}}}),S.ajaxPrefilter(function(e){e.crossDomain&&(e.contents.script=!1)}),S.ajaxSetup({accepts:{script:"text/javascript, application/javascript, application/ecmascript, application/x-ecmascript"},contents:{script:/\b(?:java|ecma)script\b/},converters:{"text script":function(e){return S.globalEval(e),e}}}),S.ajaxPrefilter("script",function(e){void 0===e.cache&&(e.cache=!1),e.crossDomain&&(e.type="GET")}),S.ajaxTransport("script",function(n){var r,i;if(n.crossDomain||n.scriptAttrs)return{send:function(e,t){r=S("<script>").attr(n.scriptAttrs||{}).prop({charset:n.scriptCharset,src:n.url}).on("load error",i=function(e){r.remove(),i=null,e&&t("error"===e.type?404:200,e.type)}),E.head.appendChild(r[0])},abort:function(){i&&i()}}});var _t,zt=[],Ut=/(=)\?(?=&|$)|\?\?/;S.ajaxSetup({jsonp:"callback",jsonpCallback:function(){var e=zt.pop()||S.expando+"_"+wt.guid++;return this[e]=!0,e}}),S.ajaxPrefilter("json jsonp",function(e,t,n){var r,i,o,a=!1!==e.jsonp&&(Ut.test(e.url)?"url":"string"==typeof e.data&&0===(e.contentType||"").indexOf("application/x-www-form-urlencoded")&&Ut.test(e.data)&&"data");if(a||"jsonp"===e.dataTypes[0])return r=e.jsonpCallback=m(e.jsonpCallback)?e.jsonpCallback():e.jsonpCallback,a?e[a]=e[a].replace(Ut,"$1"+r):!1!==e.jsonp&&(e.url+=(Tt.test(e.url)?"&":"?")+e.jsonp+"="+r),e.converters["script json"]=function(){return o||S.error(r+" was not called"),o[0]},e.dataTypes[0]="json",i=C[r],C[r]=function(){o=arguments},n.always(function(){void 0===i?S(C).removeProp(r):C[r]=i,e[r]&&(e.jsonpCallback=t.jsonpCallback,zt.push(r)),o&&m(i)&&i(o[0]),o=i=void 0}),"script"}),y.createHTMLDocument=((_t=E.implementation.createHTMLDocument("").body).innerHTML="<form></form><form></form>",2===_t.childNodes.length),S.parseHTML=function(e,t,n){return"string"!=typeof e?[]:("boolean"==typeof t&&(n=t,t=!1),t||(y.createHTMLDocument?((r=(t=E.implementation.createHTMLDocument("")).createElement("base")).href=E.location.href,t.head.appendChild(r)):t=E),o=!n&&[],(i=N.exec(e))?[t.createElement(i[1])]:(i=xe([e],t,o),o&&o.length&&S(o).remove(),S.merge([],i.childNodes)));var r,i,o},S.fn.load=function(e,t,n){var r,i,o,a=this,s=e.indexOf(" ");return-1<s&&(r=ht(e.slice(s)),e=e.slice(0,s)),m(t)?(n=t,t=void 0):t&&"object"==typeof t&&(i="POST"),0<a.length&&S.ajax({url:e,type:i||"GET",dataType:"html",data:t}).done(function(e){o=arguments,a.html(r?S("<div>").append(S.parseHTML(e)).find(r):e)}).always(n&&function(e,t){a.each(function(){n.apply(this,o||[e.responseText,t,e])})}),this},S.expr.pseudos.animated=function(t){return S.grep(S.timers,function(e){return t===e.elem}).length},S.offset={setOffset:function(e,t,n){var r,i,o,a,s,u,l=S.css(e,"position"),c=S(e),f={};"static"===l&&(e.style.position="relative"),s=c.offset(),o=S.css(e,"top"),u=S.css(e,"left"),("absolute"===l||"fixed"===l)&&-1<(o+u).indexOf("auto")?(a=(r=c.position()).top,i=r.left):(a=parseFloat(o)||0,i=parseFloat(u)||0),m(t)&&(t=t.call(e,n,S.extend({},s))),null!=t.top&&(f.top=t.top-s.top+a),null!=t.left&&(f.left=t.left-s.left+i),"using"in t?t.using.call(e,f):c.css(f)}},S.fn.extend({offset:function(t){if(arguments.length)return void 0===t?this:this.each(function(e){S.offset.setOffset(this,t,e)});var e,n,r=this[0];return r?r.getClientRects().length?(e=r.getBoundingClientRect(),n=r.ownerDocument.defaultView,{top:e.top+n.pageYOffset,left:e.left+n.pageXOffset}):{top:0,left:0}:void 0},position:function(){if(this[0]){var e,t,n,r=this[0],i={top:0,left:0};if("fixed"===S.css(r,"position"))t=r.getBoundingClientRect();else{t=this.offset(),n=r.ownerDocument,e=r.offsetParent||n.documentElement;while(e&&(e===n.body||e===n.documentElement)&&"static"===S.css(e,"position"))e=e.parentNode;e&&e!==r&&1===e.nodeType&&((i=S(e).offset()).top+=S.css(e,"borderTopWidth",!0),i.left+=S.css(e,"borderLeftWidth",!0))}return{top:t.top-i.top-S.css(r,"marginTop",!0),left:t.left-i.left-S.css(r,"marginLeft",!0)}}},offsetParent:function(){return this.map(function(){var e=this.offsetParent;while(e&&"static"===S.css(e,"position"))e=e.offsetParent;return e||re})}}),S.each({scrollLeft:"pageXOffset",scrollTop:"pageYOffset"},function(t,i){var o="pageYOffset"===i;S.fn[t]=function(e){return $(this,function(e,t,n){var r;if(x(e)?r=e:9===e.nodeType&&(r=e.defaultView),void 0===n)return r?r[i]:e[t];r?r.scrollTo(o?r.pageXOffset:n,o?n:r.pageYOffset):e[t]=n},t,e,arguments.length)}}),S.each(["top","left"],function(e,n){S.cssHooks[n]=Fe(y.pixelPosition,function(e,t){if(t)return t=We(e,n),Pe.test(t)?S(e).position()[n]+"px":t})}),S.each({Height:"height",Width:"width"},function(a,s){S.each({padding:"inner"+a,content:s,"":"outer"+a},function(r,o){S.fn[o]=function(e,t){var n=arguments.length&&(r||"boolean"!=typeof e),i=r||(!0===e||!0===t?"margin":"border");return $(this,function(e,t,n){var r;return x(e)?0===o.indexOf("outer")?e["inner"+a]:e.document.documentElement["client"+a]:9===e.nodeType?(r=e.documentElement,Math.max(e.body["scroll"+a],r["scroll"+a],e.body["offset"+a],r["offset"+a],r["client"+a])):void 0===n?S.css(e,t,i):S.style(e,t,n,i)},s,n?e:void 0,n)}})}),S.each(["ajaxStart","ajaxStop","ajaxComplete","ajaxError","ajaxSuccess","ajaxSend"],function(e,t){S.fn[t]=function(e){return this.on(t,e)}}),S.fn.extend({bind:function(e,t,n){return this.on(e,null,t,n)},unbind:function(e,t){return this.off(e,null,t)},delegate:function(e,t,n,r){return this.on(t,e,n,r)},undelegate:function(e,t,n){return 1===arguments.length?this.off(e,"**"):this.off(t,e||"**",n)},hover:function(e,t){return this.mouseenter(e).mouseleave(t||e)}}),S.each("blur focus focusin focusout resize scroll click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup contextmenu".split(" "),function(e,n){S.fn[n]=function(e,t){return 0<arguments.length?this.on(n,null,e,t):this.trigger(n)}});var Xt=/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g;S.proxy=function(e,t){var n,r,i;if("string"==typeof t&&(n=e[t],t=e,e=n),m(e))return r=s.call(arguments,2),(i=function(){return e.apply(t||this,r.concat(s.call(arguments)))}).guid=e.guid=e.guid||S.guid++,i},S.holdReady=function(e){e?S.readyWait++:S.ready(!0)},S.isArray=Array.isArray,S.parseJSON=JSON.parse,S.nodeName=A,S.isFunction=m,S.isWindow=x,S.camelCase=X,S.type=w,S.now=Date.now,S.isNumeric=function(e){var t=S.type(e);return("number"===t||"string"===t)&&!isNaN(e-parseFloat(e))},S.trim=function(e){return null==e?"":(e+"").replace(Xt,"")},"function"==typeof define&&define.amd&&define("jquery",[],function(){return S});var Vt=C.jQuery,Gt=C.$;return S.noConflict=function(e){return C.$===S&&(C.$=Gt),e&&C.jQuery===S&&(C.jQuery=Vt),S},"undefined"==typeof e&&(C.jQuery=C.$=S),S});

/*!
  * Bootstrap v5.0.1 (https://getbootstrap.com/)
  * Copyright 2011-2021 The Bootstrap Authors (https://github.com/twbs/bootstrap/graphs/contributors)
  * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)
  */
!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?module.exports=e():"function"==typeof define&&define.amd?define(e):(t="undefined"!=typeof globalThis?globalThis:t||self).bootstrap=e()}(this,(function(){"use strict";const t={find:(t,e=document.documentElement)=>[].concat(...Element.prototype.querySelectorAll.call(e,t)),findOne:(t,e=document.documentElement)=>Element.prototype.querySelector.call(e,t),children:(t,e)=>[].concat(...t.children).filter(t=>t.matches(e)),parents(t,e){const i=[];let n=t.parentNode;for(;n&&n.nodeType===Node.ELEMENT_NODE&&3!==n.nodeType;)n.matches(e)&&i.push(n),n=n.parentNode;return i},prev(t,e){let i=t.previousElementSibling;for(;i;){if(i.matches(e))return[i];i=i.previousElementSibling}return[]},next(t,e){let i=t.nextElementSibling;for(;i;){if(i.matches(e))return[i];i=i.nextElementSibling}return[]}},e=t=>{do{t+=Math.floor(1e6*Math.random())}while(document.getElementById(t));return t},i=t=>{let e=t.getAttribute("data-bs-target");if(!e||"#"===e){let i=t.getAttribute("href");if(!i||!i.includes("#")&&!i.startsWith("."))return null;i.includes("#")&&!i.startsWith("#")&&(i="#"+i.split("#")[1]),e=i&&"#"!==i?i.trim():null}return e},n=t=>{const e=i(t);return e&&document.querySelector(e)?e:null},s=t=>{const e=i(t);return e?document.querySelector(e):null},o=t=>{if(!t)return 0;let{transitionDuration:e,transitionDelay:i}=window.getComputedStyle(t);const n=Number.parseFloat(e),s=Number.parseFloat(i);return n||s?(e=e.split(",")[0],i=i.split(",")[0],1e3*(Number.parseFloat(e)+Number.parseFloat(i))):0},r=t=>{t.dispatchEvent(new Event("transitionend"))},a=t=>!(!t||"object"!=typeof t)&&(void 0!==t.jquery&&(t=t[0]),void 0!==t.nodeType),l=e=>a(e)?e.jquery?e[0]:e:"string"==typeof e&&e.length>0?t.findOne(e):null,c=(t,e)=>{let i=!1;const n=e+5;t.addEventListener("transitionend",(function e(){i=!0,t.removeEventListener("transitionend",e)})),setTimeout(()=>{i||r(t)},n)},d=(t,e,i)=>{Object.keys(i).forEach(n=>{const s=i[n],o=e[n],r=o&&a(o)?"element":null==(l=o)?""+l:{}.toString.call(l).match(/\s([a-z]+)/i)[1].toLowerCase();var l;if(!new RegExp(s).test(r))throw new TypeError(`${t.toUpperCase()}: Option "${n}" provided type "${r}" but expected type "${s}".`)})},h=t=>{if(!t)return!1;if(t.style&&t.parentNode&&t.parentNode.style){const e=getComputedStyle(t),i=getComputedStyle(t.parentNode);return"none"!==e.display&&"none"!==i.display&&"hidden"!==e.visibility}return!1},u=t=>!t||t.nodeType!==Node.ELEMENT_NODE||!!t.classList.contains("disabled")||(void 0!==t.disabled?t.disabled:t.hasAttribute("disabled")&&"false"!==t.getAttribute("disabled")),f=t=>{if(!document.documentElement.attachShadow)return null;if("function"==typeof t.getRootNode){const e=t.getRootNode();return e instanceof ShadowRoot?e:null}return t instanceof ShadowRoot?t:t.parentNode?f(t.parentNode):null},p=()=>{},m=t=>t.offsetHeight,g=()=>{const{jQuery:t}=window;return t&&!document.body.hasAttribute("data-bs-no-jquery")?t:null},_=()=>"rtl"===document.documentElement.dir,b=t=>{var e;e=()=>{const e=g();if(e){const i=t.NAME,n=e.fn[i];e.fn[i]=t.jQueryInterface,e.fn[i].Constructor=t,e.fn[i].noConflict=()=>(e.fn[i]=n,t.jQueryInterface)}},"loading"===document.readyState?document.addEventListener("DOMContentLoaded",e):e()},v=t=>{"function"==typeof t&&t()},y=new Map;var w={set(t,e,i){y.has(t)||y.set(t,new Map);const n=y.get(t);n.has(e)||0===n.size?n.set(e,i):console.error(`Bootstrap doesn't allow more than one instance per element. Bound instance: ${Array.from(n.keys())[0]}.`)},get:(t,e)=>y.has(t)&&y.get(t).get(e)||null,remove(t,e){if(!y.has(t))return;const i=y.get(t);i.delete(e),0===i.size&&y.delete(t)}};const E=/[^.]*(?=\..*)\.|.*/,T=/\..*/,A=/::\d+$/,L={};let O=1;const k={mouseenter:"mouseover",mouseleave:"mouseout"},C=/^(mouseenter|mouseleave)/i,x=new Set(["click","dblclick","mouseup","mousedown","contextmenu","mousewheel","DOMMouseScroll","mouseover","mouseout","mousemove","selectstart","selectend","keydown","keypress","keyup","orientationchange","touchstart","touchmove","touchend","touchcancel","pointerdown","pointermove","pointerup","pointerleave","pointercancel","gesturestart","gesturechange","gestureend","focus","blur","change","reset","select","submit","focusin","focusout","load","unload","beforeunload","resize","move","DOMContentLoaded","readystatechange","error","abort","scroll"]);function D(t,e){return e&&`${e}::${O++}`||t.uidEvent||O++}function N(t){const e=D(t);return t.uidEvent=e,L[e]=L[e]||{},L[e]}function S(t,e,i=null){const n=Object.keys(t);for(let s=0,o=n.length;s<o;s++){const o=t[n[s]];if(o.originalHandler===e&&o.delegationSelector===i)return o}return null}function I(t,e,i){const n="string"==typeof e,s=n?i:e;let o=M(t);return x.has(o)||(o=t),[n,s,o]}function j(t,e,i,n,s){if("string"!=typeof e||!t)return;if(i||(i=n,n=null),C.test(e)){const t=t=>function(e){if(!e.relatedTarget||e.relatedTarget!==e.delegateTarget&&!e.delegateTarget.contains(e.relatedTarget))return t.call(this,e)};n?n=t(n):i=t(i)}const[o,r,a]=I(e,i,n),l=N(t),c=l[a]||(l[a]={}),d=S(c,r,o?i:null);if(d)return void(d.oneOff=d.oneOff&&s);const h=D(r,e.replace(E,"")),u=o?function(t,e,i){return function n(s){const o=t.querySelectorAll(e);for(let{target:r}=s;r&&r!==this;r=r.parentNode)for(let a=o.length;a--;)if(o[a]===r)return s.delegateTarget=r,n.oneOff&&H.off(t,s.type,e,i),i.apply(r,[s]);return null}}(t,i,n):function(t,e){return function i(n){return n.delegateTarget=t,i.oneOff&&H.off(t,n.type,e),e.apply(t,[n])}}(t,i);u.delegationSelector=o?i:null,u.originalHandler=r,u.oneOff=s,u.uidEvent=h,c[h]=u,t.addEventListener(a,u,o)}function P(t,e,i,n,s){const o=S(e[i],n,s);o&&(t.removeEventListener(i,o,Boolean(s)),delete e[i][o.uidEvent])}function M(t){return t=t.replace(T,""),k[t]||t}const H={on(t,e,i,n){j(t,e,i,n,!1)},one(t,e,i,n){j(t,e,i,n,!0)},off(t,e,i,n){if("string"!=typeof e||!t)return;const[s,o,r]=I(e,i,n),a=r!==e,l=N(t),c=e.startsWith(".");if(void 0!==o){if(!l||!l[r])return;return void P(t,l,r,o,s?i:null)}c&&Object.keys(l).forEach(i=>{!function(t,e,i,n){const s=e[i]||{};Object.keys(s).forEach(o=>{if(o.includes(n)){const n=s[o];P(t,e,i,n.originalHandler,n.delegationSelector)}})}(t,l,i,e.slice(1))});const d=l[r]||{};Object.keys(d).forEach(i=>{const n=i.replace(A,"");if(!a||e.includes(n)){const e=d[i];P(t,l,r,e.originalHandler,e.delegationSelector)}})},trigger(t,e,i){if("string"!=typeof e||!t)return null;const n=g(),s=M(e),o=e!==s,r=x.has(s);let a,l=!0,c=!0,d=!1,h=null;return o&&n&&(a=n.Event(e,i),n(t).trigger(a),l=!a.isPropagationStopped(),c=!a.isImmediatePropagationStopped(),d=a.isDefaultPrevented()),r?(h=document.createEvent("HTMLEvents"),h.initEvent(s,l,!0)):h=new CustomEvent(e,{bubbles:l,cancelable:!0}),void 0!==i&&Object.keys(i).forEach(t=>{Object.defineProperty(h,t,{get:()=>i[t]})}),d&&h.preventDefault(),c&&t.dispatchEvent(h),h.defaultPrevented&&void 0!==a&&a.preventDefault(),h}};class R{constructor(t){(t=l(t))&&(this._element=t,w.set(this._element,this.constructor.DATA_KEY,this))}dispose(){w.remove(this._element,this.constructor.DATA_KEY),H.off(this._element,this.constructor.EVENT_KEY),Object.getOwnPropertyNames(this).forEach(t=>{this[t]=null})}_queueCallback(t,e,i=!0){if(!i)return void v(t);const n=o(e);H.one(e,"transitionend",()=>v(t)),c(e,n)}static getInstance(t){return w.get(t,this.DATA_KEY)}static get VERSION(){return"5.0.1"}static get NAME(){throw new Error('You have to implement the static method "NAME", for each component!')}static get DATA_KEY(){return"bs."+this.NAME}static get EVENT_KEY(){return"."+this.DATA_KEY}}class B extends R{static get NAME(){return"alert"}close(t){const e=t?this._getRootElement(t):this._element,i=this._triggerCloseEvent(e);null===i||i.defaultPrevented||this._removeElement(e)}_getRootElement(t){return s(t)||t.closest(".alert")}_triggerCloseEvent(t){return H.trigger(t,"close.bs.alert")}_removeElement(t){t.classList.remove("show");const e=t.classList.contains("fade");this._queueCallback(()=>this._destroyElement(t),t,e)}_destroyElement(t){t.parentNode&&t.parentNode.removeChild(t),H.trigger(t,"closed.bs.alert")}static jQueryInterface(t){return this.each((function(){let e=w.get(this,"bs.alert");e||(e=new B(this)),"close"===t&&e[t](this)}))}static handleDismiss(t){return function(e){e&&e.preventDefault(),t.close(this)}}}H.on(document,"click.bs.alert.data-api",'[data-bs-dismiss="alert"]',B.handleDismiss(new B)),b(B);class W extends R{static get NAME(){return"button"}toggle(){this._element.setAttribute("aria-pressed",this._element.classList.toggle("active"))}static jQueryInterface(t){return this.each((function(){let e=w.get(this,"bs.button");e||(e=new W(this)),"toggle"===t&&e[t]()}))}}function q(t){return"true"===t||"false"!==t&&(t===Number(t).toString()?Number(t):""===t||"null"===t?null:t)}function z(t){return t.replace(/[A-Z]/g,t=>"-"+t.toLowerCase())}H.on(document,"click.bs.button.data-api",'[data-bs-toggle="button"]',t=>{t.preventDefault();const e=t.target.closest('[data-bs-toggle="button"]');let i=w.get(e,"bs.button");i||(i=new W(e)),i.toggle()}),b(W);const U={setDataAttribute(t,e,i){t.setAttribute("data-bs-"+z(e),i)},removeDataAttribute(t,e){t.removeAttribute("data-bs-"+z(e))},getDataAttributes(t){if(!t)return{};const e={};return Object.keys(t.dataset).filter(t=>t.startsWith("bs")).forEach(i=>{let n=i.replace(/^bs/,"");n=n.charAt(0).toLowerCase()+n.slice(1,n.length),e[n]=q(t.dataset[i])}),e},getDataAttribute:(t,e)=>q(t.getAttribute("data-bs-"+z(e))),offset(t){const e=t.getBoundingClientRect();return{top:e.top+document.body.scrollTop,left:e.left+document.body.scrollLeft}},position:t=>({top:t.offsetTop,left:t.offsetLeft})},$={interval:5e3,keyboard:!0,slide:!1,pause:"hover",wrap:!0,touch:!0},F={interval:"(number|boolean)",keyboard:"boolean",slide:"(boolean|string)",pause:"(string|boolean)",wrap:"boolean",touch:"boolean"},V="next",K="prev",X="left",Y="right";class Q extends R{constructor(e,i){super(e),this._items=null,this._interval=null,this._activeElement=null,this._isPaused=!1,this._isSliding=!1,this.touchTimeout=null,this.touchStartX=0,this.touchDeltaX=0,this._config=this._getConfig(i),this._indicatorsElement=t.findOne(".carousel-indicators",this._element),this._touchSupported="ontouchstart"in document.documentElement||navigator.maxTouchPoints>0,this._pointerEvent=Boolean(window.PointerEvent),this._addEventListeners()}static get Default(){return $}static get NAME(){return"carousel"}next(){this._isSliding||this._slide(V)}nextWhenVisible(){!document.hidden&&h(this._element)&&this.next()}prev(){this._isSliding||this._slide(K)}pause(e){e||(this._isPaused=!0),t.findOne(".carousel-item-next, .carousel-item-prev",this._element)&&(r(this._element),this.cycle(!0)),clearInterval(this._interval),this._interval=null}cycle(t){t||(this._isPaused=!1),this._interval&&(clearInterval(this._interval),this._interval=null),this._config&&this._config.interval&&!this._isPaused&&(this._updateInterval(),this._interval=setInterval((document.visibilityState?this.nextWhenVisible:this.next).bind(this),this._config.interval))}to(e){this._activeElement=t.findOne(".active.carousel-item",this._element);const i=this._getItemIndex(this._activeElement);if(e>this._items.length-1||e<0)return;if(this._isSliding)return void H.one(this._element,"slid.bs.carousel",()=>this.to(e));if(i===e)return this.pause(),void this.cycle();const n=e>i?V:K;this._slide(n,this._items[e])}_getConfig(t){return t={...$,...t},d("carousel",t,F),t}_handleSwipe(){const t=Math.abs(this.touchDeltaX);if(t<=40)return;const e=t/this.touchDeltaX;this.touchDeltaX=0,e&&this._slide(e>0?Y:X)}_addEventListeners(){this._config.keyboard&&H.on(this._element,"keydown.bs.carousel",t=>this._keydown(t)),"hover"===this._config.pause&&(H.on(this._element,"mouseenter.bs.carousel",t=>this.pause(t)),H.on(this._element,"mouseleave.bs.carousel",t=>this.cycle(t))),this._config.touch&&this._touchSupported&&this._addTouchEventListeners()}_addTouchEventListeners(){const e=t=>{!this._pointerEvent||"pen"!==t.pointerType&&"touch"!==t.pointerType?this._pointerEvent||(this.touchStartX=t.touches[0].clientX):this.touchStartX=t.clientX},i=t=>{this.touchDeltaX=t.touches&&t.touches.length>1?0:t.touches[0].clientX-this.touchStartX},n=t=>{!this._pointerEvent||"pen"!==t.pointerType&&"touch"!==t.pointerType||(this.touchDeltaX=t.clientX-this.touchStartX),this._handleSwipe(),"hover"===this._config.pause&&(this.pause(),this.touchTimeout&&clearTimeout(this.touchTimeout),this.touchTimeout=setTimeout(t=>this.cycle(t),500+this._config.interval))};t.find(".carousel-item img",this._element).forEach(t=>{H.on(t,"dragstart.bs.carousel",t=>t.preventDefault())}),this._pointerEvent?(H.on(this._element,"pointerdown.bs.carousel",t=>e(t)),H.on(this._element,"pointerup.bs.carousel",t=>n(t)),this._element.classList.add("pointer-event")):(H.on(this._element,"touchstart.bs.carousel",t=>e(t)),H.on(this._element,"touchmove.bs.carousel",t=>i(t)),H.on(this._element,"touchend.bs.carousel",t=>n(t)))}_keydown(t){/input|textarea/i.test(t.target.tagName)||("ArrowLeft"===t.key?(t.preventDefault(),this._slide(Y)):"ArrowRight"===t.key&&(t.preventDefault(),this._slide(X)))}_getItemIndex(e){return this._items=e&&e.parentNode?t.find(".carousel-item",e.parentNode):[],this._items.indexOf(e)}_getItemByOrder(t,e){const i=t===V,n=t===K,s=this._getItemIndex(e),o=this._items.length-1;if((n&&0===s||i&&s===o)&&!this._config.wrap)return e;const r=(s+(n?-1:1))%this._items.length;return-1===r?this._items[this._items.length-1]:this._items[r]}_triggerSlideEvent(e,i){const n=this._getItemIndex(e),s=this._getItemIndex(t.findOne(".active.carousel-item",this._element));return H.trigger(this._element,"slide.bs.carousel",{relatedTarget:e,direction:i,from:s,to:n})}_setActiveIndicatorElement(e){if(this._indicatorsElement){const i=t.findOne(".active",this._indicatorsElement);i.classList.remove("active"),i.removeAttribute("aria-current");const n=t.find("[data-bs-target]",this._indicatorsElement);for(let t=0;t<n.length;t++)if(Number.parseInt(n[t].getAttribute("data-bs-slide-to"),10)===this._getItemIndex(e)){n[t].classList.add("active"),n[t].setAttribute("aria-current","true");break}}}_updateInterval(){const e=this._activeElement||t.findOne(".active.carousel-item",this._element);if(!e)return;const i=Number.parseInt(e.getAttribute("data-bs-interval"),10);i?(this._config.defaultInterval=this._config.defaultInterval||this._config.interval,this._config.interval=i):this._config.interval=this._config.defaultInterval||this._config.interval}_slide(e,i){const n=this._directionToOrder(e),s=t.findOne(".active.carousel-item",this._element),o=this._getItemIndex(s),r=i||this._getItemByOrder(n,s),a=this._getItemIndex(r),l=Boolean(this._interval),c=n===V,d=c?"carousel-item-start":"carousel-item-end",h=c?"carousel-item-next":"carousel-item-prev",u=this._orderToDirection(n);if(r&&r.classList.contains("active"))return void(this._isSliding=!1);if(this._triggerSlideEvent(r,u).defaultPrevented)return;if(!s||!r)return;this._isSliding=!0,l&&this.pause(),this._setActiveIndicatorElement(r),this._activeElement=r;const f=()=>{H.trigger(this._element,"slid.bs.carousel",{relatedTarget:r,direction:u,from:o,to:a})};if(this._element.classList.contains("slide")){r.classList.add(h),m(r),s.classList.add(d),r.classList.add(d);const t=()=>{r.classList.remove(d,h),r.classList.add("active"),s.classList.remove("active",h,d),this._isSliding=!1,setTimeout(f,0)};this._queueCallback(t,s,!0)}else s.classList.remove("active"),r.classList.add("active"),this._isSliding=!1,f();l&&this.cycle()}_directionToOrder(t){return[Y,X].includes(t)?_()?t===X?K:V:t===X?V:K:t}_orderToDirection(t){return[V,K].includes(t)?_()?t===K?X:Y:t===K?Y:X:t}static carouselInterface(t,e){let i=w.get(t,"bs.carousel"),n={...$,...U.getDataAttributes(t)};"object"==typeof e&&(n={...n,...e});const s="string"==typeof e?e:n.slide;if(i||(i=new Q(t,n)),"number"==typeof e)i.to(e);else if("string"==typeof s){if(void 0===i[s])throw new TypeError(`No method named "${s}"`);i[s]()}else n.interval&&n.ride&&(i.pause(),i.cycle())}static jQueryInterface(t){return this.each((function(){Q.carouselInterface(this,t)}))}static dataApiClickHandler(t){const e=s(this);if(!e||!e.classList.contains("carousel"))return;const i={...U.getDataAttributes(e),...U.getDataAttributes(this)},n=this.getAttribute("data-bs-slide-to");n&&(i.interval=!1),Q.carouselInterface(e,i),n&&w.get(e,"bs.carousel").to(n),t.preventDefault()}}H.on(document,"click.bs.carousel.data-api","[data-bs-slide], [data-bs-slide-to]",Q.dataApiClickHandler),H.on(window,"load.bs.carousel.data-api",()=>{const e=t.find('[data-bs-ride="carousel"]');for(let t=0,i=e.length;t<i;t++)Q.carouselInterface(e[t],w.get(e[t],"bs.carousel"))}),b(Q);const G={toggle:!0,parent:""},Z={toggle:"boolean",parent:"(string|element)"};class J extends R{constructor(e,i){super(e),this._isTransitioning=!1,this._config=this._getConfig(i),this._triggerArray=t.find(`[data-bs-toggle="collapse"][href="#${this._element.id}"],[data-bs-toggle="collapse"][data-bs-target="#${this._element.id}"]`);const s=t.find('[data-bs-toggle="collapse"]');for(let e=0,i=s.length;e<i;e++){const i=s[e],o=n(i),r=t.find(o).filter(t=>t===this._element);null!==o&&r.length&&(this._selector=o,this._triggerArray.push(i))}this._parent=this._config.parent?this._getParent():null,this._config.parent||this._addAriaAndCollapsedClass(this._element,this._triggerArray),this._config.toggle&&this.toggle()}static get Default(){return G}static get NAME(){return"collapse"}toggle(){this._element.classList.contains("show")?this.hide():this.show()}show(){if(this._isTransitioning||this._element.classList.contains("show"))return;let e,i;this._parent&&(e=t.find(".show, .collapsing",this._parent).filter(t=>"string"==typeof this._config.parent?t.getAttribute("data-bs-parent")===this._config.parent:t.classList.contains("collapse")),0===e.length&&(e=null));const n=t.findOne(this._selector);if(e){const t=e.find(t=>n!==t);if(i=t?w.get(t,"bs.collapse"):null,i&&i._isTransitioning)return}if(H.trigger(this._element,"show.bs.collapse").defaultPrevented)return;e&&e.forEach(t=>{n!==t&&J.collapseInterface(t,"hide"),i||w.set(t,"bs.collapse",null)});const s=this._getDimension();this._element.classList.remove("collapse"),this._element.classList.add("collapsing"),this._element.style[s]=0,this._triggerArray.length&&this._triggerArray.forEach(t=>{t.classList.remove("collapsed"),t.setAttribute("aria-expanded",!0)}),this.setTransitioning(!0);const o="scroll"+(s[0].toUpperCase()+s.slice(1));this._queueCallback(()=>{this._element.classList.remove("collapsing"),this._element.classList.add("collapse","show"),this._element.style[s]="",this.setTransitioning(!1),H.trigger(this._element,"shown.bs.collapse")},this._element,!0),this._element.style[s]=this._element[o]+"px"}hide(){if(this._isTransitioning||!this._element.classList.contains("show"))return;if(H.trigger(this._element,"hide.bs.collapse").defaultPrevented)return;const t=this._getDimension();this._element.style[t]=this._element.getBoundingClientRect()[t]+"px",m(this._element),this._element.classList.add("collapsing"),this._element.classList.remove("collapse","show");const e=this._triggerArray.length;if(e>0)for(let t=0;t<e;t++){const e=this._triggerArray[t],i=s(e);i&&!i.classList.contains("show")&&(e.classList.add("collapsed"),e.setAttribute("aria-expanded",!1))}this.setTransitioning(!0),this._element.style[t]="",this._queueCallback(()=>{this.setTransitioning(!1),this._element.classList.remove("collapsing"),this._element.classList.add("collapse"),H.trigger(this._element,"hidden.bs.collapse")},this._element,!0)}setTransitioning(t){this._isTransitioning=t}_getConfig(t){return(t={...G,...t}).toggle=Boolean(t.toggle),d("collapse",t,Z),t}_getDimension(){return this._element.classList.contains("width")?"width":"height"}_getParent(){let{parent:e}=this._config;e=l(e);const i=`[data-bs-toggle="collapse"][data-bs-parent="${e}"]`;return t.find(i,e).forEach(t=>{const e=s(t);this._addAriaAndCollapsedClass(e,[t])}),e}_addAriaAndCollapsedClass(t,e){if(!t||!e.length)return;const i=t.classList.contains("show");e.forEach(t=>{i?t.classList.remove("collapsed"):t.classList.add("collapsed"),t.setAttribute("aria-expanded",i)})}static collapseInterface(t,e){let i=w.get(t,"bs.collapse");const n={...G,...U.getDataAttributes(t),..."object"==typeof e&&e?e:{}};if(!i&&n.toggle&&"string"==typeof e&&/show|hide/.test(e)&&(n.toggle=!1),i||(i=new J(t,n)),"string"==typeof e){if(void 0===i[e])throw new TypeError(`No method named "${e}"`);i[e]()}}static jQueryInterface(t){return this.each((function(){J.collapseInterface(this,t)}))}}H.on(document,"click.bs.collapse.data-api",'[data-bs-toggle="collapse"]',(function(e){("A"===e.target.tagName||e.delegateTarget&&"A"===e.delegateTarget.tagName)&&e.preventDefault();const i=U.getDataAttributes(this),s=n(this);t.find(s).forEach(t=>{const e=w.get(t,"bs.collapse");let n;e?(null===e._parent&&"string"==typeof i.parent&&(e._config.parent=i.parent,e._parent=e._getParent()),n="toggle"):n=i,J.collapseInterface(t,n)})})),b(J);var tt="top",et="bottom",it="right",nt="left",st=[tt,et,it,nt],ot=st.reduce((function(t,e){return t.concat([e+"-start",e+"-end"])}),[]),rt=[].concat(st,["auto"]).reduce((function(t,e){return t.concat([e,e+"-start",e+"-end"])}),[]),at=["beforeRead","read","afterRead","beforeMain","main","afterMain","beforeWrite","write","afterWrite"];function lt(t){return t?(t.nodeName||"").toLowerCase():null}function ct(t){if(null==t)return window;if("[object Window]"!==t.toString()){var e=t.ownerDocument;return e&&e.defaultView||window}return t}function dt(t){return t instanceof ct(t).Element||t instanceof Element}function ht(t){return t instanceof ct(t).HTMLElement||t instanceof HTMLElement}function ut(t){return"undefined"!=typeof ShadowRoot&&(t instanceof ct(t).ShadowRoot||t instanceof ShadowRoot)}var ft={name:"applyStyles",enabled:!0,phase:"write",fn:function(t){var e=t.state;Object.keys(e.elements).forEach((function(t){var i=e.styles[t]||{},n=e.attributes[t]||{},s=e.elements[t];ht(s)&&lt(s)&&(Object.assign(s.style,i),Object.keys(n).forEach((function(t){var e=n[t];!1===e?s.removeAttribute(t):s.setAttribute(t,!0===e?"":e)})))}))},effect:function(t){var e=t.state,i={popper:{position:e.options.strategy,left:"0",top:"0",margin:"0"},arrow:{position:"absolute"},reference:{}};return Object.assign(e.elements.popper.style,i.popper),e.styles=i,e.elements.arrow&&Object.assign(e.elements.arrow.style,i.arrow),function(){Object.keys(e.elements).forEach((function(t){var n=e.elements[t],s=e.attributes[t]||{},o=Object.keys(e.styles.hasOwnProperty(t)?e.styles[t]:i[t]).reduce((function(t,e){return t[e]="",t}),{});ht(n)&&lt(n)&&(Object.assign(n.style,o),Object.keys(s).forEach((function(t){n.removeAttribute(t)})))}))}},requires:["computeStyles"]};function pt(t){return t.split("-")[0]}function mt(t){var e=t.getBoundingClientRect();return{width:e.width,height:e.height,top:e.top,right:e.right,bottom:e.bottom,left:e.left,x:e.left,y:e.top}}function gt(t){var e=mt(t),i=t.offsetWidth,n=t.offsetHeight;return Math.abs(e.width-i)<=1&&(i=e.width),Math.abs(e.height-n)<=1&&(n=e.height),{x:t.offsetLeft,y:t.offsetTop,width:i,height:n}}function _t(t,e){var i=e.getRootNode&&e.getRootNode();if(t.contains(e))return!0;if(i&&ut(i)){var n=e;do{if(n&&t.isSameNode(n))return!0;n=n.parentNode||n.host}while(n)}return!1}function bt(t){return ct(t).getComputedStyle(t)}function vt(t){return["table","td","th"].indexOf(lt(t))>=0}function yt(t){return((dt(t)?t.ownerDocument:t.document)||window.document).documentElement}function wt(t){return"html"===lt(t)?t:t.assignedSlot||t.parentNode||(ut(t)?t.host:null)||yt(t)}function Et(t){return ht(t)&&"fixed"!==bt(t).position?t.offsetParent:null}function Tt(t){for(var e=ct(t),i=Et(t);i&&vt(i)&&"static"===bt(i).position;)i=Et(i);return i&&("html"===lt(i)||"body"===lt(i)&&"static"===bt(i).position)?e:i||function(t){var e=-1!==navigator.userAgent.toLowerCase().indexOf("firefox");if(-1!==navigator.userAgent.indexOf("Trident")&&ht(t)&&"fixed"===bt(t).position)return null;for(var i=wt(t);ht(i)&&["html","body"].indexOf(lt(i))<0;){var n=bt(i);if("none"!==n.transform||"none"!==n.perspective||"paint"===n.contain||-1!==["transform","perspective"].indexOf(n.willChange)||e&&"filter"===n.willChange||e&&n.filter&&"none"!==n.filter)return i;i=i.parentNode}return null}(t)||e}function At(t){return["top","bottom"].indexOf(t)>=0?"x":"y"}var Lt=Math.max,Ot=Math.min,kt=Math.round;function Ct(t,e,i){return Lt(t,Ot(e,i))}function xt(t){return Object.assign({},{top:0,right:0,bottom:0,left:0},t)}function Dt(t,e){return e.reduce((function(e,i){return e[i]=t,e}),{})}var Nt={name:"arrow",enabled:!0,phase:"main",fn:function(t){var e,i=t.state,n=t.name,s=t.options,o=i.elements.arrow,r=i.modifiersData.popperOffsets,a=pt(i.placement),l=At(a),c=[nt,it].indexOf(a)>=0?"height":"width";if(o&&r){var d=function(t,e){return xt("number"!=typeof(t="function"==typeof t?t(Object.assign({},e.rects,{placement:e.placement})):t)?t:Dt(t,st))}(s.padding,i),h=gt(o),u="y"===l?tt:nt,f="y"===l?et:it,p=i.rects.reference[c]+i.rects.reference[l]-r[l]-i.rects.popper[c],m=r[l]-i.rects.reference[l],g=Tt(o),_=g?"y"===l?g.clientHeight||0:g.clientWidth||0:0,b=p/2-m/2,v=d[u],y=_-h[c]-d[f],w=_/2-h[c]/2+b,E=Ct(v,w,y),T=l;i.modifiersData[n]=((e={})[T]=E,e.centerOffset=E-w,e)}},effect:function(t){var e=t.state,i=t.options.element,n=void 0===i?"[data-popper-arrow]":i;null!=n&&("string"!=typeof n||(n=e.elements.popper.querySelector(n)))&&_t(e.elements.popper,n)&&(e.elements.arrow=n)},requires:["popperOffsets"],requiresIfExists:["preventOverflow"]},St={top:"auto",right:"auto",bottom:"auto",left:"auto"};function It(t){var e,i=t.popper,n=t.popperRect,s=t.placement,o=t.offsets,r=t.position,a=t.gpuAcceleration,l=t.adaptive,c=t.roundOffsets,d=!0===c?function(t){var e=t.x,i=t.y,n=window.devicePixelRatio||1;return{x:kt(kt(e*n)/n)||0,y:kt(kt(i*n)/n)||0}}(o):"function"==typeof c?c(o):o,h=d.x,u=void 0===h?0:h,f=d.y,p=void 0===f?0:f,m=o.hasOwnProperty("x"),g=o.hasOwnProperty("y"),_=nt,b=tt,v=window;if(l){var y=Tt(i),w="clientHeight",E="clientWidth";y===ct(i)&&"static"!==bt(y=yt(i)).position&&(w="scrollHeight",E="scrollWidth"),y=y,s===tt&&(b=et,p-=y[w]-n.height,p*=a?1:-1),s===nt&&(_=it,u-=y[E]-n.width,u*=a?1:-1)}var T,A=Object.assign({position:r},l&&St);return a?Object.assign({},A,((T={})[b]=g?"0":"",T[_]=m?"0":"",T.transform=(v.devicePixelRatio||1)<2?"translate("+u+"px, "+p+"px)":"translate3d("+u+"px, "+p+"px, 0)",T)):Object.assign({},A,((e={})[b]=g?p+"px":"",e[_]=m?u+"px":"",e.transform="",e))}var jt={name:"computeStyles",enabled:!0,phase:"beforeWrite",fn:function(t){var e=t.state,i=t.options,n=i.gpuAcceleration,s=void 0===n||n,o=i.adaptive,r=void 0===o||o,a=i.roundOffsets,l=void 0===a||a,c={placement:pt(e.placement),popper:e.elements.popper,popperRect:e.rects.popper,gpuAcceleration:s};null!=e.modifiersData.popperOffsets&&(e.styles.popper=Object.assign({},e.styles.popper,It(Object.assign({},c,{offsets:e.modifiersData.popperOffsets,position:e.options.strategy,adaptive:r,roundOffsets:l})))),null!=e.modifiersData.arrow&&(e.styles.arrow=Object.assign({},e.styles.arrow,It(Object.assign({},c,{offsets:e.modifiersData.arrow,position:"absolute",adaptive:!1,roundOffsets:l})))),e.attributes.popper=Object.assign({},e.attributes.popper,{"data-popper-placement":e.placement})},data:{}},Pt={passive:!0},Mt={name:"eventListeners",enabled:!0,phase:"write",fn:function(){},effect:function(t){var e=t.state,i=t.instance,n=t.options,s=n.scroll,o=void 0===s||s,r=n.resize,a=void 0===r||r,l=ct(e.elements.popper),c=[].concat(e.scrollParents.reference,e.scrollParents.popper);return o&&c.forEach((function(t){t.addEventListener("scroll",i.update,Pt)})),a&&l.addEventListener("resize",i.update,Pt),function(){o&&c.forEach((function(t){t.removeEventListener("scroll",i.update,Pt)})),a&&l.removeEventListener("resize",i.update,Pt)}},data:{}},Ht={left:"right",right:"left",bottom:"top",top:"bottom"};function Rt(t){return t.replace(/left|right|bottom|top/g,(function(t){return Ht[t]}))}var Bt={start:"end",end:"start"};function Wt(t){return t.replace(/start|end/g,(function(t){return Bt[t]}))}function qt(t){var e=ct(t);return{scrollLeft:e.pageXOffset,scrollTop:e.pageYOffset}}function zt(t){return mt(yt(t)).left+qt(t).scrollLeft}function Ut(t){var e=bt(t),i=e.overflow,n=e.overflowX,s=e.overflowY;return/auto|scroll|overlay|hidden/.test(i+s+n)}function $t(t,e){var i;void 0===e&&(e=[]);var n=function t(e){return["html","body","#document"].indexOf(lt(e))>=0?e.ownerDocument.body:ht(e)&&Ut(e)?e:t(wt(e))}(t),s=n===(null==(i=t.ownerDocument)?void 0:i.body),o=ct(n),r=s?[o].concat(o.visualViewport||[],Ut(n)?n:[]):n,a=e.concat(r);return s?a:a.concat($t(wt(r)))}function Ft(t){return Object.assign({},t,{left:t.x,top:t.y,right:t.x+t.width,bottom:t.y+t.height})}function Vt(t,e){return"viewport"===e?Ft(function(t){var e=ct(t),i=yt(t),n=e.visualViewport,s=i.clientWidth,o=i.clientHeight,r=0,a=0;return n&&(s=n.width,o=n.height,/^((?!chrome|android).)*safari/i.test(navigator.userAgent)||(r=n.offsetLeft,a=n.offsetTop)),{width:s,height:o,x:r+zt(t),y:a}}(t)):ht(e)?function(t){var e=mt(t);return e.top=e.top+t.clientTop,e.left=e.left+t.clientLeft,e.bottom=e.top+t.clientHeight,e.right=e.left+t.clientWidth,e.width=t.clientWidth,e.height=t.clientHeight,e.x=e.left,e.y=e.top,e}(e):Ft(function(t){var e,i=yt(t),n=qt(t),s=null==(e=t.ownerDocument)?void 0:e.body,o=Lt(i.scrollWidth,i.clientWidth,s?s.scrollWidth:0,s?s.clientWidth:0),r=Lt(i.scrollHeight,i.clientHeight,s?s.scrollHeight:0,s?s.clientHeight:0),a=-n.scrollLeft+zt(t),l=-n.scrollTop;return"rtl"===bt(s||i).direction&&(a+=Lt(i.clientWidth,s?s.clientWidth:0)-o),{width:o,height:r,x:a,y:l}}(yt(t)))}function Kt(t){return t.split("-")[1]}function Xt(t){var e,i=t.reference,n=t.element,s=t.placement,o=s?pt(s):null,r=s?Kt(s):null,a=i.x+i.width/2-n.width/2,l=i.y+i.height/2-n.height/2;switch(o){case tt:e={x:a,y:i.y-n.height};break;case et:e={x:a,y:i.y+i.height};break;case it:e={x:i.x+i.width,y:l};break;case nt:e={x:i.x-n.width,y:l};break;default:e={x:i.x,y:i.y}}var c=o?At(o):null;if(null!=c){var d="y"===c?"height":"width";switch(r){case"start":e[c]=e[c]-(i[d]/2-n[d]/2);break;case"end":e[c]=e[c]+(i[d]/2-n[d]/2)}}return e}function Yt(t,e){void 0===e&&(e={});var i=e,n=i.placement,s=void 0===n?t.placement:n,o=i.boundary,r=void 0===o?"clippingParents":o,a=i.rootBoundary,l=void 0===a?"viewport":a,c=i.elementContext,d=void 0===c?"popper":c,h=i.altBoundary,u=void 0!==h&&h,f=i.padding,p=void 0===f?0:f,m=xt("number"!=typeof p?p:Dt(p,st)),g="popper"===d?"reference":"popper",_=t.elements.reference,b=t.rects.popper,v=t.elements[u?g:d],y=function(t,e,i){var n="clippingParents"===e?function(t){var e=$t(wt(t)),i=["absolute","fixed"].indexOf(bt(t).position)>=0&&ht(t)?Tt(t):t;return dt(i)?e.filter((function(t){return dt(t)&&_t(t,i)&&"body"!==lt(t)})):[]}(t):[].concat(e),s=[].concat(n,[i]),o=s[0],r=s.reduce((function(e,i){var n=Vt(t,i);return e.top=Lt(n.top,e.top),e.right=Ot(n.right,e.right),e.bottom=Ot(n.bottom,e.bottom),e.left=Lt(n.left,e.left),e}),Vt(t,o));return r.width=r.right-r.left,r.height=r.bottom-r.top,r.x=r.left,r.y=r.top,r}(dt(v)?v:v.contextElement||yt(t.elements.popper),r,l),w=mt(_),E=Xt({reference:w,element:b,strategy:"absolute",placement:s}),T=Ft(Object.assign({},b,E)),A="popper"===d?T:w,L={top:y.top-A.top+m.top,bottom:A.bottom-y.bottom+m.bottom,left:y.left-A.left+m.left,right:A.right-y.right+m.right},O=t.modifiersData.offset;if("popper"===d&&O){var k=O[s];Object.keys(L).forEach((function(t){var e=[it,et].indexOf(t)>=0?1:-1,i=[tt,et].indexOf(t)>=0?"y":"x";L[t]+=k[i]*e}))}return L}function Qt(t,e){void 0===e&&(e={});var i=e,n=i.placement,s=i.boundary,o=i.rootBoundary,r=i.padding,a=i.flipVariations,l=i.allowedAutoPlacements,c=void 0===l?rt:l,d=Kt(n),h=d?a?ot:ot.filter((function(t){return Kt(t)===d})):st,u=h.filter((function(t){return c.indexOf(t)>=0}));0===u.length&&(u=h);var f=u.reduce((function(e,i){return e[i]=Yt(t,{placement:i,boundary:s,rootBoundary:o,padding:r})[pt(i)],e}),{});return Object.keys(f).sort((function(t,e){return f[t]-f[e]}))}var Gt={name:"flip",enabled:!0,phase:"main",fn:function(t){var e=t.state,i=t.options,n=t.name;if(!e.modifiersData[n]._skip){for(var s=i.mainAxis,o=void 0===s||s,r=i.altAxis,a=void 0===r||r,l=i.fallbackPlacements,c=i.padding,d=i.boundary,h=i.rootBoundary,u=i.altBoundary,f=i.flipVariations,p=void 0===f||f,m=i.allowedAutoPlacements,g=e.options.placement,_=pt(g),b=l||(_!==g&&p?function(t){if("auto"===pt(t))return[];var e=Rt(t);return[Wt(t),e,Wt(e)]}(g):[Rt(g)]),v=[g].concat(b).reduce((function(t,i){return t.concat("auto"===pt(i)?Qt(e,{placement:i,boundary:d,rootBoundary:h,padding:c,flipVariations:p,allowedAutoPlacements:m}):i)}),[]),y=e.rects.reference,w=e.rects.popper,E=new Map,T=!0,A=v[0],L=0;L<v.length;L++){var O=v[L],k=pt(O),C="start"===Kt(O),x=[tt,et].indexOf(k)>=0,D=x?"width":"height",N=Yt(e,{placement:O,boundary:d,rootBoundary:h,altBoundary:u,padding:c}),S=x?C?it:nt:C?et:tt;y[D]>w[D]&&(S=Rt(S));var I=Rt(S),j=[];if(o&&j.push(N[k]<=0),a&&j.push(N[S]<=0,N[I]<=0),j.every((function(t){return t}))){A=O,T=!1;break}E.set(O,j)}if(T)for(var P=function(t){var e=v.find((function(e){var i=E.get(e);if(i)return i.slice(0,t).every((function(t){return t}))}));if(e)return A=e,"break"},M=p?3:1;M>0&&"break"!==P(M);M--);e.placement!==A&&(e.modifiersData[n]._skip=!0,e.placement=A,e.reset=!0)}},requiresIfExists:["offset"],data:{_skip:!1}};function Zt(t,e,i){return void 0===i&&(i={x:0,y:0}),{top:t.top-e.height-i.y,right:t.right-e.width+i.x,bottom:t.bottom-e.height+i.y,left:t.left-e.width-i.x}}function Jt(t){return[tt,it,et,nt].some((function(e){return t[e]>=0}))}var te={name:"hide",enabled:!0,phase:"main",requiresIfExists:["preventOverflow"],fn:function(t){var e=t.state,i=t.name,n=e.rects.reference,s=e.rects.popper,o=e.modifiersData.preventOverflow,r=Yt(e,{elementContext:"reference"}),a=Yt(e,{altBoundary:!0}),l=Zt(r,n),c=Zt(a,s,o),d=Jt(l),h=Jt(c);e.modifiersData[i]={referenceClippingOffsets:l,popperEscapeOffsets:c,isReferenceHidden:d,hasPopperEscaped:h},e.attributes.popper=Object.assign({},e.attributes.popper,{"data-popper-reference-hidden":d,"data-popper-escaped":h})}},ee={name:"offset",enabled:!0,phase:"main",requires:["popperOffsets"],fn:function(t){var e=t.state,i=t.options,n=t.name,s=i.offset,o=void 0===s?[0,0]:s,r=rt.reduce((function(t,i){return t[i]=function(t,e,i){var n=pt(t),s=[nt,tt].indexOf(n)>=0?-1:1,o="function"==typeof i?i(Object.assign({},e,{placement:t})):i,r=o[0],a=o[1];return r=r||0,a=(a||0)*s,[nt,it].indexOf(n)>=0?{x:a,y:r}:{x:r,y:a}}(i,e.rects,o),t}),{}),a=r[e.placement],l=a.x,c=a.y;null!=e.modifiersData.popperOffsets&&(e.modifiersData.popperOffsets.x+=l,e.modifiersData.popperOffsets.y+=c),e.modifiersData[n]=r}},ie={name:"popperOffsets",enabled:!0,phase:"read",fn:function(t){var e=t.state,i=t.name;e.modifiersData[i]=Xt({reference:e.rects.reference,element:e.rects.popper,strategy:"absolute",placement:e.placement})},data:{}},ne={name:"preventOverflow",enabled:!0,phase:"main",fn:function(t){var e=t.state,i=t.options,n=t.name,s=i.mainAxis,o=void 0===s||s,r=i.altAxis,a=void 0!==r&&r,l=i.boundary,c=i.rootBoundary,d=i.altBoundary,h=i.padding,u=i.tether,f=void 0===u||u,p=i.tetherOffset,m=void 0===p?0:p,g=Yt(e,{boundary:l,rootBoundary:c,padding:h,altBoundary:d}),_=pt(e.placement),b=Kt(e.placement),v=!b,y=At(_),w="x"===y?"y":"x",E=e.modifiersData.popperOffsets,T=e.rects.reference,A=e.rects.popper,L="function"==typeof m?m(Object.assign({},e.rects,{placement:e.placement})):m,O={x:0,y:0};if(E){if(o||a){var k="y"===y?tt:nt,C="y"===y?et:it,x="y"===y?"height":"width",D=E[y],N=E[y]+g[k],S=E[y]-g[C],I=f?-A[x]/2:0,j="start"===b?T[x]:A[x],P="start"===b?-A[x]:-T[x],M=e.elements.arrow,H=f&&M?gt(M):{width:0,height:0},R=e.modifiersData["arrow#persistent"]?e.modifiersData["arrow#persistent"].padding:{top:0,right:0,bottom:0,left:0},B=R[k],W=R[C],q=Ct(0,T[x],H[x]),z=v?T[x]/2-I-q-B-L:j-q-B-L,U=v?-T[x]/2+I+q+W+L:P+q+W+L,$=e.elements.arrow&&Tt(e.elements.arrow),F=$?"y"===y?$.clientTop||0:$.clientLeft||0:0,V=e.modifiersData.offset?e.modifiersData.offset[e.placement][y]:0,K=E[y]+z-V-F,X=E[y]+U-V;if(o){var Y=Ct(f?Ot(N,K):N,D,f?Lt(S,X):S);E[y]=Y,O[y]=Y-D}if(a){var Q="x"===y?tt:nt,G="x"===y?et:it,Z=E[w],J=Z+g[Q],st=Z-g[G],ot=Ct(f?Ot(J,K):J,Z,f?Lt(st,X):st);E[w]=ot,O[w]=ot-Z}}e.modifiersData[n]=O}},requiresIfExists:["offset"]};function se(t,e,i){void 0===i&&(i=!1);var n,s,o=yt(e),r=mt(t),a=ht(e),l={scrollLeft:0,scrollTop:0},c={x:0,y:0};return(a||!a&&!i)&&(("body"!==lt(e)||Ut(o))&&(l=(n=e)!==ct(n)&&ht(n)?{scrollLeft:(s=n).scrollLeft,scrollTop:s.scrollTop}:qt(n)),ht(e)?((c=mt(e)).x+=e.clientLeft,c.y+=e.clientTop):o&&(c.x=zt(o))),{x:r.left+l.scrollLeft-c.x,y:r.top+l.scrollTop-c.y,width:r.width,height:r.height}}var oe={placement:"bottom",modifiers:[],strategy:"absolute"};function re(){for(var t=arguments.length,e=new Array(t),i=0;i<t;i++)e[i]=arguments[i];return!e.some((function(t){return!(t&&"function"==typeof t.getBoundingClientRect)}))}function ae(t){void 0===t&&(t={});var e=t,i=e.defaultModifiers,n=void 0===i?[]:i,s=e.defaultOptions,o=void 0===s?oe:s;return function(t,e,i){void 0===i&&(i=o);var s,r,a={placement:"bottom",orderedModifiers:[],options:Object.assign({},oe,o),modifiersData:{},elements:{reference:t,popper:e},attributes:{},styles:{}},l=[],c=!1,d={state:a,setOptions:function(i){h(),a.options=Object.assign({},o,a.options,i),a.scrollParents={reference:dt(t)?$t(t):t.contextElement?$t(t.contextElement):[],popper:$t(e)};var s,r,c=function(t){var e=function(t){var e=new Map,i=new Set,n=[];return t.forEach((function(t){e.set(t.name,t)})),t.forEach((function(t){i.has(t.name)||function t(s){i.add(s.name),[].concat(s.requires||[],s.requiresIfExists||[]).forEach((function(n){if(!i.has(n)){var s=e.get(n);s&&t(s)}})),n.push(s)}(t)})),n}(t);return at.reduce((function(t,i){return t.concat(e.filter((function(t){return t.phase===i})))}),[])}((s=[].concat(n,a.options.modifiers),r=s.reduce((function(t,e){var i=t[e.name];return t[e.name]=i?Object.assign({},i,e,{options:Object.assign({},i.options,e.options),data:Object.assign({},i.data,e.data)}):e,t}),{}),Object.keys(r).map((function(t){return r[t]}))));return a.orderedModifiers=c.filter((function(t){return t.enabled})),a.orderedModifiers.forEach((function(t){var e=t.name,i=t.options,n=void 0===i?{}:i,s=t.effect;if("function"==typeof s){var o=s({state:a,name:e,instance:d,options:n});l.push(o||function(){})}})),d.update()},forceUpdate:function(){if(!c){var t=a.elements,e=t.reference,i=t.popper;if(re(e,i)){a.rects={reference:se(e,Tt(i),"fixed"===a.options.strategy),popper:gt(i)},a.reset=!1,a.placement=a.options.placement,a.orderedModifiers.forEach((function(t){return a.modifiersData[t.name]=Object.assign({},t.data)}));for(var n=0;n<a.orderedModifiers.length;n++)if(!0!==a.reset){var s=a.orderedModifiers[n],o=s.fn,r=s.options,l=void 0===r?{}:r,h=s.name;"function"==typeof o&&(a=o({state:a,options:l,name:h,instance:d})||a)}else a.reset=!1,n=-1}}},update:(s=function(){return new Promise((function(t){d.forceUpdate(),t(a)}))},function(){return r||(r=new Promise((function(t){Promise.resolve().then((function(){r=void 0,t(s())}))}))),r}),destroy:function(){h(),c=!0}};if(!re(t,e))return d;function h(){l.forEach((function(t){return t()})),l=[]}return d.setOptions(i).then((function(t){!c&&i.onFirstUpdate&&i.onFirstUpdate(t)})),d}}var le=ae(),ce=ae({defaultModifiers:[Mt,ie,jt,ft]}),de=ae({defaultModifiers:[Mt,ie,jt,ft,ee,Gt,ne,Nt,te]}),he=Object.freeze({__proto__:null,popperGenerator:ae,detectOverflow:Yt,createPopperBase:le,createPopper:de,createPopperLite:ce,top:tt,bottom:et,right:it,left:nt,auto:"auto",basePlacements:st,start:"start",end:"end",clippingParents:"clippingParents",viewport:"viewport",popper:"popper",reference:"reference",variationPlacements:ot,placements:rt,beforeRead:"beforeRead",read:"read",afterRead:"afterRead",beforeMain:"beforeMain",main:"main",afterMain:"afterMain",beforeWrite:"beforeWrite",write:"write",afterWrite:"afterWrite",modifierPhases:at,applyStyles:ft,arrow:Nt,computeStyles:jt,eventListeners:Mt,flip:Gt,hide:te,offset:ee,popperOffsets:ie,preventOverflow:ne});const ue=new RegExp("ArrowUp|ArrowDown|Escape"),fe=_()?"top-end":"top-start",pe=_()?"top-start":"top-end",me=_()?"bottom-end":"bottom-start",ge=_()?"bottom-start":"bottom-end",_e=_()?"left-start":"right-start",be=_()?"right-start":"left-start",ve={offset:[0,2],boundary:"clippingParents",reference:"toggle",display:"dynamic",popperConfig:null,autoClose:!0},ye={offset:"(array|string|function)",boundary:"(string|element)",reference:"(string|element|object)",display:"string",popperConfig:"(null|object|function)",autoClose:"(boolean|string)"};class we extends R{constructor(t,e){super(t),this._popper=null,this._config=this._getConfig(e),this._menu=this._getMenuElement(),this._inNavbar=this._detectNavbar(),this._addEventListeners()}static get Default(){return ve}static get DefaultType(){return ye}static get NAME(){return"dropdown"}toggle(){u(this._element)||(this._element.classList.contains("show")?this.hide():this.show())}show(){if(u(this._element)||this._menu.classList.contains("show"))return;const t=we.getParentFromElement(this._element),e={relatedTarget:this._element};if(!H.trigger(this._element,"show.bs.dropdown",e).defaultPrevented){if(this._inNavbar)U.setDataAttribute(this._menu,"popper","none");else{if(void 0===he)throw new TypeError("Bootstrap's dropdowns require Popper (https://popper.js.org)");let e=this._element;"parent"===this._config.reference?e=t:a(this._config.reference)?e=l(this._config.reference):"object"==typeof this._config.reference&&(e=this._config.reference);const i=this._getPopperConfig(),n=i.modifiers.find(t=>"applyStyles"===t.name&&!1===t.enabled);this._popper=de(e,this._menu,i),n&&U.setDataAttribute(this._menu,"popper","static")}"ontouchstart"in document.documentElement&&!t.closest(".navbar-nav")&&[].concat(...document.body.children).forEach(t=>H.on(t,"mouseover",p)),this._element.focus(),this._element.setAttribute("aria-expanded",!0),this._menu.classList.toggle("show"),this._element.classList.toggle("show"),H.trigger(this._element,"shown.bs.dropdown",e)}}hide(){if(u(this._element)||!this._menu.classList.contains("show"))return;const t={relatedTarget:this._element};this._completeHide(t)}dispose(){this._popper&&this._popper.destroy(),super.dispose()}update(){this._inNavbar=this._detectNavbar(),this._popper&&this._popper.update()}_addEventListeners(){H.on(this._element,"click.bs.dropdown",t=>{t.preventDefault(),this.toggle()})}_completeHide(t){H.trigger(this._element,"hide.bs.dropdown",t).defaultPrevented||("ontouchstart"in document.documentElement&&[].concat(...document.body.children).forEach(t=>H.off(t,"mouseover",p)),this._popper&&this._popper.destroy(),this._menu.classList.remove("show"),this._element.classList.remove("show"),this._element.setAttribute("aria-expanded","false"),U.removeDataAttribute(this._menu,"popper"),H.trigger(this._element,"hidden.bs.dropdown",t))}_getConfig(t){if(t={...this.constructor.Default,...U.getDataAttributes(this._element),...t},d("dropdown",t,this.constructor.DefaultType),"object"==typeof t.reference&&!a(t.reference)&&"function"!=typeof t.reference.getBoundingClientRect)throw new TypeError("dropdown".toUpperCase()+': Option "reference" provided type "object" without a required "getBoundingClientRect" method.');return t}_getMenuElement(){return t.next(this._element,".dropdown-menu")[0]}_getPlacement(){const t=this._element.parentNode;if(t.classList.contains("dropend"))return _e;if(t.classList.contains("dropstart"))return be;const e="end"===getComputedStyle(this._menu).getPropertyValue("--bs-position").trim();return t.classList.contains("dropup")?e?pe:fe:e?ge:me}_detectNavbar(){return null!==this._element.closest(".navbar")}_getOffset(){const{offset:t}=this._config;return"string"==typeof t?t.split(",").map(t=>Number.parseInt(t,10)):"function"==typeof t?e=>t(e,this._element):t}_getPopperConfig(){const t={placement:this._getPlacement(),modifiers:[{name:"preventOverflow",options:{boundary:this._config.boundary}},{name:"offset",options:{offset:this._getOffset()}}]};return"static"===this._config.display&&(t.modifiers=[{name:"applyStyles",enabled:!1}]),{...t,..."function"==typeof this._config.popperConfig?this._config.popperConfig(t):this._config.popperConfig}}_selectMenuItem(e){const i=t.find(".dropdown-menu .dropdown-item:not(.disabled):not(:disabled)",this._menu).filter(h);if(!i.length)return;let n=i.indexOf(e.target);"ArrowUp"===e.key&&n>0&&n--,"ArrowDown"===e.key&&n<i.length-1&&n++,n=-1===n?0:n,i[n].focus()}static dropdownInterface(t,e){let i=w.get(t,"bs.dropdown");if(i||(i=new we(t,"object"==typeof e?e:null)),"string"==typeof e){if(void 0===i[e])throw new TypeError(`No method named "${e}"`);i[e]()}}static jQueryInterface(t){return this.each((function(){we.dropdownInterface(this,t)}))}static clearMenus(e){if(e&&(2===e.button||"keyup"===e.type&&"Tab"!==e.key))return;const i=t.find('[data-bs-toggle="dropdown"]');for(let t=0,n=i.length;t<n;t++){const n=w.get(i[t],"bs.dropdown");if(!n||!1===n._config.autoClose)continue;if(!n._element.classList.contains("show"))continue;const s={relatedTarget:n._element};if(e){const t=e.composedPath(),i=t.includes(n._menu);if(t.includes(n._element)||"inside"===n._config.autoClose&&!i||"outside"===n._config.autoClose&&i)continue;if(n._menu.contains(e.target)&&("keyup"===e.type&&"Tab"===e.key||/input|select|option|textarea|form/i.test(e.target.tagName)))continue;"click"===e.type&&(s.clickEvent=e)}n._completeHide(s)}}static getParentFromElement(t){return s(t)||t.parentNode}static dataApiKeydownHandler(e){if(/input|textarea/i.test(e.target.tagName)?"Space"===e.key||"Escape"!==e.key&&("ArrowDown"!==e.key&&"ArrowUp"!==e.key||e.target.closest(".dropdown-menu")):!ue.test(e.key))return;const i=this.classList.contains("show");if(!i&&"Escape"===e.key)return;if(e.preventDefault(),e.stopPropagation(),u(this))return;const n=()=>this.matches('[data-bs-toggle="dropdown"]')?this:t.prev(this,'[data-bs-toggle="dropdown"]')[0];if("Escape"===e.key)return n().focus(),void we.clearMenus();i||"ArrowUp"!==e.key&&"ArrowDown"!==e.key?i&&"Space"!==e.key?we.getInstance(n())._selectMenuItem(e):we.clearMenus():n().click()}}H.on(document,"keydown.bs.dropdown.data-api",'[data-bs-toggle="dropdown"]',we.dataApiKeydownHandler),H.on(document,"keydown.bs.dropdown.data-api",".dropdown-menu",we.dataApiKeydownHandler),H.on(document,"click.bs.dropdown.data-api",we.clearMenus),H.on(document,"keyup.bs.dropdown.data-api",we.clearMenus),H.on(document,"click.bs.dropdown.data-api",'[data-bs-toggle="dropdown"]',(function(t){t.preventDefault(),we.dropdownInterface(this)})),b(we);const Ee=()=>{const t=document.documentElement.clientWidth;return Math.abs(window.innerWidth-t)},Te=(t=Ee())=>{Ae(),Le("body","paddingRight",e=>e+t),Le(".fixed-top, .fixed-bottom, .is-fixed, .sticky-top","paddingRight",e=>e+t),Le(".sticky-top","marginRight",e=>e-t)},Ae=()=>{const t=document.body.style.overflow;t&&U.setDataAttribute(document.body,"overflow",t),document.body.style.overflow="hidden"},Le=(e,i,n)=>{const s=Ee();t.find(e).forEach(t=>{if(t!==document.body&&window.innerWidth>t.clientWidth+s)return;const e=t.style[i],o=window.getComputedStyle(t)[i];U.setDataAttribute(t,i,e),t.style[i]=n(Number.parseFloat(o))+"px"})},Oe=()=>{ke("body","overflow"),ke("body","paddingRight"),ke(".fixed-top, .fixed-bottom, .is-fixed, .sticky-top","paddingRight"),ke(".sticky-top","marginRight")},ke=(e,i)=>{t.find(e).forEach(t=>{const e=U.getDataAttribute(t,i);void 0===e?t.style.removeProperty(i):(U.removeDataAttribute(t,i),t.style[i]=e)})},Ce={isVisible:!0,isAnimated:!1,rootElement:document.body,clickCallback:null},xe={isVisible:"boolean",isAnimated:"boolean",rootElement:"element",clickCallback:"(function|null)"};class De{constructor(t){this._config=this._getConfig(t),this._isAppended=!1,this._element=null}show(t){this._config.isVisible?(this._append(),this._config.isAnimated&&m(this._getElement()),this._getElement().classList.add("show"),this._emulateAnimation(()=>{v(t)})):v(t)}hide(t){this._config.isVisible?(this._getElement().classList.remove("show"),this._emulateAnimation(()=>{this.dispose(),v(t)})):v(t)}_getElement(){if(!this._element){const t=document.createElement("div");t.className="modal-backdrop",this._config.isAnimated&&t.classList.add("fade"),this._element=t}return this._element}_getConfig(t){return(t={...Ce,..."object"==typeof t?t:{}}).rootElement=t.rootElement||document.body,d("backdrop",t,xe),t}_append(){this._isAppended||(this._config.rootElement.appendChild(this._getElement()),H.on(this._getElement(),"mousedown.bs.backdrop",()=>{v(this._config.clickCallback)}),this._isAppended=!0)}dispose(){this._isAppended&&(H.off(this._element,"mousedown.bs.backdrop"),this._getElement().parentNode.removeChild(this._element),this._isAppended=!1)}_emulateAnimation(t){if(!this._config.isAnimated)return void v(t);const e=o(this._getElement());H.one(this._getElement(),"transitionend",()=>v(t)),c(this._getElement(),e)}}const Ne={backdrop:!0,keyboard:!0,focus:!0},Se={backdrop:"(boolean|string)",keyboard:"boolean",focus:"boolean"};class Ie extends R{constructor(e,i){super(e),this._config=this._getConfig(i),this._dialog=t.findOne(".modal-dialog",this._element),this._backdrop=this._initializeBackDrop(),this._isShown=!1,this._ignoreBackdropClick=!1,this._isTransitioning=!1}static get Default(){return Ne}static get NAME(){return"modal"}toggle(t){return this._isShown?this.hide():this.show(t)}show(t){if(this._isShown||this._isTransitioning)return;this._isAnimated()&&(this._isTransitioning=!0);const e=H.trigger(this._element,"show.bs.modal",{relatedTarget:t});this._isShown||e.defaultPrevented||(this._isShown=!0,Te(),document.body.classList.add("modal-open"),this._adjustDialog(),this._setEscapeEvent(),this._setResizeEvent(),H.on(this._element,"click.dismiss.bs.modal",'[data-bs-dismiss="modal"]',t=>this.hide(t)),H.on(this._dialog,"mousedown.dismiss.bs.modal",()=>{H.one(this._element,"mouseup.dismiss.bs.modal",t=>{t.target===this._element&&(this._ignoreBackdropClick=!0)})}),this._showBackdrop(()=>this._showElement(t)))}hide(t){if(t&&t.preventDefault(),!this._isShown||this._isTransitioning)return;if(H.trigger(this._element,"hide.bs.modal").defaultPrevented)return;this._isShown=!1;const e=this._isAnimated();e&&(this._isTransitioning=!0),this._setEscapeEvent(),this._setResizeEvent(),H.off(document,"focusin.bs.modal"),this._element.classList.remove("show"),H.off(this._element,"click.dismiss.bs.modal"),H.off(this._dialog,"mousedown.dismiss.bs.modal"),this._queueCallback(()=>this._hideModal(),this._element,e)}dispose(){[window,this._dialog].forEach(t=>H.off(t,".bs.modal")),this._backdrop.dispose(),super.dispose(),H.off(document,"focusin.bs.modal")}handleUpdate(){this._adjustDialog()}_initializeBackDrop(){return new De({isVisible:Boolean(this._config.backdrop),isAnimated:this._isAnimated()})}_getConfig(t){return t={...Ne,...U.getDataAttributes(this._element),...t},d("modal",t,Se),t}_showElement(e){const i=this._isAnimated(),n=t.findOne(".modal-body",this._dialog);this._element.parentNode&&this._element.parentNode.nodeType===Node.ELEMENT_NODE||document.body.appendChild(this._element),this._element.style.display="block",this._element.removeAttribute("aria-hidden"),this._element.setAttribute("aria-modal",!0),this._element.setAttribute("role","dialog"),this._element.scrollTop=0,n&&(n.scrollTop=0),i&&m(this._element),this._element.classList.add("show"),this._config.focus&&this._enforceFocus(),this._queueCallback(()=>{this._config.focus&&this._element.focus(),this._isTransitioning=!1,H.trigger(this._element,"shown.bs.modal",{relatedTarget:e})},this._dialog,i)}_enforceFocus(){H.off(document,"focusin.bs.modal"),H.on(document,"focusin.bs.modal",t=>{document===t.target||this._element===t.target||this._element.contains(t.target)||this._element.focus()})}_setEscapeEvent(){this._isShown?H.on(this._element,"keydown.dismiss.bs.modal",t=>{this._config.keyboard&&"Escape"===t.key?(t.preventDefault(),this.hide()):this._config.keyboard||"Escape"!==t.key||this._triggerBackdropTransition()}):H.off(this._element,"keydown.dismiss.bs.modal")}_setResizeEvent(){this._isShown?H.on(window,"resize.bs.modal",()=>this._adjustDialog()):H.off(window,"resize.bs.modal")}_hideModal(){this._element.style.display="none",this._element.setAttribute("aria-hidden",!0),this._element.removeAttribute("aria-modal"),this._element.removeAttribute("role"),this._isTransitioning=!1,this._backdrop.hide(()=>{document.body.classList.remove("modal-open"),this._resetAdjustments(),Oe(),H.trigger(this._element,"hidden.bs.modal")})}_showBackdrop(t){H.on(this._element,"click.dismiss.bs.modal",t=>{this._ignoreBackdropClick?this._ignoreBackdropClick=!1:t.target===t.currentTarget&&(!0===this._config.backdrop?this.hide():"static"===this._config.backdrop&&this._triggerBackdropTransition())}),this._backdrop.show(t)}_isAnimated(){return this._element.classList.contains("fade")}_triggerBackdropTransition(){if(H.trigger(this._element,"hidePrevented.bs.modal").defaultPrevented)return;const t=this._element.scrollHeight>document.documentElement.clientHeight;t||(this._element.style.overflowY="hidden"),this._element.classList.add("modal-static");const e=o(this._dialog);H.off(this._element,"transitionend"),H.one(this._element,"transitionend",()=>{this._element.classList.remove("modal-static"),t||(H.one(this._element,"transitionend",()=>{this._element.style.overflowY=""}),c(this._element,e))}),c(this._element,e),this._element.focus()}_adjustDialog(){const t=this._element.scrollHeight>document.documentElement.clientHeight,e=Ee(),i=e>0;(!i&&t&&!_()||i&&!t&&_())&&(this._element.style.paddingLeft=e+"px"),(i&&!t&&!_()||!i&&t&&_())&&(this._element.style.paddingRight=e+"px")}_resetAdjustments(){this._element.style.paddingLeft="",this._element.style.paddingRight=""}static jQueryInterface(t,e){return this.each((function(){const i=Ie.getInstance(this)||new Ie(this,"object"==typeof t?t:{});if("string"==typeof t){if(void 0===i[t])throw new TypeError(`No method named "${t}"`);i[t](e)}}))}}H.on(document,"click.bs.modal.data-api",'[data-bs-toggle="modal"]',(function(t){const e=s(this);["A","AREA"].includes(this.tagName)&&t.preventDefault(),H.one(e,"show.bs.modal",t=>{t.defaultPrevented||H.one(e,"hidden.bs.modal",()=>{h(this)&&this.focus()})}),(Ie.getInstance(e)||new Ie(e)).toggle(this)})),b(Ie);const je={backdrop:!0,keyboard:!0,scroll:!1},Pe={backdrop:"boolean",keyboard:"boolean",scroll:"boolean"};class Me extends R{constructor(t,e){super(t),this._config=this._getConfig(e),this._isShown=!1,this._backdrop=this._initializeBackDrop(),this._addEventListeners()}static get NAME(){return"offcanvas"}static get Default(){return je}toggle(t){return this._isShown?this.hide():this.show(t)}show(t){this._isShown||H.trigger(this._element,"show.bs.offcanvas",{relatedTarget:t}).defaultPrevented||(this._isShown=!0,this._element.style.visibility="visible",this._backdrop.show(),this._config.scroll||(Te(),this._enforceFocusOnElement(this._element)),this._element.removeAttribute("aria-hidden"),this._element.setAttribute("aria-modal",!0),this._element.setAttribute("role","dialog"),this._element.classList.add("show"),this._queueCallback(()=>{H.trigger(this._element,"shown.bs.offcanvas",{relatedTarget:t})},this._element,!0))}hide(){this._isShown&&(H.trigger(this._element,"hide.bs.offcanvas").defaultPrevented||(H.off(document,"focusin.bs.offcanvas"),this._element.blur(),this._isShown=!1,this._element.classList.remove("show"),this._backdrop.hide(),this._queueCallback(()=>{this._element.setAttribute("aria-hidden",!0),this._element.removeAttribute("aria-modal"),this._element.removeAttribute("role"),this._element.style.visibility="hidden",this._config.scroll||Oe(),H.trigger(this._element,"hidden.bs.offcanvas")},this._element,!0)))}dispose(){this._backdrop.dispose(),super.dispose(),H.off(document,"focusin.bs.offcanvas")}_getConfig(t){return t={...je,...U.getDataAttributes(this._element),..."object"==typeof t?t:{}},d("offcanvas",t,Pe),t}_initializeBackDrop(){return new De({isVisible:this._config.backdrop,isAnimated:!0,rootElement:this._element.parentNode,clickCallback:()=>this.hide()})}_enforceFocusOnElement(t){H.off(document,"focusin.bs.offcanvas"),H.on(document,"focusin.bs.offcanvas",e=>{document===e.target||t===e.target||t.contains(e.target)||t.focus()}),t.focus()}_addEventListeners(){H.on(this._element,"click.dismiss.bs.offcanvas",'[data-bs-dismiss="offcanvas"]',()=>this.hide()),H.on(this._element,"keydown.dismiss.bs.offcanvas",t=>{this._config.keyboard&&"Escape"===t.key&&this.hide()})}static jQueryInterface(t){return this.each((function(){const e=w.get(this,"bs.offcanvas")||new Me(this,"object"==typeof t?t:{});if("string"==typeof t){if(void 0===e[t]||t.startsWith("_")||"constructor"===t)throw new TypeError(`No method named "${t}"`);e[t](this)}}))}}H.on(document,"click.bs.offcanvas.data-api",'[data-bs-toggle="offcanvas"]',(function(e){const i=s(this);if(["A","AREA"].includes(this.tagName)&&e.preventDefault(),u(this))return;H.one(i,"hidden.bs.offcanvas",()=>{h(this)&&this.focus()});const n=t.findOne(".offcanvas.show");n&&n!==i&&Me.getInstance(n).hide(),(w.get(i,"bs.offcanvas")||new Me(i)).toggle(this)})),H.on(window,"load.bs.offcanvas.data-api",()=>{t.find(".offcanvas.show").forEach(t=>(w.get(t,"bs.offcanvas")||new Me(t)).show())}),b(Me);const He=new Set(["background","cite","href","itemtype","longdesc","poster","src","xlink:href"]),Re=/^(?:(?:https?|mailto|ftp|tel|file):|[^#&/:?]*(?:[#/?]|$))/i,Be=/^data:(?:image\/(?:bmp|gif|jpeg|jpg|png|tiff|webp)|video\/(?:mpeg|mp4|ogg|webm)|audio\/(?:mp3|oga|ogg|opus));base64,[\d+/a-z]+=*$/i,We=(t,e)=>{const i=t.nodeName.toLowerCase();if(e.includes(i))return!He.has(i)||Boolean(Re.test(t.nodeValue)||Be.test(t.nodeValue));const n=e.filter(t=>t instanceof RegExp);for(let t=0,e=n.length;t<e;t++)if(n[t].test(i))return!0;return!1};function qe(t,e,i){if(!t.length)return t;if(i&&"function"==typeof i)return i(t);const n=(new window.DOMParser).parseFromString(t,"text/html"),s=Object.keys(e),o=[].concat(...n.body.querySelectorAll("*"));for(let t=0,i=o.length;t<i;t++){const i=o[t],n=i.nodeName.toLowerCase();if(!s.includes(n)){i.parentNode.removeChild(i);continue}const r=[].concat(...i.attributes),a=[].concat(e["*"]||[],e[n]||[]);r.forEach(t=>{We(t,a)||i.removeAttribute(t.nodeName)})}return n.body.innerHTML}const ze=new RegExp("(^|\\s)bs-tooltip\\S+","g"),Ue=new Set(["sanitize","allowList","sanitizeFn"]),$e={animation:"boolean",template:"string",title:"(string|element|function)",trigger:"string",delay:"(number|object)",html:"boolean",selector:"(string|boolean)",placement:"(string|function)",offset:"(array|string|function)",container:"(string|element|boolean)",fallbackPlacements:"array",boundary:"(string|element)",customClass:"(string|function)",sanitize:"boolean",sanitizeFn:"(null|function)",allowList:"object",popperConfig:"(null|object|function)"},Fe={AUTO:"auto",TOP:"top",RIGHT:_()?"left":"right",BOTTOM:"bottom",LEFT:_()?"right":"left"},Ve={animation:!0,template:'<div class="tooltip" role="tooltip"><div class="tooltip-arrow"></div><div class="tooltip-inner"></div></div>',trigger:"hover focus",title:"",delay:0,html:!1,selector:!1,placement:"top",offset:[0,0],container:!1,fallbackPlacements:["top","right","bottom","left"],boundary:"clippingParents",customClass:"",sanitize:!0,sanitizeFn:null,allowList:{"*":["class","dir","id","lang","role",/^aria-[\w-]*$/i],a:["target","href","title","rel"],area:[],b:[],br:[],col:[],code:[],div:[],em:[],hr:[],h1:[],h2:[],h3:[],h4:[],h5:[],h6:[],i:[],img:["src","srcset","alt","title","width","height"],li:[],ol:[],p:[],pre:[],s:[],small:[],span:[],sub:[],sup:[],strong:[],u:[],ul:[]},popperConfig:null},Ke={HIDE:"hide.bs.tooltip",HIDDEN:"hidden.bs.tooltip",SHOW:"show.bs.tooltip",SHOWN:"shown.bs.tooltip",INSERTED:"inserted.bs.tooltip",CLICK:"click.bs.tooltip",FOCUSIN:"focusin.bs.tooltip",FOCUSOUT:"focusout.bs.tooltip",MOUSEENTER:"mouseenter.bs.tooltip",MOUSELEAVE:"mouseleave.bs.tooltip"};class Xe extends R{constructor(t,e){if(void 0===he)throw new TypeError("Bootstrap's tooltips require Popper (https://popper.js.org)");super(t),this._isEnabled=!0,this._timeout=0,this._hoverState="",this._activeTrigger={},this._popper=null,this._config=this._getConfig(e),this.tip=null,this._setListeners()}static get Default(){return Ve}static get NAME(){return"tooltip"}static get Event(){return Ke}static get DefaultType(){return $e}enable(){this._isEnabled=!0}disable(){this._isEnabled=!1}toggleEnabled(){this._isEnabled=!this._isEnabled}toggle(t){if(this._isEnabled)if(t){const e=this._initializeOnDelegatedTarget(t);e._activeTrigger.click=!e._activeTrigger.click,e._isWithActiveTrigger()?e._enter(null,e):e._leave(null,e)}else{if(this.getTipElement().classList.contains("show"))return void this._leave(null,this);this._enter(null,this)}}dispose(){clearTimeout(this._timeout),H.off(this._element.closest(".modal"),"hide.bs.modal",this._hideModalHandler),this.tip&&this.tip.parentNode&&this.tip.parentNode.removeChild(this.tip),this._popper&&this._popper.destroy(),super.dispose()}show(){if("none"===this._element.style.display)throw new Error("Please use show on visible elements");if(!this.isWithContent()||!this._isEnabled)return;const t=H.trigger(this._element,this.constructor.Event.SHOW),i=f(this._element),n=null===i?this._element.ownerDocument.documentElement.contains(this._element):i.contains(this._element);if(t.defaultPrevented||!n)return;const s=this.getTipElement(),o=e(this.constructor.NAME);s.setAttribute("id",o),this._element.setAttribute("aria-describedby",o),this.setContent(),this._config.animation&&s.classList.add("fade");const r="function"==typeof this._config.placement?this._config.placement.call(this,s,this._element):this._config.placement,a=this._getAttachment(r);this._addAttachmentClass(a);const{container:l}=this._config;w.set(s,this.constructor.DATA_KEY,this),this._element.ownerDocument.documentElement.contains(this.tip)||(l.appendChild(s),H.trigger(this._element,this.constructor.Event.INSERTED)),this._popper?this._popper.update():this._popper=de(this._element,s,this._getPopperConfig(a)),s.classList.add("show");const c="function"==typeof this._config.customClass?this._config.customClass():this._config.customClass;c&&s.classList.add(...c.split(" ")),"ontouchstart"in document.documentElement&&[].concat(...document.body.children).forEach(t=>{H.on(t,"mouseover",p)});const d=this.tip.classList.contains("fade");this._queueCallback(()=>{const t=this._hoverState;this._hoverState=null,H.trigger(this._element,this.constructor.Event.SHOWN),"out"===t&&this._leave(null,this)},this.tip,d)}hide(){if(!this._popper)return;const t=this.getTipElement();if(H.trigger(this._element,this.constructor.Event.HIDE).defaultPrevented)return;t.classList.remove("show"),"ontouchstart"in document.documentElement&&[].concat(...document.body.children).forEach(t=>H.off(t,"mouseover",p)),this._activeTrigger.click=!1,this._activeTrigger.focus=!1,this._activeTrigger.hover=!1;const e=this.tip.classList.contains("fade");this._queueCallback(()=>{this._isWithActiveTrigger()||("show"!==this._hoverState&&t.parentNode&&t.parentNode.removeChild(t),this._cleanTipClass(),this._element.removeAttribute("aria-describedby"),H.trigger(this._element,this.constructor.Event.HIDDEN),this._popper&&(this._popper.destroy(),this._popper=null))},this.tip,e),this._hoverState=""}update(){null!==this._popper&&this._popper.update()}isWithContent(){return Boolean(this.getTitle())}getTipElement(){if(this.tip)return this.tip;const t=document.createElement("div");return t.innerHTML=this._config.template,this.tip=t.children[0],this.tip}setContent(){const e=this.getTipElement();this.setElementContent(t.findOne(".tooltip-inner",e),this.getTitle()),e.classList.remove("fade","show")}setElementContent(t,e){if(null!==t)return a(e)?(e=l(e),void(this._config.html?e.parentNode!==t&&(t.innerHTML="",t.appendChild(e)):t.textContent=e.textContent)):void(this._config.html?(this._config.sanitize&&(e=qe(e,this._config.allowList,this._config.sanitizeFn)),t.innerHTML=e):t.textContent=e)}getTitle(){let t=this._element.getAttribute("data-bs-original-title");return t||(t="function"==typeof this._config.title?this._config.title.call(this._element):this._config.title),t}updateAttachment(t){return"right"===t?"end":"left"===t?"start":t}_initializeOnDelegatedTarget(t,e){const i=this.constructor.DATA_KEY;return(e=e||w.get(t.delegateTarget,i))||(e=new this.constructor(t.delegateTarget,this._getDelegateConfig()),w.set(t.delegateTarget,i,e)),e}_getOffset(){const{offset:t}=this._config;return"string"==typeof t?t.split(",").map(t=>Number.parseInt(t,10)):"function"==typeof t?e=>t(e,this._element):t}_getPopperConfig(t){const e={placement:t,modifiers:[{name:"flip",options:{fallbackPlacements:this._config.fallbackPlacements}},{name:"offset",options:{offset:this._getOffset()}},{name:"preventOverflow",options:{boundary:this._config.boundary}},{name:"arrow",options:{element:`.${this.constructor.NAME}-arrow`}},{name:"onChange",enabled:!0,phase:"afterWrite",fn:t=>this._handlePopperPlacementChange(t)}],onFirstUpdate:t=>{t.options.placement!==t.placement&&this._handlePopperPlacementChange(t)}};return{...e,..."function"==typeof this._config.popperConfig?this._config.popperConfig(e):this._config.popperConfig}}_addAttachmentClass(t){this.getTipElement().classList.add("bs-tooltip-"+this.updateAttachment(t))}_getAttachment(t){return Fe[t.toUpperCase()]}_setListeners(){this._config.trigger.split(" ").forEach(t=>{if("click"===t)H.on(this._element,this.constructor.Event.CLICK,this._config.selector,t=>this.toggle(t));else if("manual"!==t){const e="hover"===t?this.constructor.Event.MOUSEENTER:this.constructor.Event.FOCUSIN,i="hover"===t?this.constructor.Event.MOUSELEAVE:this.constructor.Event.FOCUSOUT;H.on(this._element,e,this._config.selector,t=>this._enter(t)),H.on(this._element,i,this._config.selector,t=>this._leave(t))}}),this._hideModalHandler=()=>{this._element&&this.hide()},H.on(this._element.closest(".modal"),"hide.bs.modal",this._hideModalHandler),this._config.selector?this._config={...this._config,trigger:"manual",selector:""}:this._fixTitle()}_fixTitle(){const t=this._element.getAttribute("title"),e=typeof this._element.getAttribute("data-bs-original-title");(t||"string"!==e)&&(this._element.setAttribute("data-bs-original-title",t||""),!t||this._element.getAttribute("aria-label")||this._element.textContent||this._element.setAttribute("aria-label",t),this._element.setAttribute("title",""))}_enter(t,e){e=this._initializeOnDelegatedTarget(t,e),t&&(e._activeTrigger["focusin"===t.type?"focus":"hover"]=!0),e.getTipElement().classList.contains("show")||"show"===e._hoverState?e._hoverState="show":(clearTimeout(e._timeout),e._hoverState="show",e._config.delay&&e._config.delay.show?e._timeout=setTimeout(()=>{"show"===e._hoverState&&e.show()},e._config.delay.show):e.show())}_leave(t,e){e=this._initializeOnDelegatedTarget(t,e),t&&(e._activeTrigger["focusout"===t.type?"focus":"hover"]=e._element.contains(t.relatedTarget)),e._isWithActiveTrigger()||(clearTimeout(e._timeout),e._hoverState="out",e._config.delay&&e._config.delay.hide?e._timeout=setTimeout(()=>{"out"===e._hoverState&&e.hide()},e._config.delay.hide):e.hide())}_isWithActiveTrigger(){for(const t in this._activeTrigger)if(this._activeTrigger[t])return!0;return!1}_getConfig(t){const e=U.getDataAttributes(this._element);return Object.keys(e).forEach(t=>{Ue.has(t)&&delete e[t]}),(t={...this.constructor.Default,...e,..."object"==typeof t&&t?t:{}}).container=!1===t.container?document.body:l(t.container),"number"==typeof t.delay&&(t.delay={show:t.delay,hide:t.delay}),"number"==typeof t.title&&(t.title=t.title.toString()),"number"==typeof t.content&&(t.content=t.content.toString()),d("tooltip",t,this.constructor.DefaultType),t.sanitize&&(t.template=qe(t.template,t.allowList,t.sanitizeFn)),t}_getDelegateConfig(){const t={};if(this._config)for(const e in this._config)this.constructor.Default[e]!==this._config[e]&&(t[e]=this._config[e]);return t}_cleanTipClass(){const t=this.getTipElement(),e=t.getAttribute("class").match(ze);null!==e&&e.length>0&&e.map(t=>t.trim()).forEach(e=>t.classList.remove(e))}_handlePopperPlacementChange(t){const{state:e}=t;e&&(this.tip=e.elements.popper,this._cleanTipClass(),this._addAttachmentClass(this._getAttachment(e.placement)))}static jQueryInterface(t){return this.each((function(){let e=w.get(this,"bs.tooltip");const i="object"==typeof t&&t;if((e||!/dispose|hide/.test(t))&&(e||(e=new Xe(this,i)),"string"==typeof t)){if(void 0===e[t])throw new TypeError(`No method named "${t}"`);e[t]()}}))}}b(Xe);const Ye=new RegExp("(^|\\s)bs-popover\\S+","g"),Qe={...Xe.Default,placement:"right",offset:[0,8],trigger:"click",content:"",template:'<div class="popover" role="tooltip"><div class="popover-arrow"></div><h3 class="popover-header"></h3><div class="popover-body"></div></div>'},Ge={...Xe.DefaultType,content:"(string|element|function)"},Ze={HIDE:"hide.bs.popover",HIDDEN:"hidden.bs.popover",SHOW:"show.bs.popover",SHOWN:"shown.bs.popover",INSERTED:"inserted.bs.popover",CLICK:"click.bs.popover",FOCUSIN:"focusin.bs.popover",FOCUSOUT:"focusout.bs.popover",MOUSEENTER:"mouseenter.bs.popover",MOUSELEAVE:"mouseleave.bs.popover"};class Je extends Xe{static get Default(){return Qe}static get NAME(){return"popover"}static get Event(){return Ze}static get DefaultType(){return Ge}isWithContent(){return this.getTitle()||this._getContent()}setContent(){const e=this.getTipElement();this.setElementContent(t.findOne(".popover-header",e),this.getTitle());let i=this._getContent();"function"==typeof i&&(i=i.call(this._element)),this.setElementContent(t.findOne(".popover-body",e),i),e.classList.remove("fade","show")}_addAttachmentClass(t){this.getTipElement().classList.add("bs-popover-"+this.updateAttachment(t))}_getContent(){return this._element.getAttribute("data-bs-content")||this._config.content}_cleanTipClass(){const t=this.getTipElement(),e=t.getAttribute("class").match(Ye);null!==e&&e.length>0&&e.map(t=>t.trim()).forEach(e=>t.classList.remove(e))}static jQueryInterface(t){return this.each((function(){let e=w.get(this,"bs.popover");const i="object"==typeof t?t:null;if((e||!/dispose|hide/.test(t))&&(e||(e=new Je(this,i),w.set(this,"bs.popover",e)),"string"==typeof t)){if(void 0===e[t])throw new TypeError(`No method named "${t}"`);e[t]()}}))}}b(Je);const ti={offset:10,method:"auto",target:""},ei={offset:"number",method:"string",target:"(string|element)"};class ii extends R{constructor(t,e){super(t),this._scrollElement="BODY"===this._element.tagName?window:this._element,this._config=this._getConfig(e),this._selector=`${this._config.target} .nav-link, ${this._config.target} .list-group-item, ${this._config.target} .dropdown-item`,this._offsets=[],this._targets=[],this._activeTarget=null,this._scrollHeight=0,H.on(this._scrollElement,"scroll.bs.scrollspy",()=>this._process()),this.refresh(),this._process()}static get Default(){return ti}static get NAME(){return"scrollspy"}refresh(){const e=this._scrollElement===this._scrollElement.window?"offset":"position",i="auto"===this._config.method?e:this._config.method,s="position"===i?this._getScrollTop():0;this._offsets=[],this._targets=[],this._scrollHeight=this._getScrollHeight(),t.find(this._selector).map(e=>{const o=n(e),r=o?t.findOne(o):null;if(r){const t=r.getBoundingClientRect();if(t.width||t.height)return[U[i](r).top+s,o]}return null}).filter(t=>t).sort((t,e)=>t[0]-e[0]).forEach(t=>{this._offsets.push(t[0]),this._targets.push(t[1])})}dispose(){H.off(this._scrollElement,".bs.scrollspy"),super.dispose()}_getConfig(t){if("string"!=typeof(t={...ti,...U.getDataAttributes(this._element),..."object"==typeof t&&t?t:{}}).target&&a(t.target)){let{id:i}=t.target;i||(i=e("scrollspy"),t.target.id=i),t.target="#"+i}return d("scrollspy",t,ei),t}_getScrollTop(){return this._scrollElement===window?this._scrollElement.pageYOffset:this._scrollElement.scrollTop}_getScrollHeight(){return this._scrollElement.scrollHeight||Math.max(document.body.scrollHeight,document.documentElement.scrollHeight)}_getOffsetHeight(){return this._scrollElement===window?window.innerHeight:this._scrollElement.getBoundingClientRect().height}_process(){const t=this._getScrollTop()+this._config.offset,e=this._getScrollHeight(),i=this._config.offset+e-this._getOffsetHeight();if(this._scrollHeight!==e&&this.refresh(),t>=i){const t=this._targets[this._targets.length-1];this._activeTarget!==t&&this._activate(t)}else{if(this._activeTarget&&t<this._offsets[0]&&this._offsets[0]>0)return this._activeTarget=null,void this._clear();for(let e=this._offsets.length;e--;)this._activeTarget!==this._targets[e]&&t>=this._offsets[e]&&(void 0===this._offsets[e+1]||t<this._offsets[e+1])&&this._activate(this._targets[e])}}_activate(e){this._activeTarget=e,this._clear();const i=this._selector.split(",").map(t=>`${t}[data-bs-target="${e}"],${t}[href="${e}"]`),n=t.findOne(i.join(","));n.classList.contains("dropdown-item")?(t.findOne(".dropdown-toggle",n.closest(".dropdown")).classList.add("active"),n.classList.add("active")):(n.classList.add("active"),t.parents(n,".nav, .list-group").forEach(e=>{t.prev(e,".nav-link, .list-group-item").forEach(t=>t.classList.add("active")),t.prev(e,".nav-item").forEach(e=>{t.children(e,".nav-link").forEach(t=>t.classList.add("active"))})})),H.trigger(this._scrollElement,"activate.bs.scrollspy",{relatedTarget:e})}_clear(){t.find(this._selector).filter(t=>t.classList.contains("active")).forEach(t=>t.classList.remove("active"))}static jQueryInterface(t){return this.each((function(){const e=ii.getInstance(this)||new ii(this,"object"==typeof t?t:{});if("string"==typeof t){if(void 0===e[t])throw new TypeError(`No method named "${t}"`);e[t]()}}))}}H.on(window,"load.bs.scrollspy.data-api",()=>{t.find('[data-bs-spy="scroll"]').forEach(t=>new ii(t))}),b(ii);class ni extends R{static get NAME(){return"tab"}show(){if(this._element.parentNode&&this._element.parentNode.nodeType===Node.ELEMENT_NODE&&this._element.classList.contains("active"))return;let e;const i=s(this._element),n=this._element.closest(".nav, .list-group");if(n){const i="UL"===n.nodeName||"OL"===n.nodeName?":scope > li > .active":".active";e=t.find(i,n),e=e[e.length-1]}const o=e?H.trigger(e,"hide.bs.tab",{relatedTarget:this._element}):null;if(H.trigger(this._element,"show.bs.tab",{relatedTarget:e}).defaultPrevented||null!==o&&o.defaultPrevented)return;this._activate(this._element,n);const r=()=>{H.trigger(e,"hidden.bs.tab",{relatedTarget:this._element}),H.trigger(this._element,"shown.bs.tab",{relatedTarget:e})};i?this._activate(i,i.parentNode,r):r()}_activate(e,i,n){const s=(!i||"UL"!==i.nodeName&&"OL"!==i.nodeName?t.children(i,".active"):t.find(":scope > li > .active",i))[0],o=n&&s&&s.classList.contains("fade"),r=()=>this._transitionComplete(e,s,n);s&&o?(s.classList.remove("show"),this._queueCallback(r,e,!0)):r()}_transitionComplete(e,i,n){if(i){i.classList.remove("active");const e=t.findOne(":scope > .dropdown-menu .active",i.parentNode);e&&e.classList.remove("active"),"tab"===i.getAttribute("role")&&i.setAttribute("aria-selected",!1)}e.classList.add("active"),"tab"===e.getAttribute("role")&&e.setAttribute("aria-selected",!0),m(e),e.classList.contains("fade")&&e.classList.add("show");let s=e.parentNode;if(s&&"LI"===s.nodeName&&(s=s.parentNode),s&&s.classList.contains("dropdown-menu")){const i=e.closest(".dropdown");i&&t.find(".dropdown-toggle",i).forEach(t=>t.classList.add("active")),e.setAttribute("aria-expanded",!0)}n&&n()}static jQueryInterface(t){return this.each((function(){const e=w.get(this,"bs.tab")||new ni(this);if("string"==typeof t){if(void 0===e[t])throw new TypeError(`No method named "${t}"`);e[t]()}}))}}H.on(document,"click.bs.tab.data-api",'[data-bs-toggle="tab"], [data-bs-toggle="pill"], [data-bs-toggle="list"]',(function(t){["A","AREA"].includes(this.tagName)&&t.preventDefault(),u(this)||(w.get(this,"bs.tab")||new ni(this)).show()})),b(ni);const si={animation:"boolean",autohide:"boolean",delay:"number"},oi={animation:!0,autohide:!0,delay:5e3};class ri extends R{constructor(t,e){super(t),this._config=this._getConfig(e),this._timeout=null,this._hasMouseInteraction=!1,this._hasKeyboardInteraction=!1,this._setListeners()}static get DefaultType(){return si}static get Default(){return oi}static get NAME(){return"toast"}show(){H.trigger(this._element,"show.bs.toast").defaultPrevented||(this._clearTimeout(),this._config.animation&&this._element.classList.add("fade"),this._element.classList.remove("hide"),m(this._element),this._element.classList.add("showing"),this._queueCallback(()=>{this._element.classList.remove("showing"),this._element.classList.add("show"),H.trigger(this._element,"shown.bs.toast"),this._maybeScheduleHide()},this._element,this._config.animation))}hide(){this._element.classList.contains("show")&&(H.trigger(this._element,"hide.bs.toast").defaultPrevented||(this._element.classList.remove("show"),this._queueCallback(()=>{this._element.classList.add("hide"),H.trigger(this._element,"hidden.bs.toast")},this._element,this._config.animation)))}dispose(){this._clearTimeout(),this._element.classList.contains("show")&&this._element.classList.remove("show"),super.dispose()}_getConfig(t){return t={...oi,...U.getDataAttributes(this._element),..."object"==typeof t&&t?t:{}},d("toast",t,this.constructor.DefaultType),t}_maybeScheduleHide(){this._config.autohide&&(this._hasMouseInteraction||this._hasKeyboardInteraction||(this._timeout=setTimeout(()=>{this.hide()},this._config.delay)))}_onInteraction(t,e){switch(t.type){case"mouseover":case"mouseout":this._hasMouseInteraction=e;break;case"focusin":case"focusout":this._hasKeyboardInteraction=e}if(e)return void this._clearTimeout();const i=t.relatedTarget;this._element===i||this._element.contains(i)||this._maybeScheduleHide()}_setListeners(){H.on(this._element,"click.dismiss.bs.toast",'[data-bs-dismiss="toast"]',()=>this.hide()),H.on(this._element,"mouseover.bs.toast",t=>this._onInteraction(t,!0)),H.on(this._element,"mouseout.bs.toast",t=>this._onInteraction(t,!1)),H.on(this._element,"focusin.bs.toast",t=>this._onInteraction(t,!0)),H.on(this._element,"focusout.bs.toast",t=>this._onInteraction(t,!1))}_clearTimeout(){clearTimeout(this._timeout),this._timeout=null}static jQueryInterface(t){return this.each((function(){let e=w.get(this,"bs.toast");if(e||(e=new ri(this,"object"==typeof t&&t)),"string"==typeof t){if(void 0===e[t])throw new TypeError(`No method named "${t}"`);e[t](this)}}))}}return b(ri),{Alert:B,Button:W,Carousel:Q,Collapse:J,Dropdown:we,Modal:Ie,Offcanvas:Me,Popover:Je,ScrollSpy:ii,Tab:ni,Toast:ri,Tooltip:Xe}}));
//# sourceMappingURL=bootstrap.bundle.min.js.map
/*!
* metismenu https://github.com/onokumus/metismenu#readme
* A collapsible jQuery menu plugin
* @version 3.0.7
* @author Osman Nuri Okumus <onokumus@gmail.com> (https://github.com/onokumus)
* @license: MIT
*/

!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?module.exports=t(require("jquery")):"function"==typeof define&&define.amd?define(["jquery"],t):(e="undefined"!=typeof globalThis?globalThis:e||self).metisMenu=t(e.$)}(this,(function(e){"use strict";function t(e){return e&&"object"==typeof e&&"default"in e?e:{default:e}}var n=t(e);const i=(e=>{const t="transitionend",n={TRANSITION_END:"mmTransitionEnd",triggerTransitionEnd(n){e(n).trigger(t)},supportsTransitionEnd:()=>Boolean(t)};function i(t){let i=!1;return e(this).one(n.TRANSITION_END,(()=>{i=!0})),setTimeout((()=>{i||n.triggerTransitionEnd(this)}),t),this}return e.fn.mmEmulateTransitionEnd=i,e.event.special[n.TRANSITION_END]={bindType:t,delegateType:t,handle(t){if(e(t.target).is(this))return t.handleObj.handler.apply(this,arguments)}},n})(n.default),s="metisMenu",r="metisMenu",a=n.default.fn[s],o={toggle:!0,preventDefault:!0,triggerElement:"a",parentTrigger:"li",subMenu:"ul"},l={SHOW:"show.metisMenu",SHOWN:"shown.metisMenu",HIDE:"hide.metisMenu",HIDDEN:"hidden.metisMenu",CLICK_DATA_API:"click.metisMenu.data-api"},d="metismenu",g="mm-active",h="mm-show",u="mm-collapse",f="mm-collapsing";class c{constructor(e,t){this.element=e,this.config={...o,...t},this.transitioning=null,this.init()}init(){const e=this,t=this.config,i=n.default(this.element);i.addClass(d),i.find(`${t.parentTrigger}.${g}`).children(t.triggerElement).attr("aria-expanded","true"),i.find(`${t.parentTrigger}.${g}`).parents(t.parentTrigger).addClass(g),i.find(`${t.parentTrigger}.${g}`).parents(t.parentTrigger).children(t.triggerElement).attr("aria-expanded","true"),i.find(`${t.parentTrigger}.${g}`).has(t.subMenu).children(t.subMenu).addClass(`${u} ${h}`),i.find(t.parentTrigger).not(`.${g}`).has(t.subMenu).children(t.subMenu).addClass(u),i.find(t.parentTrigger).children(t.triggerElement).on(l.CLICK_DATA_API,(function(i){const s=n.default(this);if("true"===s.attr("aria-disabled"))return;t.preventDefault&&"#"===s.attr("href")&&i.preventDefault();const r=s.parent(t.parentTrigger),a=r.siblings(t.parentTrigger),o=a.children(t.triggerElement);r.hasClass(g)?(s.attr("aria-expanded","false"),e.removeActive(r)):(s.attr("aria-expanded","true"),e.setActive(r),t.toggle&&(e.removeActive(a),o.attr("aria-expanded","false"))),t.onTransitionStart&&t.onTransitionStart(i)}))}setActive(e){n.default(e).addClass(g);const t=n.default(e).children(this.config.subMenu);t.length>0&&!t.hasClass(h)&&this.show(t)}removeActive(e){n.default(e).removeClass(g);const t=n.default(e).children(`${this.config.subMenu}.${h}`);t.length>0&&this.hide(t)}show(e){if(this.transitioning||n.default(e).hasClass(f))return;const t=n.default(e),s=n.default.Event(l.SHOW);if(t.trigger(s),s.isDefaultPrevented())return;if(t.parent(this.config.parentTrigger).addClass(g),this.config.toggle){const e=t.parent(this.config.parentTrigger).siblings().children(`${this.config.subMenu}.${h}`);this.hide(e)}t.removeClass(u).addClass(f).height(0),this.setTransitioning(!0);t.height(e[0].scrollHeight).one(i.TRANSITION_END,(()=>{this.config&&this.element&&(t.removeClass(f).addClass(`${u} ${h}`).height(""),this.setTransitioning(!1),t.trigger(l.SHOWN))})).mmEmulateTransitionEnd(350)}hide(e){if(this.transitioning||!n.default(e).hasClass(h))return;const t=n.default(e),s=n.default.Event(l.HIDE);if(t.trigger(s),s.isDefaultPrevented())return;t.parent(this.config.parentTrigger).removeClass(g),t.height(t.height())[0].offsetHeight,t.addClass(f).removeClass(u).removeClass(h),this.setTransitioning(!0);const r=()=>{this.config&&this.element&&(this.transitioning&&this.config.onTransitionEnd&&this.config.onTransitionEnd(),this.setTransitioning(!1),t.trigger(l.HIDDEN),t.removeClass(f).addClass(u))};0===t.height()||"none"===t.css("display")?r():t.height(0).one(i.TRANSITION_END,r).mmEmulateTransitionEnd(350)}setTransitioning(e){this.transitioning=e}dispose(){n.default.removeData(this.element,r),n.default(this.element).find(this.config.parentTrigger).children(this.config.triggerElement).off(l.CLICK_DATA_API),this.transitioning=null,this.config=null,this.element=null}static jQueryInterface(e){return this.each((function(){const t=n.default(this);let i=t.data(r);const s={...o,...t.data(),..."object"==typeof e&&e?e:{}};if(i||(i=new c(this,s),t.data(r,i)),"string"==typeof e){if(void 0===i[e])throw new Error(`No method named "${e}"`);i[e]()}}))}}return n.default.fn[s]=c.jQueryInterface,n.default.fn[s].Constructor=c,n.default.fn[s].noConflict=()=>(n.default.fn[s]=a,c.jQueryInterface),c}));
//# sourceMappingURL=metisMenu.min.js.map

/**
 * SimpleBar.js - v4.2.3
 * Scrollbars, simpler.
 * https://grsmto.github.io/simplebar/
 *
 * Made by Adrien Denat from a fork by Jonathan Nicol
 * Under MIT License
 */

!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?module.exports=e():"function"==typeof define&&define.amd?define(e):(t=t||self).SimpleBar=e()}(this,function(){"use strict";var t=function(t){if("function"!=typeof t)throw TypeError(String(t)+" is not a function");return t},e=function(t){try{return!!t()}catch(t){return!0}},i={}.toString,r=function(t){return i.call(t).slice(8,-1)},n="".split,s=e(function(){return!Object("z").propertyIsEnumerable(0)})?function(t){return"String"==r(t)?n.call(t,""):Object(t)}:Object,o=function(t){if(null==t)throw TypeError("Can't call method on "+t);return t},a=function(t){return Object(o(t))},l=Math.ceil,c=Math.floor,u=function(t){return isNaN(t=+t)?0:(t>0?c:l)(t)},h=Math.min,f=function(t){return t>0?h(u(t),9007199254740991):0},d=function(t){return"object"==typeof t?null!==t:"function"==typeof t},p=Array.isArray||function(t){return"Array"==r(t)},v="undefined"!=typeof globalThis?globalThis:"undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self?self:{};function g(t,e){return t(e={exports:{}},e.exports),e.exports}var b,m,y,x,E="object"==typeof window&&window&&window.Math==Math?window:"object"==typeof self&&self&&self.Math==Math?self:Function("return this")(),w=!e(function(){return 7!=Object.defineProperty({},"a",{get:function(){return 7}}).a}),O=E.document,_=d(O)&&d(O.createElement),S=!w&&!e(function(){return 7!=Object.defineProperty((t="div",_?O.createElement(t):{}),"a",{get:function(){return 7}}).a;var t}),L=function(t){if(!d(t))throw TypeError(String(t)+" is not an object");return t},A=function(t,e){if(!d(t))return t;var i,r;if(e&&"function"==typeof(i=t.toString)&&!d(r=i.call(t)))return r;if("function"==typeof(i=t.valueOf)&&!d(r=i.call(t)))return r;if(!e&&"function"==typeof(i=t.toString)&&!d(r=i.call(t)))return r;throw TypeError("Can't convert object to primitive value")},M=Object.defineProperty,k={f:w?M:function(t,e,i){if(L(t),e=A(e,!0),L(i),S)try{return M(t,e,i)}catch(t){}if("get"in i||"set"in i)throw TypeError("Accessors not supported");return"value"in i&&(t[e]=i.value),t}},W=function(t,e){return{enumerable:!(1&t),configurable:!(2&t),writable:!(4&t),value:e}},T=w?function(t,e,i){return k.f(t,e,W(1,i))}:function(t,e,i){return t[e]=i,t},R=function(t,e){try{T(E,t,e)}catch(i){E[t]=e}return e},j=g(function(t){var e=E["__core-js_shared__"]||R("__core-js_shared__",{});(t.exports=function(t,i){return e[t]||(e[t]=void 0!==i?i:{})})("versions",[]).push({version:"3.0.1",mode:"global",copyright:"© 2019 Denis Pushkarev (zloirock.ru)"})}),C=0,N=Math.random(),z=function(t){return"Symbol(".concat(void 0===t?"":t,")_",(++C+N).toString(36))},D=!e(function(){return!String(Symbol())}),V=j("wks"),I=E.Symbol,B=function(t){return V[t]||(V[t]=D&&I[t]||(D?I:z)("Symbol."+t))},P=B("species"),H=function(t,e){var i;return p(t)&&("function"!=typeof(i=t.constructor)||i!==Array&&!p(i.prototype)?d(i)&&null===(i=i[P])&&(i=void 0):i=void 0),new(void 0===i?Array:i)(0===e?0:e)},F=function(e,i){var r=1==e,n=2==e,o=3==e,l=4==e,c=6==e,u=5==e||c,h=i||H;return function(i,d,p){for(var v,g,b=a(i),m=s(b),y=function(e,i,r){if(t(e),void 0===i)return e;switch(r){case 0:return function(){return e.call(i)};case 1:return function(t){return e.call(i,t)};case 2:return function(t,r){return e.call(i,t,r)};case 3:return function(t,r,n){return e.call(i,t,r,n)}}return function(){return e.apply(i,arguments)}}(d,p,3),x=f(m.length),E=0,w=r?h(i,x):n?h(i,0):void 0;x>E;E++)if((u||E in m)&&(g=y(v=m[E],E,b),e))if(r)w[E]=g;else if(g)switch(e){case 3:return!0;case 5:return v;case 6:return E;case 2:w.push(v)}else if(l)return!1;return c?-1:o||l?l:w}},q=B("species"),$={}.propertyIsEnumerable,Y=Object.getOwnPropertyDescriptor,X={f:Y&&!$.call({1:2},1)?function(t){var e=Y(this,t);return!!e&&e.enumerable}:$},G=function(t){return s(o(t))},K={}.hasOwnProperty,U=function(t,e){return K.call(t,e)},J=Object.getOwnPropertyDescriptor,Q={f:w?J:function(t,e){if(t=G(t),e=A(e,!0),S)try{return J(t,e)}catch(t){}if(U(t,e))return W(!X.f.call(t,e),t[e])}},Z=j("native-function-to-string",Function.toString),tt=E.WeakMap,et="function"==typeof tt&&/native code/.test(Z.call(tt)),it=j("keys"),rt={},nt=E.WeakMap;if(et){var st=new nt,ot=st.get,at=st.has,lt=st.set;b=function(t,e){return lt.call(st,t,e),e},m=function(t){return ot.call(st,t)||{}},y=function(t){return at.call(st,t)}}else{var ct=it[x="state"]||(it[x]=z(x));rt[ct]=!0,b=function(t,e){return T(t,ct,e),e},m=function(t){return U(t,ct)?t[ct]:{}},y=function(t){return U(t,ct)}}var ut,ht,ft={set:b,get:m,has:y,enforce:function(t){return y(t)?m(t):b(t,{})},getterFor:function(t){return function(e){var i;if(!d(e)||(i=m(e)).type!==t)throw TypeError("Incompatible receiver, "+t+" required");return i}}},dt=g(function(t){var e=ft.get,i=ft.enforce,r=String(Z).split("toString");j("inspectSource",function(t){return Z.call(t)}),(t.exports=function(t,e,n,s){var o=!!s&&!!s.unsafe,a=!!s&&!!s.enumerable,l=!!s&&!!s.noTargetGet;"function"==typeof n&&("string"!=typeof e||U(n,"name")||T(n,"name",e),i(n).source=r.join("string"==typeof e?e:"")),t!==E?(o?!l&&t[e]&&(a=!0):delete t[e],a?t[e]=n:T(t,e,n)):a?t[e]=n:R(e,n)})(Function.prototype,"toString",function(){return"function"==typeof this&&e(this).source||Z.call(this)})}),pt=Math.max,vt=Math.min,gt=(ut=!1,function(t,e,i){var r,n=G(t),s=f(n.length),o=function(t,e){var i=u(t);return i<0?pt(i+e,0):vt(i,e)}(i,s);if(ut&&e!=e){for(;s>o;)if((r=n[o++])!=r)return!0}else for(;s>o;o++)if((ut||o in n)&&n[o]===e)return ut||o||0;return!ut&&-1}),bt=function(t,e){var i,r=G(t),n=0,s=[];for(i in r)!U(rt,i)&&U(r,i)&&s.push(i);for(;e.length>n;)U(r,i=e[n++])&&(~gt(s,i)||s.push(i));return s},mt=["constructor","hasOwnProperty","isPrototypeOf","propertyIsEnumerable","toLocaleString","toString","valueOf"],yt=mt.concat("length","prototype"),xt={f:Object.getOwnPropertyNames||function(t){return bt(t,yt)}},Et={f:Object.getOwnPropertySymbols},wt=E.Reflect,Ot=wt&&wt.ownKeys||function(t){var e=xt.f(L(t)),i=Et.f;return i?e.concat(i(t)):e},_t=function(t,e){for(var i=Ot(e),r=k.f,n=Q.f,s=0;s<i.length;s++){var o=i[s];U(t,o)||r(t,o,n(e,o))}},St=/#|\.prototype\./,Lt=function(t,i){var r=Mt[At(t)];return r==Wt||r!=kt&&("function"==typeof i?e(i):!!i)},At=Lt.normalize=function(t){return String(t).replace(St,".").toLowerCase()},Mt=Lt.data={},kt=Lt.NATIVE="N",Wt=Lt.POLYFILL="P",Tt=Lt,Rt=Q.f,jt=function(t,e){var i,r,n,s,o,a=t.target,l=t.global,c=t.stat;if(i=l?E:c?E[a]||R(a,{}):(E[a]||{}).prototype)for(r in e){if(s=e[r],n=t.noTargetGet?(o=Rt(i,r))&&o.value:i[r],!Tt(l?r:a+(c?".":"#")+r,t.forced)&&void 0!==n){if(typeof s==typeof n)continue;_t(s,n)}(t.sham||n&&n.sham)&&T(s,"sham",!0),dt(i,r,s,t)}},Ct=F(2);jt({target:"Array",proto:!0,forced:!(ht="filter",!e(function(){var t=[];return(t.constructor={})[q]=function(){return{foo:1}},1!==t[ht](Boolean).foo}))},{filter:function(t){return Ct(this,t,arguments[1])}});var Nt=function(t,i){var r=[][t];return!r||!e(function(){r.call(null,i||function(){throw 1},1)})},zt=[].forEach,Dt=F(0),Vt=Nt("forEach")?function(t){return Dt(this,t,arguments[1])}:zt;jt({target:"Array",proto:!0,forced:[].forEach!=Vt},{forEach:Vt});jt({target:"Array",proto:!0,forced:Nt("reduce")},{reduce:function(e){return function(e,i,r,n,o){t(i);var l=a(e),c=s(l),u=f(l.length),h=o?u-1:0,d=o?-1:1;if(r<2)for(;;){if(h in c){n=c[h],h+=d;break}if(h+=d,o?h<0:u<=h)throw TypeError("Reduce of empty array with no initial value")}for(;o?h>=0:u>h;h+=d)h in c&&(n=i(n,c[h],h,l));return n}(this,e,arguments.length,arguments[1],!1)}});var It=k.f,Bt=Function.prototype,Pt=Bt.toString,Ht=/^\s*function ([^ (]*)/;!w||"name"in Bt||It(Bt,"name",{configurable:!0,get:function(){try{return Pt.call(this).match(Ht)[1]}catch(t){return""}}});var Ft=Object.keys||function(t){return bt(t,mt)},qt=Object.assign,$t=!qt||e(function(){var t={},e={},i=Symbol();return t[i]=7,"abcdefghijklmnopqrst".split("").forEach(function(t){e[t]=t}),7!=qt({},t)[i]||"abcdefghijklmnopqrst"!=Ft(qt({},e)).join("")})?function(t,e){for(var i=a(t),r=arguments.length,n=1,o=Et.f,l=X.f;r>n;)for(var c,u=s(arguments[n++]),h=o?Ft(u).concat(o(u)):Ft(u),f=h.length,d=0;f>d;)l.call(u,c=h[d++])&&(i[c]=u[c]);return i}:qt;jt({target:"Object",stat:!0,forced:Object.assign!==$t},{assign:$t});var Yt="\t\n\v\f\r                　\u2028\u2029\ufeff",Xt="["+Yt+"]",Gt=RegExp("^"+Xt+Xt+"*"),Kt=RegExp(Xt+Xt+"*$"),Ut=E.parseInt,Jt=/^[-+]?0[xX]/,Qt=8!==Ut(Yt+"08")||22!==Ut(Yt+"0x16")?function(t,e){var i=function(t,e){return t=String(o(t)),1&e&&(t=t.replace(Gt,"")),2&e&&(t=t.replace(Kt,"")),t}(String(t),3);return Ut(i,e>>>0||(Jt.test(i)?16:10))}:Ut;jt({global:!0,forced:parseInt!=Qt},{parseInt:Qt});var Zt,te,ee=RegExp.prototype.exec,ie=String.prototype.replace,re=ee,ne=(Zt=/a/,te=/b*/g,ee.call(Zt,"a"),ee.call(te,"a"),0!==Zt.lastIndex||0!==te.lastIndex),se=void 0!==/()??/.exec("")[1];(ne||se)&&(re=function(t){var e,i,r,n,s=this;return se&&(i=new RegExp("^"+s.source+"$(?!\\s)",function(){var t=L(this),e="";return t.global&&(e+="g"),t.ignoreCase&&(e+="i"),t.multiline&&(e+="m"),t.unicode&&(e+="u"),t.sticky&&(e+="y"),e}.call(s))),ne&&(e=s.lastIndex),r=ee.call(s,t),ne&&r&&(s.lastIndex=s.global?r.index+r[0].length:e),se&&r&&r.length>1&&ie.call(r[0],i,function(){for(n=1;n<arguments.length-2;n++)void 0===arguments[n]&&(r[n]=void 0)}),r});var oe=re;jt({target:"RegExp",proto:!0,forced:/./.exec!==oe},{exec:oe});var ae=function(t,e,i){return e+(i?function(t,e,i){var r,n,s=String(o(t)),a=u(e),l=s.length;return a<0||a>=l?i?"":void 0:(r=s.charCodeAt(a))<55296||r>56319||a+1===l||(n=s.charCodeAt(a+1))<56320||n>57343?i?s.charAt(a):r:i?s.slice(a,a+2):n-56320+(r-55296<<10)+65536}(t,e,!0).length:1)},le=function(t,e){var i=t.exec;if("function"==typeof i){var n=i.call(t,e);if("object"!=typeof n)throw TypeError("RegExp exec method returned something other than an Object or null");return n}if("RegExp"!==r(t))throw TypeError("RegExp#exec called on incompatible receiver");return oe.call(t,e)},ce=B("species"),ue=!e(function(){var t=/./;return t.exec=function(){var t=[];return t.groups={a:"7"},t},"7"!=="".replace(t,"$<a>")}),he=!e(function(){var t=/(?:)/,e=t.exec;t.exec=function(){return e.apply(this,arguments)};var i="ab".split(t);return 2!==i.length||"a"!==i[0]||"b"!==i[1]}),fe=function(t,i,r,n){var s=B(t),o=!e(function(){var e={};return e[s]=function(){return 7},7!=""[t](e)}),a=o&&!e(function(){var e=!1,i=/a/;return i.exec=function(){return e=!0,null},"split"===t&&(i.constructor={},i.constructor[ce]=function(){return i}),i[s](""),!e});if(!o||!a||"replace"===t&&!ue||"split"===t&&!he){var l=/./[s],c=r(s,""[t],function(t,e,i,r,n){return e.exec===oe?o&&!n?{done:!0,value:l.call(e,i,r)}:{done:!0,value:t.call(i,e,r)}:{done:!1}}),u=c[0],h=c[1];dt(String.prototype,t,u),dt(RegExp.prototype,s,2==i?function(t,e){return h.call(t,this,e)}:function(t){return h.call(t,this)}),n&&T(RegExp.prototype[s],"sham",!0)}};fe("match",1,function(t,e,i){return[function(e){var i=o(this),r=null==e?void 0:e[t];return void 0!==r?r.call(e,i):new RegExp(e)[t](String(i))},function(t){var r=i(e,t,this);if(r.done)return r.value;var n=L(t),s=String(this);if(!n.global)return le(n,s);var o=n.unicode;n.lastIndex=0;for(var a,l=[],c=0;null!==(a=le(n,s));){var u=String(a[0]);l[c]=u,""===u&&(n.lastIndex=ae(s,f(n.lastIndex),o)),c++}return 0===c?null:l}]});var de=Math.max,pe=Math.min,ve=Math.floor,ge=/\$([$&`']|\d\d?|<[^>]*>)/g,be=/\$([$&`']|\d\d?)/g;fe("replace",2,function(t,e,i){return[function(i,r){var n=o(this),s=null==i?void 0:i[t];return void 0!==s?s.call(i,n,r):e.call(String(n),i,r)},function(t,n){var s=i(e,t,this,n);if(s.done)return s.value;var o=L(t),a=String(this),l="function"==typeof n;l||(n=String(n));var c=o.global;if(c){var h=o.unicode;o.lastIndex=0}for(var d=[];;){var p=le(o,a);if(null===p)break;if(d.push(p),!c)break;""===String(p[0])&&(o.lastIndex=ae(a,f(o.lastIndex),h))}for(var v,g="",b=0,m=0;m<d.length;m++){p=d[m];for(var y=String(p[0]),x=de(pe(u(p.index),a.length),0),E=[],w=1;w<p.length;w++)E.push(void 0===(v=p[w])?v:String(v));var O=p.groups;if(l){var _=[y].concat(E,x,a);void 0!==O&&_.push(O);var S=String(n.apply(void 0,_))}else S=r(y,a,x,E,O,n);x>=b&&(g+=a.slice(b,x)+S,b=x+y.length)}return g+a.slice(b)}];function r(t,i,r,n,s,o){var l=r+t.length,c=n.length,u=be;return void 0!==s&&(s=a(s),u=ge),e.call(o,u,function(e,o){var a;switch(o.charAt(0)){case"$":return"$";case"&":return t;case"`":return i.slice(0,r);case"'":return i.slice(l);case"<":a=s[o.slice(1,-1)];break;default:var u=+o;if(0===u)return e;if(u>c){var h=ve(u/10);return 0===h?e:h<=c?void 0===n[h-1]?o.charAt(1):n[h-1]+o.charAt(1):e}a=n[u-1]}return void 0===a?"":a})}});for(var me in{CSSRuleList:0,CSSStyleDeclaration:0,CSSValueList:0,ClientRectList:0,DOMRectList:0,DOMStringList:0,DOMTokenList:1,DataTransferItemList:0,FileList:0,HTMLAllCollection:0,HTMLCollection:0,HTMLFormElement:0,HTMLSelectElement:0,MediaList:0,MimeTypeArray:0,NamedNodeMap:0,NodeList:1,PaintRequestList:0,Plugin:0,PluginArray:0,SVGLengthList:0,SVGNumberList:0,SVGPathSegList:0,SVGPointList:0,SVGStringList:0,SVGTransformList:0,SourceBufferList:0,StyleSheetList:0,TextTrackCueList:0,TextTrackList:0,TouchList:0}){var ye=E[me],xe=ye&&ye.prototype;if(xe&&xe.forEach!==Vt)try{T(xe,"forEach",Vt)}catch(t){xe.forEach=Vt}}var Ee="Expected a function",we=NaN,Oe="[object Symbol]",_e=/^\s+|\s+$/g,Se=/^[-+]0x[0-9a-f]+$/i,Le=/^0b[01]+$/i,Ae=/^0o[0-7]+$/i,Me=parseInt,ke="object"==typeof v&&v&&v.Object===Object&&v,We="object"==typeof self&&self&&self.Object===Object&&self,Te=ke||We||Function("return this")(),Re=Object.prototype.toString,je=Math.max,Ce=Math.min,Ne=function(){return Te.Date.now()};function ze(t,e,i){var r,n,s,o,a,l,c=0,u=!1,h=!1,f=!0;if("function"!=typeof t)throw new TypeError(Ee);function d(e){var i=r,s=n;return r=n=void 0,c=e,o=t.apply(s,i)}function p(t){var i=t-l;return void 0===l||i>=e||i<0||h&&t-c>=s}function v(){var t=Ne();if(p(t))return g(t);a=setTimeout(v,function(t){var i=e-(t-l);return h?Ce(i,s-(t-c)):i}(t))}function g(t){return a=void 0,f&&r?d(t):(r=n=void 0,o)}function b(){var t=Ne(),i=p(t);if(r=arguments,n=this,l=t,i){if(void 0===a)return function(t){return c=t,a=setTimeout(v,e),u?d(t):o}(l);if(h)return a=setTimeout(v,e),d(l)}return void 0===a&&(a=setTimeout(v,e)),o}return e=Ve(e)||0,De(i)&&(u=!!i.leading,s=(h="maxWait"in i)?je(Ve(i.maxWait)||0,e):s,f="trailing"in i?!!i.trailing:f),b.cancel=function(){void 0!==a&&clearTimeout(a),c=0,r=l=n=a=void 0},b.flush=function(){return void 0===a?o:g(Ne())},b}function De(t){var e=typeof t;return!!t&&("object"==e||"function"==e)}function Ve(t){if("number"==typeof t)return t;if(function(t){return"symbol"==typeof t||function(t){return!!t&&"object"==typeof t}(t)&&Re.call(t)==Oe}(t))return we;if(De(t)){var e="function"==typeof t.valueOf?t.valueOf():t;t=De(e)?e+"":e}if("string"!=typeof t)return 0===t?t:+t;t=t.replace(_e,"");var i=Le.test(t);return i||Ae.test(t)?Me(t.slice(2),i?2:8):Se.test(t)?we:+t}var Ie=function(t,e,i){var r=!0,n=!0;if("function"!=typeof t)throw new TypeError(Ee);return De(i)&&(r="leading"in i?!!i.leading:r,n="trailing"in i?!!i.trailing:n),ze(t,e,{leading:r,maxWait:e,trailing:n})},Be="Expected a function",Pe=NaN,He="[object Symbol]",Fe=/^\s+|\s+$/g,qe=/^[-+]0x[0-9a-f]+$/i,$e=/^0b[01]+$/i,Ye=/^0o[0-7]+$/i,Xe=parseInt,Ge="object"==typeof v&&v&&v.Object===Object&&v,Ke="object"==typeof self&&self&&self.Object===Object&&self,Ue=Ge||Ke||Function("return this")(),Je=Object.prototype.toString,Qe=Math.max,Ze=Math.min,ti=function(){return Ue.Date.now()};function ei(t){var e=typeof t;return!!t&&("object"==e||"function"==e)}function ii(t){if("number"==typeof t)return t;if(function(t){return"symbol"==typeof t||function(t){return!!t&&"object"==typeof t}(t)&&Je.call(t)==He}(t))return Pe;if(ei(t)){var e="function"==typeof t.valueOf?t.valueOf():t;t=ei(e)?e+"":e}if("string"!=typeof t)return 0===t?t:+t;t=t.replace(Fe,"");var i=$e.test(t);return i||Ye.test(t)?Xe(t.slice(2),i?2:8):qe.test(t)?Pe:+t}var ri=function(t,e,i){var r,n,s,o,a,l,c=0,u=!1,h=!1,f=!0;if("function"!=typeof t)throw new TypeError(Be);function d(e){var i=r,s=n;return r=n=void 0,c=e,o=t.apply(s,i)}function p(t){var i=t-l;return void 0===l||i>=e||i<0||h&&t-c>=s}function v(){var t=ti();if(p(t))return g(t);a=setTimeout(v,function(t){var i=e-(t-l);return h?Ze(i,s-(t-c)):i}(t))}function g(t){return a=void 0,f&&r?d(t):(r=n=void 0,o)}function b(){var t=ti(),i=p(t);if(r=arguments,n=this,l=t,i){if(void 0===a)return function(t){return c=t,a=setTimeout(v,e),u?d(t):o}(l);if(h)return a=setTimeout(v,e),d(l)}return void 0===a&&(a=setTimeout(v,e)),o}return e=ii(e)||0,ei(i)&&(u=!!i.leading,s=(h="maxWait"in i)?Qe(ii(i.maxWait)||0,e):s,f="trailing"in i?!!i.trailing:f),b.cancel=function(){void 0!==a&&clearTimeout(a),c=0,r=l=n=a=void 0},b.flush=function(){return void 0===a?o:g(ti())},b},ni="Expected a function",si="__lodash_hash_undefined__",oi="[object Function]",ai="[object GeneratorFunction]",li=/^\[object .+?Constructor\]$/,ci="object"==typeof v&&v&&v.Object===Object&&v,ui="object"==typeof self&&self&&self.Object===Object&&self,hi=ci||ui||Function("return this")();var fi=Array.prototype,di=Function.prototype,pi=Object.prototype,vi=hi["__core-js_shared__"],gi=function(){var t=/[^.]+$/.exec(vi&&vi.keys&&vi.keys.IE_PROTO||"");return t?"Symbol(src)_1."+t:""}(),bi=di.toString,mi=pi.hasOwnProperty,yi=pi.toString,xi=RegExp("^"+bi.call(mi).replace(/[\\^$.*+?()[\]{}|]/g,"\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,"$1.*?")+"$"),Ei=fi.splice,wi=Wi(hi,"Map"),Oi=Wi(Object,"create");function _i(t){var e=-1,i=t?t.length:0;for(this.clear();++e<i;){var r=t[e];this.set(r[0],r[1])}}function Si(t){var e=-1,i=t?t.length:0;for(this.clear();++e<i;){var r=t[e];this.set(r[0],r[1])}}function Li(t){var e=-1,i=t?t.length:0;for(this.clear();++e<i;){var r=t[e];this.set(r[0],r[1])}}function Ai(t,e){for(var i,r,n=t.length;n--;)if((i=t[n][0])===(r=e)||i!=i&&r!=r)return n;return-1}function Mi(t){return!(!Ri(t)||(e=t,gi&&gi in e))&&(function(t){var e=Ri(t)?yi.call(t):"";return e==oi||e==ai}(t)||function(t){var e=!1;if(null!=t&&"function"!=typeof t.toString)try{e=!!(t+"")}catch(t){}return e}(t)?xi:li).test(function(t){if(null!=t){try{return bi.call(t)}catch(t){}try{return t+""}catch(t){}}return""}(t));var e}function ki(t,e){var i,r,n=t.__data__;return("string"==(r=typeof(i=e))||"number"==r||"symbol"==r||"boolean"==r?"__proto__"!==i:null===i)?n["string"==typeof e?"string":"hash"]:n.map}function Wi(t,e){var i=function(t,e){return null==t?void 0:t[e]}(t,e);return Mi(i)?i:void 0}function Ti(t,e){if("function"!=typeof t||e&&"function"!=typeof e)throw new TypeError(ni);var i=function(){var r=arguments,n=e?e.apply(this,r):r[0],s=i.cache;if(s.has(n))return s.get(n);var o=t.apply(this,r);return i.cache=s.set(n,o),o};return i.cache=new(Ti.Cache||Li),i}function Ri(t){var e=typeof t;return!!t&&("object"==e||"function"==e)}_i.prototype.clear=function(){this.__data__=Oi?Oi(null):{}},_i.prototype.delete=function(t){return this.has(t)&&delete this.__data__[t]},_i.prototype.get=function(t){var e=this.__data__;if(Oi){var i=e[t];return i===si?void 0:i}return mi.call(e,t)?e[t]:void 0},_i.prototype.has=function(t){var e=this.__data__;return Oi?void 0!==e[t]:mi.call(e,t)},_i.prototype.set=function(t,e){return this.__data__[t]=Oi&&void 0===e?si:e,this},Si.prototype.clear=function(){this.__data__=[]},Si.prototype.delete=function(t){var e=this.__data__,i=Ai(e,t);return!(i<0||(i==e.length-1?e.pop():Ei.call(e,i,1),0))},Si.prototype.get=function(t){var e=this.__data__,i=Ai(e,t);return i<0?void 0:e[i][1]},Si.prototype.has=function(t){return Ai(this.__data__,t)>-1},Si.prototype.set=function(t,e){var i=this.__data__,r=Ai(i,t);return r<0?i.push([t,e]):i[r][1]=e,this},Li.prototype.clear=function(){this.__data__={hash:new _i,map:new(wi||Si),string:new _i}},Li.prototype.delete=function(t){return ki(this,t).delete(t)},Li.prototype.get=function(t){return ki(this,t).get(t)},Li.prototype.has=function(t){return ki(this,t).has(t)},Li.prototype.set=function(t,e){return ki(this,t).set(t,e),this},Ti.Cache=Li;var ji=Ti,Ci=function(){if("undefined"!=typeof Map)return Map;function t(t,e){var i=-1;return t.some(function(t,r){return t[0]===e&&(i=r,!0)}),i}return function(){function e(){this.__entries__=[]}return Object.defineProperty(e.prototype,"size",{get:function(){return this.__entries__.length},enumerable:!0,configurable:!0}),e.prototype.get=function(e){var i=t(this.__entries__,e),r=this.__entries__[i];return r&&r[1]},e.prototype.set=function(e,i){var r=t(this.__entries__,e);~r?this.__entries__[r][1]=i:this.__entries__.push([e,i])},e.prototype.delete=function(e){var i=this.__entries__,r=t(i,e);~r&&i.splice(r,1)},e.prototype.has=function(e){return!!~t(this.__entries__,e)},e.prototype.clear=function(){this.__entries__.splice(0)},e.prototype.forEach=function(t,e){void 0===e&&(e=null);for(var i=0,r=this.__entries__;i<r.length;i++){var n=r[i];t.call(e,n[1],n[0])}},e}()}(),Ni="undefined"!=typeof window&&"undefined"!=typeof document&&window.document===document,zi="undefined"!=typeof global&&global.Math===Math?global:"undefined"!=typeof self&&self.Math===Math?self:"undefined"!=typeof window&&window.Math===Math?window:Function("return this")(),Di="function"==typeof requestAnimationFrame?requestAnimationFrame.bind(zi):function(t){return setTimeout(function(){return t(Date.now())},1e3/60)},Vi=2;var Ii=20,Bi=["top","right","bottom","left","width","height","size","weight"],Pi="undefined"!=typeof MutationObserver,Hi=function(){function t(){this.connected_=!1,this.mutationEventsAdded_=!1,this.mutationsObserver_=null,this.observers_=[],this.onTransitionEnd_=this.onTransitionEnd_.bind(this),this.refresh=function(t,e){var i=!1,r=!1,n=0;function s(){i&&(i=!1,t()),r&&a()}function o(){Di(s)}function a(){var t=Date.now();if(i){if(t-n<Vi)return;r=!0}else i=!0,r=!1,setTimeout(o,e);n=t}return a}(this.refresh.bind(this),Ii)}return t.prototype.addObserver=function(t){~this.observers_.indexOf(t)||this.observers_.push(t),this.connected_||this.connect_()},t.prototype.removeObserver=function(t){var e=this.observers_,i=e.indexOf(t);~i&&e.splice(i,1),!e.length&&this.connected_&&this.disconnect_()},t.prototype.refresh=function(){this.updateObservers_()&&this.refresh()},t.prototype.updateObservers_=function(){var t=this.observers_.filter(function(t){return t.gatherActive(),t.hasActive()});return t.forEach(function(t){return t.broadcastActive()}),t.length>0},t.prototype.connect_=function(){Ni&&!this.connected_&&(document.addEventListener("transitionend",this.onTransitionEnd_),window.addEventListener("resize",this.refresh),Pi?(this.mutationsObserver_=new MutationObserver(this.refresh),this.mutationsObserver_.observe(document,{attributes:!0,childList:!0,characterData:!0,subtree:!0})):(document.addEventListener("DOMSubtreeModified",this.refresh),this.mutationEventsAdded_=!0),this.connected_=!0)},t.prototype.disconnect_=function(){Ni&&this.connected_&&(document.removeEventListener("transitionend",this.onTransitionEnd_),window.removeEventListener("resize",this.refresh),this.mutationsObserver_&&this.mutationsObserver_.disconnect(),this.mutationEventsAdded_&&document.removeEventListener("DOMSubtreeModified",this.refresh),this.mutationsObserver_=null,this.mutationEventsAdded_=!1,this.connected_=!1)},t.prototype.onTransitionEnd_=function(t){var e=t.propertyName,i=void 0===e?"":e;Bi.some(function(t){return!!~i.indexOf(t)})&&this.refresh()},t.getInstance=function(){return this.instance_||(this.instance_=new t),this.instance_},t.instance_=null,t}(),Fi=function(t,e){for(var i=0,r=Object.keys(e);i<r.length;i++){var n=r[i];Object.defineProperty(t,n,{value:e[n],enumerable:!1,writable:!1,configurable:!0})}return t},qi=function(t){return t&&t.ownerDocument&&t.ownerDocument.defaultView||zi},$i=Ji(0,0,0,0);function Yi(t){return parseFloat(t)||0}function Xi(t){for(var e=[],i=1;i<arguments.length;i++)e[i-1]=arguments[i];return e.reduce(function(e,i){return e+Yi(t["border-"+i+"-width"])},0)}function Gi(t){var e=t.clientWidth,i=t.clientHeight;if(!e&&!i)return $i;var r=qi(t).getComputedStyle(t),n=function(t){for(var e={},i=0,r=["top","right","bottom","left"];i<r.length;i++){var n=r[i],s=t["padding-"+n];e[n]=Yi(s)}return e}(r),s=n.left+n.right,o=n.top+n.bottom,a=Yi(r.width),l=Yi(r.height);if("border-box"===r.boxSizing&&(Math.round(a+s)!==e&&(a-=Xi(r,"left","right")+s),Math.round(l+o)!==i&&(l-=Xi(r,"top","bottom")+o)),!function(t){return t===qi(t).document.documentElement}(t)){var c=Math.round(a+s)-e,u=Math.round(l+o)-i;1!==Math.abs(c)&&(a-=c),1!==Math.abs(u)&&(l-=u)}return Ji(n.left,n.top,a,l)}var Ki="undefined"!=typeof SVGGraphicsElement?function(t){return t instanceof qi(t).SVGGraphicsElement}:function(t){return t instanceof qi(t).SVGElement&&"function"==typeof t.getBBox};function Ui(t){return Ni?Ki(t)?function(t){var e=t.getBBox();return Ji(0,0,e.width,e.height)}(t):Gi(t):$i}function Ji(t,e,i,r){return{x:t,y:e,width:i,height:r}}var Qi=function(){function t(t){this.broadcastWidth=0,this.broadcastHeight=0,this.contentRect_=Ji(0,0,0,0),this.target=t}return t.prototype.isActive=function(){var t=Ui(this.target);return this.contentRect_=t,t.width!==this.broadcastWidth||t.height!==this.broadcastHeight},t.prototype.broadcastRect=function(){var t=this.contentRect_;return this.broadcastWidth=t.width,this.broadcastHeight=t.height,t},t}(),Zi=function(){return function(t,e){var i,r,n,s,o,a,l,c=(r=(i=e).x,n=i.y,s=i.width,o=i.height,a="undefined"!=typeof DOMRectReadOnly?DOMRectReadOnly:Object,l=Object.create(a.prototype),Fi(l,{x:r,y:n,width:s,height:o,top:n,right:r+s,bottom:o+n,left:r}),l);Fi(this,{target:t,contentRect:c})}}(),tr=function(){function t(t,e,i){if(this.activeObservations_=[],this.observations_=new Ci,"function"!=typeof t)throw new TypeError("The callback provided as parameter 1 is not a function.");this.callback_=t,this.controller_=e,this.callbackCtx_=i}return t.prototype.observe=function(t){if(!arguments.length)throw new TypeError("1 argument required, but only 0 present.");if("undefined"!=typeof Element&&Element instanceof Object){if(!(t instanceof qi(t).Element))throw new TypeError('parameter 1 is not of type "Element".');var e=this.observations_;e.has(t)||(e.set(t,new Qi(t)),this.controller_.addObserver(this),this.controller_.refresh())}},t.prototype.unobserve=function(t){if(!arguments.length)throw new TypeError("1 argument required, but only 0 present.");if("undefined"!=typeof Element&&Element instanceof Object){if(!(t instanceof qi(t).Element))throw new TypeError('parameter 1 is not of type "Element".');var e=this.observations_;e.has(t)&&(e.delete(t),e.size||this.controller_.removeObserver(this))}},t.prototype.disconnect=function(){this.clearActive(),this.observations_.clear(),this.controller_.removeObserver(this)},t.prototype.gatherActive=function(){var t=this;this.clearActive(),this.observations_.forEach(function(e){e.isActive()&&t.activeObservations_.push(e)})},t.prototype.broadcastActive=function(){if(this.hasActive()){var t=this.callbackCtx_,e=this.activeObservations_.map(function(t){return new Zi(t.target,t.broadcastRect())});this.callback_.call(t,e,t),this.clearActive()}},t.prototype.clearActive=function(){this.activeObservations_.splice(0)},t.prototype.hasActive=function(){return this.activeObservations_.length>0},t}(),er="undefined"!=typeof WeakMap?new WeakMap:new Ci,ir=function(){return function t(e){if(!(this instanceof t))throw new TypeError("Cannot call a class as a function.");if(!arguments.length)throw new TypeError("1 argument required, but only 0 present.");var i=Hi.getInstance(),r=new tr(e,i,this);er.set(this,r)}}();["observe","unobserve","disconnect"].forEach(function(t){ir.prototype[t]=function(){var e;return(e=er.get(this))[t].apply(e,arguments)}});var rr=void 0!==zi.ResizeObserver?zi.ResizeObserver:ir,nr=!("undefined"==typeof window||!window.document||!window.document.createElement);function sr(){if("undefined"==typeof document)return 0;var t=document.body,e=document.createElement("div"),i=e.style;i.position="fixed",i.left=0,i.visibility="hidden",i.overflowY="scroll",t.appendChild(e);var r=e.getBoundingClientRect().right;return t.removeChild(e),r}var or=function(){function t(e,i){var r=this;this.onScroll=function(){r.scrollXTicking||(window.requestAnimationFrame(r.scrollX),r.scrollXTicking=!0),r.scrollYTicking||(window.requestAnimationFrame(r.scrollY),r.scrollYTicking=!0)},this.scrollX=function(){r.axis.x.isOverflowing&&(r.showScrollbar("x"),r.positionScrollbar("x")),r.scrollXTicking=!1},this.scrollY=function(){r.axis.y.isOverflowing&&(r.showScrollbar("y"),r.positionScrollbar("y")),r.scrollYTicking=!1},this.onMouseEnter=function(){r.showScrollbar("x"),r.showScrollbar("y")},this.onMouseMove=function(t){r.mouseX=t.clientX,r.mouseY=t.clientY,(r.axis.x.isOverflowing||r.axis.x.forceVisible)&&r.onMouseMoveForAxis("x"),(r.axis.y.isOverflowing||r.axis.y.forceVisible)&&r.onMouseMoveForAxis("y")},this.onMouseLeave=function(){r.onMouseMove.cancel(),(r.axis.x.isOverflowing||r.axis.x.forceVisible)&&r.onMouseLeaveForAxis("x"),(r.axis.y.isOverflowing||r.axis.y.forceVisible)&&r.onMouseLeaveForAxis("y"),r.mouseX=-1,r.mouseY=-1},this.onWindowResize=function(){r.scrollbarWidth=sr(),r.hideNativeScrollbar()},this.hideScrollbars=function(){r.axis.x.track.rect=r.axis.x.track.el.getBoundingClientRect(),r.axis.y.track.rect=r.axis.y.track.el.getBoundingClientRect(),r.isWithinBounds(r.axis.y.track.rect)||(r.axis.y.scrollbar.el.classList.remove(r.classNames.visible),r.axis.y.isVisible=!1),r.isWithinBounds(r.axis.x.track.rect)||(r.axis.x.scrollbar.el.classList.remove(r.classNames.visible),r.axis.x.isVisible=!1)},this.onPointerEvent=function(t){var e,i;r.axis.x.scrollbar.rect=r.axis.x.scrollbar.el.getBoundingClientRect(),r.axis.y.scrollbar.rect=r.axis.y.scrollbar.el.getBoundingClientRect(),(r.axis.x.isOverflowing||r.axis.x.forceVisible)&&(i=r.isWithinBounds(r.axis.x.scrollbar.rect)),(r.axis.y.isOverflowing||r.axis.y.forceVisible)&&(e=r.isWithinBounds(r.axis.y.scrollbar.rect)),(e||i)&&(t.preventDefault(),t.stopPropagation(),"mousedown"===t.type&&(e&&r.onDragStart(t,"y"),i&&r.onDragStart(t,"x")))},this.drag=function(e){var i=r.axis[r.draggedAxis].track,n=i.rect[r.axis[r.draggedAxis].sizeAttr],s=r.axis[r.draggedAxis].scrollbar,o=r.contentWrapperEl[r.axis[r.draggedAxis].scrollSizeAttr],a=parseInt(r.elStyles[r.axis[r.draggedAxis].sizeAttr],10);e.preventDefault(),e.stopPropagation();var l=(("y"===r.draggedAxis?e.pageY:e.pageX)-i.rect[r.axis[r.draggedAxis].offsetAttr]-r.axis[r.draggedAxis].dragOffset)/(n-s.size)*(o-a);"x"===r.draggedAxis&&(l=r.isRtl&&t.getRtlHelpers().isRtlScrollbarInverted?l-(n+s.size):l,l=r.isRtl&&t.getRtlHelpers().isRtlScrollingInverted?-l:l),r.contentWrapperEl[r.axis[r.draggedAxis].scrollOffsetAttr]=l},this.onEndDrag=function(t){t.preventDefault(),t.stopPropagation(),r.el.classList.remove(r.classNames.dragging),document.removeEventListener("mousemove",r.drag,!0),document.removeEventListener("mouseup",r.onEndDrag,!0),r.removePreventClickId=window.setTimeout(function(){document.removeEventListener("click",r.preventClick,!0),document.removeEventListener("dblclick",r.preventClick,!0),r.removePreventClickId=null})},this.preventClick=function(t){t.preventDefault(),t.stopPropagation()},this.el=e,this.flashTimeout,this.contentEl,this.contentWrapperEl,this.offsetEl,this.maskEl,this.globalObserver,this.mutationObserver,this.resizeObserver,this.scrollbarWidth,this.minScrollbarWidth=20,this.options=Object.assign({},t.defaultOptions,i),this.classNames=Object.assign({},t.defaultOptions.classNames,this.options.classNames),this.isRtl,this.axis={x:{scrollOffsetAttr:"scrollLeft",sizeAttr:"width",scrollSizeAttr:"scrollWidth",offsetAttr:"left",overflowAttr:"overflowX",dragOffset:0,isOverflowing:!0,isVisible:!1,forceVisible:!1,track:{},scrollbar:{}},y:{scrollOffsetAttr:"scrollTop",sizeAttr:"height",scrollSizeAttr:"scrollHeight",offsetAttr:"top",overflowAttr:"overflowY",dragOffset:0,isOverflowing:!0,isVisible:!1,forceVisible:!1,track:{},scrollbar:{}}},this.removePreventClickId=null,this.el.SimpleBar||(this.recalculate=Ie(this.recalculate.bind(this),64),this.onMouseMove=Ie(this.onMouseMove.bind(this),64),this.hideScrollbars=ri(this.hideScrollbars.bind(this),this.options.timeout),this.onWindowResize=ri(this.onWindowResize.bind(this),64,{leading:!0}),t.getRtlHelpers=ji(t.getRtlHelpers),this.init())}t.getRtlHelpers=function(){var e=document.createElement("div");e.innerHTML='<div class="hs-dummy-scrollbar-size"><div style="height: 200%; width: 200%; margin: 10px 0;"></div></div>';var i=e.firstElementChild;document.body.appendChild(i);var r=i.firstElementChild;i.scrollLeft=0;var n=t.getOffset(i),s=t.getOffset(r);i.scrollLeft=999;var o=t.getOffset(r);return{isRtlScrollingInverted:n.left!==s.left&&s.left-o.left!=0,isRtlScrollbarInverted:n.left!==s.left}},t.initHtmlApi=function(){this.initDOMLoadedElements=this.initDOMLoadedElements.bind(this),"undefined"!=typeof MutationObserver&&(this.globalObserver=new MutationObserver(function(e){e.forEach(function(e){Array.prototype.forEach.call(e.addedNodes,function(e){1===e.nodeType&&(e.hasAttribute("data-simplebar")?!e.SimpleBar&&new t(e,t.getElOptions(e)):Array.prototype.forEach.call(e.querySelectorAll("[data-simplebar]"),function(e){!e.SimpleBar&&new t(e,t.getElOptions(e))}))}),Array.prototype.forEach.call(e.removedNodes,function(t){1===t.nodeType&&(t.hasAttribute("data-simplebar")?t.SimpleBar&&t.SimpleBar.unMount():Array.prototype.forEach.call(t.querySelectorAll("[data-simplebar]"),function(t){t.SimpleBar&&t.SimpleBar.unMount()}))})})}),this.globalObserver.observe(document,{childList:!0,subtree:!0})),"complete"===document.readyState||"loading"!==document.readyState&&!document.documentElement.doScroll?window.setTimeout(this.initDOMLoadedElements):(document.addEventListener("DOMContentLoaded",this.initDOMLoadedElements),window.addEventListener("load",this.initDOMLoadedElements))},t.getElOptions=function(t){return Array.prototype.reduce.call(t.attributes,function(t,e){var i=e.name.match(/data-simplebar-(.+)/);if(i){var r=i[1].replace(/\W+(.)/g,function(t,e){return e.toUpperCase()});switch(e.value){case"true":t[r]=!0;break;case"false":t[r]=!1;break;case void 0:t[r]=!0;break;default:t[r]=e.value}}return t},{})},t.removeObserver=function(){this.globalObserver.disconnect()},t.initDOMLoadedElements=function(){document.removeEventListener("DOMContentLoaded",this.initDOMLoadedElements),window.removeEventListener("load",this.initDOMLoadedElements),Array.prototype.forEach.call(document.querySelectorAll("[data-simplebar]"),function(e){e.SimpleBar||new t(e,t.getElOptions(e))})},t.getOffset=function(t){var e=t.getBoundingClientRect();return{top:e.top+(window.pageYOffset||document.documentElement.scrollTop),left:e.left+(window.pageXOffset||document.documentElement.scrollLeft)}};var e=t.prototype;return e.init=function(){this.el.SimpleBar=this,nr&&(this.initDOM(),this.scrollbarWidth=sr(),this.recalculate(),this.initListeners())},e.initDOM=function(){var t=this;if(Array.prototype.filter.call(this.el.children,function(e){return e.classList.contains(t.classNames.wrapper)}).length)this.wrapperEl=this.el.querySelector("."+this.classNames.wrapper),this.contentWrapperEl=this.el.querySelector("."+this.classNames.contentWrapper),this.offsetEl=this.el.querySelector("."+this.classNames.offset),this.maskEl=this.el.querySelector("."+this.classNames.mask),this.contentEl=this.el.querySelector("."+this.classNames.contentEl),this.placeholderEl=this.el.querySelector("."+this.classNames.placeholder),this.heightAutoObserverWrapperEl=this.el.querySelector("."+this.classNames.heightAutoObserverWrapperEl),this.heightAutoObserverEl=this.el.querySelector("."+this.classNames.heightAutoObserverEl),this.axis.x.track.el=this.findChild(this.el,"."+this.classNames.track+"."+this.classNames.horizontal),this.axis.y.track.el=this.findChild(this.el,"."+this.classNames.track+"."+this.classNames.vertical);else{for(this.wrapperEl=document.createElement("div"),this.contentWrapperEl=document.createElement("div"),this.offsetEl=document.createElement("div"),this.maskEl=document.createElement("div"),this.contentEl=document.createElement("div"),this.placeholderEl=document.createElement("div"),this.heightAutoObserverWrapperEl=document.createElement("div"),this.heightAutoObserverEl=document.createElement("div"),this.wrapperEl.classList.add(this.classNames.wrapper),this.contentWrapperEl.classList.add(this.classNames.contentWrapper),this.offsetEl.classList.add(this.classNames.offset),this.maskEl.classList.add(this.classNames.mask),this.contentEl.classList.add(this.classNames.contentEl),this.placeholderEl.classList.add(this.classNames.placeholder),this.heightAutoObserverWrapperEl.classList.add(this.classNames.heightAutoObserverWrapperEl),this.heightAutoObserverEl.classList.add(this.classNames.heightAutoObserverEl);this.el.firstChild;)this.contentEl.appendChild(this.el.firstChild);this.contentWrapperEl.appendChild(this.contentEl),this.offsetEl.appendChild(this.contentWrapperEl),this.maskEl.appendChild(this.offsetEl),this.heightAutoObserverWrapperEl.appendChild(this.heightAutoObserverEl),this.wrapperEl.appendChild(this.heightAutoObserverWrapperEl),this.wrapperEl.appendChild(this.maskEl),this.wrapperEl.appendChild(this.placeholderEl),this.el.appendChild(this.wrapperEl)}if(!this.axis.x.track.el||!this.axis.y.track.el){var e=document.createElement("div"),i=document.createElement("div");e.classList.add(this.classNames.track),i.classList.add(this.classNames.scrollbar),e.appendChild(i),this.axis.x.track.el=e.cloneNode(!0),this.axis.x.track.el.classList.add(this.classNames.horizontal),this.axis.y.track.el=e.cloneNode(!0),this.axis.y.track.el.classList.add(this.classNames.vertical),this.el.appendChild(this.axis.x.track.el),this.el.appendChild(this.axis.y.track.el)}this.axis.x.scrollbar.el=this.axis.x.track.el.querySelector("."+this.classNames.scrollbar),this.axis.y.scrollbar.el=this.axis.y.track.el.querySelector("."+this.classNames.scrollbar),this.options.autoHide||(this.axis.x.scrollbar.el.classList.add(this.classNames.visible),this.axis.y.scrollbar.el.classList.add(this.classNames.visible)),this.el.setAttribute("data-simplebar","init")},e.initListeners=function(){var t=this;this.options.autoHide&&this.el.addEventListener("mouseenter",this.onMouseEnter),["mousedown","click","dblclick"].forEach(function(e){t.el.addEventListener(e,t.onPointerEvent,!0)}),["touchstart","touchend","touchmove"].forEach(function(e){t.el.addEventListener(e,t.onPointerEvent,{capture:!0,passive:!0})}),this.el.addEventListener("mousemove",this.onMouseMove),this.el.addEventListener("mouseleave",this.onMouseLeave),this.contentWrapperEl.addEventListener("scroll",this.onScroll),window.addEventListener("resize",this.onWindowResize),this.resizeObserver=new rr(this.recalculate),this.resizeObserver.observe(this.el),this.resizeObserver.observe(this.contentEl)},e.recalculate=function(){var t=this.heightAutoObserverEl.offsetHeight<=1,e=this.heightAutoObserverEl.offsetWidth<=1;this.elStyles=window.getComputedStyle(this.el),this.isRtl="rtl"===this.elStyles.direction,this.contentEl.style.padding=this.elStyles.paddingTop+" "+this.elStyles.paddingRight+" "+this.elStyles.paddingBottom+" "+this.elStyles.paddingLeft,this.wrapperEl.style.margin="-"+this.elStyles.paddingTop+" -"+this.elStyles.paddingRight+" -"+this.elStyles.paddingBottom+" -"+this.elStyles.paddingLeft,this.contentWrapperEl.style.height=t?"auto":"100%",this.placeholderEl.style.width=e?this.contentEl.offsetWidth+"px":"auto",this.placeholderEl.style.height=this.contentEl.scrollHeight+"px",this.axis.x.isOverflowing=this.contentWrapperEl.scrollWidth>this.contentWrapperEl.offsetWidth,this.axis.y.isOverflowing=this.contentWrapperEl.scrollHeight>this.contentWrapperEl.offsetHeight,this.axis.x.isOverflowing="hidden"!==this.elStyles.overflowX&&this.axis.x.isOverflowing,this.axis.y.isOverflowing="hidden"!==this.elStyles.overflowY&&this.axis.y.isOverflowing,this.axis.x.forceVisible="x"===this.options.forceVisible||!0===this.options.forceVisible,this.axis.y.forceVisible="y"===this.options.forceVisible||!0===this.options.forceVisible,this.hideNativeScrollbar(),this.axis.x.track.rect=this.axis.x.track.el.getBoundingClientRect(),this.axis.y.track.rect=this.axis.y.track.el.getBoundingClientRect(),this.axis.x.scrollbar.size=this.getScrollbarSize("x"),this.axis.y.scrollbar.size=this.getScrollbarSize("y"),this.axis.x.scrollbar.el.style.width=this.axis.x.scrollbar.size+"px",this.axis.y.scrollbar.el.style.height=this.axis.y.scrollbar.size+"px",this.positionScrollbar("x"),this.positionScrollbar("y"),this.toggleTrackVisibility("x"),this.toggleTrackVisibility("y")},e.getScrollbarSize=function(t){void 0===t&&(t="y");var e,i=this.scrollbarWidth?this.contentWrapperEl[this.axis[t].scrollSizeAttr]:this.contentWrapperEl[this.axis[t].scrollSizeAttr]-this.minScrollbarWidth,r=this.axis[t].track.rect[this.axis[t].sizeAttr];if(this.axis[t].isOverflowing){var n=r/i;return e=Math.max(~~(n*r),this.options.scrollbarMinSize),this.options.scrollbarMaxSize&&(e=Math.min(e,this.options.scrollbarMaxSize)),e}},e.positionScrollbar=function(e){void 0===e&&(e="y");var i=this.contentWrapperEl[this.axis[e].scrollSizeAttr],r=this.axis[e].track.rect[this.axis[e].sizeAttr],n=parseInt(this.elStyles[this.axis[e].sizeAttr],10),s=this.axis[e].scrollbar,o=this.contentWrapperEl[this.axis[e].scrollOffsetAttr],a=(o="x"===e&&this.isRtl&&t.getRtlHelpers().isRtlScrollingInverted?-o:o)/(i-n),l=~~((r-s.size)*a);l="x"===e&&this.isRtl&&t.getRtlHelpers().isRtlScrollbarInverted?l+(r-s.size):l,s.el.style.transform="x"===e?"translate3d("+l+"px, 0, 0)":"translate3d(0, "+l+"px, 0)"},e.toggleTrackVisibility=function(t){void 0===t&&(t="y");var e=this.axis[t].track.el,i=this.axis[t].scrollbar.el;this.axis[t].isOverflowing||this.axis[t].forceVisible?(e.style.visibility="visible",this.contentWrapperEl.style[this.axis[t].overflowAttr]="scroll"):(e.style.visibility="hidden",this.contentWrapperEl.style[this.axis[t].overflowAttr]="hidden"),this.axis[t].isOverflowing?i.style.display="block":i.style.display="none"},e.hideNativeScrollbar=function(){if(this.offsetEl.style[this.isRtl?"left":"right"]=this.axis.y.isOverflowing||this.axis.y.forceVisible?"-"+(this.scrollbarWidth||this.minScrollbarWidth)+"px":0,this.offsetEl.style.bottom=this.axis.x.isOverflowing||this.axis.x.forceVisible?"-"+(this.scrollbarWidth||this.minScrollbarWidth)+"px":0,!this.scrollbarWidth){var t=[this.isRtl?"paddingLeft":"paddingRight"];this.contentWrapperEl.style[t]=this.axis.y.isOverflowing||this.axis.y.forceVisible?this.minScrollbarWidth+"px":0,this.contentWrapperEl.style.paddingBottom=this.axis.x.isOverflowing||this.axis.x.forceVisible?this.minScrollbarWidth+"px":0}},e.onMouseMoveForAxis=function(t){void 0===t&&(t="y"),this.axis[t].track.rect=this.axis[t].track.el.getBoundingClientRect(),this.axis[t].scrollbar.rect=this.axis[t].scrollbar.el.getBoundingClientRect(),this.isWithinBounds(this.axis[t].scrollbar.rect)?this.axis[t].scrollbar.el.classList.add(this.classNames.hover):this.axis[t].scrollbar.el.classList.remove(this.classNames.hover),this.isWithinBounds(this.axis[t].track.rect)?(this.showScrollbar(t),this.axis[t].track.el.classList.add(this.classNames.hover)):this.axis[t].track.el.classList.remove(this.classNames.hover)},e.onMouseLeaveForAxis=function(t){void 0===t&&(t="y"),this.axis[t].track.el.classList.remove(this.classNames.hover),this.axis[t].scrollbar.el.classList.remove(this.classNames.hover)},e.showScrollbar=function(t){void 0===t&&(t="y");var e=this.axis[t].scrollbar.el;this.axis[t].isVisible||(e.classList.add(this.classNames.visible),this.axis[t].isVisible=!0),this.options.autoHide&&this.hideScrollbars()},e.onDragStart=function(t,e){void 0===e&&(e="y");var i=this.axis[e].scrollbar.el,r="y"===e?t.pageY:t.pageX;this.axis[e].dragOffset=r-i.getBoundingClientRect()[this.axis[e].offsetAttr],this.draggedAxis=e,this.el.classList.add(this.classNames.dragging),document.addEventListener("mousemove",this.drag,!0),document.addEventListener("mouseup",this.onEndDrag,!0),null===this.removePreventClickId?(document.addEventListener("click",this.preventClick,!0),document.addEventListener("dblclick",this.preventClick,!0)):(window.clearTimeout(this.removePreventClickId),this.removePreventClickId=null)},e.getContentElement=function(){return this.contentEl},e.getScrollElement=function(){return this.contentWrapperEl},e.removeListeners=function(){var t=this;this.options.autoHide&&this.el.removeEventListener("mouseenter",this.onMouseEnter),["mousedown","click","dblclick"].forEach(function(e){t.el.removeEventListener(e,t.onPointerEvent,!0)}),["touchstart","touchend","touchmove"].forEach(function(e){t.el.removeEventListener(e,t.onPointerEvent,{capture:!0,passive:!0})}),this.el.removeEventListener("mousemove",this.onMouseMove),this.el.removeEventListener("mouseleave",this.onMouseLeave),this.contentWrapperEl.removeEventListener("scroll",this.onScroll),window.removeEventListener("resize",this.onWindowResize),this.mutationObserver&&this.mutationObserver.disconnect(),this.resizeObserver.disconnect(),this.recalculate.cancel(),this.onMouseMove.cancel(),this.hideScrollbars.cancel(),this.onWindowResize.cancel()},e.unMount=function(){this.removeListeners(),this.el.SimpleBar=null},e.isChildNode=function(t){return null!==t&&(t===this.el||this.isChildNode(t.parentNode))},e.isWithinBounds=function(t){return this.mouseX>=t.left&&this.mouseX<=t.left+t.width&&this.mouseY>=t.top&&this.mouseY<=t.top+t.height},e.findChild=function(t,e){var i=t.matches||t.webkitMatchesSelector||t.mozMatchesSelector||t.msMatchesSelector;return Array.prototype.filter.call(t.children,function(t){return i.call(t,e)})[0]},t}();return or.defaultOptions={autoHide:!0,forceVisible:!1,classNames:{contentEl:"simplebar-content",contentWrapper:"simplebar-content-wrapper",offset:"simplebar-offset",mask:"simplebar-mask",wrapper:"simplebar-wrapper",placeholder:"simplebar-placeholder",scrollbar:"simplebar-scrollbar",track:"simplebar-track",heightAutoObserverWrapperEl:"simplebar-height-auto-observer-wrapper",heightAutoObserverEl:"simplebar-height-auto-observer",visible:"simplebar-visible",horizontal:"simplebar-horizontal",vertical:"simplebar-vertical",hover:"simplebar-hover",dragging:"simplebar-dragging"},scrollbarMinSize:25,scrollbarMaxSize:0,timeout:1e3},nr&&or.initHtmlApi(),or});

/*!
 * pace.js v1.2.4
 * https://github.com/CodeByZach/pace/
 * Licensed MIT © HubSpot, Inc.
 */
!function(){function o(t,e){return function(){return t.apply(e,arguments)}}var u,c,i,s,n,y,t,l,v,r,a,p,e,h,w,b,f,g,d,m,k,S,q,L,x,P,T,R,j,O,E,M,A,C,N,_,F,U,W,X,D,H,I,z,G,B,J=[].slice,K={}.hasOwnProperty,Q=function(t,e){for(var n in e)K.call(e,n)&&(t[n]=e[n]);function r(){this.constructor=t}return r.prototype=e.prototype,t.prototype=new r,t.__super__=e.prototype,t},V=[].indexOf||function(t){for(var e=0,n=this.length;e<n;e++)if(e in this&&this[e]===t)return e;return-1};function Y(){}for(g={className:"",catchupTime:100,initialRate:.03,minTime:250,ghostTime:100,maxProgressPerFrame:20,easeFactor:1.25,startOnPageLoad:!0,restartOnPushState:!0,restartOnRequestAfter:500,target:"body",elements:{checkInterval:100,selectors:["body"]},eventLag:{minSamples:10,sampleCount:3,lagThreshold:3},ajax:{trackMethods:["GET"],trackWebSockets:!0,ignoreURLs:[]}},P=function(){var t;return null!=(t="undefined"!=typeof performance&&null!==performance&&"function"==typeof performance.now?performance.now():void 0)?t:+new Date},R=window.requestAnimationFrame||window.mozRequestAnimationFrame||window.webkitRequestAnimationFrame||window.msRequestAnimationFrame,f=window.cancelAnimationFrame||window.mozCancelAnimationFrame,p=function(t,e,n){if("function"==typeof t.addEventListener)return t.addEventListener(e,n,!1);var r;"function"!=typeof t["on"+e]||"object"!=typeof t["on"+e].eventListeners?(r=new s,"function"==typeof t["on"+e]&&r.on(e,t["on"+e]),t["on"+e]=function(t){return r.trigger(e,t)},t["on"+e].eventListeners=r):r=t["on"+e].eventListeners,r.on(e,n)},null==R&&(R=function(t){return setTimeout(t,50)},f=function(t){return clearTimeout(t)}),O=function(e){var n=P(),r=function(){var t=P()-n;return 33<=t?(n=P(),e(t,function(){return R(r)})):setTimeout(r,33-t)};return r()},j=function(){var t=arguments[0],e=arguments[1],n=3<=arguments.length?J.call(arguments,2):[];return"function"==typeof t[e]?t[e].apply(t,n):t[e]},d=function(){for(var t,e,n,r=arguments[0],s=2<=arguments.length?J.call(arguments,1):[],o=0,i=s.length;o<i;o++)if(e=s[o])for(t in e)K.call(e,t)&&(n=e[t],null!=r[t]&&"object"==typeof r[t]&&null!=n&&"object"==typeof n?d(r[t],n):r[t]=n);return r},h=function(t){for(var e,n,r=e=0,s=0,o=t.length;s<o;s++)n=t[s],r+=Math.abs(n),e++;return r/e},k=function(t,e){var n,r;if(null==t&&(t="options"),null==e&&(e=!0),r=document.querySelector("[data-pace-"+t+"]")){if(n=r.getAttribute("data-pace-"+t),!e)return n;try{return JSON.parse(n)}catch(t){return"undefined"!=typeof console&&null!==console?console.error("Error parsing inline pace options",t):void 0}}},Y.prototype.on=function(t,e,n,r){var s;return null==r&&(r=!1),null==this.bindings&&(this.bindings={}),null==(s=this.bindings)[t]&&(s[t]=[]),this.bindings[t].push({handler:e,ctx:n,once:r})},Y.prototype.once=function(t,e,n){return this.on(t,e,n,!0)},Y.prototype.off=function(t,e){var n,r,s;if(null!=(null!=(r=this.bindings)?r[t]:void 0)){if(null==e)return delete this.bindings[t];for(n=0,s=[];n<this.bindings[t].length;)this.bindings[t][n].handler===e?s.push(this.bindings[t].splice(n,1)):s.push(n++);return s}},Y.prototype.trigger=function(){var t,e,n,r,s,o,i=arguments[0],a=2<=arguments.length?J.call(arguments,1):[];if(null!=(r=this.bindings)&&r[i]){for(n=0,o=[];n<this.bindings[i].length;)e=(s=this.bindings[i][n]).handler,t=s.ctx,s=s.once,e.apply(null!=t?t:this,a),s?o.push(this.bindings[i].splice(n,1)):o.push(n++);return o}},B=Y,y=window.Pace||{},window.Pace=y,d(y,B.prototype),T=y.options=d({},g,window.paceOptions,k()),X=0,H=(z=["ajax","document","eventLag","elements"]).length;X<H;X++)!0===T[C=z[X]]&&(T[C]=g[C]);function Z(){return Z.__super__.constructor.apply(this,arguments)}function $(){this.progress=0}function tt(){this.bindings={}}function et(){var e,o=this;et.__super__.constructor.apply(this,arguments),e=function(r){var s=r.open;return r.open=function(t,e,n){return A(t)&&o.trigger("request",{type:t,url:e,request:r}),s.apply(r,arguments)}},window.XMLHttpRequest=function(t){t=new W(t);return e(t),t};try{m(window.XMLHttpRequest,W)}catch(t){}if(null!=U){window.XDomainRequest=function(){var t=new U;return e(t),t};try{m(window.XDomainRequest,U)}catch(t){}}if(null!=F&&T.ajax.trackWebSockets){window.WebSocket=function(t,e){var n=null!=e?new F(t,e):new F(t);return A("socket")&&o.trigger("request",{type:"socket",url:t,protocols:e,request:n}),n};try{m(window.WebSocket,F)}catch(t){}}}function nt(){this.complete=o(this.complete,this);var t=this;this.elements=[],S().on("request",function(){return t.watch.apply(t,arguments)})}function rt(t){var e,n,r,s;for(null==t&&(t={}),this.complete=o(this.complete,this),this.elements=[],null==t.selectors&&(t.selectors=[]),n=0,r=(s=t.selectors).length;n<r;n++)e=s[n],this.elements.push(new i(e,this.complete))}function st(t,e){this.selector=t,this.completeCallback=e,this.progress=0,this.check()}function ot(){var t,e,n=this;this.progress=null!=(e=this.states[document.readyState])?e:100,t=document.onreadystatechange,document.onreadystatechange=function(){return null!=n.states[document.readyState]&&(n.progress=n.states[document.readyState]),"function"==typeof t?t.apply(null,arguments):void 0}}function it(t){this.source=t,this.last=this.sinceLastUpdate=0,this.rate=T.initialRate,this.catchup=0,this.progress=this.lastProgress=0,null!=this.source&&(this.progress=j(this.source,"progress"))}B=Error,Q(Z,B),n=Z,$.prototype.getElement=function(){var t;if(null==this.el){if(!(t=document.querySelector(T.target)))throw new n;this.el=document.createElement("div"),this.el.className="pace pace-active",document.body.className=document.body.className.replace(/(pace-done )|/,"pace-running ");var e=""!==T.className?" "+T.className:"";this.el.innerHTML='<div class="pace-progress'+e+'">\n  <div class="pace-progress-inner"></div>\n</div>\n<div class="pace-activity"></div>',null!=t.firstChild?t.insertBefore(this.el,t.firstChild):t.appendChild(this.el)}return this.el},$.prototype.finish=function(){var t=this.getElement();return t.className=t.className.replace("pace-active","pace-inactive"),document.body.className=document.body.className.replace("pace-running ","pace-done ")},$.prototype.update=function(t){return this.progress=t,y.trigger("progress",t),this.render()},$.prototype.destroy=function(){try{this.getElement().parentNode.removeChild(this.getElement())}catch(t){n=t}return this.el=void 0},$.prototype.render=function(){var t,e,n,r,s,o,i;if(null==document.querySelector(T.target))return!1;for(t=this.getElement(),r="translate3d("+this.progress+"%, 0, 0)",s=0,o=(i=["webkitTransform","msTransform","transform"]).length;s<o;s++)e=i[s],t.children[0].style[e]=r;return(!this.lastRenderedProgress||this.lastRenderedProgress|0!==this.progress|0)&&(t.children[0].setAttribute("data-progress-text",(0|this.progress)+"%"),100<=this.progress?n="99":(n=this.progress<10?"0":"",n+=0|this.progress),t.children[0].setAttribute("data-progress",""+n)),y.trigger("change",this.progress),this.lastRenderedProgress=this.progress},$.prototype.done=function(){return 100<=this.progress},c=$,tt.prototype.trigger=function(t,e){var n,r,s,o,i;if(null!=this.bindings[t]){for(i=[],r=0,s=(o=this.bindings[t]).length;r<s;r++)n=o[r],i.push(n.call(this,e));return i}},tt.prototype.on=function(t,e){var n;return null==(n=this.bindings)[t]&&(n[t]=[]),this.bindings[t].push(e)},s=tt,W=window.XMLHttpRequest,U=window.XDomainRequest,F=window.WebSocket,m=function(t,e){var n,r=[];for(n in e.prototype)try{null==t[n]&&"function"!=typeof e[n]?"function"==typeof Object.defineProperty?r.push(Object.defineProperty(t,n,{get:function(t){return function(){return e.prototype[t]}}(n),configurable:!0,enumerable:!0})):r.push(t[n]=e.prototype[n]):r.push(void 0)}catch(t){0}return r},L=[],y.ignore=function(){var t=arguments[0],e=2<=arguments.length?J.call(arguments,1):[];return L.unshift("ignore"),e=t.apply(null,e),L.shift(),e},y.track=function(){var t=arguments[0],e=2<=arguments.length?J.call(arguments,1):[];return L.unshift("track"),e=t.apply(null,e),L.shift(),e},A=function(t){if(null==t&&(t="GET"),"track"===L[0])return"force";if(!L.length&&T.ajax){if("socket"===t&&T.ajax.trackWebSockets)return!0;if(t=t.toUpperCase(),0<=V.call(T.ajax.trackMethods,t))return!0}return!1},Q(et,s),t=et,D=null,M=function(t){for(var e,n=T.ajax.ignoreURLs,r=0,s=n.length;r<s;r++)if("string"==typeof(e=n[r])){if(-1!==t.indexOf(e))return!0}else if(e.test(t))return!0;return!1},(S=function(){return D=null==D?new t:D})().on("request",function(t){var o,i=t.type,a=t.request,e=t.url;if(!M(e))return y.running||!1===T.restartOnRequestAfter&&"force"!==A(i)?void 0:(o=arguments,"boolean"==typeof(e=T.restartOnRequestAfter||0)&&(e=0),setTimeout(function(){var t,e,n,r,s="socket"===i?a.readyState<1:0<(s=a.readyState)&&s<4;if(s){for(y.restart(),r=[],t=0,e=(n=y.sources).length;t<e;t++){if((C=n[t])instanceof u){C.watch.apply(C,o);break}r.push(void 0)}return r}},e))}),nt.prototype.watch=function(t){var e=t.type,n=t.request,t=t.url;if(!M(t))return n=new("socket"===e?r:a)(n,this.complete),this.elements.push(n)},nt.prototype.complete=function(e){return this.elements=this.elements.filter(function(t){return t!==e})},u=nt,a=function(e,n){var t,r,s,o,i=this;if(this.progress=0,null!=window.ProgressEvent)for(p(e,"progress",function(t){return t.lengthComputable?i.progress=100*t.loaded/t.total:i.progress=i.progress+(100-i.progress)/2}),t=0,r=(o=["load","abort","timeout","error"]).length;t<r;t++)p(e,o[t],function(){return n(i),i.progress=100});else s=e.onreadystatechange,e.onreadystatechange=function(){var t;return 0===(t=e.readyState)||4===t?(n(i),i.progress=100):3===e.readyState&&(i.progress=50),"function"==typeof s?s.apply(null,arguments):void 0}},r=function(t,e){for(var n,r=this,s=this.progress=0,o=(n=["error","open"]).length;s<o;s++)p(t,n[s],function(){return e(r),r.progress=100})},rt.prototype.complete=function(e){return this.elements=this.elements.filter(function(t){return t!==e})},k=rt,st.prototype.check=function(){var t=this;return document.querySelector(this.selector)?this.done():setTimeout(function(){return t.check()},T.elements.checkInterval)},st.prototype.done=function(){return this.completeCallback(this),this.completeCallback=null,this.progress=100},i=st,ot.prototype.states={loading:0,interactive:50,complete:100},B=ot,Q=function(){var e,n,r,s,o,i=this;this.progress=0,o=[],s=0,r=P(),n=setInterval(function(){var t=P()-r-50;return r=P(),o.push(t),o.length>T.eventLag.sampleCount&&o.shift(),e=h(o),++s>=T.eventLag.minSamples&&e<T.eventLag.lagThreshold?(i.progress=100,clearInterval(n)):i.progress=3/(e+3)*100},50)},it.prototype.tick=function(t,e){return 100<=(e=null==e?j(this.source,"progress"):e)&&(this.done=!0),e===this.last?this.sinceLastUpdate+=t:(this.sinceLastUpdate&&(this.rate=(e-this.last)/this.sinceLastUpdate),this.catchup=(e-this.progress)/T.catchupTime,this.sinceLastUpdate=0,this.last=e),e>this.progress&&(this.progress+=this.catchup*t),e=1-Math.pow(this.progress/100,T.easeFactor),this.progress+=e*this.rate*t,this.progress=Math.min(this.lastProgress+T.maxProgressPerFrame,this.progress),this.progress=Math.max(0,this.progress),this.progress=Math.min(100,this.progress),this.lastProgress=this.progress,this.progress},v=it,b=e=_=w=E=N=null,y.running=!1,q=function(){if(T.restartOnPushState)return y.restart()},null!=window.history.pushState&&(I=window.history.pushState,window.history.pushState=function(){return q(),I.apply(window.history,arguments)}),null!=window.history.replaceState&&(G=window.history.replaceState,window.history.replaceState=function(){return q(),G.apply(window.history,arguments)}),l={ajax:u,elements:k,document:B,eventLag:Q},(x=function(){var t,e,n,r,s,o,i,a;for(y.sources=N=[],e=0,r=(o=["ajax","elements","document","eventLag"]).length;e<r;e++)!1!==T[t=o[e]]&&N.push(new l[t](T[t]));for(n=0,s=(a=null!=(i=T.extraSources)?i:[]).length;n<s;n++)C=a[n],N.push(new C(T));return y.bar=w=new c,E=[],_=new v})(),y.stop=function(){return y.trigger("stop"),y.running=!1,w.destroy(),b=!0,null!=e&&("function"==typeof f&&f(e),e=null),x()},y.restart=function(){return y.trigger("restart"),y.stop(),y.start()},y.go=function(){var m;return y.running=!0,w.render(),m=P(),b=!1,e=O(function(t,e){w.progress;for(var n,r,s,o,i,a,u,c,l,p,h=a=0,f=!0,g=u=0,d=N.length;u<d;g=++u)for(C=N[g],i=null!=E[g]?E[g]:E[g]=[],s=c=0,l=(r=null!=(p=C.elements)?p:[C]).length;c<l;s=++c)o=r[s],f&=(o=null!=i[s]?i[s]:i[s]=new v(o)).done,o.done||(h++,a+=o.tick(t));return n=a/h,w.update(_.tick(t,n)),w.done()||f||b?(w.update(100),y.trigger("done"),setTimeout(function(){return w.finish(),y.running=!1,y.trigger("hide")},Math.max(T.ghostTime,Math.max(T.minTime-(P()-m),0)))):e()})},y.start=function(t){d(T,t),y.running=!0;try{w.render()}catch(t){n=t}return document.querySelector(".pace")?(y.trigger("start"),y.go()):setTimeout(y.start,50)},"function"==typeof define&&define.amd?define(function(){return y}):"object"==typeof exports?module.exports=y:T.startOnPageLoad&&y.start()}.call(this);

/* flatpickr v4.6.13,, @license MIT */ ! function(e, n) {
    "object" == typeof exports && "undefined" != typeof module ? module.exports = n() : "function" == typeof define && define.amd ? define(n) : (e = "undefined" != typeof globalThis ? globalThis : e || self).flatpickr = n()
}(this, (function() {
    "use strict";
    var e = function() {
        return (e = Object.assign || function(e) {
            for (var n, t = 1, a = arguments.length; t < a; t++)
                for (var i in n = arguments[t]) Object.prototype.hasOwnProperty.call(n, i) && (e[i] = n[i]);
            return e
        }).apply(this, arguments)
    };

    function n() {
        for (var e = 0, n = 0, t = arguments.length; n < t; n++) e += arguments[n].length;
        var a = Array(e),
            i = 0;
        for (n = 0; n < t; n++)
            for (var o = arguments[n], r = 0, l = o.length; r < l; r++, i++) a[i] = o[r];
        return a
    }
    var t = ["onChange", "onClose", "onDayCreate", "onDestroy", "onKeyDown", "onMonthChange", "onOpen", "onParseConfig", "onReady", "onValueUpdate", "onYearChange", "onPreCalendarPosition"],
        a = {
            _disable: [],
            allowInput: !1,
            allowInvalidPreload: !1,
            altFormat: "F j, Y",
            altInput: !1,
            altInputClass: "form-control input",
            animate: "object" == typeof window && -1 === window.navigator.userAgent.indexOf("MSIE"),
            ariaDateFormat: "F j, Y",
            autoFillDefaultTime: !0,
            clickOpens: !0,
            closeOnSelect: !0,
            conjunction: ", ",
            dateFormat: "Y-m-d",
            defaultHour: 12,
            defaultMinute: 0,
            defaultSeconds: 0,
            disable: [],
            disableMobile: !1,
            enableSeconds: !1,
            enableTime: !1,
            errorHandler: function(e) {
                return "undefined" != typeof console && console.warn(e)
            },
            getWeek: function(e) {
                var n = new Date(e.getTime());
                n.setHours(0, 0, 0, 0), n.setDate(n.getDate() + 3 - (n.getDay() + 6) % 7);
                var t = new Date(n.getFullYear(), 0, 4);
                return 1 + Math.round(((n.getTime() - t.getTime()) / 864e5 - 3 + (t.getDay() + 6) % 7) / 7)
            },
            hourIncrement: 1,
            ignoredFocusElements: [],
            inline: !1,
            locale: "default",
            minuteIncrement: 5,
            mode: "single",
            monthSelectorType: "dropdown",
            nextArrow: "<svg version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' viewBox='0 0 17 17'><g></g><path d='M13.207 8.472l-7.854 7.854-0.707-0.707 7.146-7.146-7.146-7.148 0.707-0.707 7.854 7.854z' /></svg>",
            noCalendar: !1,
            now: new Date,
            onChange: [],
            onClose: [],
            onDayCreate: [],
            onDestroy: [],
            onKeyDown: [],
            onMonthChange: [],
            onOpen: [],
            onParseConfig: [],
            onReady: [],
            onValueUpdate: [],
            onYearChange: [],
            onPreCalendarPosition: [],
            plugins: [],
            position: "auto",
            positionElement: void 0,
            prevArrow: "<svg version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' viewBox='0 0 17 17'><g></g><path d='M5.207 8.471l7.146 7.147-0.707 0.707-7.853-7.854 7.854-7.853 0.707 0.707-7.147 7.146z' /></svg>",
            shorthandCurrentMonth: !1,
            showMonths: 1,
            static: !1,
            time_24hr: !1,
            weekNumbers: !1,
            wrap: !1
        },
        i = {
            weekdays: {
                shorthand: ["یک", "دو", "سه", "چهار", "پنج", "جمعه", "شنبه"],
                longhand: ["یک", "دو", "سه", "چهار", "پنج", "جمعه", "شنبه"]
            },
            months: {
                shorthand: ["ژانویه", "فوریه", "مارس", "آپریل", "مه", "ژوئن", "جولای", "آگوست", "سپتامبر", "اکتبر", "نوامبر", "دسامبر"],
                longhand: ["ژانویه", "فوریه", "مارس", "آپریل", "مه", "ژوئن", "جولای", "آگوست", "سپتامبر", "اکتبر", "نوامبر", "دسامبر"]
            },
            daysInMonth: [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31],
            firstDayOfWeek: 0,
            ordinal: function(e) {
                var n = e % 100;
                if (n > 3 && n < 21) return "th";
                switch (n % 10) {
                    case 1:
                        return "st";
                    case 2:
                        return "nd";
                    case 3:
                        return "rd";
                    default:
                        return "th"
                }
            },
            rangeSeparator: " to ",
            weekAbbreviation: "Wk",
            scrollTitle: "Scroll to increment",
            toggleTitle: "Click to toggle",
            amPM: ["صبح", "عصر"],
            yearAriaLabel: "سال",
            monthAriaLabel: "ماه",
            hourAriaLabel: "ساعت",
            minuteAriaLabel: "دقیقه",
            time_24hr: !1
        },
        o = function(e, n) {
            return void 0 === n && (n = 2), ("000" + e).slice(-1 * n)
        },
        r = function(e) {
            return !0 === e ? 1 : 0
        };

    function l(e, n) {
        var t;
        return function() {
            var a = this,
                i = arguments;
            clearTimeout(t), t = setTimeout((function() {
                return e.apply(a, i)
            }), n)
        }
    }
    var c = function(e) {
        return e instanceof Array ? e : [e]
    };

    function s(e, n, t) {
        if (!0 === t) return e.classList.add(n);
        e.classList.remove(n)
    }

    function d(e, n, t) {
        var a = window.document.createElement(e);
        return n = n || "", t = t || "", a.className = n, void 0 !== t && (a.textContent = t), a
    }

    function u(e) {
        for (; e.firstChild;) e.removeChild(e.firstChild)
    }

    function f(e, n) {
        return n(e) ? e : e.parentNode ? f(e.parentNode, n) : void 0
    }

    function m(e, n) {
        var t = d("div", "numInputWrapper"),
            a = d("input", "numInput " + e),
            i = d("span", "arrowUp"),
            o = d("span", "arrowDown");
        if (-1 === navigator.userAgent.indexOf("MSIE 9.0") ? a.type = "number" : (a.type = "text", a.pattern = "\\d*"), void 0 !== n)
            for (var r in n) a.setAttribute(r, n[r]);
        return t.appendChild(a), t.appendChild(i), t.appendChild(o), t
    }

    function g(e) {
        try {
            return "function" == typeof e.composedPath ? e.composedPath()[0] : e.target
        } catch (n) {
            return e.target
        }
    }
    var p = function() {},
        h = function(e, n, t) {
            return t.months[n ? "shorthand" : "longhand"][e]
        },
        v = {
            D: p,
            F: function(e, n, t) {
                e.setMonth(t.months.longhand.indexOf(n))
            },
            G: function(e, n) {
                e.setHours((e.getHours() >= 12 ? 12 : 0) + parseFloat(n))
            },
            H: function(e, n) {
                e.setHours(parseFloat(n))
            },
            J: function(e, n) {
                e.setDate(parseFloat(n))
            },
            K: function(e, n, t) {
                e.setHours(e.getHours() % 12 + 12 * r(new RegExp(t.amPM[1], "i").test(n)))
            },
            M: function(e, n, t) {
                e.setMonth(t.months.shorthand.indexOf(n))
            },
            S: function(e, n) {
                e.setSeconds(parseFloat(n))
            },
            U: function(e, n) {
                return new Date(1e3 * parseFloat(n))
            },
            W: function(e, n, t) {
                var a = parseInt(n),
                    i = new Date(e.getFullYear(), 0, 2 + 7 * (a - 1), 0, 0, 0, 0);
                return i.setDate(i.getDate() - i.getDay() + t.firstDayOfWeek), i
            },
            Y: function(e, n) {
                e.setFullYear(parseFloat(n))
            },
            Z: function(e, n) {
                return new Date(n)
            },
            d: function(e, n) {
                e.setDate(parseFloat(n))
            },
            h: function(e, n) {
                e.setHours((e.getHours() >= 12 ? 12 : 0) + parseFloat(n))
            },
            i: function(e, n) {
                e.setMinutes(parseFloat(n))
            },
            j: function(e, n) {
                e.setDate(parseFloat(n))
            },
            l: p,
            m: function(e, n) {
                e.setMonth(parseFloat(n) - 1)
            },
            n: function(e, n) {
                e.setMonth(parseFloat(n) - 1)
            },
            s: function(e, n) {
                e.setSeconds(parseFloat(n))
            },
            u: function(e, n) {
                return new Date(parseFloat(n))
            },
            w: p,
            y: function(e, n) {
                e.setFullYear(2e3 + parseFloat(n))
            }
        },
        D = {
            D: "",
            F: "",
            G: "(\\d\\d|\\d)",
            H: "(\\d\\d|\\d)",
            J: "(\\d\\d|\\d)\\w+",
            K: "",
            M: "",
            S: "(\\d\\d|\\d)",
            U: "(.+)",
            W: "(\\d\\d|\\d)",
            Y: "(\\d{4})",
            Z: "(.+)",
            d: "(\\d\\d|\\d)",
            h: "(\\d\\d|\\d)",
            i: "(\\d\\d|\\d)",
            j: "(\\d\\d|\\d)",
            l: "",
            m: "(\\d\\d|\\d)",
            n: "(\\d\\d|\\d)",
            s: "(\\d\\d|\\d)",
            u: "(.+)",
            w: "(\\d\\d|\\d)",
            y: "(\\d{2})"
        },
        w = {
            Z: function(e) {
                return e.toISOString()
            },
            D: function(e, n, t) {
                return n.weekdays.shorthand[w.w(e, n, t)]
            },
            F: function(e, n, t) {
                return h(w.n(e, n, t) - 1, !1, n)
            },
            G: function(e, n, t) {
                return o(w.h(e, n, t))
            },
            H: function(e) {
                return o(e.getHours())
            },
            J: function(e, n) {
                return void 0 !== n.ordinal ? e.getDate() + n.ordinal(e.getDate()) : e.getDate()
            },
            K: function(e, n) {
                return n.amPM[r(e.getHours() > 11)]
            },
            M: function(e, n) {
                return h(e.getMonth(), !0, n)
            },
            S: function(e) {
                return o(e.getSeconds())
            },
            U: function(e) {
                return e.getTime() / 1e3
            },
            W: function(e, n, t) {
                return t.getWeek(e)
            },
            Y: function(e) {
                return o(e.getFullYear(), 4)
            },
            d: function(e) {
                return o(e.getDate())
            },
            h: function(e) {
                return e.getHours() % 12 ? e.getHours() % 12 : 12
            },
            i: function(e) {
                return o(e.getMinutes())
            },
            j: function(e) {
                return e.getDate()
            },
            l: function(e, n) {
                return n.weekdays.longhand[e.getDay()]
            },
            m: function(e) {
                return o(e.getMonth() + 1)
            },
            n: function(e) {
                return e.getMonth() + 1
            },
            s: function(e) {
                return e.getSeconds()
            },
            u: function(e) {
                return e.getTime()
            },
            w: function(e) {
                return e.getDay()
            },
            y: function(e) {
                return String(e.getFullYear()).substring(2)
            }
        },
        b = function(e) {
            var n = e.config,
                t = void 0 === n ? a : n,
                o = e.l10n,
                r = void 0 === o ? i : o,
                l = e.isMobile,
                c = void 0 !== l && l;
            return function(e, n, a) {
                var i = a || r;
                return void 0 === t.formatDate || c ? n.split("").map((function(n, a, o) {
                    return w[n] && "\\" !== o[a - 1] ? w[n](e, i, t) : "\\" !== n ? n : ""
                })).join("") : t.formatDate(e, n, i)
            }
        },
        C = function(e) {
            var n = e.config,
                t = void 0 === n ? a : n,
                o = e.l10n,
                r = void 0 === o ? i : o;
            return function(e, n, i, o) {
                if (0 === e || e) {
                    var l, c = o || r,
                        s = e;
                    if (e instanceof Date) l = new Date(e.getTime());
                    else if ("string" != typeof e && void 0 !== e.toFixed) l = new Date(e);
                    else if ("string" == typeof e) {
                        var d = n || (t || a).dateFormat,
                            u = String(e).trim();
                        if ("today" === u) l = new Date, i = !0;
                        else if (t && t.parseDate) l = t.parseDate(e, d);
                        else if (/Z$/.test(u) || /GMT$/.test(u)) l = new Date(e);
                        else {
                            for (var f = void 0, m = [], g = 0, p = 0, h = ""; g < d.length; g++) {
                                var w = d[g],
                                    b = "\\" === w,
                                    C = "\\" === d[g - 1] || b;
                                if (D[w] && !C) {
                                    h += D[w];
                                    var M = new RegExp(h).exec(e);
                                    M && (f = !0) && m["Y" !== w ? "push" : "unshift"]({
                                        fn: v[w],
                                        val: M[++p]
                                    })
                                } else b || (h += ".")
                            }
                            l = t && t.noCalendar ? new Date((new Date).setHours(0, 0, 0, 0)) : new Date((new Date).getFullYear(), 0, 1, 0, 0, 0, 0), m.forEach((function(e) {
                                var n = e.fn,
                                    t = e.val;
                                return l = n(l, t, c) || l
                            })), l = f ? l : void 0
                        }
                    }
                    if (l instanceof Date && !isNaN(l.getTime())) return !0 === i && l.setHours(0, 0, 0, 0), l;
                    t.errorHandler(new Error("Invalid date provided: " + s))
                }
            }
        };

    function M(e, n, t) {
        return void 0 === t && (t = !0), !1 !== t ? new Date(e.getTime()).setHours(0, 0, 0, 0) - new Date(n.getTime()).setHours(0, 0, 0, 0) : e.getTime() - n.getTime()
    }
    var y = function(e, n, t) {
            return 3600 * e + 60 * n + t
        },
        x = 864e5;

    function E(e) {
        var n = e.defaultHour,
            t = e.defaultMinute,
            a = e.defaultSeconds;
        if (void 0 !== e.minDate) {
            var i = e.minDate.getHours(),
                o = e.minDate.getMinutes(),
                r = e.minDate.getSeconds();
            n < i && (n = i), n === i && t < o && (t = o), n === i && t === o && a < r && (a = e.minDate.getSeconds())
        }
        if (void 0 !== e.maxDate) {
            var l = e.maxDate.getHours(),
                c = e.maxDate.getMinutes();
            (n = Math.min(n, l)) === l && (t = Math.min(c, t)), n === l && t === c && (a = e.maxDate.getSeconds())
        }
        return {
            hours: n,
            minutes: t,
            seconds: a
        }
    }
    "function" != typeof Object.assign && (Object.assign = function(e) {
        for (var n = [], t = 1; t < arguments.length; t++) n[t - 1] = arguments[t];
        if (!e) throw TypeError("Cannot convert undefined or null to object");
        for (var a = function(n) {
                n && Object.keys(n).forEach((function(t) {
                    return e[t] = n[t]
                }))
            }, i = 0, o = n; i < o.length; i++) {
            var r = o[i];
            a(r)
        }
        return e
    });

    function k(p, v) {
        var w = {
            config: e(e({}, a), I.defaultConfig),
            l10n: i
        };

        function k() {
            var e;
            return (null === (e = w.calendarContainer) || void 0 === e ? void 0 : e.getRootNode()).activeElement || document.activeElement
        }

        function T(e) {
            return e.bind(w)
        }

        function S() {
            var e = w.config;
            !1 === e.weekNumbers && 1 === e.showMonths || !0 !== e.noCalendar && window.requestAnimationFrame((function() {
                if (void 0 !== w.calendarContainer && (w.calendarContainer.style.visibility = "hidden", w.calendarContainer.style.display = "block"), void 0 !== w.daysContainer) {
                    var n = (w.days.offsetWidth + 1) * e.showMonths;
                    w.daysContainer.style.width = n + "px", w.calendarContainer.style.width = n + (void 0 !== w.weekWrapper ? w.weekWrapper.offsetWidth : 0) + "px", w.calendarContainer.style.removeProperty("visibility"), w.calendarContainer.style.removeProperty("display")
                }
            }))
        }

        function _(e) {
            if (0 === w.selectedDates.length) {
                var n = void 0 === w.config.minDate || M(new Date, w.config.minDate) >= 0 ? new Date : new Date(w.config.minDate.getTime()),
                    t = E(w.config);
                n.setHours(t.hours, t.minutes, t.seconds, n.getMilliseconds()), w.selectedDates = [n], w.latestSelectedDateObj = n
            }
            void 0 !== e && "blur" !== e.type && function(e) {
                e.preventDefault();
                var n = "keydown" === e.type,
                    t = g(e),
                    a = t;
                void 0 !== w.amPM && t === w.amPM && (w.amPM.textContent = w.l10n.amPM[r(w.amPM.textContent === w.l10n.amPM[0])]);
                var i = parseFloat(a.getAttribute("min")),
                    l = parseFloat(a.getAttribute("max")),
                    c = parseFloat(a.getAttribute("step")),
                    s = parseInt(a.value, 10),
                    d = e.delta || (n ? 38 === e.which ? 1 : -1 : 0),
                    u = s + c * d;
                if (void 0 !== a.value && 2 === a.value.length) {
                    var f = a === w.hourElement,
                        m = a === w.minuteElement;
                    u < i ? (u = l + u + r(!f) + (r(f) && r(!w.amPM)), m && L(void 0, -1, w.hourElement)) : u > l && (u = a === w.hourElement ? u - l - r(!w.amPM) : i, m && L(void 0, 1, w.hourElement)), w.amPM && f && (1 === c ? u + s === 23 : Math.abs(u - s) > c) && (w.amPM.textContent = w.l10n.amPM[r(w.amPM.textContent === w.l10n.amPM[0])]), a.value = o(u)
                }
            }(e);
            var a = w._input.value;
            O(), ye(), w._input.value !== a && w._debouncedChange()
        }

        function O() {
            if (void 0 !== w.hourElement && void 0 !== w.minuteElement) {
                var e, n, t = (parseInt(w.hourElement.value.slice(-2), 10) || 0) % 24,
                    a = (parseInt(w.minuteElement.value, 10) || 0) % 60,
                    i = void 0 !== w.secondElement ? (parseInt(w.secondElement.value, 10) || 0) % 60 : 0;
                void 0 !== w.amPM && (e = t, n = w.amPM.textContent, t = e % 12 + 12 * r(n === w.l10n.amPM[1]));
                var o = void 0 !== w.config.minTime || w.config.minDate && w.minDateHasTime && w.latestSelectedDateObj && 0 === M(w.latestSelectedDateObj, w.config.minDate, !0),
                    l = void 0 !== w.config.maxTime || w.config.maxDate && w.maxDateHasTime && w.latestSelectedDateObj && 0 === M(w.latestSelectedDateObj, w.config.maxDate, !0);
                if (void 0 !== w.config.maxTime && void 0 !== w.config.minTime && w.config.minTime > w.config.maxTime) {
                    var c = y(w.config.minTime.getHours(), w.config.minTime.getMinutes(), w.config.minTime.getSeconds()),
                        s = y(w.config.maxTime.getHours(), w.config.maxTime.getMinutes(), w.config.maxTime.getSeconds()),
                        d = y(t, a, i);
                    if (d > s && d < c) {
                        var u = function(e) {
                            var n = Math.floor(e / 3600),
                                t = (e - 3600 * n) / 60;
                            return [n, t, e - 3600 * n - 60 * t]
                        }(c);
                        t = u[0], a = u[1], i = u[2]
                    }
                } else {
                    if (l) {
                        var f = void 0 !== w.config.maxTime ? w.config.maxTime : w.config.maxDate;
                        (t = Math.min(t, f.getHours())) === f.getHours() && (a = Math.min(a, f.getMinutes())), a === f.getMinutes() && (i = Math.min(i, f.getSeconds()))
                    }
                    if (o) {
                        var m = void 0 !== w.config.minTime ? w.config.minTime : w.config.minDate;
                        (t = Math.max(t, m.getHours())) === m.getHours() && a < m.getMinutes() && (a = m.getMinutes()), a === m.getMinutes() && (i = Math.max(i, m.getSeconds()))
                    }
                }
                A(t, a, i)
            }
        }

        function F(e) {
            var n = e || w.latestSelectedDateObj;
            n && n instanceof Date && A(n.getHours(), n.getMinutes(), n.getSeconds())
        }

        function A(e, n, t) {
            void 0 !== w.latestSelectedDateObj && w.latestSelectedDateObj.setHours(e % 24, n, t || 0, 0), w.hourElement && w.minuteElement && !w.isMobile && (w.hourElement.value = o(w.config.time_24hr ? e : (12 + e) % 12 + 12 * r(e % 12 == 0)), w.minuteElement.value = o(n), void 0 !== w.amPM && (w.amPM.textContent = w.l10n.amPM[r(e >= 12)]), void 0 !== w.secondElement && (w.secondElement.value = o(t)))
        }

        function N(e) {
            var n = g(e),
                t = parseInt(n.value) + (e.delta || 0);
            (t / 1e3 > 1 || "Enter" === e.key && !/[^\d]/.test(t.toString())) && ee(t)
        }

        function P(e, n, t, a) {
            return n instanceof Array ? n.forEach((function(n) {
                return P(e, n, t, a)
            })) : e instanceof Array ? e.forEach((function(e) {
                return P(e, n, t, a)
            })) : (e.addEventListener(n, t, a), void w._handlers.push({
                remove: function() {
                    return e.removeEventListener(n, t, a)
                }
            }))
        }

        function Y() {
            De("onChange")
        }

        function j(e, n) {
            var t = void 0 !== e ? w.parseDate(e) : w.latestSelectedDateObj || (w.config.minDate && w.config.minDate > w.now ? w.config.minDate : w.config.maxDate && w.config.maxDate < w.now ? w.config.maxDate : w.now),
                a = w.currentYear,
                i = w.currentMonth;
            try {
                void 0 !== t && (w.currentYear = t.getFullYear(), w.currentMonth = t.getMonth())
            } catch (e) {
                e.message = "Invalid date supplied: " + t, w.config.errorHandler(e)
            }
            n && w.currentYear !== a && (De("onYearChange"), q()), !n || w.currentYear === a && w.currentMonth === i || De("onMonthChange"), w.redraw()
        }

        function H(e) {
            var n = g(e);
            ~n.className.indexOf("arrow") && L(e, n.classList.contains("arrowUp") ? 1 : -1)
        }

        function L(e, n, t) {
            var a = e && g(e),
                i = t || a && a.parentNode && a.parentNode.firstChild,
                o = we("increment");
            o.delta = n, i && i.dispatchEvent(o)
        }

        function R(e, n, t, a) {
            var i = ne(n, !0),
                o = d("span", e, n.getDate().toString());
            return o.dateObj = n, o.$i = a, o.setAttribute("aria-label", w.formatDate(n, w.config.ariaDateFormat)), -1 === e.indexOf("hidden") && 0 === M(n, w.now) && (w.todayDateElem = o, o.classList.add("today"), o.setAttribute("aria-current", "date")), i ? (o.tabIndex = -1, be(n) && (o.classList.add("selected"), w.selectedDateElem = o, "range" === w.config.mode && (s(o, "startRange", w.selectedDates[0] && 0 === M(n, w.selectedDates[0], !0)), s(o, "endRange", w.selectedDates[1] && 0 === M(n, w.selectedDates[1], !0)), "nextMonthDay" === e && o.classList.add("inRange")))) : o.classList.add("flatpickr-disabled"), "range" === w.config.mode && function(e) {
                return !("range" !== w.config.mode || w.selectedDates.length < 2) && (M(e, w.selectedDates[0]) >= 0 && M(e, w.selectedDates[1]) <= 0)
            }(n) && !be(n) && o.classList.add("inRange"), w.weekNumbers && 1 === w.config.showMonths && "prevMonthDay" !== e && a % 7 == 6 && w.weekNumbers.insertAdjacentHTML("beforeend", "<span class='flatpickr-day'>" + w.config.getWeek(n) + "</span>"), De("onDayCreate", o), o
        }

        function W(e) {
            e.focus(), "range" === w.config.mode && oe(e)
        }

        function B(e) {
            for (var n = e > 0 ? 0 : w.config.showMonths - 1, t = e > 0 ? w.config.showMonths : -1, a = n; a != t; a += e)
                for (var i = w.daysContainer.children[a], o = e > 0 ? 0 : i.children.length - 1, r = e > 0 ? i.children.length : -1, l = o; l != r; l += e) {
                    var c = i.children[l];
                    if (-1 === c.className.indexOf("hidden") && ne(c.dateObj)) return c
                }
        }

        function J(e, n) {
            var t = k(),
                a = te(t || document.body),
                i = void 0 !== e ? e : a ? t : void 0 !== w.selectedDateElem && te(w.selectedDateElem) ? w.selectedDateElem : void 0 !== w.todayDateElem && te(w.todayDateElem) ? w.todayDateElem : B(n > 0 ? 1 : -1);
            void 0 === i ? w._input.focus() : a ? function(e, n) {
                for (var t = -1 === e.className.indexOf("Month") ? e.dateObj.getMonth() : w.currentMonth, a = n > 0 ? w.config.showMonths : -1, i = n > 0 ? 1 : -1, o = t - w.currentMonth; o != a; o += i)
                    for (var r = w.daysContainer.children[o], l = t - w.currentMonth === o ? e.$i + n : n < 0 ? r.children.length - 1 : 0, c = r.children.length, s = l; s >= 0 && s < c && s != (n > 0 ? c : -1); s += i) {
                        var d = r.children[s];
                        if (-1 === d.className.indexOf("hidden") && ne(d.dateObj) && Math.abs(e.$i - s) >= Math.abs(n)) return W(d)
                    }
                w.changeMonth(i), J(B(i), 0)
            }(i, n) : W(i)
        }

        function K(e, n) {
            for (var t = (new Date(e, n, 1).getDay() - w.l10n.firstDayOfWeek + 7) % 7, a = w.utils.getDaysInMonth((n - 1 + 12) % 12, e), i = w.utils.getDaysInMonth(n, e), o = window.document.createDocumentFragment(), r = w.config.showMonths > 1, l = r ? "prevMonthDay hidden" : "prevMonthDay", c = r ? "nextMonthDay hidden" : "nextMonthDay", s = a + 1 - t, u = 0; s <= a; s++, u++) o.appendChild(R("flatpickr-day " + l, new Date(e, n - 1, s), 0, u));
            for (s = 1; s <= i; s++, u++) o.appendChild(R("flatpickr-day", new Date(e, n, s), 0, u));
            for (var f = i + 1; f <= 42 - t && (1 === w.config.showMonths || u % 7 != 0); f++, u++) o.appendChild(R("flatpickr-day " + c, new Date(e, n + 1, f % i), 0, u));
            var m = d("div", "dayContainer");
            return m.appendChild(o), m
        }

        function U() {
            if (void 0 !== w.daysContainer) {
                u(w.daysContainer), w.weekNumbers && u(w.weekNumbers);
                for (var e = document.createDocumentFragment(), n = 0; n < w.config.showMonths; n++) {
                    var t = new Date(w.currentYear, w.currentMonth, 1);
                    t.setMonth(w.currentMonth + n), e.appendChild(K(t.getFullYear(), t.getMonth()))
                }
                w.daysContainer.appendChild(e), w.days = w.daysContainer.firstChild, "range" === w.config.mode && 1 === w.selectedDates.length && oe()
            }
        }

        function q() {
            if (!(w.config.showMonths > 1 || "dropdown" !== w.config.monthSelectorType)) {
                var e = function(e) {
                    return !(void 0 !== w.config.minDate && w.currentYear === w.config.minDate.getFullYear() && e < w.config.minDate.getMonth()) && !(void 0 !== w.config.maxDate && w.currentYear === w.config.maxDate.getFullYear() && e > w.config.maxDate.getMonth())
                };
                w.monthsDropdownContainer.tabIndex = -1, w.monthsDropdownContainer.innerHTML = "";
                for (var n = 0; n < 12; n++)
                    if (e(n)) {
                        var t = d("option", "flatpickr-monthDropdown-month");
                        t.value = new Date(w.currentYear, n).getMonth().toString(), t.textContent = h(n, w.config.shorthandCurrentMonth, w.l10n), t.tabIndex = -1, w.currentMonth === n && (t.selected = !0), w.monthsDropdownContainer.appendChild(t)
                    }
            }
        }

        function $() {
            var e, n = d("div", "flatpickr-month"),
                t = window.document.createDocumentFragment();
            w.config.showMonths > 1 || "static" === w.config.monthSelectorType ? e = d("span", "cur-month") : (w.monthsDropdownContainer = d("select", "flatpickr-monthDropdown-months"), w.monthsDropdownContainer.setAttribute("aria-label", w.l10n.monthAriaLabel), P(w.monthsDropdownContainer, "change", (function(e) {
                var n = g(e),
                    t = parseInt(n.value, 10);
                w.changeMonth(t - w.currentMonth), De("onMonthChange")
            })), q(), e = w.monthsDropdownContainer);
            var a = m("cur-year", {
                    tabindex: "-1"
                }),
                i = a.getElementsByTagName("input")[0];
            i.setAttribute("aria-label", w.l10n.yearAriaLabel), w.config.minDate && i.setAttribute("min", w.config.minDate.getFullYear().toString()), w.config.maxDate && (i.setAttribute("max", w.config.maxDate.getFullYear().toString()), i.disabled = !!w.config.minDate && w.config.minDate.getFullYear() === w.config.maxDate.getFullYear());
            var o = d("div", "flatpickr-current-month");
            return o.appendChild(e), o.appendChild(a), t.appendChild(o), n.appendChild(t), {
                container: n,
                yearElement: i,
                monthElement: e
            }
        }

        function V() {
            u(w.monthNav), w.monthNav.appendChild(w.prevMonthNav), w.config.showMonths && (w.yearElements = [], w.monthElements = []);
            for (var e = w.config.showMonths; e--;) {
                var n = $();
                w.yearElements.push(n.yearElement), w.monthElements.push(n.monthElement), w.monthNav.appendChild(n.container)
            }
            w.monthNav.appendChild(w.nextMonthNav)
        }

        function z() {
            w.weekdayContainer ? u(w.weekdayContainer) : w.weekdayContainer = d("div", "flatpickr-weekdays");
            for (var e = w.config.showMonths; e--;) {
                var n = d("div", "flatpickr-weekdaycontainer");
                w.weekdayContainer.appendChild(n)
            }
            return G(), w.weekdayContainer
        }

        function G() {
            if (w.weekdayContainer) {
                var e = w.l10n.firstDayOfWeek,
                    t = n(w.l10n.weekdays.shorthand);
                e > 0 && e < t.length && (t = n(t.splice(e, t.length), t.splice(0, e)));
                for (var a = w.config.showMonths; a--;) w.weekdayContainer.children[a].innerHTML = "\n      <span class='flatpickr-weekday'>\n        " + t.join("</span><span class='flatpickr-weekday'>") + "\n      </span>\n      "
            }
        }

        function Z(e, n) {
            void 0 === n && (n = !0);
            var t = n ? e : e - w.currentMonth;
            t < 0 && !0 === w._hidePrevMonthArrow || t > 0 && !0 === w._hideNextMonthArrow || (w.currentMonth += t, (w.currentMonth < 0 || w.currentMonth > 11) && (w.currentYear += w.currentMonth > 11 ? 1 : -1, w.currentMonth = (w.currentMonth + 12) % 12, De("onYearChange"), q()), U(), De("onMonthChange"), Ce())
        }

        function Q(e) {
            return w.calendarContainer.contains(e)
        }

        function X(e) {
            if (w.isOpen && !w.config.inline) {
                var n = g(e),
                    t = Q(n),
                    a = !(n === w.input || n === w.altInput || w.element.contains(n) || e.path && e.path.indexOf && (~e.path.indexOf(w.input) || ~e.path.indexOf(w.altInput))) && !t && !Q(e.relatedTarget),
                    i = !w.config.ignoredFocusElements.some((function(e) {
                        return e.contains(n)
                    }));
                a && i && (w.config.allowInput && w.setDate(w._input.value, !1, w.config.altInput ? w.config.altFormat : w.config.dateFormat), void 0 !== w.timeContainer && void 0 !== w.minuteElement && void 0 !== w.hourElement && "" !== w.input.value && void 0 !== w.input.value && _(), w.close(), w.config && "range" === w.config.mode && 1 === w.selectedDates.length && w.clear(!1))
            }
        }

        function ee(e) {
            if (!(!e || w.config.minDate && e < w.config.minDate.getFullYear() || w.config.maxDate && e > w.config.maxDate.getFullYear())) {
                var n = e,
                    t = w.currentYear !== n;
                w.currentYear = n || w.currentYear, w.config.maxDate && w.currentYear === w.config.maxDate.getFullYear() ? w.currentMonth = Math.min(w.config.maxDate.getMonth(), w.currentMonth) : w.config.minDate && w.currentYear === w.config.minDate.getFullYear() && (w.currentMonth = Math.max(w.config.minDate.getMonth(), w.currentMonth)), t && (w.redraw(), De("onYearChange"), q())
            }
        }

        function ne(e, n) {
            var t;
            void 0 === n && (n = !0);
            var a = w.parseDate(e, void 0, n);
            if (w.config.minDate && a && M(a, w.config.minDate, void 0 !== n ? n : !w.minDateHasTime) < 0 || w.config.maxDate && a && M(a, w.config.maxDate, void 0 !== n ? n : !w.maxDateHasTime) > 0) return !1;
            if (!w.config.enable && 0 === w.config.disable.length) return !0;
            if (void 0 === a) return !1;
            for (var i = !!w.config.enable, o = null !== (t = w.config.enable) && void 0 !== t ? t : w.config.disable, r = 0, l = void 0; r < o.length; r++) {
                if ("function" == typeof(l = o[r]) && l(a)) return i;
                if (l instanceof Date && void 0 !== a && l.getTime() === a.getTime()) return i;
                if ("string" == typeof l) {
                    var c = w.parseDate(l, void 0, !0);
                    return c && c.getTime() === a.getTime() ? i : !i
                }
                if ("object" == typeof l && void 0 !== a && l.from && l.to && a.getTime() >= l.from.getTime() && a.getTime() <= l.to.getTime()) return i
            }
            return !i
        }

        function te(e) {
            return void 0 !== w.daysContainer && (-1 === e.className.indexOf("hidden") && -1 === e.className.indexOf("flatpickr-disabled") && w.daysContainer.contains(e))
        }

        function ae(e) {
            var n = e.target === w._input,
                t = w._input.value.trimEnd() !== Me();
            !n || !t || e.relatedTarget && Q(e.relatedTarget) || w.setDate(w._input.value, !0, e.target === w.altInput ? w.config.altFormat : w.config.dateFormat)
        }

        function ie(e) {
            var n = g(e),
                t = w.config.wrap ? p.contains(n) : n === w._input,
                a = w.config.allowInput,
                i = w.isOpen && (!a || !t),
                o = w.config.inline && t && !a;
            if (13 === e.keyCode && t) {
                if (a) return w.setDate(w._input.value, !0, n === w.altInput ? w.config.altFormat : w.config.dateFormat), w.close(), n.blur();
                w.open()
            } else if (Q(n) || i || o) {
                var r = !!w.timeContainer && w.timeContainer.contains(n);
                switch (e.keyCode) {
                    case 13:
                        r ? (e.preventDefault(), _(), fe()) : me(e);
                        break;
                    case 27:
                        e.preventDefault(), fe();
                        break;
                    case 8:
                    case 46:
                        t && !w.config.allowInput && (e.preventDefault(), w.clear());
                        break;
                    case 37:
                    case 39:
                        if (r || t) w.hourElement && w.hourElement.focus();
                        else {
                            e.preventDefault();
                            var l = k();
                            if (void 0 !== w.daysContainer && (!1 === a || l && te(l))) {
                                var c = 39 === e.keyCode ? 1 : -1;
                                e.ctrlKey ? (e.stopPropagation(), Z(c), J(B(1), 0)) : J(void 0, c)
                            }
                        }
                        break;
                    case 38:
                    case 40:
                        e.preventDefault();
                        var s = 40 === e.keyCode ? 1 : -1;
                        w.daysContainer && void 0 !== n.$i || n === w.input || n === w.altInput ? e.ctrlKey ? (e.stopPropagation(), ee(w.currentYear - s), J(B(1), 0)) : r || J(void 0, 7 * s) : n === w.currentYearElement ? ee(w.currentYear - s) : w.config.enableTime && (!r && w.hourElement && w.hourElement.focus(), _(e), w._debouncedChange());
                        break;
                    case 9:
                        if (r) {
                            var d = [w.hourElement, w.minuteElement, w.secondElement, w.amPM].concat(w.pluginElements).filter((function(e) {
                                    return e
                                })),
                                u = d.indexOf(n);
                            if (-1 !== u) {
                                var f = d[u + (e.shiftKey ? -1 : 1)];
                                e.preventDefault(), (f || w._input).focus()
                            }
                        } else !w.config.noCalendar && w.daysContainer && w.daysContainer.contains(n) && e.shiftKey && (e.preventDefault(), w._input.focus())
                }
            }
            if (void 0 !== w.amPM && n === w.amPM) switch (e.key) {
                case w.l10n.amPM[0].charAt(0):
                case w.l10n.amPM[0].charAt(0).toLowerCase():
                    w.amPM.textContent = w.l10n.amPM[0], O(), ye();
                    break;
                case w.l10n.amPM[1].charAt(0):
                case w.l10n.amPM[1].charAt(0).toLowerCase():
                    w.amPM.textContent = w.l10n.amPM[1], O(), ye()
            }(t || Q(n)) && De("onKeyDown", e)
        }

        function oe(e, n) {
            if (void 0 === n && (n = "flatpickr-day"), 1 === w.selectedDates.length && (!e || e.classList.contains(n) && !e.classList.contains("flatpickr-disabled"))) {
                for (var t = e ? e.dateObj.getTime() : w.days.firstElementChild.dateObj.getTime(), a = w.parseDate(w.selectedDates[0], void 0, !0).getTime(), i = Math.min(t, w.selectedDates[0].getTime()), o = Math.max(t, w.selectedDates[0].getTime()), r = !1, l = 0, c = 0, s = i; s < o; s += x) ne(new Date(s), !0) || (r = r || s > i && s < o, s < a && (!l || s > l) ? l = s : s > a && (!c || s < c) && (c = s));
                Array.from(w.rContainer.querySelectorAll("*:nth-child(-n+" + w.config.showMonths + ") > ." + n)).forEach((function(n) {
                    var i, o, s, d = n.dateObj.getTime(),
                        u = l > 0 && d < l || c > 0 && d > c;
                    if (u) return n.classList.add("notAllowed"), void["inRange", "startRange", "endRange"].forEach((function(e) {
                        n.classList.remove(e)
                    }));
                    r && !u || (["startRange", "inRange", "endRange", "notAllowed"].forEach((function(e) {
                        n.classList.remove(e)
                    })), void 0 !== e && (e.classList.add(t <= w.selectedDates[0].getTime() ? "startRange" : "endRange"), a < t && d === a ? n.classList.add("startRange") : a > t && d === a && n.classList.add("endRange"), d >= l && (0 === c || d <= c) && (o = a, s = t, (i = d) > Math.min(o, s) && i < Math.max(o, s)) && n.classList.add("inRange")))
                }))
            }
        }

        function re() {
            !w.isOpen || w.config.static || w.config.inline || de()
        }

        function le(e) {
            return function(n) {
                var t = w.config["_" + e + "Date"] = w.parseDate(n, w.config.dateFormat),
                    a = w.config["_" + ("min" === e ? "max" : "min") + "Date"];
                void 0 !== t && (w["min" === e ? "minDateHasTime" : "maxDateHasTime"] = t.getHours() > 0 || t.getMinutes() > 0 || t.getSeconds() > 0), w.selectedDates && (w.selectedDates = w.selectedDates.filter((function(e) {
                    return ne(e)
                })), w.selectedDates.length || "min" !== e || F(t), ye()), w.daysContainer && (ue(), void 0 !== t ? w.currentYearElement[e] = t.getFullYear().toString() : w.currentYearElement.removeAttribute(e), w.currentYearElement.disabled = !!a && void 0 !== t && a.getFullYear() === t.getFullYear())
            }
        }

        function ce() {
            return w.config.wrap ? p.querySelector("[data-input]") : p
        }

        function se() {
            "object" != typeof w.config.locale && void 0 === I.l10ns[w.config.locale] && w.config.errorHandler(new Error("flatpickr: invalid locale " + w.config.locale)), w.l10n = e(e({}, I.l10ns.default), "object" == typeof w.config.locale ? w.config.locale : "default" !== w.config.locale ? I.l10ns[w.config.locale] : void 0), D.D = "(" + w.l10n.weekdays.shorthand.join("|") + ")", D.l = "(" + w.l10n.weekdays.longhand.join("|") + ")", D.M = "(" + w.l10n.months.shorthand.join("|") + ")", D.F = "(" + w.l10n.months.longhand.join("|") + ")", D.K = "(" + w.l10n.amPM[0] + "|" + w.l10n.amPM[1] + "|" + w.l10n.amPM[0].toLowerCase() + "|" + w.l10n.amPM[1].toLowerCase() + ")", void 0 === e(e({}, v), JSON.parse(JSON.stringify(p.dataset || {}))).time_24hr && void 0 === I.defaultConfig.time_24hr && (w.config.time_24hr = w.l10n.time_24hr), w.formatDate = b(w), w.parseDate = C({
                config: w.config,
                l10n: w.l10n
            })
        }

        function de(e) {
            if ("function" != typeof w.config.position) {
                if (void 0 !== w.calendarContainer) {
                    De("onPreCalendarPosition");
                    var n = e || w._positionElement,
                        t = Array.prototype.reduce.call(w.calendarContainer.children, (function(e, n) {
                            return e + n.offsetHeight
                        }), 0),
                        a = w.calendarContainer.offsetWidth,
                        i = w.config.position.split(" "),
                        o = i[0],
                        r = i.length > 1 ? i[1] : null,
                        l = n.getBoundingClientRect(),
                        c = window.innerHeight - l.bottom,
                        d = "above" === o || "below" !== o && c < t && l.top > t,
                        u = window.pageYOffset + l.top + (d ? -t - 2 : n.offsetHeight + 2);
                    if (s(w.calendarContainer, "arrowTop", !d), s(w.calendarContainer, "arrowBottom", d), !w.config.inline) {
                        var f = window.pageXOffset + l.left,
                            m = !1,
                            g = !1;
                        "center" === r ? (f -= (a - l.width) / 2, m = !0) : "right" === r && (f -= a - l.width, g = !0), s(w.calendarContainer, "arrowLeft", !m && !g), s(w.calendarContainer, "arrowCenter", m), s(w.calendarContainer, "arrowRight", g);
                        var p = window.document.body.offsetWidth - (window.pageXOffset + l.right),
                            h = f + a > window.document.body.offsetWidth,
                            v = p + a > window.document.body.offsetWidth;
                        if (s(w.calendarContainer, "rightMost", h), !w.config.static)
                            if (w.calendarContainer.style.top = u + "px", h)
                                if (v) {
                                    var D = function() {
                                        for (var e = null, n = 0; n < document.styleSheets.length; n++) {
                                            var t = document.styleSheets[n];
                                            if (t.cssRules) {
                                                try {
                                                    t.cssRules
                                                } catch (e) {
                                                    continue
                                                }
                                                e = t;
                                                break
                                            }
                                        }
                                        return null != e ? e : (a = document.createElement("style"), document.head.appendChild(a), a.sheet);
                                        var a
                                    }();
                                    if (void 0 === D) return;
                                    var b = window.document.body.offsetWidth,
                                        C = Math.max(0, b / 2 - a / 2),
                                        M = D.cssRules.length,
                                        y = "{left:" + l.left + "px;right:auto;}";
                                    s(w.calendarContainer, "rightMost", !1), s(w.calendarContainer, "centerMost", !0), D.insertRule(".flatpickr-calendar.centerMost:before,.flatpickr-calendar.centerMost:after" + y, M), w.calendarContainer.style.left = C + "px", w.calendarContainer.style.right = "auto"
                                } else w.calendarContainer.style.left = "auto", w.calendarContainer.style.right = p + "px";
                        else w.calendarContainer.style.left = f + "px", w.calendarContainer.style.right = "auto"
                    }
                }
            } else w.config.position(w, e)
        }

        function ue() {
            w.config.noCalendar || w.isMobile || (q(), Ce(), U())
        }

        function fe() {
            w._input.focus(), -1 !== window.navigator.userAgent.indexOf("MSIE") || void 0 !== navigator.msMaxTouchPoints ? setTimeout(w.close, 0) : w.close()
        }

        function me(e) {
            e.preventDefault(), e.stopPropagation();
            var n = f(g(e), (function(e) {
                return e.classList && e.classList.contains("flatpickr-day") && !e.classList.contains("flatpickr-disabled") && !e.classList.contains("notAllowed")
            }));
            if (void 0 !== n) {
                var t = n,
                    a = w.latestSelectedDateObj = new Date(t.dateObj.getTime()),
                    i = (a.getMonth() < w.currentMonth || a.getMonth() > w.currentMonth + w.config.showMonths - 1) && "range" !== w.config.mode;
                if (w.selectedDateElem = t, "single" === w.config.mode) w.selectedDates = [a];
                else if ("multiple" === w.config.mode) {
                    var o = be(a);
                    o ? w.selectedDates.splice(parseInt(o), 1) : w.selectedDates.push(a)
                } else "range" === w.config.mode && (2 === w.selectedDates.length && w.clear(!1, !1), w.latestSelectedDateObj = a, w.selectedDates.push(a), 0 !== M(a, w.selectedDates[0], !0) && w.selectedDates.sort((function(e, n) {
                    return e.getTime() - n.getTime()
                })));
                if (O(), i) {
                    var r = w.currentYear !== a.getFullYear();
                    w.currentYear = a.getFullYear(), w.currentMonth = a.getMonth(), r && (De("onYearChange"), q()), De("onMonthChange")
                }
                if (Ce(), U(), ye(), i || "range" === w.config.mode || 1 !== w.config.showMonths ? void 0 !== w.selectedDateElem && void 0 === w.hourElement && w.selectedDateElem && w.selectedDateElem.focus() : W(t), void 0 !== w.hourElement && void 0 !== w.hourElement && w.hourElement.focus(), w.config.closeOnSelect) {
                    var l = "single" === w.config.mode && !w.config.enableTime,
                        c = "range" === w.config.mode && 2 === w.selectedDates.length && !w.config.enableTime;
                    (l || c) && fe()
                }
                Y()
            }
        }
        w.parseDate = C({
            config: w.config,
            l10n: w.l10n
        }), w._handlers = [], w.pluginElements = [], w.loadedPlugins = [], w._bind = P, w._setHoursFromDate = F, w._positionCalendar = de, w.changeMonth = Z, w.changeYear = ee, w.clear = function(e, n) {
            void 0 === e && (e = !0);
            void 0 === n && (n = !0);
            w.input.value = "", void 0 !== w.altInput && (w.altInput.value = "");
            void 0 !== w.mobileInput && (w.mobileInput.value = "");
            w.selectedDates = [], w.latestSelectedDateObj = void 0, !0 === n && (w.currentYear = w._initialDate.getFullYear(), w.currentMonth = w._initialDate.getMonth());
            if (!0 === w.config.enableTime) {
                var t = E(w.config),
                    a = t.hours,
                    i = t.minutes,
                    o = t.seconds;
                A(a, i, o)
            }
            w.redraw(), e && De("onChange")
        }, w.close = function() {
            w.isOpen = !1, w.isMobile || (void 0 !== w.calendarContainer && w.calendarContainer.classList.remove("open"), void 0 !== w._input && w._input.classList.remove("active"));
            De("onClose")
        }, w.onMouseOver = oe, w._createElement = d, w.createDay = R, w.destroy = function() {
            void 0 !== w.config && De("onDestroy");
            for (var e = w._handlers.length; e--;) w._handlers[e].remove();
            if (w._handlers = [], w.mobileInput) w.mobileInput.parentNode && w.mobileInput.parentNode.removeChild(w.mobileInput), w.mobileInput = void 0;
            else if (w.calendarContainer && w.calendarContainer.parentNode)
                if (w.config.static && w.calendarContainer.parentNode) {
                    var n = w.calendarContainer.parentNode;
                    if (n.lastChild && n.removeChild(n.lastChild), n.parentNode) {
                        for (; n.firstChild;) n.parentNode.insertBefore(n.firstChild, n);
                        n.parentNode.removeChild(n)
                    }
                } else w.calendarContainer.parentNode.removeChild(w.calendarContainer);
            w.altInput && (w.input.type = "text", w.altInput.parentNode && w.altInput.parentNode.removeChild(w.altInput), delete w.altInput);
            w.input && (w.input.type = w.input._type, w.input.classList.remove("flatpickr-input"), w.input.removeAttribute("readonly"));
            ["_showTimeInput", "latestSelectedDateObj", "_hideNextMonthArrow", "_hidePrevMonthArrow", "__hideNextMonthArrow", "__hidePrevMonthArrow", "isMobile", "isOpen", "selectedDateElem", "minDateHasTime", "maxDateHasTime", "days", "daysContainer", "_input", "_positionElement", "innerContainer", "rContainer", "monthNav", "todayDateElem", "calendarContainer", "weekdayContainer", "prevMonthNav", "nextMonthNav", "monthsDropdownContainer", "currentMonthElement", "currentYearElement", "navigationCurrentMonth", "selectedDateElem", "config"].forEach((function(e) {
                try {
                    delete w[e]
                } catch (e) {}
            }))
        }, w.isEnabled = ne, w.jumpToDate = j, w.updateValue = ye, w.open = function(e, n) {
            void 0 === n && (n = w._positionElement);
            if (!0 === w.isMobile) {
                if (e) {
                    e.preventDefault();
                    var t = g(e);
                    t && t.blur()
                }
                return void 0 !== w.mobileInput && (w.mobileInput.focus(), w.mobileInput.click()), void De("onOpen")
            }
            if (w._input.disabled || w.config.inline) return;
            var a = w.isOpen;
            w.isOpen = !0, a || (w.calendarContainer.classList.add("open"), w._input.classList.add("active"), De("onOpen"), de(n));
            !0 === w.config.enableTime && !0 === w.config.noCalendar && (!1 !== w.config.allowInput || void 0 !== e && w.timeContainer.contains(e.relatedTarget) || setTimeout((function() {
                return w.hourElement.select()
            }), 50))
        }, w.redraw = ue, w.set = function(e, n) {
            if (null !== e && "object" == typeof e)
                for (var a in Object.assign(w.config, e), e) void 0 !== ge[a] && ge[a].forEach((function(e) {
                    return e()
                }));
            else w.config[e] = n, void 0 !== ge[e] ? ge[e].forEach((function(e) {
                return e()
            })) : t.indexOf(e) > -1 && (w.config[e] = c(n));
            w.redraw(), ye(!0)
        }, w.setDate = function(e, n, t) {
            void 0 === n && (n = !1);
            void 0 === t && (t = w.config.dateFormat);
            if (0 !== e && !e || e instanceof Array && 0 === e.length) return w.clear(n);
            pe(e, t), w.latestSelectedDateObj = w.selectedDates[w.selectedDates.length - 1], w.redraw(), j(void 0, n), F(), 0 === w.selectedDates.length && w.clear(!1);
            ye(n), n && De("onChange")
        }, w.toggle = function(e) {
            if (!0 === w.isOpen) return w.close();
            w.open(e)
        };
        var ge = {
            locale: [se, G],
            showMonths: [V, S, z],
            minDate: [j],
            maxDate: [j],
            positionElement: [ve],
            clickOpens: [function() {
                !0 === w.config.clickOpens ? (P(w._input, "focus", w.open), P(w._input, "click", w.open)) : (w._input.removeEventListener("focus", w.open), w._input.removeEventListener("click", w.open))
            }]
        };

        function pe(e, n) {
            var t = [];
            if (e instanceof Array) t = e.map((function(e) {
                return w.parseDate(e, n)
            }));
            else if (e instanceof Date || "number" == typeof e) t = [w.parseDate(e, n)];
            else if ("string" == typeof e) switch (w.config.mode) {
                case "single":
                case "time":
                    t = [w.parseDate(e, n)];
                    break;
                case "multiple":
                    t = e.split(w.config.conjunction).map((function(e) {
                        return w.parseDate(e, n)
                    }));
                    break;
                case "range":
                    t = e.split(w.l10n.rangeSeparator).map((function(e) {
                        return w.parseDate(e, n)
                    }))
            } else w.config.errorHandler(new Error("Invalid date supplied: " + JSON.stringify(e)));
            w.selectedDates = w.config.allowInvalidPreload ? t : t.filter((function(e) {
                return e instanceof Date && ne(e, !1)
            })), "range" === w.config.mode && w.selectedDates.sort((function(e, n) {
                return e.getTime() - n.getTime()
            }))
        }

        function he(e) {
            return e.slice().map((function(e) {
                return "string" == typeof e || "number" == typeof e || e instanceof Date ? w.parseDate(e, void 0, !0) : e && "object" == typeof e && e.from && e.to ? {
                    from: w.parseDate(e.from, void 0),
                    to: w.parseDate(e.to, void 0)
                } : e
            })).filter((function(e) {
                return e
            }))
        }

        function ve() {
            w._positionElement = w.config.positionElement || w._input
        }

        function De(e, n) {
            if (void 0 !== w.config) {
                var t = w.config[e];
                if (void 0 !== t && t.length > 0)
                    for (var a = 0; t[a] && a < t.length; a++) t[a](w.selectedDates, w.input.value, w, n);
                "onChange" === e && (w.input.dispatchEvent(we("change")), w.input.dispatchEvent(we("input")))
            }
        }

        function we(e) {
            var n = document.createEvent("Event");
            return n.initEvent(e, !0, !0), n
        }

        function be(e) {
            for (var n = 0; n < w.selectedDates.length; n++) {
                var t = w.selectedDates[n];
                if (t instanceof Date && 0 === M(t, e)) return "" + n
            }
            return !1
        }

        function Ce() {
            w.config.noCalendar || w.isMobile || !w.monthNav || (w.yearElements.forEach((function(e, n) {
                var t = new Date(w.currentYear, w.currentMonth, 1);
                t.setMonth(w.currentMonth + n), w.config.showMonths > 1 || "static" === w.config.monthSelectorType ? w.monthElements[n].textContent = h(t.getMonth(), w.config.shorthandCurrentMonth, w.l10n) + " " : w.monthsDropdownContainer.value = t.getMonth().toString(), e.value = t.getFullYear().toString()
            })), w._hidePrevMonthArrow = void 0 !== w.config.minDate && (w.currentYear === w.config.minDate.getFullYear() ? w.currentMonth <= w.config.minDate.getMonth() : w.currentYear < w.config.minDate.getFullYear()), w._hideNextMonthArrow = void 0 !== w.config.maxDate && (w.currentYear === w.config.maxDate.getFullYear() ? w.currentMonth + 1 > w.config.maxDate.getMonth() : w.currentYear > w.config.maxDate.getFullYear()))
        }

        function Me(e) {
            var n = e || (w.config.altInput ? w.config.altFormat : w.config.dateFormat);
            return w.selectedDates.map((function(e) {
                return w.formatDate(e, n)
            })).filter((function(e, n, t) {
                return "range" !== w.config.mode || w.config.enableTime || t.indexOf(e) === n
            })).join("range" !== w.config.mode ? w.config.conjunction : w.l10n.rangeSeparator)
        }

        function ye(e) {
            void 0 === e && (e = !0), void 0 !== w.mobileInput && w.mobileFormatStr && (w.mobileInput.value = void 0 !== w.latestSelectedDateObj ? w.formatDate(w.latestSelectedDateObj, w.mobileFormatStr) : ""), w.input.value = Me(w.config.dateFormat), void 0 !== w.altInput && (w.altInput.value = Me(w.config.altFormat)), !1 !== e && De("onValueUpdate")
        }

        function xe(e) {
            var n = g(e),
                t = w.prevMonthNav.contains(n),
                a = w.nextMonthNav.contains(n);
            t || a ? Z(t ? -1 : 1) : w.yearElements.indexOf(n) >= 0 ? n.select() : n.classList.contains("arrowUp") ? w.changeYear(w.currentYear + 1) : n.classList.contains("arrowDown") && w.changeYear(w.currentYear - 1)
        }
        return function() {
            w.element = w.input = p, w.isOpen = !1,
                function() {
                    var n = ["wrap", "weekNumbers", "allowInput", "allowInvalidPreload", "clickOpens", "time_24hr", "enableTime", "noCalendar", "altInput", "shorthandCurrentMonth", "inline", "static", "enableSeconds", "disableMobile"],
                        i = e(e({}, JSON.parse(JSON.stringify(p.dataset || {}))), v),
                        o = {};
                    w.config.parseDate = i.parseDate, w.config.formatDate = i.formatDate, Object.defineProperty(w.config, "enable", {
                        get: function() {
                            return w.config._enable
                        },
                        set: function(e) {
                            w.config._enable = he(e)
                        }
                    }), Object.defineProperty(w.config, "disable", {
                        get: function() {
                            return w.config._disable
                        },
                        set: function(e) {
                            w.config._disable = he(e)
                        }
                    });
                    var r = "time" === i.mode;
                    if (!i.dateFormat && (i.enableTime || r)) {
                        var l = I.defaultConfig.dateFormat || a.dateFormat;
                        o.dateFormat = i.noCalendar || r ? "H:i" + (i.enableSeconds ? ":S" : "") : l + " H:i" + (i.enableSeconds ? ":S" : "")
                    }
                    if (i.altInput && (i.enableTime || r) && !i.altFormat) {
                        var s = I.defaultConfig.altFormat || a.altFormat;
                        o.altFormat = i.noCalendar || r ? "h:i" + (i.enableSeconds ? ":S K" : " K") : s + " h:i" + (i.enableSeconds ? ":S" : "") + " K"
                    }
                    Object.defineProperty(w.config, "minDate", {
                        get: function() {
                            return w.config._minDate
                        },
                        set: le("min")
                    }), Object.defineProperty(w.config, "maxDate", {
                        get: function() {
                            return w.config._maxDate
                        },
                        set: le("max")
                    });
                    var d = function(e) {
                        return function(n) {
                            w.config["min" === e ? "_minTime" : "_maxTime"] = w.parseDate(n, "H:i:S")
                        }
                    };
                    Object.defineProperty(w.config, "minTime", {
                        get: function() {
                            return w.config._minTime
                        },
                        set: d("min")
                    }), Object.defineProperty(w.config, "maxTime", {
                        get: function() {
                            return w.config._maxTime
                        },
                        set: d("max")
                    }), "time" === i.mode && (w.config.noCalendar = !0, w.config.enableTime = !0);
                    Object.assign(w.config, o, i);
                    for (var u = 0; u < n.length; u++) w.config[n[u]] = !0 === w.config[n[u]] || "true" === w.config[n[u]];
                    t.filter((function(e) {
                        return void 0 !== w.config[e]
                    })).forEach((function(e) {
                        w.config[e] = c(w.config[e] || []).map(T)
                    })), w.isMobile = !w.config.disableMobile && !w.config.inline && "single" === w.config.mode && !w.config.disable.length && !w.config.enable && !w.config.weekNumbers && /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);
                    for (u = 0; u < w.config.plugins.length; u++) {
                        var f = w.config.plugins[u](w) || {};
                        for (var m in f) t.indexOf(m) > -1 ? w.config[m] = c(f[m]).map(T).concat(w.config[m]) : void 0 === i[m] && (w.config[m] = f[m])
                    }
                    i.altInputClass || (w.config.altInputClass = ce().className + " " + w.config.altInputClass);
                    De("onParseConfig")
                }(), se(),
                function() {
                    if (w.input = ce(), !w.input) return void w.config.errorHandler(new Error("Invalid input element specified"));
                    w.input._type = w.input.type, w.input.type = "text", w.input.classList.add("flatpickr-input"), w._input = w.input, w.config.altInput && (w.altInput = d(w.input.nodeName, w.config.altInputClass), w._input = w.altInput, w.altInput.placeholder = w.input.placeholder, w.altInput.disabled = w.input.disabled, w.altInput.required = w.input.required, w.altInput.tabIndex = w.input.tabIndex, w.altInput.type = "text", w.input.setAttribute("type", "hidden"), !w.config.static && w.input.parentNode && w.input.parentNode.insertBefore(w.altInput, w.input.nextSibling));
                    w.config.allowInput || w._input.setAttribute("readonly", "readonly");
                    ve()
                }(),
                function() {
                    w.selectedDates = [], w.now = w.parseDate(w.config.now) || new Date;
                    var e = w.config.defaultDate || ("INPUT" !== w.input.nodeName && "TEXTAREA" !== w.input.nodeName || !w.input.placeholder || w.input.value !== w.input.placeholder ? w.input.value : null);
                    e && pe(e, w.config.dateFormat);
                    w._initialDate = w.selectedDates.length > 0 ? w.selectedDates[0] : w.config.minDate && w.config.minDate.getTime() > w.now.getTime() ? w.config.minDate : w.config.maxDate && w.config.maxDate.getTime() < w.now.getTime() ? w.config.maxDate : w.now, w.currentYear = w._initialDate.getFullYear(), w.currentMonth = w._initialDate.getMonth(), w.selectedDates.length > 0 && (w.latestSelectedDateObj = w.selectedDates[0]);
                    void 0 !== w.config.minTime && (w.config.minTime = w.parseDate(w.config.minTime, "H:i"));
                    void 0 !== w.config.maxTime && (w.config.maxTime = w.parseDate(w.config.maxTime, "H:i"));
                    w.minDateHasTime = !!w.config.minDate && (w.config.minDate.getHours() > 0 || w.config.minDate.getMinutes() > 0 || w.config.minDate.getSeconds() > 0), w.maxDateHasTime = !!w.config.maxDate && (w.config.maxDate.getHours() > 0 || w.config.maxDate.getMinutes() > 0 || w.config.maxDate.getSeconds() > 0)
                }(), w.utils = {
                    getDaysInMonth: function(e, n) {
                        return void 0 === e && (e = w.currentMonth), void 0 === n && (n = w.currentYear), 1 === e && (n % 4 == 0 && n % 100 != 0 || n % 400 == 0) ? 29 : w.l10n.daysInMonth[e]
                    }
                }, w.isMobile || function() {
                    var e = window.document.createDocumentFragment();
                    if (w.calendarContainer = d("div", "flatpickr-calendar"), w.calendarContainer.tabIndex = -1, !w.config.noCalendar) {
                        if (e.appendChild((w.monthNav = d("div", "flatpickr-months"), w.yearElements = [], w.monthElements = [], w.prevMonthNav = d("span", "flatpickr-next-month"), w.prevMonthNav.innerHTML = w.config.prevArrow, w.nextMonthNav = d("span", "flatpickr-prev-month"), w.nextMonthNav.innerHTML = w.config.nextArrow, V(), Object.defineProperty(w, "_hidePrevMonthArrow", {
                                get: function() {
                                    return w.__hidePrevMonthArrow
                                },
                                set: function(e) {
                                    w.__hidePrevMonthArrow !== e && (s(w.prevMonthNav, "flatpickr-disabled", e), w.__hidePrevMonthArrow = e)
                                }
                            }), Object.defineProperty(w, "_hideNextMonthArrow", {
                                get: function() {
                                    return w.__hideNextMonthArrow
                                },
                                set: function(e) {
                                    w.__hideNextMonthArrow !== e && (s(w.nextMonthNav, "flatpickr-disabled", e), w.__hideNextMonthArrow = e)
                                }
                            }), w.currentYearElement = w.yearElements[0], Ce(), w.monthNav)), w.innerContainer = d("div", "flatpickr-innerContainer"), w.config.weekNumbers) {
                            var n = function() {
                                    w.calendarContainer.classList.add("hasWeeks");
                                    var e = d("div", "flatpickr-weekwrapper");
                                    e.appendChild(d("span", "flatpickr-weekday", w.l10n.weekAbbreviation));
                                    var n = d("div", "flatpickr-weeks");
                                    return e.appendChild(n), {
                                        weekWrapper: e,
                                        weekNumbers: n
                                    }
                                }(),
                                t = n.weekWrapper,
                                a = n.weekNumbers;
                            w.innerContainer.appendChild(t), w.weekNumbers = a, w.weekWrapper = t
                        }
                        w.rContainer = d("div", "flatpickr-rContainer"), w.rContainer.appendChild(z()), w.daysContainer || (w.daysContainer = d("div", "flatpickr-days"), w.daysContainer.tabIndex = -1), U(), w.rContainer.appendChild(w.daysContainer), w.innerContainer.appendChild(w.rContainer), e.appendChild(w.innerContainer)
                    }
                    w.config.enableTime && e.appendChild(function() {
                        w.calendarContainer.classList.add("hasTime"), w.config.noCalendar && w.calendarContainer.classList.add("noCalendar");
                        var e = E(w.config);
                        w.timeContainer = d("div", "flatpickr-time"), w.timeContainer.tabIndex = -1;
                        var n = d("span", "flatpickr-time-separator", ":"),
                            t = m("flatpickr-hour", {
                                "aria-label": w.l10n.hourAriaLabel
                            });
                        w.hourElement = t.getElementsByTagName("input")[0];
                        var a = m("flatpickr-minute", {
                            "aria-label": w.l10n.minuteAriaLabel
                        });
                        w.minuteElement = a.getElementsByTagName("input")[0], w.hourElement.tabIndex = w.minuteElement.tabIndex = -1, w.hourElement.value = o(w.latestSelectedDateObj ? w.latestSelectedDateObj.getHours() : w.config.time_24hr ? e.hours : function(e) {
                            switch (e % 24) {
                                case 0:
                                case 12:
                                    return 12;
                                default:
                                    return e % 12
                            }
                        }(e.hours)), w.minuteElement.value = o(w.latestSelectedDateObj ? w.latestSelectedDateObj.getMinutes() : e.minutes), w.hourElement.setAttribute("step", w.config.hourIncrement.toString()), w.minuteElement.setAttribute("step", w.config.minuteIncrement.toString()), w.hourElement.setAttribute("min", w.config.time_24hr ? "0" : "1"), w.hourElement.setAttribute("max", w.config.time_24hr ? "23" : "12"), w.hourElement.setAttribute("maxlength", "2"), w.minuteElement.setAttribute("min", "0"), w.minuteElement.setAttribute("max", "59"), w.minuteElement.setAttribute("maxlength", "2"), w.timeContainer.appendChild(t), w.timeContainer.appendChild(n), w.timeContainer.appendChild(a), w.config.time_24hr && w.timeContainer.classList.add("time24hr");
                        if (w.config.enableSeconds) {
                            w.timeContainer.classList.add("hasSeconds");
                            var i = m("flatpickr-second");
                            w.secondElement = i.getElementsByTagName("input")[0], w.secondElement.value = o(w.latestSelectedDateObj ? w.latestSelectedDateObj.getSeconds() : e.seconds), w.secondElement.setAttribute("step", w.minuteElement.getAttribute("step")), w.secondElement.setAttribute("min", "0"), w.secondElement.setAttribute("max", "59"), w.secondElement.setAttribute("maxlength", "2"), w.timeContainer.appendChild(d("span", "flatpickr-time-separator", ":")), w.timeContainer.appendChild(i)
                        }
                        w.config.time_24hr || (w.amPM = d("span", "flatpickr-am-pm", w.l10n.amPM[r((w.latestSelectedDateObj ? w.hourElement.value : w.config.defaultHour) > 11)]), w.amPM.title = w.l10n.toggleTitle, w.amPM.tabIndex = -1, w.timeContainer.appendChild(w.amPM));
                        return w.timeContainer
                    }());
                    s(w.calendarContainer, "rangeMode", "range" === w.config.mode), s(w.calendarContainer, "animate", !0 === w.config.animate), s(w.calendarContainer, "multiMonth", w.config.showMonths > 1), w.calendarContainer.appendChild(e);
                    var i = void 0 !== w.config.appendTo && void 0 !== w.config.appendTo.nodeType;
                    if ((w.config.inline || w.config.static) && (w.calendarContainer.classList.add(w.config.inline ? "inline" : "static"), w.config.inline && (!i && w.element.parentNode ? w.element.parentNode.insertBefore(w.calendarContainer, w._input.nextSibling) : void 0 !== w.config.appendTo && w.config.appendTo.appendChild(w.calendarContainer)), w.config.static)) {
                        var l = d("div", "flatpickr-wrapper");
                        w.element.parentNode && w.element.parentNode.insertBefore(l, w.element), l.appendChild(w.element), w.altInput && l.appendChild(w.altInput), l.appendChild(w.calendarContainer)
                    }
                    w.config.static || w.config.inline || (void 0 !== w.config.appendTo ? w.config.appendTo : window.document.body).appendChild(w.calendarContainer)
                }(),
                function() {
                    w.config.wrap && ["open", "close", "toggle", "clear"].forEach((function(e) {
                        Array.prototype.forEach.call(w.element.querySelectorAll("[data-" + e + "]"), (function(n) {
                            return P(n, "click", w[e])
                        }))
                    }));
                    if (w.isMobile) return void

                    function() {
                        var e = w.config.enableTime ? w.config.noCalendar ? "time" : "datetime-local" : "date";
                        w.mobileInput = d("input", w.input.className + " flatpickr-mobile"), w.mobileInput.tabIndex = 1, w.mobileInput.type = e, w.mobileInput.disabled = w.input.disabled, w.mobileInput.required = w.input.required, w.mobileInput.placeholder = w.input.placeholder, w.mobileFormatStr = "datetime-local" === e ? "Y-m-d\\TH:i:S" : "date" === e ? "Y-m-d" : "H:i:S", w.selectedDates.length > 0 && (w.mobileInput.defaultValue = w.mobileInput.value = w.formatDate(w.selectedDates[0], w.mobileFormatStr));
                        w.config.minDate && (w.mobileInput.min = w.formatDate(w.config.minDate, "Y-m-d"));
                        w.config.maxDate && (w.mobileInput.max = w.formatDate(w.config.maxDate, "Y-m-d"));
                        w.input.getAttribute("step") && (w.mobileInput.step = String(w.input.getAttribute("step")));
                        w.input.type = "hidden", void 0 !== w.altInput && (w.altInput.type = "hidden");
                        try {
                            w.input.parentNode && w.input.parentNode.insertBefore(w.mobileInput, w.input.nextSibling)
                        } catch (e) {}
                        P(w.mobileInput, "change", (function(e) {
                            w.setDate(g(e).value, !1, w.mobileFormatStr), De("onChange"), De("onClose")
                        }))
                    }();
                    var e = l(re, 50);
                    w._debouncedChange = l(Y, 300), w.daysContainer && !/iPhone|iPad|iPod/i.test(navigator.userAgent) && P(w.daysContainer, "mouseover", (function(e) {
                        "range" === w.config.mode && oe(g(e))
                    }));
                    P(w._input, "keydown", ie), void 0 !== w.calendarContainer && P(w.calendarContainer, "keydown", ie);
                    w.config.inline || w.config.static || P(window, "resize", e);
                    void 0 !== window.ontouchstart ? P(window.document, "touchstart", X) : P(window.document, "mousedown", X);
                    P(window.document, "focus", X, {
                        capture: !0
                    }), !0 === w.config.clickOpens && (P(w._input, "focus", w.open), P(w._input, "click", w.open));
                    void 0 !== w.daysContainer && (P(w.monthNav, "click", xe), P(w.monthNav, ["keyup", "increment"], N), P(w.daysContainer, "click", me));
                    if (void 0 !== w.timeContainer && void 0 !== w.minuteElement && void 0 !== w.hourElement) {
                        var n = function(e) {
                            return g(e).select()
                        };
                        P(w.timeContainer, ["increment"], _), P(w.timeContainer, "blur", _, {
                            capture: !0
                        }), P(w.timeContainer, "click", H), P([w.hourElement, w.minuteElement], ["focus", "click"], n), void 0 !== w.secondElement && P(w.secondElement, "focus", (function() {
                            return w.secondElement && w.secondElement.select()
                        })), void 0 !== w.amPM && P(w.amPM, "click", (function(e) {
                            _(e)
                        }))
                    }
                    w.config.allowInput && P(w._input, "blur", ae)
                }(), (w.selectedDates.length || w.config.noCalendar) && (w.config.enableTime && F(w.config.noCalendar ? w.latestSelectedDateObj : void 0), ye(!1)), S();
            var n = /^((?!chrome|android).)*safari/i.test(navigator.userAgent);
            !w.isMobile && n && de(), De("onReady")
        }(), w
    }

    function T(e, n) {
        for (var t = Array.prototype.slice.call(e).filter((function(e) {
                return e instanceof HTMLElement
            })), a = [], i = 0; i < t.length; i++) {
            var o = t[i];
            try {
                if (null !== o.getAttribute("data-fp-omit")) continue;
                void 0 !== o._flatpickr && (o._flatpickr.destroy(), o._flatpickr = void 0), o._flatpickr = k(o, n || {}), a.push(o._flatpickr)
            } catch (e) {
                console.error(e)
            }
        }
        return 1 === a.length ? a[0] : a
    }
    "undefined" != typeof HTMLElement && "undefined" != typeof HTMLCollection && "undefined" != typeof NodeList && (HTMLCollection.prototype.flatpickr = NodeList.prototype.flatpickr = function(e) {
        return T(this, e)
    }, HTMLElement.prototype.flatpickr = function(e) {
        return T([this], e)
    });
    var I = function(e, n) {
        return "string" == typeof e ? T(window.document.querySelectorAll(e), n) : e instanceof Node ? T([e], n) : T(e, n)
    };
    return I.defaultConfig = {}, I.l10ns = {
        en: e({}, i),
        default: e({}, i)
    }, I.localize = function(n) {
        I.l10ns.default = e(e({}, I.l10ns.default), n)
    }, I.setDefaults = function(n) {
        I.defaultConfig = e(e({}, I.defaultConfig), n)
    }, I.parseDate = C({}), I.formatDate = b({}), I.compareDates = M, "undefined" != typeof jQuery && void 0 !== jQuery.fn && (jQuery.fn.flatpickr = function(e) {
        return T(this, e)
    }), Date.prototype.fp_incr = function(e) {
        return new Date(this.getFullYear(), this.getMonth(), this.getDate() + ("string" == typeof e ? parseInt(e, 10) : e))
    }, "undefined" != typeof window && (window.flatpickr = I), I
}));
/*!
 * ApexCharts v3.35.4
 * (c) 2018-2022 ApexCharts
 * Released under the MIT License.
 */
! function(t, e) {
    "object" == typeof exports && "undefined" != typeof module ? module.exports = e() : "function" == typeof define && define.amd ? define(e) : (t = "undefined" != typeof globalThis ? globalThis : t || self).ApexCharts = e()
}(this, (function() {
    "use strict";

    function t(t, e) {
        var i = Object.keys(t);
        if (Object.getOwnPropertySymbols) {
            var a = Object.getOwnPropertySymbols(t);
            e && (a = a.filter((function(e) {
                return Object.getOwnPropertyDescriptor(t, e).enumerable
            }))), i.push.apply(i, a)
        }
        return i
    }

    function e(e) {
        for (var i = 1; i < arguments.length; i++) {
            var a = null != arguments[i] ? arguments[i] : {};
            i % 2 ? t(Object(a), !0).forEach((function(t) {
                o(e, t, a[t])
            })) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(a)) : t(Object(a)).forEach((function(t) {
                Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(a, t))
            }))
        }
        return e
    }

    function i(t) {
        return (i = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
            return typeof t
        } : function(t) {
            return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t
        })(t)
    }

    function a(t, e) {
        if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function")
    }

    function s(t, e) {
        for (var i = 0; i < e.length; i++) {
            var a = e[i];
            a.enumerable = a.enumerable || !1, a.configurable = !0, "value" in a && (a.writable = !0), Object.defineProperty(t, a.key, a)
        }
    }

    function r(t, e, i) {
        return e && s(t.prototype, e), i && s(t, i), t
    }

    function o(t, e, i) {
        return e in t ? Object.defineProperty(t, e, {
            value: i,
            enumerable: !0,
            configurable: !0,
            writable: !0
        }) : t[e] = i, t
    }

    function n(t, e) {
        if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function");
        t.prototype = Object.create(e && e.prototype, {
            constructor: {
                value: t,
                writable: !0,
                configurable: !0
            }
        }), e && h(t, e)
    }

    function l(t) {
        return (l = Object.setPrototypeOf ? Object.getPrototypeOf : function(t) {
            return t.__proto__ || Object.getPrototypeOf(t)
        })(t)
    }

    function h(t, e) {
        return (h = Object.setPrototypeOf || function(t, e) {
            return t.__proto__ = e, t
        })(t, e)
    }

    function c(t, e) {
        if (e && ("object" == typeof e || "function" == typeof e)) return e;
        if (void 0 !== e) throw new TypeError("Derived constructors may only return object or undefined");
        return function(t) {
            if (void 0 === t) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            return t
        }(t)
    }

    function d(t) {
        var e = function() {
            if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
            if (Reflect.construct.sham) return !1;
            if ("function" == typeof Proxy) return !0;
            try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], (function() {}))), !0
            } catch (t) {
                return !1
            }
        }();
        return function() {
            var i, a = l(t);
            if (e) {
                var s = l(this).constructor;
                i = Reflect.construct(a, arguments, s)
            } else i = a.apply(this, arguments);
            return c(this, i)
        }
    }

    function g(t, e) {
        return function(t) {
            if (Array.isArray(t)) return t
        }(t) || function(t, e) {
            var i = null == t ? null : "undefined" != typeof Symbol && t[Symbol.iterator] || t["@@iterator"];
            if (null == i) return;
            var a, s, r = [],
                o = !0,
                n = !1;
            try {
                for (i = i.call(t); !(o = (a = i.next()).done) && (r.push(a.value), !e || r.length !== e); o = !0);
            } catch (t) {
                n = !0, s = t
            } finally {
                try {
                    o || null == i.return || i.return()
                } finally {
                    if (n) throw s
                }
            }
            return r
        }(t, e) || f(t, e) || function() {
            throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
        }()
    }

    function u(t) {
        return function(t) {
            if (Array.isArray(t)) return p(t)
        }(t) || function(t) {
            if ("undefined" != typeof Symbol && null != t[Symbol.iterator] || null != t["@@iterator"]) return Array.from(t)
        }(t) || f(t) || function() {
            throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
        }()
    }

    function f(t, e) {
        if (t) {
            if ("string" == typeof t) return p(t, e);
            var i = Object.prototype.toString.call(t).slice(8, -1);
            return "Object" === i && t.constructor && (i = t.constructor.name), "Map" === i || "Set" === i ? Array.from(t) : "Arguments" === i || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(i) ? p(t, e) : void 0
        }
    }

    function p(t, e) {
        (null == e || e > t.length) && (e = t.length);
        for (var i = 0, a = new Array(e); i < e; i++) a[i] = t[i];
        return a
    }
    var x = function() {
            function t() {
                a(this, t)
            }
            return r(t, [{
                key: "shadeRGBColor",
                value: function(t, e) {
                    var i = e.split(","),
                        a = t < 0 ? 0 : 255,
                        s = t < 0 ? -1 * t : t,
                        r = parseInt(i[0].slice(4), 10),
                        o = parseInt(i[1], 10),
                        n = parseInt(i[2], 10);
                    return "rgb(" + (Math.round((a - r) * s) + r) + "," + (Math.round((a - o) * s) + o) + "," + (Math.round((a - n) * s) + n) + ")"
                }
            }, {
                key: "shadeHexColor",
                value: function(t, e) {
                    var i = parseInt(e.slice(1), 16),
                        a = t < 0 ? 0 : 255,
                        s = t < 0 ? -1 * t : t,
                        r = i >> 16,
                        o = i >> 8 & 255,
                        n = 255 & i;
                    return "#" + (16777216 + 65536 * (Math.round((a - r) * s) + r) + 256 * (Math.round((a - o) * s) + o) + (Math.round((a - n) * s) + n)).toString(16).slice(1)
                }
            }, {
                key: "shadeColor",
                value: function(e, i) {
                    return t.isColorHex(i) ? this.shadeHexColor(e, i) : this.shadeRGBColor(e, i)
                }
            }], [{
                key: "bind",
                value: function(t, e) {
                    return function() {
                        return t.apply(e, arguments)
                    }
                }
            }, {
                key: "isObject",
                value: function(t) {
                    return t && "object" === i(t) && !Array.isArray(t) && null != t
                }
            }, {
                key: "is",
                value: function(t, e) {
                    return Object.prototype.toString.call(e) === "[object " + t + "]"
                }
            }, {
                key: "listToArray",
                value: function(t) {
                    var e, i = [];
                    for (e = 0; e < t.length; e++) i[e] = t[e];
                    return i
                }
            }, {
                key: "extend",
                value: function(t, e) {
                    var i = this;
                    "function" != typeof Object.assign && (Object.assign = function(t) {
                        if (null == t) throw new TypeError("Cannot convert undefined or null to object");
                        for (var e = Object(t), i = 1; i < arguments.length; i++) {
                            var a = arguments[i];
                            if (null != a)
                                for (var s in a) a.hasOwnProperty(s) && (e[s] = a[s])
                        }
                        return e
                    });
                    var a = Object.assign({}, t);
                    return this.isObject(t) && this.isObject(e) && Object.keys(e).forEach((function(s) {
                        i.isObject(e[s]) && s in t ? a[s] = i.extend(t[s], e[s]) : Object.assign(a, o({}, s, e[s]))
                    })), a
                }
            }, {
                key: "extendArray",
                value: function(e, i) {
                    var a = [];
                    return e.map((function(e) {
                        a.push(t.extend(i, e))
                    })), e = a
                }
            }, {
                key: "monthMod",
                value: function(t) {
                    return t % 12
                }
            }, {
                key: "clone",
                value: function(e) {
                    if (t.is("Array", e)) {
                        for (var a = [], s = 0; s < e.length; s++) a[s] = this.clone(e[s]);
                        return a
                    }
                    if (t.is("Null", e)) return null;
                    if (t.is("Date", e)) return e;
                    if ("object" === i(e)) {
                        var r = {};
                        for (var o in e) e.hasOwnProperty(o) && (r[o] = this.clone(e[o]));
                        return r
                    }
                    return e
                }
            }, {
                key: "log10",
                value: function(t) {
                    return Math.log(t) / Math.LN10
                }
            }, {
                key: "roundToBase10",
                value: function(t) {
                    return Math.pow(10, Math.floor(Math.log10(t)))
                }
            }, {
                key: "roundToBase",
                value: function(t, e) {
                    return Math.pow(e, Math.floor(Math.log(t) / Math.log(e)))
                }
            }, {
                key: "parseNumber",
                value: function(t) {
                    return null === t ? t : parseFloat(t)
                }
            }, {
                key: "randomId",
                value: function() {
                    return (Math.random() + 1).toString(36).substring(4)
                }
            }, {
                key: "noExponents",
                value: function(t) {
                    var e = String(t).split(/[eE]/);
                    if (1 === e.length) return e[0];
                    var i = "",
                        a = t < 0 ? "-" : "",
                        s = e[0].replace(".", ""),
                        r = Number(e[1]) + 1;
                    if (r < 0) {
                        for (i = a + "0."; r++;) i += "0";
                        return i + s.replace(/^-/, "")
                    }
                    for (r -= s.length; r--;) i += "0";
                    return s + i
                }
            }, {
                key: "getDimensions",
                value: function(t) {
                    var e = getComputedStyle(t, null),
                        i = t.clientHeight,
                        a = t.clientWidth;
                    return i -= parseFloat(e.paddingTop) + parseFloat(e.paddingBottom), [a -= parseFloat(e.paddingLeft) + parseFloat(e.paddingRight), i]
                }
            }, {
                key: "getBoundingClientRect",
                value: function(t) {
                    var e = t.getBoundingClientRect();
                    return {
                        top: e.top,
                        right: e.right,
                        bottom: e.bottom,
                        left: e.left,
                        width: t.clientWidth,
                        height: t.clientHeight,
                        x: e.left,
                        y: e.top
                    }
                }
            }, {
                key: "getLargestStringFromArr",
                value: function(t) {
                    return t.reduce((function(t, e) {
                        return Array.isArray(e) && (e = e.reduce((function(t, e) {
                            return t.length > e.length ? t : e
                        }))), t.length > e.length ? t : e
                    }), 0)
                }
            }, {
                key: "hexToRgba",
                value: function() {
                    var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : "#999999",
                        e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : .6;
                    "#" !== t.substring(0, 1) && (t = "#999999");
                    var i = t.replace("#", "");
                    i = i.match(new RegExp("(.{" + i.length / 3 + "})", "g"));
                    for (var a = 0; a < i.length; a++) i[a] = parseInt(1 === i[a].length ? i[a] + i[a] : i[a], 16);
                    return void 0 !== e && i.push(e), "rgba(" + i.join(",") + ")"
                }
            }, {
                key: "getOpacityFromRGBA",
                value: function(t) {
                    return parseFloat(t.replace(/^.*,(.+)\)/, "$1"))
                }
            }, {
                key: "rgb2hex",
                value: function(t) {
                    return (t = t.match(/^rgba?[\s+]?\([\s+]?(\d+)[\s+]?,[\s+]?(\d+)[\s+]?,[\s+]?(\d+)[\s+]?/i)) && 4 === t.length ? "#" + ("0" + parseInt(t[1], 10).toString(16)).slice(-2) + ("0" + parseInt(t[2], 10).toString(16)).slice(-2) + ("0" + parseInt(t[3], 10).toString(16)).slice(-2) : ""
                }
            }, {
                key: "isColorHex",
                value: function(t) {
                    return /(^#[0-9A-F]{6}$)|(^#[0-9A-F]{3}$)|(^#[0-9A-F]{8}$)/i.test(t)
                }
            }, {
                key: "getPolygonPos",
                value: function(t, e) {
                    for (var i = [], a = 2 * Math.PI / e, s = 0; s < e; s++) {
                        var r = {};
                        r.x = t * Math.sin(s * a), r.y = -t * Math.cos(s * a), i.push(r)
                    }
                    return i
                }
            }, {
                key: "polarToCartesian",
                value: function(t, e, i, a) {
                    var s = (a - 90) * Math.PI / 180;
                    return {
                        x: t + i * Math.cos(s),
                        y: e + i * Math.sin(s)
                    }
                }
            }, {
                key: "escapeString",
                value: function(t) {
                    var e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : "x",
                        i = t.toString().slice();
                    return i = i.replace(/[` ~!@#$%^&*()|+\=?;:'",.<>{}[\]\\/]/gi, e)
                }
            }, {
                key: "negToZero",
                value: function(t) {
                    return t < 0 ? 0 : t
                }
            }, {
                key: "moveIndexInArray",
                value: function(t, e, i) {
                    if (i >= t.length)
                        for (var a = i - t.length + 1; a--;) t.push(void 0);
                    return t.splice(i, 0, t.splice(e, 1)[0]), t
                }
            }, {
                key: "extractNumber",
                value: function(t) {
                    return parseFloat(t.replace(/[^\d.]*/g, ""))
                }
            }, {
                key: "findAncestor",
                value: function(t, e) {
                    for (;
                        (t = t.parentElement) && !t.classList.contains(e););
                    return t
                }
            }, {
                key: "setELstyles",
                value: function(t, e) {
                    for (var i in e) e.hasOwnProperty(i) && (t.style.key = e[i])
                }
            }, {
                key: "isNumber",
                value: function(t) {
                    return !isNaN(t) && parseFloat(Number(t)) === t && !isNaN(parseInt(t, 10))
                }
            }, {
                key: "isFloat",
                value: function(t) {
                    return Number(t) === t && t % 1 != 0
                }
            }, {
                key: "isSafari",
                value: function() {
                    return /^((?!chrome|android).)*safari/i.test(navigator.userAgent)
                }
            }, {
                key: "isFirefox",
                value: function() {
                    return navigator.userAgent.toLowerCase().indexOf("firefox") > -1
                }
            }, {
                key: "isIE11",
                value: function() {
                    if (-1 !== window.navigator.userAgent.indexOf("MSIE") || window.navigator.appVersion.indexOf("Trident/") > -1) return !0
                }
            }, {
                key: "isIE",
                value: function() {
                    var t = window.navigator.userAgent,
                        e = t.indexOf("MSIE ");
                    if (e > 0) return parseInt(t.substring(e + 5, t.indexOf(".", e)), 10);
                    if (t.indexOf("Trident/") > 0) {
                        var i = t.indexOf("rv:");
                        return parseInt(t.substring(i + 3, t.indexOf(".", i)), 10)
                    }
                    var a = t.indexOf("Edge/");
                    return a > 0 && parseInt(t.substring(a + 5, t.indexOf(".", a)), 10)
                }
            }]), t
        }(),
        b = function() {
            function t(e) {
                a(this, t), this.ctx = e, this.w = e.w, this.setEasingFunctions()
            }
            return r(t, [{
                key: "setEasingFunctions",
                value: function() {
                    var t;
                    if (!this.w.globals.easing) {
                        switch (this.w.config.chart.animations.easing) {
                            case "linear":
                                t = "-";
                                break;
                            case "easein":
                                t = "<";
                                break;
                            case "easeout":
                                t = ">";
                                break;
                            case "easeinout":
                                t = "<>";
                                break;
                            case "swing":
                                t = function(t) {
                                    var e = 1.70158;
                                    return (t -= 1) * t * ((e + 1) * t + e) + 1
                                };
                                break;
                            case "bounce":
                                t = function(t) {
                                    return t < 1 / 2.75 ? 7.5625 * t * t : t < 2 / 2.75 ? 7.5625 * (t -= 1.5 / 2.75) * t + .75 : t < 2.5 / 2.75 ? 7.5625 * (t -= 2.25 / 2.75) * t + .9375 : 7.5625 * (t -= 2.625 / 2.75) * t + .984375
                                };
                                break;
                            case "elastic":
                                t = function(t) {
                                    return t === !!t ? t : Math.pow(2, -10 * t) * Math.sin((t - .075) * (2 * Math.PI) / .3) + 1
                                };
                                break;
                            default:
                                t = "<>"
                        }
                        this.w.globals.easing = t
                    }
                }
            }, {
                key: "animateLine",
                value: function(t, e, i, a) {
                    t.attr(e).animate(a).attr(i)
                }
            }, {
                key: "animateMarker",
                value: function(t, e, i, a, s, r) {
                    e || (e = 0), t.attr({
                        r: e,
                        width: e,
                        height: e
                    }).animate(a, s).attr({
                        r: i,
                        width: i.width,
                        height: i.height
                    }).afterAll((function() {
                        r()
                    }))
                }
            }, {
                key: "animateCircle",
                value: function(t, e, i, a, s) {
                    t.attr({
                        r: e.r,
                        cx: e.cx,
                        cy: e.cy
                    }).animate(a, s).attr({
                        r: i.r,
                        cx: i.cx,
                        cy: i.cy
                    })
                }
            }, {
                key: "animateRect",
                value: function(t, e, i, a, s) {
                    t.attr(e).animate(a).attr(i).afterAll((function() {
                        return s()
                    }))
                }
            }, {
                key: "animatePathsGradually",
                value: function(t) {
                    var e = t.el,
                        i = t.realIndex,
                        a = t.j,
                        s = t.fill,
                        r = t.pathFrom,
                        o = t.pathTo,
                        n = t.speed,
                        l = t.delay,
                        h = this.w,
                        c = 0;
                    h.config.chart.animations.animateGradually.enabled && (c = h.config.chart.animations.animateGradually.delay), h.config.chart.animations.dynamicAnimation.enabled && h.globals.dataChanged && "bar" !== h.config.chart.type && (c = 0), this.morphSVG(e, i, a, "line" !== h.config.chart.type || h.globals.comboCharts ? s : "stroke", r, o, n, l * c)
                }
            }, {
                key: "showDelayedElements",
                value: function() {
                    this.w.globals.delayedElements.forEach((function(t) {
                        t.el.classList.remove("apexcharts-element-hidden")
                    }))
                }
            }, {
                key: "animationCompleted",
                value: function(t) {
                    var e = this.w;
                    e.globals.animationEnded || (e.globals.animationEnded = !0, this.showDelayedElements(), "function" == typeof e.config.chart.events.animationEnd && e.config.chart.events.animationEnd(this.ctx, {
                        el: t,
                        w: e
                    }))
                }
            }, {
                key: "morphSVG",
                value: function(t, e, i, a, s, r, o, n) {
                    var l = this,
                        h = this.w;
                    s || (s = t.attr("pathFrom")), r || (r = t.attr("pathTo"));
                    var c = function(t) {
                        return "radar" === h.config.chart.type && (o = 1), "M 0 ".concat(h.globals.gridHeight)
                    };
                    (!s || s.indexOf("undefined") > -1 || s.indexOf("NaN") > -1) && (s = c()), (!r || r.indexOf("undefined") > -1 || r.indexOf("NaN") > -1) && (r = c()), h.globals.shouldAnimate || (o = 1), t.plot(s).animate(1, h.globals.easing, n).plot(s).animate(o, h.globals.easing, n).plot(r).afterAll((function() {
                        x.isNumber(i) ? i === h.globals.series[h.globals.maxValsInArrayIndex].length - 2 && h.globals.shouldAnimate && l.animationCompleted(t) : "none" !== a && h.globals.shouldAnimate && (!h.globals.comboCharts && e === h.globals.series.length - 1 || h.globals.comboCharts) && l.animationCompleted(t), l.showDelayedElements()
                    }))
                }
            }]), t
        }(),
        v = function() {
            function t(e) {
                a(this, t), this.ctx = e, this.w = e.w
            }
            return r(t, [{
                key: "getDefaultFilter",
                value: function(t, e) {
                    var i = this.w;
                    t.unfilter(!0), (new window.SVG.Filter).size("120%", "180%", "-5%", "-40%"), "none" !== i.config.states.normal.filter ? this.applyFilter(t, e, i.config.states.normal.filter.type, i.config.states.normal.filter.value) : i.config.chart.dropShadow.enabled && this.dropShadow(t, i.config.chart.dropShadow, e)
                }
            }, {
                key: "addNormalFilter",
                value: function(t, e) {
                    var i = this.w;
                    i.config.chart.dropShadow.enabled && !t.node.classList.contains("apexcharts-marker") && this.dropShadow(t, i.config.chart.dropShadow, e)
                }
            }, {
                key: "addLightenFilter",
                value: function(t, e, i) {
                    var a = this,
                        s = this.w,
                        r = i.intensity;
                    t.unfilter(!0);
                    new window.SVG.Filter;
                    t.filter((function(t) {
                        var i = s.config.chart.dropShadow;
                        (i.enabled ? a.addShadow(t, e, i) : t).componentTransfer({
                            rgb: {
                                type: "linear",
                                slope: 1.5,
                                intercept: r
                            }
                        })
                    })), t.filterer.node.setAttribute("filterUnits", "userSpaceOnUse"), this._scaleFilterSize(t.filterer.node)
                }
            }, {
                key: "addDarkenFilter",
                value: function(t, e, i) {
                    var a = this,
                        s = this.w,
                        r = i.intensity;
                    t.unfilter(!0);
                    new window.SVG.Filter;
                    t.filter((function(t) {
                        var i = s.config.chart.dropShadow;
                        (i.enabled ? a.addShadow(t, e, i) : t).componentTransfer({
                            rgb: {
                                type: "linear",
                                slope: r
                            }
                        })
                    })), t.filterer.node.setAttribute("filterUnits", "userSpaceOnUse"), this._scaleFilterSize(t.filterer.node)
                }
            }, {
                key: "applyFilter",
                value: function(t, e, i) {
                    var a = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : .5;
                    switch (i) {
                        case "none":
                            this.addNormalFilter(t, e);
                            break;
                        case "lighten":
                            this.addLightenFilter(t, e, {
                                intensity: a
                            });
                            break;
                        case "darken":
                            this.addDarkenFilter(t, e, {
                                intensity: a
                            })
                    }
                }
            }, {
                key: "addShadow",
                value: function(t, e, i) {
                    var a = i.blur,
                        s = i.top,
                        r = i.left,
                        o = i.color,
                        n = i.opacity,
                        l = t.flood(Array.isArray(o) ? o[e] : o, n).composite(t.sourceAlpha, "in").offset(r, s).gaussianBlur(a).merge(t.source);
                    return t.blend(t.source, l)
                }
            }, {
                key: "dropShadow",
                value: function(t, e) {
                    var i = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 0,
                        a = e.top,
                        s = e.left,
                        r = e.blur,
                        o = e.color,
                        n = e.opacity,
                        l = e.noUserSpaceOnUse,
                        h = this.w;
                    return t.unfilter(!0), x.isIE() && "radialBar" === h.config.chart.type || (o = Array.isArray(o) ? o[i] : o, t.filter((function(t) {
                        var e = null;
                        e = x.isSafari() || x.isFirefox() || x.isIE() ? t.flood(o, n).composite(t.sourceAlpha, "in").offset(s, a).gaussianBlur(r) : t.flood(o, n).composite(t.sourceAlpha, "in").offset(s, a).gaussianBlur(r).merge(t.source), t.blend(t.source, e)
                    })), l || t.filterer.node.setAttribute("filterUnits", "userSpaceOnUse"), this._scaleFilterSize(t.filterer.node)), t
                }
            }, {
                key: "setSelectionFilter",
                value: function(t, e, i) {
                    var a = this.w;
                    if (void 0 !== a.globals.selectedDataPoints[e] && a.globals.selectedDataPoints[e].indexOf(i) > -1) {
                        t.node.setAttribute("selected", !0);
                        var s = a.config.states.active.filter;
                        "none" !== s && this.applyFilter(t, e, s.type, s.value)
                    }
                }
            }, {
                key: "_scaleFilterSize",
                value: function(t) {
                    ! function(e) {
                        for (var i in e) e.hasOwnProperty(i) && t.setAttribute(i, e[i])
                    }({
                        width: "200%",
                        height: "200%",
                        x: "-50%",
                        y: "-50%"
                    })
                }
            }]), t
        }(),
        m = function() {
            function t(e) {
                a(this, t), this.ctx = e, this.w = e.w
            }
            return r(t, [{
                key: "drawLine",
                value: function(t, e, i, a) {
                    var s = arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : "#a8a8a8",
                        r = arguments.length > 5 && void 0 !== arguments[5] ? arguments[5] : 0,
                        o = arguments.length > 6 && void 0 !== arguments[6] ? arguments[6] : null,
                        n = arguments.length > 7 && void 0 !== arguments[7] ? arguments[7] : "butt",
                        l = this.w,
                        h = l.globals.dom.Paper.line().attr({
                            x1: t,
                            y1: e,
                            x2: i,
                            y2: a,
                            stroke: s,
                            "stroke-dasharray": r,
                            "stroke-width": o,
                            "stroke-linecap": n
                        });
                    return h
                }
            }, {
                key: "drawRect",
                value: function() {
                    var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 0,
                        e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0,
                        i = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 0,
                        a = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : 0,
                        s = arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : 0,
                        r = arguments.length > 5 && void 0 !== arguments[5] ? arguments[5] : "#fefefe",
                        o = arguments.length > 6 && void 0 !== arguments[6] ? arguments[6] : 1,
                        n = arguments.length > 7 && void 0 !== arguments[7] ? arguments[7] : null,
                        l = arguments.length > 8 && void 0 !== arguments[8] ? arguments[8] : null,
                        h = arguments.length > 9 && void 0 !== arguments[9] ? arguments[9] : 0,
                        c = this.w,
                        d = c.globals.dom.Paper.rect();
                    return d.attr({
                        x: t,
                        y: e,
                        width: i > 0 ? i : 0,
                        height: a > 0 ? a : 0,
                        rx: s,
                        ry: s,
                        opacity: o,
                        "stroke-width": null !== n ? n : 0,
                        stroke: null !== l ? l : "none",
                        "stroke-dasharray": h
                    }), d.node.setAttribute("fill", r), d
                }
            }, {
                key: "drawPolygon",
                value: function(t) {
                    var e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : "#e1e1e1",
                        i = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 1,
                        a = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : "none",
                        s = this.w,
                        r = s.globals.dom.Paper.polygon(t).attr({
                            fill: a,
                            stroke: e,
                            "stroke-width": i
                        });
                    return r
                }
            }, {
                key: "drawCircle",
                value: function(t) {
                    var e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : null,
                        i = this.w;
                    t < 0 && (t = 0);
                    var a = i.globals.dom.Paper.circle(2 * t);
                    return null !== e && a.attr(e), a
                }
            }, {
                key: "drawPath",
                value: function(t) {
                    var e = t.d,
                        i = void 0 === e ? "" : e,
                        a = t.stroke,
                        s = void 0 === a ? "#a8a8a8" : a,
                        r = t.strokeWidth,
                        o = void 0 === r ? 1 : r,
                        n = t.fill,
                        l = t.fillOpacity,
                        h = void 0 === l ? 1 : l,
                        c = t.strokeOpacity,
                        d = void 0 === c ? 1 : c,
                        g = t.classes,
                        u = t.strokeLinecap,
                        f = void 0 === u ? null : u,
                        p = t.strokeDashArray,
                        x = void 0 === p ? 0 : p,
                        b = this.w;
                    return null === f && (f = b.config.stroke.lineCap), (i.indexOf("undefined") > -1 || i.indexOf("NaN") > -1) && (i = "M 0 ".concat(b.globals.gridHeight)), b.globals.dom.Paper.path(i).attr({
                        fill: n,
                        "fill-opacity": h,
                        stroke: s,
                        "stroke-opacity": d,
                        "stroke-linecap": f,
                        "stroke-width": o,
                        "stroke-dasharray": x,
                        class: g
                    })
                }
            }, {
                key: "group",
                value: function() {
                    var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : null,
                        e = this.w,
                        i = e.globals.dom.Paper.group();
                    return null !== t && i.attr(t), i
                }
            }, {
                key: "move",
                value: function(t, e) {
                    var i = ["M", t, e].join(" ");
                    return i
                }
            }, {
                key: "line",
                value: function(t, e) {
                    var i = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : null,
                        a = null;
                    return null === i ? a = ["L", t, e].join(" ") : "H" === i ? a = ["H", t].join(" ") : "V" === i && (a = ["V", e].join(" ")), a
                }
            }, {
                key: "curve",
                value: function(t, e, i, a, s, r) {
                    var o = ["C", t, e, i, a, s, r].join(" ");
                    return o
                }
            }, {
                key: "quadraticCurve",
                value: function(t, e, i, a) {
                    return ["Q", t, e, i, a].join(" ")
                }
            }, {
                key: "arc",
                value: function(t, e, i, a, s, r, o) {
                    var n = arguments.length > 7 && void 0 !== arguments[7] && arguments[7],
                        l = "A";
                    n && (l = "a");
                    var h = [l, t, e, i, a, s, r, o].join(" ");
                    return h
                }
            }, {
                key: "renderPaths",
                value: function(t) {
                    var i, a = t.j,
                        s = t.realIndex,
                        r = t.pathFrom,
                        o = t.pathTo,
                        n = t.stroke,
                        l = t.strokeWidth,
                        h = t.strokeLinecap,
                        c = t.fill,
                        d = t.animationDelay,
                        g = t.initialSpeed,
                        u = t.dataChangeSpeed,
                        f = t.className,
                        p = t.shouldClipToGrid,
                        x = void 0 === p || p,
                        m = t.bindEventsOnPaths,
                        y = void 0 === m || m,
                        w = t.drawShadow,
                        k = void 0 === w || w,
                        A = this.w,
                        S = new v(this.ctx),
                        C = new b(this.ctx),
                        L = this.w.config.chart.animations.enabled,
                        P = L && this.w.config.chart.animations.dynamicAnimation.enabled,
                        M = !!(L && !A.globals.resized || P && A.globals.dataChanged && A.globals.shouldAnimate);
                    M ? i = r : (i = o, A.globals.animationEnded = !0);
                    var T = A.config.stroke.dashArray,
                        I = 0;
                    I = Array.isArray(T) ? T[s] : A.config.stroke.dashArray;
                    var z = this.drawPath({
                        d: i,
                        stroke: n,
                        strokeWidth: l,
                        fill: c,
                        fillOpacity: 1,
                        classes: f,
                        strokeLinecap: h,
                        strokeDashArray: I
                    });
                    if (z.attr("index", s), x && z.attr({
                            "clip-path": "url(#gridRectMask".concat(A.globals.cuid, ")")
                        }), "none" !== A.config.states.normal.filter.type) S.getDefaultFilter(z, s);
                    else if (A.config.chart.dropShadow.enabled && k && (!A.config.chart.dropShadow.enabledOnSeries || A.config.chart.dropShadow.enabledOnSeries && -1 !== A.config.chart.dropShadow.enabledOnSeries.indexOf(s))) {
                        var X = A.config.chart.dropShadow;
                        S.dropShadow(z, X, s)
                    }
                    y && (z.node.addEventListener("mouseenter", this.pathMouseEnter.bind(this, z)), z.node.addEventListener("mouseleave", this.pathMouseLeave.bind(this, z)), z.node.addEventListener("mousedown", this.pathMouseDown.bind(this, z))), z.attr({
                        pathTo: o,
                        pathFrom: r
                    });
                    var E = {
                        el: z,
                        j: a,
                        realIndex: s,
                        pathFrom: r,
                        pathTo: o,
                        fill: c,
                        strokeWidth: l,
                        delay: d
                    };
                    return !L || A.globals.resized || A.globals.dataChanged ? !A.globals.resized && A.globals.dataChanged || C.showDelayedElements() : C.animatePathsGradually(e(e({}, E), {}, {
                        speed: g
                    })), A.globals.dataChanged && P && M && C.animatePathsGradually(e(e({}, E), {}, {
                        speed: u
                    })), z
                }
            }, {
                key: "drawPattern",
                value: function(t, e, i) {
                    var a = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : "#a8a8a8",
                        s = arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : 0,
                        r = this.w,
                        o = r.globals.dom.Paper.pattern(e, i, (function(r) {
                            "horizontalLines" === t ? r.line(0, 0, i, 0).stroke({
                                color: a,
                                width: s + 1
                            }) : "verticalLines" === t ? r.line(0, 0, 0, e).stroke({
                                color: a,
                                width: s + 1
                            }) : "slantedLines" === t ? r.line(0, 0, e, i).stroke({
                                color: a,
                                width: s
                            }) : "squares" === t ? r.rect(e, i).fill("none").stroke({
                                color: a,
                                width: s
                            }) : "circles" === t && r.circle(e).fill("none").stroke({
                                color: a,
                                width: s
                            })
                        }));
                    return o
                }
            }, {
                key: "drawGradient",
                value: function(t, e, i, a, s) {
                    var r, o = arguments.length > 5 && void 0 !== arguments[5] ? arguments[5] : null,
                        n = arguments.length > 6 && void 0 !== arguments[6] ? arguments[6] : null,
                        l = arguments.length > 7 && void 0 !== arguments[7] ? arguments[7] : null,
                        h = arguments.length > 8 && void 0 !== arguments[8] ? arguments[8] : 0,
                        c = this.w;
                    e.length < 9 && 0 === e.indexOf("#") && (e = x.hexToRgba(e, a)), i.length < 9 && 0 === i.indexOf("#") && (i = x.hexToRgba(i, s));
                    var d = 0,
                        g = 1,
                        u = 1,
                        f = null;
                    null !== n && (d = void 0 !== n[0] ? n[0] / 100 : 0, g = void 0 !== n[1] ? n[1] / 100 : 1, u = void 0 !== n[2] ? n[2] / 100 : 1, f = void 0 !== n[3] ? n[3] / 100 : null);
                    var p = !("donut" !== c.config.chart.type && "pie" !== c.config.chart.type && "polarArea" !== c.config.chart.type && "bubble" !== c.config.chart.type);
                    if (r = null === l || 0 === l.length ? c.globals.dom.Paper.gradient(p ? "radial" : "linear", (function(t) {
                            t.at(d, e, a), t.at(g, i, s), t.at(u, i, s), null !== f && t.at(f, e, a)
                        })) : c.globals.dom.Paper.gradient(p ? "radial" : "linear", (function(t) {
                            (Array.isArray(l[h]) ? l[h] : l).forEach((function(e) {
                                t.at(e.offset / 100, e.color, e.opacity)
                            }))
                        })), p) {
                        var b = c.globals.gridWidth / 2,
                            v = c.globals.gridHeight / 2;
                        "bubble" !== c.config.chart.type ? r.attr({
                            gradientUnits: "userSpaceOnUse",
                            cx: b,
                            cy: v,
                            r: o
                        }) : r.attr({
                            cx: .5,
                            cy: .5,
                            r: .8,
                            fx: .2,
                            fy: .2
                        })
                    } else "vertical" === t ? r.from(0, 0).to(0, 1) : "diagonal" === t ? r.from(0, 0).to(1, 1) : "horizontal" === t ? r.from(0, 1).to(1, 1) : "diagonal2" === t && r.from(1, 0).to(0, 1);
                    return r
                }
            }, {
                key: "getTextBasedOnMaxWidth",
                value: function(t) {
                    var e = t.text,
                        i = t.maxWidth,
                        a = t.fontSize,
                        s = t.fontFamily,
                        r = this.getTextRects(e, a, s),
                        o = r.width / e.length,
                        n = Math.floor(i / o);
                    return i < r.width ? e.slice(0, n - 3) + "..." : e
                }
            }, {
                key: "drawText",
                value: function(t) {
                    var i = this,
                        a = t.x,
                        s = t.y,
                        r = t.text,
                        o = t.textAnchor,
                        n = t.fontSize,
                        l = t.fontFamily,
                        h = t.fontWeight,
                        c = t.foreColor,
                        d = t.opacity,
                        g = t.maxWidth,
                        u = t.cssClass,
                        f = void 0 === u ? "" : u,
                        p = t.isPlainText,
                        x = void 0 === p || p,
                        b = this.w;
                    void 0 === r && (r = "");
                    var v = r;
                    o || (o = "start"), c && c.length || (c = b.config.chart.foreColor), l = l || b.config.chart.fontFamily, h = h || "regular";
                    var m, y = {
                        maxWidth: g,
                        fontSize: n = n || "11px",
                        fontFamily: l
                    };
                    return Array.isArray(r) ? m = b.globals.dom.Paper.text((function(t) {
                        for (var a = 0; a < r.length; a++) v = r[a], g && (v = i.getTextBasedOnMaxWidth(e({
                            text: r[a]
                        }, y))), 0 === a ? t.tspan(v) : t.tspan(v).newLine()
                    })) : (g && (v = this.getTextBasedOnMaxWidth(e({
                        text: r
                    }, y))), m = x ? b.globals.dom.Paper.plain(r) : b.globals.dom.Paper.text((function(t) {
                        return t.tspan(v)
                    }))), m.attr({
                        x: a,
                        y: s,
                        "text-anchor": o,
                        "dominant-baseline": "auto",
                        "font-size": n,
                        "font-family": l,
                        "font-weight": h,
                        fill: c,
                        class: "apexcharts-text " + f
                    }), m.node.style.fontFamily = l, m.node.style.opacity = d, m
                }
            }, {
                key: "drawMarker",
                value: function(t, e, i) {
                    t = t || 0;
                    var a = i.pSize || 0,
                        s = null;
                    if ("square" === i.shape || "rect" === i.shape) {
                        var r = void 0 === i.pRadius ? a / 2 : i.pRadius;
                        null !== e && a || (a = 0, r = 0);
                        var o = 1.2 * a + r,
                            n = this.drawRect(o, o, o, o, r);
                        n.attr({
                            x: t - o / 2,
                            y: e - o / 2,
                            cx: t,
                            cy: e,
                            class: i.class ? i.class : "",
                            fill: i.pointFillColor,
                            "fill-opacity": i.pointFillOpacity ? i.pointFillOpacity : 1,
                            stroke: i.pointStrokeColor,
                            "stroke-width": i.pointStrokeWidth ? i.pointStrokeWidth : 0,
                            "stroke-opacity": i.pointStrokeOpacity ? i.pointStrokeOpacity : 1
                        }), s = n
                    } else "circle" !== i.shape && i.shape || (x.isNumber(e) || (a = 0, e = 0), s = this.drawCircle(a, {
                        cx: t,
                        cy: e,
                        class: i.class ? i.class : "",
                        stroke: i.pointStrokeColor,
                        fill: i.pointFillColor,
                        "fill-opacity": i.pointFillOpacity ? i.pointFillOpacity : 1,
                        "stroke-width": i.pointStrokeWidth ? i.pointStrokeWidth : 0,
                        "stroke-opacity": i.pointStrokeOpacity ? i.pointStrokeOpacity : 1
                    }));
                    return s
                }
            }, {
                key: "pathMouseEnter",
                value: function(t, e) {
                    var i = this.w,
                        a = new v(this.ctx),
                        s = parseInt(t.node.getAttribute("index"), 10),
                        r = parseInt(t.node.getAttribute("j"), 10);
                    if ("function" == typeof i.config.chart.events.dataPointMouseEnter && i.config.chart.events.dataPointMouseEnter(e, this.ctx, {
                            seriesIndex: s,
                            dataPointIndex: r,
                            w: i
                        }), this.ctx.events.fireEvent("dataPointMouseEnter", [e, this.ctx, {
                            seriesIndex: s,
                            dataPointIndex: r,
                            w: i
                        }]), ("none" === i.config.states.active.filter.type || "true" !== t.node.getAttribute("selected")) && "none" !== i.config.states.hover.filter.type && !i.globals.isTouchDevice) {
                        var o = i.config.states.hover.filter;
                        a.applyFilter(t, s, o.type, o.value)
                    }
                }
            }, {
                key: "pathMouseLeave",
                value: function(t, e) {
                    var i = this.w,
                        a = new v(this.ctx),
                        s = parseInt(t.node.getAttribute("index"), 10),
                        r = parseInt(t.node.getAttribute("j"), 10);
                    "function" == typeof i.config.chart.events.dataPointMouseLeave && i.config.chart.events.dataPointMouseLeave(e, this.ctx, {
                        seriesIndex: s,
                        dataPointIndex: r,
                        w: i
                    }), this.ctx.events.fireEvent("dataPointMouseLeave", [e, this.ctx, {
                        seriesIndex: s,
                        dataPointIndex: r,
                        w: i
                    }]), "none" !== i.config.states.active.filter.type && "true" === t.node.getAttribute("selected") || "none" !== i.config.states.hover.filter.type && a.getDefaultFilter(t, s)
                }
            }, {
                key: "pathMouseDown",
                value: function(t, e) {
                    var i = this.w,
                        a = new v(this.ctx),
                        s = parseInt(t.node.getAttribute("index"), 10),
                        r = parseInt(t.node.getAttribute("j"), 10),
                        o = "false";
                    if ("true" === t.node.getAttribute("selected")) {
                        if (t.node.setAttribute("selected", "false"), i.globals.selectedDataPoints[s].indexOf(r) > -1) {
                            var n = i.globals.selectedDataPoints[s].indexOf(r);
                            i.globals.selectedDataPoints[s].splice(n, 1)
                        }
                    } else {
                        if (!i.config.states.active.allowMultipleDataPointsSelection && i.globals.selectedDataPoints.length > 0) {
                            i.globals.selectedDataPoints = [];
                            var l = i.globals.dom.Paper.select(".apexcharts-series path").members,
                                h = i.globals.dom.Paper.select(".apexcharts-series circle, .apexcharts-series rect").members,
                                c = function(t) {
                                    Array.prototype.forEach.call(t, (function(t) {
                                        t.node.setAttribute("selected", "false"), a.getDefaultFilter(t, s)
                                    }))
                                };
                            c(l), c(h)
                        }
                        t.node.setAttribute("selected", "true"), o = "true", void 0 === i.globals.selectedDataPoints[s] && (i.globals.selectedDataPoints[s] = []), i.globals.selectedDataPoints[s].push(r)
                    }
                    if ("true" === o) {
                        var d = i.config.states.active.filter;
                        if ("none" !== d) a.applyFilter(t, s, d.type, d.value);
                        else if ("none" !== i.config.states.hover.filter && !i.globals.isTouchDevice) {
                            var g = i.config.states.hover.filter;
                            a.applyFilter(t, s, g.type, g.value)
                        }
                    } else if ("none" !== i.config.states.active.filter.type)
                        if ("none" === i.config.states.hover.filter.type || i.globals.isTouchDevice) a.getDefaultFilter(t, s);
                        else {
                            g = i.config.states.hover.filter;
                            a.applyFilter(t, s, g.type, g.value)
                        }
                    "function" == typeof i.config.chart.events.dataPointSelection && i.config.chart.events.dataPointSelection(e, this.ctx, {
                        selectedDataPoints: i.globals.selectedDataPoints,
                        seriesIndex: s,
                        dataPointIndex: r,
                        w: i
                    }), e && this.ctx.events.fireEvent("dataPointSelection", [e, this.ctx, {
                        selectedDataPoints: i.globals.selectedDataPoints,
                        seriesIndex: s,
                        dataPointIndex: r,
                        w: i
                    }])
                }
            }, {
                key: "rotateAroundCenter",
                value: function(t) {
                    var e = {};
                    return t && "function" == typeof t.getBBox && (e = t.getBBox()), {
                        x: e.x + e.width / 2,
                        y: e.y + e.height / 2
                    }
                }
            }, {
                key: "getTextRects",
                value: function(t, e, i, a) {
                    var s = !(arguments.length > 4 && void 0 !== arguments[4]) || arguments[4],
                        r = this.w,
                        o = this.drawText({
                            x: -200,
                            y: -200,
                            text: t,
                            textAnchor: "start",
                            fontSize: e,
                            fontFamily: i,
                            foreColor: "#fff",
                            opacity: 0
                        });
                    a && o.attr("transform", a), r.globals.dom.Paper.add(o);
                    var n = o.bbox();
                    return s || (n = o.node.getBoundingClientRect()), o.remove(), {
                        width: n.width,
                        height: n.height
                    }
                }
            }, {
                key: "placeTextWithEllipsis",
                value: function(t, e, i) {
                    if ("function" == typeof t.getComputedTextLength && (t.textContent = e, e.length > 0 && t.getComputedTextLength() >= i / 1.1)) {
                        for (var a = e.length - 3; a > 0; a -= 3)
                            if (t.getSubStringLength(0, a) <= i / 1.1) return void(t.textContent = e.substring(0, a) + "...");
                        t.textContent = "."
                    }
                }
            }], [{
                key: "setAttrs",
                value: function(t, e) {
                    for (var i in e) e.hasOwnProperty(i) && t.setAttribute(i, e[i])
                }
            }]), t
        }(),
        y = function() {
            function t(e) {
                a(this, t), this.ctx = e, this.w = e.w
            }
            return r(t, [{
                key: "getStackedSeriesTotals",
                value: function() {
                    var t = this.w,
                        e = [];
                    if (0 === t.globals.series.length) return e;
                    for (var i = 0; i < t.globals.series[t.globals.maxValsInArrayIndex].length; i++) {
                        for (var a = 0, s = 0; s < t.globals.series.length; s++) void 0 !== t.globals.series[s][i] && (a += t.globals.series[s][i]);
                        e.push(a)
                    }
                    return t.globals.stackedSeriesTotals = e, e
                }
            }, {
                key: "getSeriesTotalByIndex",
                value: function() {
                    var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : null;
                    return null === t ? this.w.config.series.reduce((function(t, e) {
                        return t + e
                    }), 0) : this.w.globals.series[t].reduce((function(t, e) {
                        return t + e
                    }), 0)
                }
            }, {
                key: "isSeriesNull",
                value: function() {
                    var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : null;
                    return 0 === (null === t ? this.w.config.series.filter((function(t) {
                        return null !== t
                    })) : this.w.config.series[t].data.filter((function(t) {
                        return null !== t
                    }))).length
                }
            }, {
                key: "seriesHaveSameValues",
                value: function(t) {
                    return this.w.globals.series[t].every((function(t, e, i) {
                        return t === i[0]
                    }))
                }
            }, {
                key: "getCategoryLabels",
                value: function(t) {
                    var e = this.w,
                        i = t.slice();
                    return e.config.xaxis.convertedCatToNumeric && (i = t.map((function(t, i) {
                        return e.config.xaxis.labels.formatter(t - e.globals.minX + 1)
                    }))), i
                }
            }, {
                key: "getLargestSeries",
                value: function() {
                    var t = this.w;
                    t.globals.maxValsInArrayIndex = t.globals.series.map((function(t) {
                        return t.length
                    })).indexOf(Math.max.apply(Math, t.globals.series.map((function(t) {
                        return t.length
                    }))))
                }
            }, {
                key: "getLargestMarkerSize",
                value: function() {
                    var t = this.w,
                        e = 0;
                    return t.globals.markers.size.forEach((function(t) {
                        e = Math.max(e, t)
                    })), t.config.markers.discrete && t.config.markers.discrete.length && t.config.markers.discrete.forEach((function(t) {
                        e = Math.max(e, t.size)
                    })), e > 0 && (e += t.config.markers.hover.sizeOffset + 1), t.globals.markers.largestSize = e, e
                }
            }, {
                key: "getSeriesTotals",
                value: function() {
                    var t = this.w;
                    t.globals.seriesTotals = t.globals.series.map((function(t, e) {
                        var i = 0;
                        if (Array.isArray(t))
                            for (var a = 0; a < t.length; a++) i += t[a];
                        else i += t;
                        return i
                    }))
                }
            }, {
                key: "getSeriesTotalsXRange",
                value: function(t, e) {
                    var i = this.w;
                    return i.globals.series.map((function(a, s) {
                        for (var r = 0, o = 0; o < a.length; o++) i.globals.seriesX[s][o] > t && i.globals.seriesX[s][o] < e && (r += a[o]);
                        return r
                    }))
                }
            }, {
                key: "getPercentSeries",
                value: function() {
                    var t = this.w;
                    t.globals.seriesPercent = t.globals.series.map((function(e, i) {
                        var a = [];
                        if (Array.isArray(e))
                            for (var s = 0; s < e.length; s++) {
                                var r = t.globals.stackedSeriesTotals[s],
                                    o = 0;
                                r && (o = 100 * e[s] / r), a.push(o)
                            } else {
                                var n = 100 * e / t.globals.seriesTotals.reduce((function(t, e) {
                                    return t + e
                                }), 0);
                                a.push(n)
                            }
                        return a
                    }))
                }
            }, {
                key: "getCalculatedRatios",
                value: function() {
                    var t, e, i, a, s = this.w.globals,
                        r = [],
                        o = 0,
                        n = [],
                        l = .1,
                        h = 0;
                    if (s.yRange = [], s.isMultipleYAxis)
                        for (var c = 0; c < s.minYArr.length; c++) s.yRange.push(Math.abs(s.minYArr[c] - s.maxYArr[c])), n.push(0);
                    else s.yRange.push(Math.abs(s.minY - s.maxY));
                    s.xRange = Math.abs(s.maxX - s.minX), s.zRange = Math.abs(s.maxZ - s.minZ);
                    for (var d = 0; d < s.yRange.length; d++) r.push(s.yRange[d] / s.gridHeight);
                    if (e = s.xRange / s.gridWidth, i = Math.abs(s.initialMaxX - s.initialMinX) / s.gridWidth, t = s.yRange / s.gridWidth, a = s.xRange / s.gridHeight, (o = s.zRange / s.gridHeight * 16) || (o = 1), s.minY !== Number.MIN_VALUE && 0 !== Math.abs(s.minY) && (s.hasNegs = !0), s.isMultipleYAxis) {
                        n = [];
                        for (var g = 0; g < r.length; g++) n.push(-s.minYArr[g] / r[g])
                    } else n.push(-s.minY / r[0]), s.minY !== Number.MIN_VALUE && 0 !== Math.abs(s.minY) && (l = -s.minY / t, h = s.minX / e);
                    return {
                        yRatio: r,
                        invertedYRatio: t,
                        zRatio: o,
                        xRatio: e,
                        initialXRatio: i,
                        invertedXRatio: a,
                        baseLineInvertedY: l,
                        baseLineY: n,
                        baseLineX: h
                    }
                }
            }, {
                key: "getLogSeries",
                value: function(t) {
                    var e = this,
                        i = this.w;
                    return i.globals.seriesLog = t.map((function(t, a) {
                        return i.config.yaxis[a] && i.config.yaxis[a].logarithmic ? t.map((function(t) {
                            return null === t ? null : e.getLogVal(i.config.yaxis[a].logBase, t, a)
                        })) : t
                    })), i.globals.invalidLogScale ? t : i.globals.seriesLog
                }
            }, {
                key: "getBaseLog",
                value: function(t, e) {
                    return Math.log(e) / Math.log(t)
                }
            }, {
                key: "getLogVal",
                value: function(t, e, i) {
                    if (0 === e) return 0;
                    var a = this.w,
                        s = 0 === a.globals.minYArr[i] ? -1 : this.getBaseLog(t, a.globals.minYArr[i]),
                        r = (0 === a.globals.maxYArr[i] ? 0 : this.getBaseLog(t, a.globals.maxYArr[i])) - s;
                    return e < 1 ? e / r : (this.getBaseLog(t, e) - s) / r
                }
            }, {
                key: "getLogYRatios",
                value: function(t) {
                    var e = this,
                        i = this.w,
                        a = this.w.globals;
                    return a.yLogRatio = t.slice(), a.logYRange = a.yRange.map((function(t, s) {
                        if (i.config.yaxis[s] && e.w.config.yaxis[s].logarithmic) {
                            var r, o = -Number.MAX_VALUE,
                                n = Number.MIN_VALUE;
                            return a.seriesLog.forEach((function(t, e) {
                                t.forEach((function(t) {
                                    i.config.yaxis[e] && i.config.yaxis[e].logarithmic && (o = Math.max(t, o), n = Math.min(t, n))
                                }))
                            })), r = Math.pow(a.yRange[s], Math.abs(n - o) / a.yRange[s]), a.yLogRatio[s] = r / a.gridHeight, r
                        }
                    })), a.invalidLogScale ? t.slice() : a.yLogRatio
                }
            }], [{
                key: "checkComboSeries",
                value: function(t) {
                    var e = !1,
                        i = 0,
                        a = 0;
                    return t.length && void 0 !== t[0].type && t.forEach((function(t) {
                        "bar" !== t.type && "column" !== t.type && "candlestick" !== t.type && "boxPlot" !== t.type || i++, void 0 !== t.type && a++
                    })), a > 0 && (e = !0), {
                        comboBarCount: i,
                        comboCharts: e
                    }
                }
            }, {
                key: "extendArrayProps",
                value: function(t, e, i) {
                    return e.yaxis && (e = t.extendYAxis(e, i)), e.annotations && (e.annotations.yaxis && (e = t.extendYAxisAnnotations(e)), e.annotations.xaxis && (e = t.extendXAxisAnnotations(e)), e.annotations.points && (e = t.extendPointAnnotations(e))), e
                }
            }]), t
        }(),
        w = function() {
            function t(e) {
                a(this, t), this.w = e.w, this.annoCtx = e
            }
            return r(t, [{
                key: "setOrientations",
                value: function(t) {
                    var e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : null,
                        i = this.w;
                    if ("vertical" === t.label.orientation) {
                        var a = null !== e ? e : 0,
                            s = i.globals.dom.baseEl.querySelector(".apexcharts-xaxis-annotations .apexcharts-xaxis-annotation-label[rel='".concat(a, "']"));
                        if (null !== s) {
                            var r = s.getBoundingClientRect();
                            s.setAttribute("x", parseFloat(s.getAttribute("x")) - r.height + 4), "top" === t.label.position ? s.setAttribute("y", parseFloat(s.getAttribute("y")) + r.width) : s.setAttribute("y", parseFloat(s.getAttribute("y")) - r.width);
                            var o = this.annoCtx.graphics.rotateAroundCenter(s),
                                n = o.x,
                                l = o.y;
                            s.setAttribute("transform", "rotate(-90 ".concat(n, " ").concat(l, ")"))
                        }
                    }
                }
            }, {
                key: "addBackgroundToAnno",
                value: function(t, e) {
                    var i = this.w;
                    if (!t || void 0 === e.label.text || void 0 !== e.label.text && !String(e.label.text).trim()) return null;
                    var a = i.globals.dom.baseEl.querySelector(".apexcharts-grid").getBoundingClientRect(),
                        s = t.getBoundingClientRect(),
                        r = e.label.style.padding.left,
                        o = e.label.style.padding.right,
                        n = e.label.style.padding.top,
                        l = e.label.style.padding.bottom;
                    "vertical" === e.label.orientation && (n = e.label.style.padding.left, l = e.label.style.padding.right, r = e.label.style.padding.top, o = e.label.style.padding.bottom);
                    var h = s.left - a.left - r,
                        c = s.top - a.top - n,
                        d = this.annoCtx.graphics.drawRect(h - i.globals.barPadForNumericAxis, c, s.width + r + o, s.height + n + l, e.label.borderRadius, e.label.style.background, 1, e.label.borderWidth, e.label.borderColor, 0);
                    return e.id && d.node.classList.add(e.id), d
                }
            }, {
                key: "annotationsBackground",
                value: function() {
                    var t = this,
                        e = this.w,
                        i = function(i, a, s) {
                            var r = e.globals.dom.baseEl.querySelector(".apexcharts-".concat(s, "-annotations .apexcharts-").concat(s, "-annotation-label[rel='").concat(a, "']"));
                            if (r) {
                                var o = r.parentNode,
                                    n = t.addBackgroundToAnno(r, i);
                                n && (o.insertBefore(n.node, r), i.label.mouseEnter && n.node.addEventListener("mouseenter", i.label.mouseEnter.bind(t, i)), i.label.mouseLeave && n.node.addEventListener("mouseleave", i.label.mouseLeave.bind(t, i)), i.label.click && n.node.addEventListener("click", i.label.click.bind(t, i)))
                            }
                        };
                    e.config.annotations.xaxis.map((function(t, e) {
                        i(t, e, "xaxis")
                    })), e.config.annotations.yaxis.map((function(t, e) {
                        i(t, e, "yaxis")
                    })), e.config.annotations.points.map((function(t, e) {
                        i(t, e, "point")
                    }))
                }
            }, {
                key: "getY1Y2",
                value: function(t, e) {
                    var i, a = "y1" === t ? e.y : e.y2,
                        s = this.w;
                    if (this.annoCtx.invertAxis) {
                        var r = s.globals.labels.indexOf(a);
                        s.config.xaxis.convertedCatToNumeric && (r = s.globals.categoryLabels.indexOf(a));
                        var o = s.globals.dom.baseEl.querySelector(".apexcharts-yaxis-texts-g text:nth-child(" + (r + 1) + ")");
                        o && (i = parseFloat(o.getAttribute("y")))
                    } else {
                        var n;
                        if (s.config.yaxis[e.yAxisIndex].logarithmic) n = (a = new y(this.annoCtx.ctx).getLogVal(a, e.yAxisIndex)) / s.globals.yLogRatio[e.yAxisIndex];
                        else n = (a - s.globals.minYArr[e.yAxisIndex]) / (s.globals.yRange[e.yAxisIndex] / s.globals.gridHeight);
                        i = s.globals.gridHeight - n, !e.marker || void 0 !== e.y && null !== e.y || (i = 0), s.config.yaxis[e.yAxisIndex] && s.config.yaxis[e.yAxisIndex].reversed && (i = n)
                    }
                    return i
                }
            }, {
                key: "getX1X2",
                value: function(t, e) {
                    var i = this.w,
                        a = this.annoCtx.invertAxis ? i.globals.minY : i.globals.minX,
                        s = this.annoCtx.invertAxis ? i.globals.maxY : i.globals.maxX,
                        r = this.annoCtx.invertAxis ? i.globals.yRange[0] : i.globals.xRange,
                        o = (e.x - a) / (r / i.globals.gridWidth);
                    this.annoCtx.inversedReversedAxis && (o = (s - e.x) / (r / i.globals.gridWidth)), "category" !== i.config.xaxis.type && !i.config.xaxis.convertedCatToNumeric || this.annoCtx.invertAxis || i.globals.dataFormatXNumeric || (o = this.getStringX(e.x));
                    var n = (e.x2 - a) / (r / i.globals.gridWidth);
                    return this.annoCtx.inversedReversedAxis && (n = (s - e.x2) / (r / i.globals.gridWidth)), "category" !== i.config.xaxis.type && !i.config.xaxis.convertedCatToNumeric || this.annoCtx.invertAxis || i.globals.dataFormatXNumeric || (n = this.getStringX(e.x2)), void 0 !== e.x && null !== e.x || !e.marker || (o = i.globals.gridWidth), "x1" === t ? o : n
                }
            }, {
                key: "getStringX",
                value: function(t) {
                    var e = this.w,
                        i = t;
                    e.config.xaxis.convertedCatToNumeric && e.globals.categoryLabels.length && (t = e.globals.categoryLabels.indexOf(t) + 1);
                    var a = e.globals.labels.indexOf(t),
                        s = e.globals.dom.baseEl.querySelector(".apexcharts-xaxis-texts-g text:nth-child(" + (a + 1) + ")");
                    return s && (i = parseFloat(s.getAttribute("x"))), i
                }
            }]), t
        }(),
        k = function() {
            function t(e) {
                a(this, t), this.w = e.w, this.annoCtx = e, this.invertAxis = this.annoCtx.invertAxis, this.helpers = new w(this.annoCtx)
            }
            return r(t, [{
                key: "addXaxisAnnotation",
                value: function(t, e, i) {
                    var a, s = this.w,
                        r = this.helpers.getX1X2("x1", t),
                        o = t.label.text,
                        n = t.strokeDashArray;
                    if (x.isNumber(r)) {
                        if (null === t.x2 || void 0 === t.x2) {
                            var l = this.annoCtx.graphics.drawLine(r + t.offsetX, 0 + t.offsetY, r + t.offsetX, s.globals.gridHeight + t.offsetY, t.borderColor, n, t.borderWidth);
                            e.appendChild(l.node), t.id && l.node.classList.add(t.id)
                        } else {
                            if ((a = this.helpers.getX1X2("x2", t)) < r) {
                                var h = r;
                                r = a, a = h
                            }
                            var c = this.annoCtx.graphics.drawRect(r + t.offsetX, 0 + t.offsetY, a - r, s.globals.gridHeight + t.offsetY, 0, t.fillColor, t.opacity, 1, t.borderColor, n);
                            c.node.classList.add("apexcharts-annotation-rect"), c.attr("clip-path", "url(#gridRectMask".concat(s.globals.cuid, ")")), e.appendChild(c.node), t.id && c.node.classList.add(t.id)
                        }
                        var d = "top" === t.label.position ? 4 : s.globals.gridHeight,
                            g = this.annoCtx.graphics.getTextRects(o, parseFloat(t.label.style.fontSize)),
                            u = this.annoCtx.graphics.drawText({
                                x: r + t.label.offsetX,
                                y: d + t.label.offsetY - ("vertical" === t.label.orientation ? "top" === t.label.position ? g.width / 2 - 12 : -g.width / 2 : 0),
                                text: o,
                                textAnchor: t.label.textAnchor,
                                fontSize: t.label.style.fontSize,
                                fontFamily: t.label.style.fontFamily,
                                fontWeight: t.label.style.fontWeight,
                                foreColor: t.label.style.color,
                                cssClass: "apexcharts-xaxis-annotation-label ".concat(t.label.style.cssClass, " ").concat(t.id ? t.id : "")
                            });
                        u.attr({
                            rel: i
                        }), e.appendChild(u.node), this.annoCtx.helpers.setOrientations(t, i)
                    }
                }
            }, {
                key: "drawXAxisAnnotations",
                value: function() {
                    var t = this,
                        e = this.w,
                        i = this.annoCtx.graphics.group({
                            class: "apexcharts-xaxis-annotations"
                        });
                    return e.config.annotations.xaxis.map((function(e, a) {
                        t.addXaxisAnnotation(e, i.node, a)
                    })), i
                }
            }]), t
        }(),
        A = function() {
            function t(e) {
                a(this, t), this.w = e.w, this.annoCtx = e, this.helpers = new w(this.annoCtx)
            }
            return r(t, [{
                key: "addYaxisAnnotation",
                value: function(t, e, i) {
                    var a, s = this.w,
                        r = t.strokeDashArray,
                        o = this.helpers.getY1Y2("y1", t),
                        n = t.label.text;
                    if (null === t.y2 || void 0 === t.y2) {
                        var l = this.annoCtx.graphics.drawLine(0 + t.offsetX, o + t.offsetY, this._getYAxisAnnotationWidth(t), o + t.offsetY, t.borderColor, r, t.borderWidth);
                        e.appendChild(l.node), t.id && l.node.classList.add(t.id)
                    } else {
                        if ((a = this.helpers.getY1Y2("y2", t)) > o) {
                            var h = o;
                            o = a, a = h
                        }
                        var c = this.annoCtx.graphics.drawRect(0 + t.offsetX, a + t.offsetY, this._getYAxisAnnotationWidth(t), o - a, 0, t.fillColor, t.opacity, 1, t.borderColor, r);
                        c.node.classList.add("apexcharts-annotation-rect"), c.attr("clip-path", "url(#gridRectMask".concat(s.globals.cuid, ")")), e.appendChild(c.node), t.id && c.node.classList.add(t.id)
                    }
                    var d = "right" === t.label.position ? s.globals.gridWidth : 0,
                        g = this.annoCtx.graphics.drawText({
                            x: d + t.label.offsetX,
                            y: (null != a ? a : o) + t.label.offsetY - 3,
                            text: n,
                            textAnchor: t.label.textAnchor,
                            fontSize: t.label.style.fontSize,
                            fontFamily: t.label.style.fontFamily,
                            fontWeight: t.label.style.fontWeight,
                            foreColor: t.label.style.color,
                            cssClass: "apexcharts-yaxis-annotation-label ".concat(t.label.style.cssClass, " ").concat(t.id ? t.id : "")
                        });
                    g.attr({
                        rel: i
                    }), e.appendChild(g.node)
                }
            }, {
                key: "_getYAxisAnnotationWidth",
                value: function(t) {
                    var e = this.w;
                    e.globals.gridWidth;
                    return (t.width.indexOf("%") > -1 ? e.globals.gridWidth * parseInt(t.width, 10) / 100 : parseInt(t.width, 10)) + t.offsetX
                }
            }, {
                key: "drawYAxisAnnotations",
                value: function() {
                    var t = this,
                        e = this.w,
                        i = this.annoCtx.graphics.group({
                            class: "apexcharts-yaxis-annotations"
                        });
                    return e.config.annotations.yaxis.map((function(e, a) {
                        t.addYaxisAnnotation(e, i.node, a)
                    })), i
                }
            }]), t
        }(),
        S = function() {
            function t(e) {
                a(this, t), this.w = e.w, this.annoCtx = e, this.helpers = new w(this.annoCtx)
            }
            return r(t, [{
                key: "addPointAnnotation",
                value: function(t, e, i) {
                    this.w;
                    var a = this.helpers.getX1X2("x1", t),
                        s = this.helpers.getY1Y2("y1", t);
                    if (x.isNumber(a)) {
                        var r = {
                                pSize: t.marker.size,
                                pointStrokeWidth: t.marker.strokeWidth,
                                pointFillColor: t.marker.fillColor,
                                pointStrokeColor: t.marker.strokeColor,
                                shape: t.marker.shape,
                                pRadius: t.marker.radius,
                                class: "apexcharts-point-annotation-marker ".concat(t.marker.cssClass, " ").concat(t.id ? t.id : "")
                            },
                            o = this.annoCtx.graphics.drawMarker(a + t.marker.offsetX, s + t.marker.offsetY, r);
                        e.appendChild(o.node);
                        var n = t.label.text ? t.label.text : "",
                            l = this.annoCtx.graphics.drawText({
                                x: a + t.label.offsetX,
                                y: s + t.label.offsetY - t.marker.size - parseFloat(t.label.style.fontSize) / 1.6,
                                text: n,
                                textAnchor: t.label.textAnchor,
                                fontSize: t.label.style.fontSize,
                                fontFamily: t.label.style.fontFamily,
                                fontWeight: t.label.style.fontWeight,
                                foreColor: t.label.style.color,
                                cssClass: "apexcharts-point-annotation-label ".concat(t.label.style.cssClass, " ").concat(t.id ? t.id : "")
                            });
                        if (l.attr({
                                rel: i
                            }), e.appendChild(l.node), t.customSVG.SVG) {
                            var h = this.annoCtx.graphics.group({
                                class: "apexcharts-point-annotations-custom-svg " + t.customSVG.cssClass
                            });
                            h.attr({
                                transform: "translate(".concat(a + t.customSVG.offsetX, ", ").concat(s + t.customSVG.offsetY, ")")
                            }), h.node.innerHTML = t.customSVG.SVG, e.appendChild(h.node)
                        }
                        if (t.image.path) {
                            var c = t.image.width ? t.image.width : 20,
                                d = t.image.height ? t.image.height : 20;
                            o = this.annoCtx.addImage({
                                x: a + t.image.offsetX - c / 2,
                                y: s + t.image.offsetY - d / 2,
                                width: c,
                                height: d,
                                path: t.image.path,
                                appendTo: ".apexcharts-point-annotations"
                            })
                        }
                        t.mouseEnter && o.node.addEventListener("mouseenter", t.mouseEnter.bind(this, t)), t.mouseLeave && o.node.addEventListener("mouseleave", t.mouseLeave.bind(this, t)), t.click && o.node.addEventListener("click", t.click.bind(this, t))
                    }
                }
            }, {
                key: "drawPointAnnotations",
                value: function() {
                    var t = this,
                        e = this.w,
                        i = this.annoCtx.graphics.group({
                            class: "apexcharts-point-annotations"
                        });
                    return e.config.annotations.points.map((function(e, a) {
                        t.addPointAnnotation(e, i.node, a)
                    })), i
                }
            }]), t
        }();
    var C = {
            name: "en",
            options: {
                months: ["دی", "بهمن", "اسفند", "فروردین", "اردیبهشت", "خرداد", "تیر", "مرداد", "شهریور", "مهر", "آبان", "آذر"],
                shortMonths: ["دی", "بهمن", "اسفند", "فروردین", "اردیبهشت", "خرداد", "تیر", "مرداد", "شهریور", "مهر", "آبان", "آذر"],
                days: ["یکشنبه", "دوشنبه", "سه شنبه", "چهارشنبه", "پنج شنبه", "جمعه", "شنبه"],
                shortDays: ["یکشنبه", "دوشنبه", "سه شنبه", "چهارشنبه", "پنج شنبه", "جمعه", "شنبه"],
                toolbar: {
                    exportToSVG: "SVG دانلود با فرمت",
                    exportToPNG: "PNG دانلود با فرمت",
                    exportToCSV: "CSV دانلود با فرمت",
                    menu: "فهرست",
                    selection: "انتخاب",
                    selectionZoom: "انتخاب زوم",
                    zoomIn: "افزایش زوم",
                    zoomOut: "کاهش زوم",
                    pan: "متحرک",
                    reset: "بازگردانی زوم"
                }
            }
        },
        L = function() {
            function t() {
                a(this, t), this.yAxis = {
                    show: !0,
                    showAlways: !1,
                    showForNullSeries: !0,
                    seriesName: void 0,
                    opposite: !1,
                    reversed: !1,
                    logarithmic: !1,
                    logBase: 10,
                    tickAmount: void 0,
                    forceNiceScale: !1,
                    max: void 0,
                    min: void 0,
                    floating: !1,
                    decimalsInFloat: void 0,
                    labels: {
                        show: !0,
                        minWidth: 0,
                        maxWidth: 160,
                        offsetX: 0,
                        offsetY: 0,
                        align: void 0,
                        rotate: 0,
                        padding: 20,
                        style: {
                            colors: [],
                            fontSize: "11px",
                            fontWeight: 400,
                            fontFamily: void 0,
                            cssClass: ""
                        },
                        formatter: void 0
                    },
                    axisBorder: {
                        show: !1,
                        color: "#e0e0e0",
                        width: 1,
                        offsetX: 0,
                        offsetY: 0
                    },
                    axisTicks: {
                        show: !1,
                        color: "#e0e0e0",
                        width: 6,
                        offsetX: 0,
                        offsetY: 0
                    },
                    title: {
                        text: void 0,
                        rotate: -90,
                        offsetY: 0,
                        offsetX: 0,
                        style: {
                            color: void 0,
                            fontSize: "11px",
                            fontWeight: 900,
                            fontFamily: void 0,
                            cssClass: ""
                        }
                    },
                    tooltip: {
                        enabled: !1,
                        offsetX: 0
                    },
                    crosshairs: {
                        show: !0,
                        position: "front",
                        stroke: {
                            color: "#b6b6b6",
                            width: 1,
                            dashArray: 0
                        }
                    }
                }, this.pointAnnotation = {
                    id: void 0,
                    x: 0,
                    y: null,
                    yAxisIndex: 0,
                    seriesIndex: 0,
                    mouseEnter: void 0,
                    mouseLeave: void 0,
                    click: void 0,
                    marker: {
                        size: 4,
                        fillColor: "#fff",
                        strokeWidth: 2,
                        strokeColor: "#333",
                        shape: "circle",
                        offsetX: 0,
                        offsetY: 0,
                        radius: 2,
                        cssClass: ""
                    },
                    label: {
                        borderColor: "#c2c2c2",
                        borderWidth: 1,
                        borderRadius: 2,
                        text: void 0,
                        textAnchor: "middle",
                        offsetX: 0,
                        offsetY: 0,
                        mouseEnter: void 0,
                        mouseLeave: void 0,
                        click: void 0,
                        style: {
                            background: "#fff",
                            color: void 0,
                            fontSize: "11px",
                            fontFamily: void 0,
                            fontWeight: 400,
                            cssClass: "",
                            padding: {
                                left: 5,
                                right: 5,
                                top: 2,
                                bottom: 2
                            }
                        }
                    },
                    customSVG: {
                        SVG: void 0,
                        cssClass: void 0,
                        offsetX: 0,
                        offsetY: 0
                    },
                    image: {
                        path: void 0,
                        width: 20,
                        height: 20,
                        offsetX: 0,
                        offsetY: 0
                    }
                }, this.yAxisAnnotation = {
                    id: void 0,
                    y: 0,
                    y2: null,
                    strokeDashArray: 1,
                    fillColor: "#c2c2c2",
                    borderColor: "#c2c2c2",
                    borderWidth: 1,
                    opacity: .3,
                    offsetX: 0,
                    offsetY: 0,
                    width: "100%",
                    yAxisIndex: 0,
                    label: {
                        borderColor: "#c2c2c2",
                        borderWidth: 1,
                        borderRadius: 2,
                        text: void 0,
                        textAnchor: "end",
                        position: "right",
                        offsetX: 0,
                        offsetY: -3,
                        mouseEnter: void 0,
                        mouseLeave: void 0,
                        click: void 0,
                        style: {
                            background: "#fff",
                            color: void 0,
                            fontSize: "11px",
                            fontFamily: void 0,
                            fontWeight: 400,
                            cssClass: "",
                            padding: {
                                left: 5,
                                right: 5,
                                top: 2,
                                bottom: 2
                            }
                        }
                    }
                }, this.xAxisAnnotation = {
                    id: void 0,
                    x: 0,
                    x2: null,
                    strokeDashArray: 1,
                    fillColor: "#c2c2c2",
                    borderColor: "#c2c2c2",
                    borderWidth: 1,
                    opacity: .3,
                    offsetX: 0,
                    offsetY: 0,
                    label: {
                        borderColor: "#c2c2c2",
                        borderWidth: 1,
                        borderRadius: 2,
                        text: void 0,
                        textAnchor: "middle",
                        orientation: "vertical",
                        position: "top",
                        offsetX: 0,
                        offsetY: 0,
                        mouseEnter: void 0,
                        mouseLeave: void 0,
                        click: void 0,
                        style: {
                            background: "#fff",
                            color: void 0,
                            fontSize: "11px",
                            fontFamily: void 0,
                            fontWeight: 400,
                            cssClass: "",
                            padding: {
                                left: 5,
                                right: 5,
                                top: 2,
                                bottom: 2
                            }
                        }
                    }
                }, this.text = {
                    x: 0,
                    y: 0,
                    text: "",
                    textAnchor: "start",
                    foreColor: void 0,
                    fontSize: "13px",
                    fontFamily: void 0,
                    fontWeight: 400,
                    appendTo: ".apexcharts-annotations",
                    backgroundColor: "transparent",
                    borderColor: "#c2c2c2",
                    borderRadius: 0,
                    borderWidth: 0,
                    paddingLeft: 4,
                    paddingRight: 4,
                    paddingTop: 2,
                    paddingBottom: 2
                }
            }
            return r(t, [{
                key: "init",
                value: function() {
                    return {
                        annotations: {
                            position: "front",
                            yaxis: [this.yAxisAnnotation],
                            xaxis: [this.xAxisAnnotation],
                            points: [this.pointAnnotation],
                            texts: [],
                            images: [],
                            shapes: []
                        },
                        chart: {
                            animations: {
                                enabled: !0,
                                easing: "easeinout",
                                speed: 800,
                                animateGradually: {
                                    delay: 150,
                                    enabled: !0
                                },
                                dynamicAnimation: {
                                    enabled: !0,
                                    speed: 350
                                }
                            },
                            background: "transparent",
                            locales: [C],
                            defaultLocale: "en",
                            dropShadow: {
                                enabled: !1,
                                enabledOnSeries: void 0,
                                top: 2,
                                left: 2,
                                blur: 4,
                                color: "#000",
                                opacity: .35
                            },
                            events: {
                                animationEnd: void 0,
                                beforeMount: void 0,
                                mounted: void 0,
                                updated: void 0,
                                click: void 0,
                                mouseMove: void 0,
                                mouseLeave: void 0,
                                legendClick: void 0,
                                markerClick: void 0,
                                selection: void 0,
                                dataPointSelection: void 0,
                                dataPointMouseEnter: void 0,
                                dataPointMouseLeave: void 0,
                                beforeZoom: void 0,
                                beforeResetZoom: void 0,
                                zoomed: void 0,
                                scrolled: void 0,
                                brushScrolled: void 0
                            },
                            foreColor: "#373d3f",
                            fontFamily: "iransans, Helvetica, Arial, sans-serif",
                            height: "auto",
                            parentHeightOffset: 15,
                            redrawOnParentResize: !0,
                            redrawOnWindowResize: !0,
                            id: void 0,
                            group: void 0,
                            offsetX: 0,
                            offsetY: 0,
                            selection: {
                                enabled: !1,
                                type: "x",
                                fill: {
                                    color: "#24292e",
                                    opacity: .1
                                },
                                stroke: {
                                    width: 1,
                                    color: "#24292e",
                                    opacity: .4,
                                    dashArray: 3
                                },
                                xaxis: {
                                    min: void 0,
                                    max: void 0
                                },
                                yaxis: {
                                    min: void 0,
                                    max: void 0
                                }
                            },
                            sparkline: {
                                enabled: !1
                            },
                            brush: {
                                enabled: !1,
                                autoScaleYaxis: !0,
                                target: void 0
                            },
                            stacked: !1,
                            stackType: "normal",
                            toolbar: {
                                show: !0,
                                offsetX: 0,
                                offsetY: 0,
                                tools: {
                                    download: !0,
                                    selection: !0,
                                    zoom: !0,
                                    zoomin: !0,
                                    zoomout: !0,
                                    pan: !0,
                                    reset: !0,
                                    customIcons: []
                                },
                                export: {
                                    csv: {
                                        filename: void 0,
                                        columnDelimiter: ",",
                                        headerCategory: "category",
                                        headerValue: "value",
                                        dateFormatter: function(t) {
                                            return new Date(t).toDateString()
                                        }
                                    },
                                    png: {
                                        filename: void 0
                                    },
                                    svg: {
                                        filename: void 0
                                    }
                                },
                                autoSelected: "zoom"
                            },
                            type: "line",
                            width: "100%",
                            zoom: {
                                enabled: !0,
                                type: "x",
                                autoScaleYaxis: !1,
                                zoomedArea: {
                                    fill: {
                                        color: "#90CAF9",
                                        opacity: .4
                                    },
                                    stroke: {
                                        color: "#0D47A1",
                                        opacity: .4,
                                        width: 1
                                    }
                                }
                            }
                        },
                        plotOptions: {
                            area: {
                                fillTo: "origin"
                            },
                            bar: {
                                horizontal: !1,
                                columnWidth: "70%",
                                barHeight: "70%",
                                distributed: !1,
                                borderRadius: 0,
                                rangeBarOverlap: !0,
                                rangeBarGroupRows: !1,
                                colors: {
                                    ranges: [],
                                    backgroundBarColors: [],
                                    backgroundBarOpacity: 1,
                                    backgroundBarRadius: 0
                                },
                                dataLabels: {
                                    position: "top",
                                    maxItems: 100,
                                    hideOverflowingLabels: !0,
                                    orientation: "horizontal"
                                }
                            },
                            bubble: {
                                minBubbleRadius: void 0,
                                maxBubbleRadius: void 0
                            },
                            candlestick: {
                                colors: {
                                    upward: "#00B746",
                                    downward: "#EF403C"
                                },
                                wick: {
                                    useFillColor: !0
                                }
                            },
                            boxPlot: {
                                colors: {
                                    upper: "#00E396",
                                    lower: "#008FFB"
                                }
                            },
                            heatmap: {
                                radius: 2,
                                enableShades: !0,
                                shadeIntensity: .5,
                                reverseNegativeShade: !1,
                                distributed: !1,
                                useFillColorAsStroke: !1,
                                colorScale: {
                                    inverse: !1,
                                    ranges: [],
                                    min: void 0,
                                    max: void 0
                                }
                            },
                            treemap: {
                                enableShades: !0,
                                shadeIntensity: .5,
                                distributed: !1,
                                reverseNegativeShade: !1,
                                useFillColorAsStroke: !1,
                                colorScale: {
                                    inverse: !1,
                                    ranges: [],
                                    min: void 0,
                                    max: void 0
                                }
                            },
                            radialBar: {
                                inverseOrder: !1,
                                startAngle: 0,
                                endAngle: 360,
                                offsetX: 0,
                                offsetY: 0,
                                hollow: {
                                    margin: 5,
                                    size: "50%",
                                    background: "transparent",
                                    image: void 0,
                                    imageWidth: 150,
                                    imageHeight: 150,
                                    imageOffsetX: 0,
                                    imageOffsetY: 0,
                                    imageClipped: !0,
                                    position: "front",
                                    dropShadow: {
                                        enabled: !1,
                                        top: 0,
                                        left: 0,
                                        blur: 3,
                                        color: "#000",
                                        opacity: .5
                                    }
                                },
                                track: {
                                    show: !0,
                                    startAngle: void 0,
                                    endAngle: void 0,
                                    background: "#f2f2f2",
                                    strokeWidth: "97%",
                                    opacity: 1,
                                    margin: 5,
                                    dropShadow: {
                                        enabled: !1,
                                        top: 0,
                                        left: 0,
                                        blur: 3,
                                        color: "#000",
                                        opacity: .5
                                    }
                                },
                                dataLabels: {
                                    show: !0,
                                    name: {
                                        show: !0,
                                        fontSize: "16px",
                                        fontFamily: void 0,
                                        fontWeight: 600,
                                        color: void 0,
                                        offsetY: 0,
                                        formatter: function(t) {
                                            return t
                                        }
                                    },
                                    value: {
                                        show: !0,
                                        fontSize: "14px",
                                        fontFamily: void 0,
                                        fontWeight: 400,
                                        color: void 0,
                                        offsetY: 16,
                                        formatter: function(t) {
                                            return t + "%"
                                        }
                                    },
                                    total: {
                                        show: !1,
                                        label: "Total",
                                        fontSize: "16px",
                                        fontWeight: 600,
                                        fontFamily: void 0,
                                        color: void 0,
                                        formatter: function(t) {
                                            return t.globals.seriesTotals.reduce((function(t, e) {
                                                return t + e
                                            }), 0) / t.globals.series.length + "%"
                                        }
                                    }
                                }
                            },
                            pie: {
                                customScale: 1,
                                offsetX: 0,
                                offsetY: 0,
                                startAngle: 0,
                                endAngle: 360,
                                expandOnClick: !0,
                                dataLabels: {
                                    offset: 0,
                                    minAngleToShowLabel: 10
                                },
                                donut: {
                                    size: "65%",
                                    background: "transparent",
                                    labels: {
                                        show: !1,
                                        name: {
                                            show: !0,
                                            fontSize: "16px",
                                            fontFamily: void 0,
                                            fontWeight: 600,
                                            color: void 0,
                                            offsetY: -10,
                                            formatter: function(t) {
                                                return t
                                            }
                                        },
                                        value: {
                                            show: !0,
                                            fontSize: "20px",
                                            fontFamily: void 0,
                                            fontWeight: 400,
                                            color: void 0,
                                            offsetY: 10,
                                            formatter: function(t) {
                                                return t
                                            }
                                        },
                                        total: {
                                            show: !1,
                                            showAlways: !1,
                                            label: "Total",
                                            fontSize: "16px",
                                            fontWeight: 400,
                                            fontFamily: void 0,
                                            color: void 0,
                                            formatter: function(t) {
                                                return t.globals.seriesTotals.reduce((function(t, e) {
                                                    return t + e
                                                }), 0)
                                            }
                                        }
                                    }
                                }
                            },
                            polarArea: {
                                rings: {
                                    strokeWidth: 1,
                                    strokeColor: "#e8e8e8"
                                },
                                spokes: {
                                    strokeWidth: 1,
                                    connectorColors: "#e8e8e8"
                                }
                            },
                            radar: {
                                size: void 0,
                                offsetX: 0,
                                offsetY: 0,
                                polygons: {
                                    strokeWidth: 1,
                                    strokeColors: "#e8e8e8",
                                    connectorColors: "#e8e8e8",
                                    fill: {
                                        colors: void 0
                                    }
                                }
                            }
                        },
                        colors: void 0,
                        dataLabels: {
                            enabled: !0,
                            enabledOnSeries: void 0,
                            formatter: function(t) {
                                return null !== t ? t : ""
                            },
                            textAnchor: "middle",
                            distributed: !1,
                            offsetX: 0,
                            offsetY: 0,
                            style: {
                                fontSize: "12px",
                                fontFamily: void 0,
                                fontWeight: 600,
                                colors: void 0
                            },
                            background: {
                                enabled: !0,
                                foreColor: "#fff",
                                borderRadius: 2,
                                padding: 4,
                                opacity: .9,
                                borderWidth: 1,
                                borderColor: "#fff",
                                dropShadow: {
                                    enabled: !1,
                                    top: 1,
                                    left: 1,
                                    blur: 1,
                                    color: "#000",
                                    opacity: .45
                                }
                            },
                            dropShadow: {
                                enabled: !1,
                                top: 1,
                                left: 1,
                                blur: 1,
                                color: "#000",
                                opacity: .45
                            }
                        },
                        fill: {
                            type: "solid",
                            colors: void 0,
                            opacity: .85,
                            gradient: {
                                shade: "dark",
                                type: "horizontal",
                                shadeIntensity: .5,
                                gradientToColors: void 0,
                                inverseColors: !0,
                                opacityFrom: 1,
                                opacityTo: 1,
                                stops: [0, 50, 100],
                                colorStops: []
                            },
                            image: {
                                src: [],
                                width: void 0,
                                height: void 0
                            },
                            pattern: {
                                style: "squares",
                                width: 6,
                                height: 6,
                                strokeWidth: 2
                            }
                        },
                        forecastDataPoints: {
                            count: 0,
                            fillOpacity: .5,
                            strokeWidth: void 0,
                            dashArray: 4
                        },
                        grid: {
                            show: !0,
                            borderColor: "#e0e0e0",
                            strokeDashArray: 0,
                            position: "back",
                            xaxis: {
                                lines: {
                                    show: !1
                                }
                            },
                            yaxis: {
                                lines: {
                                    show: !0
                                }
                            },
                            row: {
                                colors: void 0,
                                opacity: .5
                            },
                            column: {
                                colors: void 0,
                                opacity: .5
                            },
                            padding: {
                                top: 0,
                                right: 10,
                                bottom: 0,
                                left: 12
                            }
                        },
                        labels: [],
                        legend: {
                            show: !0,
                            showForSingleSeries: !1,
                            showForNullSeries: !0,
                            showForZeroSeries: !0,
                            floating: !1,
                            position: "bottom",
                            horizontalAlign: "center",
                            inverseOrder: !1,
                            fontSize: "12px",
                            fontFamily: void 0,
                            fontWeight: 400,
                            width: void 0,
                            height: void 0,
                            formatter: void 0,
                            tooltipHoverFormatter: void 0,
                            offsetX: -20,
                            offsetY: 4,
                            customLegendItems: [],
                            labels: {
                                colors: void 0,
                                useSeriesColors: !1
                            },
                            markers: {
                                width: 12,
                                height: 12,
                                strokeWidth: 0,
                                fillColors: void 0,
                                strokeColor: "#fff",
                                radius: 12,
                                customHTML: void 0,
                                offsetX: 0,
                                offsetY: 0,
                                onClick: void 0
                            },
                            itemMargin: {
                                horizontal: 5,
                                vertical: 2
                            },
                            onItemClick: {
                                toggleDataSeries: !0
                            },
                            onItemHover: {
                                highlightDataSeries: !0
                            }
                        },
                        markers: {
                            discrete: [],
                            size: 0,
                            colors: void 0,
                            strokeColors: "#fff",
                            strokeWidth: 2,
                            strokeOpacity: .9,
                            strokeDashArray: 0,
                            fillOpacity: 1,
                            shape: "circle",
                            width: 8,
                            height: 8,
                            radius: 2,
                            offsetX: 0,
                            offsetY: 0,
                            onClick: void 0,
                            onDblClick: void 0,
                            showNullDataPoints: !0,
                            hover: {
                                size: void 0,
                                sizeOffset: 3
                            }
                        },
                        noData: {
                            text: void 0,
                            align: "center",
                            verticalAlign: "middle",
                            offsetX: 0,
                            offsetY: 0,
                            style: {
                                color: void 0,
                                fontSize: "14px",
                                fontFamily: void 0
                            }
                        },
                        responsive: [],
                        series: void 0,
                        states: {
                            normal: {
                                filter: {
                                    type: "none",
                                    value: 0
                                }
                            },
                            hover: {
                                filter: {
                                    type: "lighten",
                                    value: .1
                                }
                            },
                            active: {
                                allowMultipleDataPointsSelection: !1,
                                filter: {
                                    type: "darken",
                                    value: .5
                                }
                            }
                        },
                        title: {
                            text: void 0,
                            align: "left",
                            margin: 5,
                            offsetX: 0,
                            offsetY: 0,
                            floating: !1,
                            style: {
                                fontSize: "14px",
                                fontWeight: 900,
                                fontFamily: void 0,
                                color: void 0
                            }
                        },
                        subtitle: {
                            text: void 0,
                            align: "left",
                            margin: 5,
                            offsetX: 0,
                            offsetY: 30,
                            floating: !1,
                            style: {
                                fontSize: "12px",
                                fontWeight: 400,
                                fontFamily: void 0,
                                color: void 0
                            }
                        },
                        stroke: {
                            show: !0,
                            curve: "smooth",
                            lineCap: "butt",
                            width: 2,
                            colors: void 0,
                            dashArray: 0,
                            fill: {
                                type: "solid",
                                colors: void 0,
                                opacity: .85,
                                gradient: {
                                    shade: "dark",
                                    type: "horizontal",
                                    shadeIntensity: .5,
                                    gradientToColors: void 0,
                                    inverseColors: !0,
                                    opacityFrom: 1,
                                    opacityTo: 1,
                                    stops: [0, 50, 100],
                                    colorStops: []
                                }
                            }
                        },
                        tooltip: {
                            enabled: !0,
                            enabledOnSeries: void 0,
                            shared: !0,
                            followCursor: !1,
                            intersect: !1,
                            inverseOrder: !1,
                            custom: void 0,
                            fillSeriesColor: !1,
                            theme: "light",
                            cssClass: "",
                            style: {
                                fontSize: "12px",
                                fontFamily: void 0
                            },
                            onDatasetHover: {
                                highlightDataSeries: !1
                            },
                            x: {
                                show: !0,
                                format: "dd MMM",
                                formatter: void 0
                            },
                            y: {
                                formatter: void 0,
                                title: {
                                    formatter: function(t) {
                                        return t ? t + ": " : ""
                                    }
                                }
                            },
                            z: {
                                formatter: void 0,
                                title: "Size: "
                            },
                            marker: {
                                show: !0,
                                fillColors: void 0
                            },
                            items: {
                                display: "flex"
                            },
                            fixed: {
                                enabled: !1,
                                position: "topRight",
                                offsetX: 0,
                                offsetY: 0
                            }
                        },
                        xaxis: {
                            type: "category",
                            categories: [],
                            convertedCatToNumeric: !1,
                            offsetX: 0,
                            offsetY: 0,
                            overwriteCategories: void 0,
                            labels: {
                                show: !0,
                                rotate: -45,
                                rotateAlways: !1,
                                hideOverlappingLabels: !0,
                                trim: !1,
                                minHeight: void 0,
                                maxHeight: 120,
                                showDuplicates: !0,
                                style: {
                                    colors: [],
                                    fontSize: "12px",
                                    fontWeight: 400,
                                    fontFamily: void 0,
                                    cssClass: ""
                                },
                                offsetX: 0,
                                offsetY: 0,
                                format: void 0,
                                formatter: void 0,
                                datetimeUTC: !0,
                                datetimeFormatter: {
                                    year: "yyyy",
                                    month: "MMM 'yy",
                                    day: "dd MMM",
                                    hour: "HH:mm",
                                    minute: "HH:mm:ss",
                                    second: "HH:mm:ss"
                                }
                            },
                            group: {
                                groups: [],
                                style: {
                                    colors: [],
                                    fontSize: "12px",
                                    fontWeight: 400,
                                    fontFamily: void 0,
                                    cssClass: ""
                                }
                            },
                            axisBorder: {
                                show: !0,
                                color: "#e0e0e0",
                                width: "100%",
                                height: 1,
                                offsetX: 0,
                                offsetY: 0
                            },
                            axisTicks: {
                                show: !0,
                                color: "#e0e0e0",
                                height: 6,
                                offsetX: 0,
                                offsetY: 0
                            },
                            tickAmount: void 0,
                            tickPlacement: "on",
                            min: void 0,
                            max: void 0,
                            range: void 0,
                            floating: !1,
                            decimalsInFloat: void 0,
                            position: "bottom",
                            title: {
                                text: void 0,
                                offsetX: 0,
                                offsetY: 0,
                                style: {
                                    color: void 0,
                                    fontSize: "12px",
                                    fontWeight: 900,
                                    fontFamily: void 0,
                                    cssClass: ""
                                }
                            },
                            crosshairs: {
                                show: !0,
                                width: 1,
                                position: "back",
                                opacity: .9,
                                stroke: {
                                    color: "#b6b6b6",
                                    width: 1,
                                    dashArray: 3
                                },
                                fill: {
                                    type: "solid",
                                    color: "#B1B9C4",
                                    gradient: {
                                        colorFrom: "#D8E3F0",
                                        colorTo: "#BED1E6",
                                        stops: [0, 100],
                                        opacityFrom: .4,
                                        opacityTo: .5
                                    }
                                },
                                dropShadow: {
                                    enabled: !1,
                                    left: 0,
                                    top: 0,
                                    blur: 1,
                                    opacity: .4
                                }
                            },
                            tooltip: {
                                enabled: !0,
                                offsetY: 0,
                                formatter: void 0,
                                style: {
                                    fontSize: "12px",
                                    fontFamily: void 0
                                }
                            }
                        },
                        yaxis: this.yAxis,
                        theme: {
                            mode: "light",
                            palette: "palette1",
                            monochrome: {
                                enabled: !1,
                                color: "#008FFB",
                                shadeTo: "light",
                                shadeIntensity: .65
                            }
                        }
                    }
                }
            }]), t
        }(),
        P = function() {
            function t(e) {
                a(this, t), this.ctx = e, this.w = e.w, this.graphics = new m(this.ctx), this.w.globals.isBarHorizontal && (this.invertAxis = !0), this.helpers = new w(this), this.xAxisAnnotations = new k(this), this.yAxisAnnotations = new A(this), this.pointsAnnotations = new S(this), this.w.globals.isBarHorizontal && this.w.config.yaxis[0].reversed && (this.inversedReversedAxis = !0), this.xDivision = this.w.globals.gridWidth / this.w.globals.dataPoints
            }
            return r(t, [{
                key: "drawAxesAnnotations",
                value: function() {
                    var t = this.w;
                    if (t.globals.axisCharts) {
                        for (var e = this.yAxisAnnotations.drawYAxisAnnotations(), i = this.xAxisAnnotations.drawXAxisAnnotations(), a = this.pointsAnnotations.drawPointAnnotations(), s = t.config.chart.animations.enabled, r = [e, i, a], o = [i.node, e.node, a.node], n = 0; n < 3; n++) t.globals.dom.elGraphical.add(r[n]), !s || t.globals.resized || t.globals.dataChanged || "scatter" !== t.config.chart.type && "bubble" !== t.config.chart.type && t.globals.dataPoints > 1 && o[n].classList.add("apexcharts-element-hidden"), t.globals.delayedElements.push({
                            el: o[n],
                            index: 0
                        });
                        this.helpers.annotationsBackground()
                    }
                }
            }, {
                key: "drawImageAnnos",
                value: function() {
                    var t = this;
                    this.w.config.annotations.images.map((function(e, i) {
                        t.addImage(e, i)
                    }))
                }
            }, {
                key: "drawTextAnnos",
                value: function() {
                    var t = this;
                    this.w.config.annotations.texts.map((function(e, i) {
                        t.addText(e, i)
                    }))
                }
            }, {
                key: "addXaxisAnnotation",
                value: function(t, e, i) {
                    this.xAxisAnnotations.addXaxisAnnotation(t, e, i)
                }
            }, {
                key: "addYaxisAnnotation",
                value: function(t, e, i) {
                    this.yAxisAnnotations.addYaxisAnnotation(t, e, i)
                }
            }, {
                key: "addPointAnnotation",
                value: function(t, e, i) {
                    this.pointsAnnotations.addPointAnnotation(t, e, i)
                }
            }, {
                key: "addText",
                value: function(t, e) {
                    var i = t.x,
                        a = t.y,
                        s = t.text,
                        r = t.textAnchor,
                        o = t.foreColor,
                        n = t.fontSize,
                        l = t.fontFamily,
                        h = t.fontWeight,
                        c = t.cssClass,
                        d = t.backgroundColor,
                        g = t.borderWidth,
                        u = t.strokeDashArray,
                        f = t.borderRadius,
                        p = t.borderColor,
                        x = t.appendTo,
                        b = void 0 === x ? ".apexcharts-annotations" : x,
                        v = t.paddingLeft,
                        m = void 0 === v ? 4 : v,
                        y = t.paddingRight,
                        w = void 0 === y ? 4 : y,
                        k = t.paddingBottom,
                        A = void 0 === k ? 2 : k,
                        S = t.paddingTop,
                        C = void 0 === S ? 2 : S,
                        L = this.w,
                        P = this.graphics.drawText({
                            x: i,
                            y: a,
                            text: s,
                            textAnchor: r || "start",
                            fontSize: n || "12px",
                            fontWeight: h || "regular",
                            fontFamily: l || L.config.chart.fontFamily,
                            foreColor: o || L.config.chart.foreColor,
                            cssClass: c
                        }),
                        M = L.globals.dom.baseEl.querySelector(b);
                    M && M.appendChild(P.node);
                    var T = P.bbox();
                    if (s) {
                        var I = this.graphics.drawRect(T.x - m, T.y - C, T.width + m + w, T.height + A + C, f, d || "transparent", 1, g, p, u);
                        M.insertBefore(I.node, P.node)
                    }
                }
            }, {
                key: "addImage",
                value: function(t, e) {
                    var i = this.w,
                        a = t.path,
                        s = t.x,
                        r = void 0 === s ? 0 : s,
                        o = t.y,
                        n = void 0 === o ? 0 : o,
                        l = t.width,
                        h = void 0 === l ? 20 : l,
                        c = t.height,
                        d = void 0 === c ? 20 : c,
                        g = t.appendTo,
                        u = void 0 === g ? ".apexcharts-annotations" : g,
                        f = i.globals.dom.Paper.image(a);
                    f.size(h, d).move(r, n);
                    var p = i.globals.dom.baseEl.querySelector(u);
                    return p && p.appendChild(f.node), f
                }
            }, {
                key: "addXaxisAnnotationExternal",
                value: function(t, e, i) {
                    return this.addAnnotationExternal({
                        params: t,
                        pushToMemory: e,
                        context: i,
                        type: "xaxis",
                        contextMethod: i.addXaxisAnnotation
                    }), i
                }
            }, {
                key: "addYaxisAnnotationExternal",
                value: function(t, e, i) {
                    return this.addAnnotationExternal({
                        params: t,
                        pushToMemory: e,
                        context: i,
                        type: "yaxis",
                        contextMethod: i.addYaxisAnnotation
                    }), i
                }
            }, {
                key: "addPointAnnotationExternal",
                value: function(t, e, i) {
                    return void 0 === this.invertAxis && (this.invertAxis = i.w.globals.isBarHorizontal), this.addAnnotationExternal({
                        params: t,
                        pushToMemory: e,
                        context: i,
                        type: "point",
                        contextMethod: i.addPointAnnotation
                    }), i
                }
            }, {
                key: "addAnnotationExternal",
                value: function(t) {
                    var e = t.params,
                        i = t.pushToMemory,
                        a = t.context,
                        s = t.type,
                        r = t.contextMethod,
                        o = a,
                        n = o.w,
                        l = n.globals.dom.baseEl.querySelector(".apexcharts-".concat(s, "-annotations")),
                        h = l.childNodes.length + 1,
                        c = new L,
                        d = Object.assign({}, "xaxis" === s ? c.xAxisAnnotation : "yaxis" === s ? c.yAxisAnnotation : c.pointAnnotation),
                        g = x.extend(d, e);
                    switch (s) {
                        case "xaxis":
                            this.addXaxisAnnotation(g, l, h);
                            break;
                        case "yaxis":
                            this.addYaxisAnnotation(g, l, h);
                            break;
                        case "point":
                            this.addPointAnnotation(g, l, h)
                    }
                    var u = n.globals.dom.baseEl.querySelector(".apexcharts-".concat(s, "-annotations .apexcharts-").concat(s, "-annotation-label[rel='").concat(h, "']")),
                        f = this.helpers.addBackgroundToAnno(u, g);
                    return f && l.insertBefore(f.node, u), i && n.globals.memory.methodsToExec.push({
                        context: o,
                        id: g.id ? g.id : x.randomId(),
                        method: r,
                        label: "addAnnotation",
                        params: e
                    }), a
                }
            }, {
                key: "clearAnnotations",
                value: function(t) {
                    var e = t.w,
                        i = e.globals.dom.baseEl.querySelectorAll(".apexcharts-yaxis-annotations, .apexcharts-xaxis-annotations, .apexcharts-point-annotations");
                    e.globals.memory.methodsToExec.map((function(t, i) {
                        "addText" !== t.label && "addAnnotation" !== t.label || e.globals.memory.methodsToExec.splice(i, 1)
                    })), i = x.listToArray(i), Array.prototype.forEach.call(i, (function(t) {
                        for (; t.firstChild;) t.removeChild(t.firstChild)
                    }))
                }
            }, {
                key: "removeAnnotation",
                value: function(t, e) {
                    var i = t.w,
                        a = i.globals.dom.baseEl.querySelectorAll(".".concat(e));
                    a && (i.globals.memory.methodsToExec.map((function(t, a) {
                        t.id === e && i.globals.memory.methodsToExec.splice(a, 1)
                    })), Array.prototype.forEach.call(a, (function(t) {
                        t.parentElement.removeChild(t)
                    })))
                }
            }]), t
        }(),
        M = function() {
            function t(e) {
                a(this, t), this.ctx = e, this.w = e.w, this.opts = null, this.seriesIndex = 0
            }
            return r(t, [{
                key: "clippedImgArea",
                value: function(t) {
                    var e = this.w,
                        i = e.config,
                        a = parseInt(e.globals.gridWidth, 10),
                        s = parseInt(e.globals.gridHeight, 10),
                        r = a > s ? a : s,
                        o = t.image,
                        n = 0,
                        l = 0;
                    void 0 === t.width && void 0 === t.height ? void 0 !== i.fill.image.width && void 0 !== i.fill.image.height ? (n = i.fill.image.width + 1, l = i.fill.image.height) : (n = r + 1, l = r) : (n = t.width, l = t.height);
                    var h = document.createElementNS(e.globals.SVGNS, "pattern");
                    m.setAttrs(h, {
                        id: t.patternID,
                        patternUnits: t.patternUnits ? t.patternUnits : "userSpaceOnUse",
                        width: n + "px",
                        height: l + "px"
                    });
                    var c = document.createElementNS(e.globals.SVGNS, "image");
                    h.appendChild(c), c.setAttributeNS(window.SVG.xlink, "href", o), m.setAttrs(c, {
                        x: 0,
                        y: 0,
                        preserveAspectRatio: "none",
                        width: n + "px",
                        height: l + "px"
                    }), c.style.opacity = t.opacity, e.globals.dom.elDefs.node.appendChild(h)
                }
            }, {
                key: "getSeriesIndex",
                value: function(t) {
                    var e = this.w;
                    return ("bar" === e.config.chart.type || "rangeBar" === e.config.chart.type) && e.config.plotOptions.bar.distributed || "heatmap" === e.config.chart.type || "treemap" === e.config.chart.type ? this.seriesIndex = t.seriesNumber : this.seriesIndex = t.seriesNumber % e.globals.series.length, this.seriesIndex
                }
            }, {
                key: "fillPath",
                value: function(t) {
                    var e = this.w;
                    this.opts = t;
                    var i, a, s, r = this.w.config;
                    this.seriesIndex = this.getSeriesIndex(t);
                    var o = this.getFillColors()[this.seriesIndex];
                    void 0 !== e.globals.seriesColors[this.seriesIndex] && (o = e.globals.seriesColors[this.seriesIndex]), "function" == typeof o && (o = o({
                        seriesIndex: this.seriesIndex,
                        dataPointIndex: t.dataPointIndex,
                        value: t.value,
                        w: e
                    }));
                    var n = this.getFillType(this.seriesIndex),
                        l = Array.isArray(r.fill.opacity) ? r.fill.opacity[this.seriesIndex] : r.fill.opacity;
                    t.color && (o = t.color);
                    var h = o;
                    if (-1 === o.indexOf("rgb") ? o.length < 9 && (h = x.hexToRgba(o, l)) : o.indexOf("rgba") > -1 && (l = x.getOpacityFromRGBA(o)), t.opacity && (l = t.opacity), "pattern" === n && (a = this.handlePatternFill(a, o, l, h)), "gradient" === n && (s = this.handleGradientFill(o, l, this.seriesIndex)), "image" === n) {
                        var c = r.fill.image.src,
                            d = t.patternID ? t.patternID : "";
                        this.clippedImgArea({
                            opacity: l,
                            image: Array.isArray(c) ? t.seriesNumber < c.length ? c[t.seriesNumber] : c[0] : c,
                            width: t.width ? t.width : void 0,
                            height: t.height ? t.height : void 0,
                            patternUnits: t.patternUnits,
                            patternID: "pattern".concat(e.globals.cuid).concat(t.seriesNumber + 1).concat(d)
                        }), i = "url(#pattern".concat(e.globals.cuid).concat(t.seriesNumber + 1).concat(d, ")")
                    } else i = "gradient" === n ? s : "pattern" === n ? a : h;
                    return t.solid && (i = h), i
                }
            }, {
                key: "getFillType",
                value: function(t) {
                    var e = this.w;
                    return Array.isArray(e.config.fill.type) ? e.config.fill.type[t] : e.config.fill.type
                }
            }, {
                key: "getFillColors",
                value: function() {
                    var t = this.w,
                        e = t.config,
                        i = this.opts,
                        a = [];
                    return t.globals.comboCharts ? "line" === t.config.series[this.seriesIndex].type ? Array.isArray(t.globals.stroke.colors) ? a = t.globals.stroke.colors : a.push(t.globals.stroke.colors) : Array.isArray(t.globals.fill.colors) ? a = t.globals.fill.colors : a.push(t.globals.fill.colors) : "line" === e.chart.type ? Array.isArray(t.globals.stroke.colors) ? a = t.globals.stroke.colors : a.push(t.globals.stroke.colors) : Array.isArray(t.globals.fill.colors) ? a = t.globals.fill.colors : a.push(t.globals.fill.colors), void 0 !== i.fillColors && (a = [], Array.isArray(i.fillColors) ? a = i.fillColors.slice() : a.push(i.fillColors)), a
                }
            }, {
                key: "handlePatternFill",
                value: function(t, e, i, a) {
                    var s = this.w.config,
                        r = this.opts,
                        o = new m(this.ctx),
                        n = void 0 === s.fill.pattern.strokeWidth ? Array.isArray(s.stroke.width) ? s.stroke.width[this.seriesIndex] : s.stroke.width : Array.isArray(s.fill.pattern.strokeWidth) ? s.fill.pattern.strokeWidth[this.seriesIndex] : s.fill.pattern.strokeWidth,
                        l = e;
                    Array.isArray(s.fill.pattern.style) ? t = void 0 !== s.fill.pattern.style[r.seriesNumber] ? o.drawPattern(s.fill.pattern.style[r.seriesNumber], s.fill.pattern.width, s.fill.pattern.height, l, n, i) : a : t = o.drawPattern(s.fill.pattern.style, s.fill.pattern.width, s.fill.pattern.height, l, n, i);
                    return t
                }
            }, {
                key: "handleGradientFill",
                value: function(t, e, i) {
                    var a, s = this.w.config,
                        r = this.opts,
                        o = new m(this.ctx),
                        n = new x,
                        l = s.fill.gradient.type,
                        h = t,
                        c = void 0 === s.fill.gradient.opacityFrom ? e : Array.isArray(s.fill.gradient.opacityFrom) ? s.fill.gradient.opacityFrom[i] : s.fill.gradient.opacityFrom;
                    h.indexOf("rgba") > -1 && (c = x.getOpacityFromRGBA(h));
                    var d = void 0 === s.fill.gradient.opacityTo ? e : Array.isArray(s.fill.gradient.opacityTo) ? s.fill.gradient.opacityTo[i] : s.fill.gradient.opacityTo;
                    if (void 0 === s.fill.gradient.gradientToColors || 0 === s.fill.gradient.gradientToColors.length) a = "dark" === s.fill.gradient.shade ? n.shadeColor(-1 * parseFloat(s.fill.gradient.shadeIntensity), t.indexOf("rgb") > -1 ? x.rgb2hex(t) : t) : n.shadeColor(parseFloat(s.fill.gradient.shadeIntensity), t.indexOf("rgb") > -1 ? x.rgb2hex(t) : t);
                    else if (s.fill.gradient.gradientToColors[r.seriesNumber]) {
                        var g = s.fill.gradient.gradientToColors[r.seriesNumber];
                        a = g, g.indexOf("rgba") > -1 && (d = x.getOpacityFromRGBA(g))
                    } else a = t;
                    if (s.fill.gradient.inverseColors) {
                        var u = h;
                        h = a, a = u
                    }
                    return h.indexOf("rgb") > -1 && (h = x.rgb2hex(h)), a.indexOf("rgb") > -1 && (a = x.rgb2hex(a)), o.drawGradient(l, h, a, c, d, r.size, s.fill.gradient.stops, s.fill.gradient.colorStops, i)
                }
            }]), t
        }(),
        T = function() {
            function t(e, i) {
                a(this, t), this.ctx = e, this.w = e.w
            }
            return r(t, [{
                key: "setGlobalMarkerSize",
                value: function() {
                    var t = this.w;
                    if (t.globals.markers.size = Array.isArray(t.config.markers.size) ? t.config.markers.size : [t.config.markers.size], t.globals.markers.size.length > 0) {
                        if (t.globals.markers.size.length < t.globals.series.length + 1)
                            for (var e = 0; e <= t.globals.series.length; e++) void 0 === t.globals.markers.size[e] && t.globals.markers.size.push(t.globals.markers.size[0])
                    } else t.globals.markers.size = t.config.series.map((function(e) {
                        return t.config.markers.size
                    }))
                }
            }, {
                key: "plotChartMarkers",
                value: function(t, e, i, a) {
                    var s, r = arguments.length > 4 && void 0 !== arguments[4] && arguments[4],
                        o = this.w,
                        n = e,
                        l = t,
                        h = null,
                        c = new m(this.ctx),
                        d = o.config.markers.discrete && o.config.markers.discrete.length;
                    if ((o.globals.markers.size[e] > 0 || r || d) && (h = c.group({
                            class: r || d ? "" : "apexcharts-series-markers"
                        })).attr("clip-path", "url(#gridRectMarkerMask".concat(o.globals.cuid, ")")), Array.isArray(l.x))
                        for (var g = 0; g < l.x.length; g++) {
                            var u = i;
                            1 === i && 0 === g && (u = 0), 1 === i && 1 === g && (u = 1);
                            var f = "apexcharts-marker";
                            "line" !== o.config.chart.type && "area" !== o.config.chart.type || o.globals.comboCharts || o.config.tooltip.intersect || (f += " no-pointer-events");
                            var p = Array.isArray(o.config.markers.size) ? o.globals.markers.size[e] > 0 : o.config.markers.size > 0;
                            if (p || r || d) {
                                x.isNumber(l.y[g]) ? f += " w".concat(x.randomId()) : f = "apexcharts-nullpoint";
                                var b = this.getMarkerConfig({
                                    cssClass: f,
                                    seriesIndex: e,
                                    dataPointIndex: u
                                });
                                o.config.series[n].data[u] && (o.config.series[n].data[u].fillColor && (b.pointFillColor = o.config.series[n].data[u].fillColor), o.config.series[n].data[u].strokeColor && (b.pointStrokeColor = o.config.series[n].data[u].strokeColor)), a && (b.pSize = a), (s = c.drawMarker(l.x[g], l.y[g], b)).attr("rel", u), s.attr("j", u), s.attr("index", e), s.node.setAttribute("default-marker-size", b.pSize);
                                var y = new v(this.ctx);
                                y.setSelectionFilter(s, e, u), this.addEvents(s), h && h.add(s)
                            } else void 0 === o.globals.pointsArray[e] && (o.globals.pointsArray[e] = []), o.globals.pointsArray[e].push([l.x[g], l.y[g]])
                        }
                    return h
                }
            }, {
                key: "getMarkerConfig",
                value: function(t) {
                    var e = t.cssClass,
                        i = t.seriesIndex,
                        a = t.dataPointIndex,
                        s = void 0 === a ? null : a,
                        r = t.finishRadius,
                        o = void 0 === r ? null : r,
                        n = this.w,
                        l = this.getMarkerStyle(i),
                        h = n.globals.markers.size[i],
                        c = n.config.markers;
                    return null !== s && c.discrete.length && c.discrete.map((function(t) {
                        t.seriesIndex === i && t.dataPointIndex === s && (l.pointStrokeColor = t.strokeColor, l.pointFillColor = t.fillColor, h = t.size, l.pointShape = t.shape)
                    })), {
                        pSize: null === o ? h : o,
                        pRadius: c.radius,
                        width: Array.isArray(c.width) ? c.width[i] : c.width,
                        height: Array.isArray(c.height) ? c.height[i] : c.height,
                        pointStrokeWidth: Array.isArray(c.strokeWidth) ? c.strokeWidth[i] : c.strokeWidth,
                        pointStrokeColor: l.pointStrokeColor,
                        pointFillColor: l.pointFillColor,
                        shape: l.pointShape || (Array.isArray(c.shape) ? c.shape[i] : c.shape),
                        class: e,
                        pointStrokeOpacity: Array.isArray(c.strokeOpacity) ? c.strokeOpacity[i] : c.strokeOpacity,
                        pointStrokeDashArray: Array.isArray(c.strokeDashArray) ? c.strokeDashArray[i] : c.strokeDashArray,
                        pointFillOpacity: Array.isArray(c.fillOpacity) ? c.fillOpacity[i] : c.fillOpacity,
                        seriesIndex: i
                    }
                }
            }, {
                key: "addEvents",
                value: function(t) {
                    var e = this.w,
                        i = new m(this.ctx);
                    t.node.addEventListener("mouseenter", i.pathMouseEnter.bind(this.ctx, t)), t.node.addEventListener("mouseleave", i.pathMouseLeave.bind(this.ctx, t)), t.node.addEventListener("mousedown", i.pathMouseDown.bind(this.ctx, t)), t.node.addEventListener("click", e.config.markers.onClick), t.node.addEventListener("dblclick", e.config.markers.onDblClick), t.node.addEventListener("touchstart", i.pathMouseDown.bind(this.ctx, t), {
                        passive: !0
                    })
                }
            }, {
                key: "getMarkerStyle",
                value: function(t) {
                    var e = this.w,
                        i = e.globals.markers.colors,
                        a = e.config.markers.strokeColor || e.config.markers.strokeColors;
                    return {
                        pointStrokeColor: Array.isArray(a) ? a[t] : a,
                        pointFillColor: Array.isArray(i) ? i[t] : i
                    }
                }
            }]), t
        }(),
        I = function() {
            function t(e) {
                a(this, t), this.ctx = e, this.w = e.w, this.initialAnim = this.w.config.chart.animations.enabled, this.dynamicAnim = this.initialAnim && this.w.config.chart.animations.dynamicAnimation.enabled
            }
            return r(t, [{
                key: "draw",
                value: function(t, e, i) {
                    var a = this.w,
                        s = new m(this.ctx),
                        r = i.realIndex,
                        o = i.pointsPos,
                        n = i.zRatio,
                        l = i.elParent,
                        h = s.group({
                            class: "apexcharts-series-markers apexcharts-series-".concat(a.config.chart.type)
                        });
                    if (h.attr("clip-path", "url(#gridRectMarkerMask".concat(a.globals.cuid, ")")), Array.isArray(o.x))
                        for (var c = 0; c < o.x.length; c++) {
                            var d = e + 1,
                                g = !0;
                            0 === e && 0 === c && (d = 0), 0 === e && 1 === c && (d = 1);
                            var u = 0,
                                f = a.globals.markers.size[r];
                            if (n !== 1 / 0) {
                                f = a.globals.seriesZ[r][d] / n;
                                var p = a.config.plotOptions.bubble;
                                p.minBubbleRadius && f < p.minBubbleRadius && (f = p.minBubbleRadius), p.maxBubbleRadius && f > p.maxBubbleRadius && (f = p.maxBubbleRadius)
                            }
                            a.config.chart.animations.enabled || (u = f);
                            var x = o.x[c],
                                b = o.y[c];
                            if (u = u || 0, null !== b && void 0 !== a.globals.series[r][d] || (g = !1), g) {
                                var v = this.drawPoint(x, b, u, f, r, d, e);
                                h.add(v)
                            }
                            l.add(h)
                        }
                }
            }, {
                key: "drawPoint",
                value: function(t, e, i, a, s, r, o) {
                    var n = this.w,
                        l = s,
                        h = new b(this.ctx),
                        c = new v(this.ctx),
                        d = new M(this.ctx),
                        g = new T(this.ctx),
                        u = new m(this.ctx),
                        f = g.getMarkerConfig({
                            cssClass: "apexcharts-marker",
                            seriesIndex: l,
                            dataPointIndex: r,
                            finishRadius: "bubble" === n.config.chart.type || n.globals.comboCharts && n.config.series[s] && "bubble" === n.config.series[s].type ? a : null
                        });
                    a = f.pSize;
                    var p, x = d.fillPath({
                        seriesNumber: s,
                        dataPointIndex: r,
                        color: f.pointFillColor,
                        patternUnits: "objectBoundingBox",
                        value: n.globals.series[s][o]
                    });
                    if ("circle" === f.shape ? p = u.drawCircle(i) : "square" !== f.shape && "rect" !== f.shape || (p = u.drawRect(0, 0, f.width - f.pointStrokeWidth / 2, f.height - f.pointStrokeWidth / 2, f.pRadius)), n.config.series[l].data[r] && n.config.series[l].data[r].fillColor && (x = n.config.series[l].data[r].fillColor), p.attr({
                            x: t - f.width / 2 - f.pointStrokeWidth / 2,
                            y: e - f.height / 2 - f.pointStrokeWidth / 2,
                            cx: t,
                            cy: e,
                            fill: x,
                            "fill-opacity": f.pointFillOpacity,
                            stroke: f.pointStrokeColor,
                            r: a,
                            "stroke-width": f.pointStrokeWidth,
                            "stroke-dasharray": f.pointStrokeDashArray,
                            "stroke-opacity": f.pointStrokeOpacity
                        }), n.config.chart.dropShadow.enabled) {
                        var y = n.config.chart.dropShadow;
                        c.dropShadow(p, y, s)
                    }
                    if (!this.initialAnim || n.globals.dataChanged || n.globals.resized) n.globals.animationEnded = !0;
                    else {
                        var w = n.config.chart.animations.speed;
                        h.animateMarker(p, 0, "circle" === f.shape ? a : {
                            width: f.width,
                            height: f.height
                        }, w, n.globals.easing, (function() {
                            window.setTimeout((function() {
                                h.animationCompleted(p)
                            }), 100)
                        }))
                    }
                    if (n.globals.dataChanged && "circle" === f.shape)
                        if (this.dynamicAnim) {
                            var k, A, S, C, L = n.config.chart.animations.dynamicAnimation.speed;
                            null != (C = n.globals.previousPaths[s] && n.globals.previousPaths[s][o]) && (k = C.x, A = C.y, S = void 0 !== C.r ? C.r : a);
                            for (var P = 0; P < n.globals.collapsedSeries.length; P++) n.globals.collapsedSeries[P].index === s && (L = 1, a = 0);
                            0 === t && 0 === e && (a = 0), h.animateCircle(p, {
                                cx: k,
                                cy: A,
                                r: S
                            }, {
                                cx: t,
                                cy: e,
                                r: a
                            }, L, n.globals.easing)
                        } else p.attr({
                            r: a
                        });
                    return p.attr({
                        rel: r,
                        j: r,
                        index: s,
                        "default-marker-size": a
                    }), c.setSelectionFilter(p, s, r), g.addEvents(p), p.node.classList.add("apexcharts-marker"), p
                }
            }, {
                key: "centerTextInBubble",
                value: function(t) {
                    var e = this.w;
                    return {
                        y: t += parseInt(e.config.dataLabels.style.fontSize, 10) / 4
                    }
                }
            }]), t
        }(),
        z = function() {
            function t(e) {
                a(this, t), this.ctx = e, this.w = e.w
            }
            return r(t, [{
                key: "dataLabelsCorrection",
                value: function(t, e, i, a, s, r, o) {
                    var n = this.w,
                        l = !1,
                        h = new m(this.ctx).getTextRects(i, o),
                        c = h.width,
                        d = h.height;
                    e < 0 && (e = 0), e > n.globals.gridHeight + d && (e = n.globals.gridHeight + d / 2), void 0 === n.globals.dataLabelsRects[a] && (n.globals.dataLabelsRects[a] = []), n.globals.dataLabelsRects[a].push({
                        x: t,
                        y: e,
                        width: c,
                        height: d
                    });
                    var g = n.globals.dataLabelsRects[a].length - 2,
                        u = void 0 !== n.globals.lastDrawnDataLabelsIndexes[a] ? n.globals.lastDrawnDataLabelsIndexes[a][n.globals.lastDrawnDataLabelsIndexes[a].length - 1] : 0;
                    if (void 0 !== n.globals.dataLabelsRects[a][g]) {
                        var f = n.globals.dataLabelsRects[a][u];
                        (t > f.x + f.width + 2 || e > f.y + f.height + 2 || t + c < f.x) && (l = !0)
                    }
                    return (0 === s || r) && (l = !0), {
                        x: t,
                        y: e,
                        textRects: h,
                        drawnextLabel: l
                    }
                }
            }, {
                key: "drawDataLabel",
                value: function(t, e, i) {
                    var a = this,
                        s = arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : 2,
                        r = this.w,
                        o = new m(this.ctx),
                        n = r.config.dataLabels,
                        l = 0,
                        h = 0,
                        c = i,
                        d = null;
                    if (!n.enabled || !Array.isArray(t.x)) return d;
                    d = o.group({
                        class: "apexcharts-data-labels"
                    });
                    for (var g = 0; g < t.x.length; g++)
                        if (l = t.x[g] + n.offsetX, h = t.y[g] + n.offsetY + s, !isNaN(l)) {
                            1 === i && 0 === g && (c = 0), 1 === i && 1 === g && (c = 1);
                            var u = r.globals.series[e][c],
                                f = "",
                                p = function(t) {
                                    return r.config.dataLabels.formatter(t, {
                                        ctx: a.ctx,
                                        seriesIndex: e,
                                        dataPointIndex: c,
                                        w: r
                                    })
                                };
                            if ("bubble" === r.config.chart.type) {
                                f = p(u = r.globals.seriesZ[e][c]), h = t.y[g];
                                var x = new I(this.ctx),
                                    b = x.centerTextInBubble(h, e, c);
                                h = b.y
                            } else void 0 !== u && (f = p(u));
                            this.plotDataLabelsText({
                                x: l,
                                y: h,
                                text: f,
                                i: e,
                                j: c,
                                parent: d,
                                offsetCorrection: !0,
                                dataLabelsConfig: r.config.dataLabels
                            })
                        }
                    return d
                }
            }, {
                key: "plotDataLabelsText",
                value: function(t) {
                    var e = this.w,
                        i = new m(this.ctx),
                        a = t.x,
                        s = t.y,
                        r = t.i,
                        o = t.j,
                        n = t.text,
                        l = t.textAnchor,
                        h = t.fontSize,
                        c = t.parent,
                        d = t.dataLabelsConfig,
                        g = t.color,
                        u = t.alwaysDrawDataLabel,
                        f = t.offsetCorrection;
                    if (!(Array.isArray(e.config.dataLabels.enabledOnSeries) && e.config.dataLabels.enabledOnSeries.indexOf(r) < 0)) {
                        var p = {
                            x: a,
                            y: s,
                            drawnextLabel: !0,
                            textRects: null
                        };
                        f && (p = this.dataLabelsCorrection(a, s, n, r, o, u, parseInt(d.style.fontSize, 10))), e.globals.zoomed || (a = p.x, s = p.y), p.textRects && (a < -10 - p.textRects.width || a > e.globals.gridWidth + p.textRects.width + 10) && (n = "");
                        var x = e.globals.dataLabels.style.colors[r];
                        (("bar" === e.config.chart.type || "rangeBar" === e.config.chart.type) && e.config.plotOptions.bar.distributed || e.config.dataLabels.distributed) && (x = e.globals.dataLabels.style.colors[o]), "function" == typeof x && (x = x({
                            series: e.globals.series,
                            seriesIndex: r,
                            dataPointIndex: o,
                            w: e
                        })), g && (x = g);
                        var b = d.offsetX,
                            y = d.offsetY;
                        if ("bar" !== e.config.chart.type && "rangeBar" !== e.config.chart.type || (b = 0, y = 0), p.drawnextLabel) {
                            var w = i.drawText({
                                width: 100,
                                height: parseInt(d.style.fontSize, 10),
                                x: a + b,
                                y: s + y,
                                foreColor: x,
                                textAnchor: l || d.textAnchor,
                                text: n,
                                fontSize: h || d.style.fontSize,
                                fontFamily: d.style.fontFamily,
                                fontWeight: d.style.fontWeight || "normal"
                            });
                            if (w.attr({
                                    class: "apexcharts-datalabel",
                                    cx: a,
                                    cy: s
                                }), d.dropShadow.enabled) {
                                var k = d.dropShadow;
                                new v(this.ctx).dropShadow(w, k)
                            }
                            c.add(w), void 0 === e.globals.lastDrawnDataLabelsIndexes[r] && (e.globals.lastDrawnDataLabelsIndexes[r] = []), e.globals.lastDrawnDataLabelsIndexes[r].push(o)
                        }
                    }
                }
            }, {
                key: "addBackgroundToDataLabel",
                value: function(t, e) {
                    var i = this.w,
                        a = i.config.dataLabels.background,
                        s = a.padding,
                        r = a.padding / 2,
                        o = e.width,
                        n = e.height,
                        l = new m(this.ctx).drawRect(e.x - s, e.y - r / 2, o + 2 * s, n + r, a.borderRadius, "transparent" === i.config.chart.background ? "#fff" : i.config.chart.background, a.opacity, a.borderWidth, a.borderColor);
                    a.dropShadow.enabled && new v(this.ctx).dropShadow(l, a.dropShadow);
                    return l
                }
            }, {
                key: "dataLabelsBackground",
                value: function() {
                    var t = this.w;
                    if ("bubble" !== t.config.chart.type)
                        for (var e = t.globals.dom.baseEl.querySelectorAll(".apexcharts-datalabels text"), i = 0; i < e.length; i++) {
                            var a = e[i],
                                s = a.getBBox(),
                                r = null;
                            if (s.width && s.height && (r = this.addBackgroundToDataLabel(a, s)), r) {
                                a.parentNode.insertBefore(r.node, a);
                                var o = a.getAttribute("fill");
                                t.config.chart.animations.enabled && !t.globals.resized && !t.globals.dataChanged ? r.animate().attr({
                                    fill: o
                                }) : r.attr({
                                    fill: o
                                }), a.setAttribute("fill", t.config.dataLabels.background.foreColor)
                            }
                        }
                }
            }, {
                key: "bringForward",
                value: function() {
                    for (var t = this.w, e = t.globals.dom.baseEl.querySelectorAll(".apexcharts-datalabels"), i = t.globals.dom.baseEl.querySelector(".apexcharts-plot-series:last-child"), a = 0; a < e.length; a++) i && i.insertBefore(e[a], i.nextSibling)
                }
            }]), t
        }(),
        X = function() {
            function t(e) {
                a(this, t), this.w = e.w, this.barCtx = e
            }
            return r(t, [{
                key: "handleBarDataLabels",
                value: function(t) {
                    var e = t.x,
                        i = t.y,
                        a = t.y1,
                        s = t.y2,
                        r = t.i,
                        o = t.j,
                        n = t.realIndex,
                        l = t.series,
                        h = t.barHeight,
                        c = t.barWidth,
                        d = t.barYPosition,
                        g = t.visibleSeries,
                        u = t.renderedPath,
                        f = this.w,
                        p = new m(this.barCtx.ctx),
                        x = Array.isArray(this.barCtx.strokeWidth) ? this.barCtx.strokeWidth[n] : this.barCtx.strokeWidth,
                        b = e + parseFloat(c * g),
                        v = i + parseFloat(h * g);
                    f.globals.isXNumeric && !f.globals.isBarHorizontal && (b = e + parseFloat(c * (g + 1)), v = i + parseFloat(h * (g + 1)) - x);
                    var y = e,
                        w = i,
                        k = {},
                        A = f.config.dataLabels,
                        S = this.barCtx.barOptions.dataLabels;
                    void 0 !== d && this.barCtx.isRangeBar && (v = d, w = d);
                    var C = A.offsetX,
                        L = A.offsetY,
                        P = {
                            width: 0,
                            height: 0
                        };
                    if (f.config.dataLabels.enabled) {
                        var M = this.barCtx.series[r][o];
                        P = p.getTextRects(f.globals.yLabelFormatters[0](M), parseFloat(A.style.fontSize))
                    }
                    var T = {
                        x: e,
                        y: i,
                        i: r,
                        j: o,
                        renderedPath: u,
                        bcx: b,
                        bcy: v,
                        barHeight: h,
                        barWidth: c,
                        textRects: P,
                        strokeWidth: x,
                        dataLabelsX: y,
                        dataLabelsY: w,
                        barDataLabelsConfig: S,
                        offX: C,
                        offY: L
                    };
                    return k = this.barCtx.isHorizontal ? this.calculateBarsDataLabelsPosition(T) : this.calculateColumnsDataLabelsPosition(T), u.attr({
                        cy: k.bcy,
                        cx: k.bcx,
                        j: o,
                        val: l[r][o],
                        barHeight: h,
                        barWidth: c
                    }), this.drawCalculatedDataLabels({
                        x: k.dataLabelsX,
                        y: k.dataLabelsY,
                        val: this.barCtx.isRangeBar ? [a, s] : l[r][o],
                        i: n,
                        j: o,
                        barWidth: c,
                        barHeight: h,
                        textRects: P,
                        dataLabelsConfig: A
                    })
                }
            }, {
                key: "calculateColumnsDataLabelsPosition",
                value: function(t) {
                    var e, i = this.w,
                        a = t.i,
                        s = t.j,
                        r = t.y,
                        o = t.bcx,
                        n = t.barWidth,
                        l = t.barHeight,
                        h = t.textRects,
                        c = t.dataLabelsY,
                        d = t.barDataLabelsConfig,
                        g = t.strokeWidth,
                        u = t.offX,
                        f = t.offY;
                    l = Math.abs(l);
                    var p = "vertical" === i.config.plotOptions.bar.dataLabels.orientation;
                    o -= g / 2;
                    var x = i.globals.gridWidth / i.globals.dataPoints;
                    if (e = i.globals.isXNumeric ? o - n / 2 + u : o - x + n / 2 + u, p) {
                        e = e + h.height / 2 - g / 2 - 2
                    }
                    var b = this.barCtx.series[a][s] < 0,
                        v = r;
                    switch (this.barCtx.isReversed && (v = r - l + (b ? 2 * l : 0), r -= l), d.position) {
                        case "center":
                            c = p ? b ? v + l / 2 + f : v + l / 2 - f : b ? v - l / 2 + h.height / 2 + f : v + l / 2 + h.height / 2 - f;
                            break;
                        case "bottom":
                            c = p ? b ? v + l + f : v + l - f : b ? v - l + h.height + g + f : v + l - h.height / 2 + g - f;
                            break;
                        case "top":
                            c = p ? b ? v + f : v - f : b ? v - h.height / 2 - f : v + h.height + f
                    }
                    return i.config.chart.stacked || (c < 0 ? c = 0 + g : c + h.height / 3 > i.globals.gridHeight && (c = i.globals.gridHeight - g)), {
                        bcx: o,
                        bcy: r,
                        dataLabelsX: e,
                        dataLabelsY: c
                    }
                }
            }, {
                key: "calculateBarsDataLabelsPosition",
                value: function(t) {
                    var e = this.w,
                        i = t.x,
                        a = t.i,
                        s = t.j,
                        r = t.bcy,
                        o = t.barHeight,
                        n = t.barWidth,
                        l = t.textRects,
                        h = t.dataLabelsX,
                        c = t.strokeWidth,
                        d = t.barDataLabelsConfig,
                        g = t.offX,
                        u = t.offY,
                        f = e.globals.gridHeight / e.globals.dataPoints;
                    n = Math.abs(n);
                    var p = r - (this.barCtx.isRangeBar ? 0 : f) + o / 2 + l.height / 2 + u - 3,
                        x = this.barCtx.series[a][s] < 0,
                        b = i;
                    switch (this.barCtx.isReversed && (b = i + n - (x ? 2 * n : 0), i = e.globals.gridWidth - n), d.position) {
                        case "center":
                            h = x ? b + n / 2 - g : Math.max(l.width / 2, b - n / 2) + g;
                            break;
                        case "bottom":
                            h = x ? b + n - c - Math.round(l.width / 2) - g : b - n + c + Math.round(l.width / 2) + g;
                            break;
                        case "top":
                            h = x ? b - c + Math.round(l.width / 2) - g : b - c - Math.round(l.width / 2) + g
                    }
                    return e.config.chart.stacked || (h < 0 ? h = h + l.width + c : h + l.width / 2 > e.globals.gridWidth && (h = e.globals.gridWidth - l.width - c)), {
                        bcx: i,
                        bcy: r,
                        dataLabelsX: h,
                        dataLabelsY: p
                    }
                }
            }, {
                key: "drawCalculatedDataLabels",
                value: function(t) {
                    var i = t.x,
                        a = t.y,
                        s = t.val,
                        r = t.i,
                        o = t.j,
                        n = t.textRects,
                        l = t.barHeight,
                        h = t.barWidth,
                        c = t.dataLabelsConfig,
                        d = this.w,
                        g = "rotate(0)";
                    "vertical" === d.config.plotOptions.bar.dataLabels.orientation && (g = "rotate(-90, ".concat(i, ", ").concat(a, ")"));
                    var u = new z(this.barCtx.ctx),
                        f = new m(this.barCtx.ctx),
                        p = c.formatter,
                        x = null,
                        b = d.globals.collapsedSeriesIndices.indexOf(r) > -1;
                    if (c.enabled && !b) {
                        x = f.group({
                            class: "apexcharts-data-labels",
                            transform: g
                        });
                        var v = "";
                        void 0 !== s && (v = p(s, {
                            seriesIndex: r,
                            dataPointIndex: o,
                            w: d
                        }));
                        var y = d.globals.series[r][o] < 0,
                            w = d.config.plotOptions.bar.dataLabels.position;
                        if ("vertical" === d.config.plotOptions.bar.dataLabels.orientation && ("top" === w && (c.textAnchor = y ? "end" : "start"), "center" === w && (c.textAnchor = "middle"), "bottom" === w && (c.textAnchor = y ? "end" : "start")), this.barCtx.isRangeBar && this.barCtx.barOptions.dataLabels.hideOverflowingLabels) h < f.getTextRects(v, parseFloat(c.style.fontSize)).width && (v = "");
                        d.config.chart.stacked && this.barCtx.barOptions.dataLabels.hideOverflowingLabels && (this.barCtx.isHorizontal ? n.width / 1.6 > Math.abs(h) && (v = "") : n.height / 1.6 > Math.abs(l) && (v = ""));
                        var k = e({}, c);
                        this.barCtx.isHorizontal && s < 0 && ("start" === c.textAnchor ? k.textAnchor = "end" : "end" === c.textAnchor && (k.textAnchor = "start")), u.plotDataLabelsText({
                            x: i,
                            y: a,
                            text: v,
                            i: r,
                            j: o,
                            parent: x,
                            dataLabelsConfig: k,
                            alwaysDrawDataLabel: !0,
                            offsetCorrection: !0
                        })
                    }
                    return x
                }
            }]), t
        }(),
        E = function() {
            function t(e) {
                a(this, t), this.ctx = e, this.w = e.w, this.legendInactiveClass = "legend-mouseover-inactive"
            }
            return r(t, [{
                key: "getAllSeriesEls",
                value: function() {
                    return this.w.globals.dom.baseEl.getElementsByClassName("apexcharts-series")
                }
            }, {
                key: "getSeriesByName",
                value: function(t) {
                    return this.w.globals.dom.baseEl.querySelector(".apexcharts-inner .apexcharts-series[seriesName='".concat(x.escapeString(t), "']"))
                }
            }, {
                key: "isSeriesHidden",
                value: function(t) {
                    var e = this.getSeriesByName(t),
                        i = parseInt(e.getAttribute("data:realIndex"), 10);
                    return {
                        isHidden: e.classList.contains("apexcharts-series-collapsed"),
                        realIndex: i
                    }
                }
            }, {
                key: "addCollapsedClassToSeries",
                value: function(t, e) {
                    var i = this.w;

                    function a(i) {
                        for (var a = 0; a < i.length; a++) i[a].index === e && t.node.classList.add("apexcharts-series-collapsed")
                    }
                    a(i.globals.collapsedSeries), a(i.globals.ancillaryCollapsedSeries)
                }
            }, {
                key: "toggleSeries",
                value: function(t) {
                    var e = this.isSeriesHidden(t);
                    return this.ctx.legend.legendHelpers.toggleDataSeries(e.realIndex, e.isHidden), e.isHidden
                }
            }, {
                key: "showSeries",
                value: function(t) {
                    var e = this.isSeriesHidden(t);
                    e.isHidden && this.ctx.legend.legendHelpers.toggleDataSeries(e.realIndex, !0)
                }
            }, {
                key: "hideSeries",
                value: function(t) {
                    var e = this.isSeriesHidden(t);
                    e.isHidden || this.ctx.legend.legendHelpers.toggleDataSeries(e.realIndex, !1)
                }
            }, {
                key: "resetSeries",
                value: function() {
                    var t = !(arguments.length > 0 && void 0 !== arguments[0]) || arguments[0],
                        e = !(arguments.length > 1 && void 0 !== arguments[1]) || arguments[1],
                        i = !(arguments.length > 2 && void 0 !== arguments[2]) || arguments[2],
                        a = this.w,
                        s = x.clone(a.globals.initialSeries);
                    a.globals.previousPaths = [], i ? (a.globals.collapsedSeries = [], a.globals.ancillaryCollapsedSeries = [], a.globals.collapsedSeriesIndices = [], a.globals.ancillaryCollapsedSeriesIndices = []) : s = this.emptyCollapsedSeries(s), a.config.series = s, t && (e && (a.globals.zoomed = !1, this.ctx.updateHelpers.revertDefaultAxisMinMax()), this.ctx.updateHelpers._updateSeries(s, a.config.chart.animations.dynamicAnimation.enabled))
                }
            }, {
                key: "emptyCollapsedSeries",
                value: function(t) {
                    for (var e = this.w, i = 0; i < t.length; i++) e.globals.collapsedSeriesIndices.indexOf(i) > -1 && (t[i].data = []);
                    return t
                }
            }, {
                key: "toggleSeriesOnHover",
                value: function(t, e) {
                    var i = this.w;
                    e || (e = t.target);
                    var a = i.globals.dom.baseEl.querySelectorAll(".apexcharts-series, .apexcharts-datalabels");
                    if ("mousemove" === t.type) {
                        var s = parseInt(e.getAttribute("rel"), 10) - 1,
                            r = null,
                            o = null;
                        i.globals.axisCharts || "radialBar" === i.config.chart.type ? i.globals.axisCharts ? (r = i.globals.dom.baseEl.querySelector(".apexcharts-series[data\\:realIndex='".concat(s, "']")), o = i.globals.dom.baseEl.querySelector(".apexcharts-datalabels[data\\:realIndex='".concat(s, "']"))) : r = i.globals.dom.baseEl.querySelector(".apexcharts-series[rel='".concat(s + 1, "']")) : r = i.globals.dom.baseEl.querySelector(".apexcharts-series[rel='".concat(s + 1, "'] path"));
                        for (var n = 0; n < a.length; n++) a[n].classList.add(this.legendInactiveClass);
                        null !== r && (i.globals.axisCharts || r.parentNode.classList.remove(this.legendInactiveClass), r.classList.remove(this.legendInactiveClass), null !== o && o.classList.remove(this.legendInactiveClass))
                    } else if ("mouseout" === t.type)
                        for (var l = 0; l < a.length; l++) a[l].classList.remove(this.legendInactiveClass)
                }
            }, {
                key: "highlightRangeInSeries",
                value: function(t, e) {
                    var i = this,
                        a = this.w,
                        s = a.globals.dom.baseEl.getElementsByClassName("apexcharts-heatmap-rect"),
                        r = function(t) {
                            for (var e = 0; e < s.length; e++) s[e].classList[t](i.legendInactiveClass)
                        };
                    if ("mousemove" === t.type) {
                        var o = parseInt(e.getAttribute("rel"), 10) - 1;
                        r("add"),
                            function(t) {
                                for (var e = 0; e < s.length; e++) {
                                    var a = parseInt(s[e].getAttribute("val"), 10);
                                    a >= t.from && a <= t.to && s[e].classList.remove(i.legendInactiveClass)
                                }
                            }(a.config.plotOptions.heatmap.colorScale.ranges[o])
                    } else "mouseout" === t.type && r("remove")
                }
            }, {
                key: "getActiveConfigSeriesIndex",
                value: function() {
                    var t = arguments.length > 0 && void 0 !== arguments[0] && arguments[0],
                        e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : "asc",
                        i = this.w,
                        a = 0;
                    if (i.config.series.length > 1)
                        for (var s = i.config.series.map((function(e, a) {
                                var s = !1;
                                return t && (s = "bar" === i.config.series[a].type || "column" === i.config.series[a].type), e.data && e.data.length > 0 && !s ? a : -1
                            })), r = "asc" === e ? 0 : s.length - 1;
                            "asc" === e ? r < s.length : r >= 0;
                            "asc" === e ? r++ : r--)
                            if (-1 !== s[r]) {
                                a = s[r];
                                break
                            }
                    return a
                }
            }, {
                key: "getPreviousPaths",
                value: function() {
                    var t = this.w;

                    function e(e, i, a) {
                        for (var s = e[i].childNodes, r = {
                                type: a,
                                paths: [],
                                realIndex: e[i].getAttribute("data:realIndex")
                            }, o = 0; o < s.length; o++)
                            if (s[o].hasAttribute("pathTo")) {
                                var n = s[o].getAttribute("pathTo");
                                r.paths.push({
                                    d: n
                                })
                            }
                        t.globals.previousPaths.push(r)
                    }
                    t.globals.previousPaths = [];
                    ["line", "area", "bar", "rangebar", "candlestick", "radar"].forEach((function(i) {
                        for (var a, s = (a = i, t.globals.dom.baseEl.querySelectorAll(".apexcharts-".concat(a, "-series .apexcharts-series"))), r = 0; r < s.length; r++) e(s, r, i)
                    })), this.handlePrevBubbleScatterPaths("bubble"), this.handlePrevBubbleScatterPaths("scatter");
                    var i = t.globals.dom.baseEl.querySelectorAll(".apexcharts-".concat(t.config.chart.type, " .apexcharts-series"));
                    if (i.length > 0)
                        for (var a = function(e) {
                                for (var i = t.globals.dom.baseEl.querySelectorAll(".apexcharts-".concat(t.config.chart.type, " .apexcharts-series[data\\:realIndex='").concat(e, "'] rect")), a = [], s = function(t) {
                                        var e = function(e) {
                                                return i[t].getAttribute(e)
                                            },
                                            s = {
                                                x: parseFloat(e("x")),
                                                y: parseFloat(e("y")),
                                                width: parseFloat(e("width")),
                                                height: parseFloat(e("height"))
                                            };
                                        a.push({
                                            rect: s,
                                            color: i[t].getAttribute("color")
                                        })
                                    }, r = 0; r < i.length; r++) s(r);
                                t.globals.previousPaths.push(a)
                            }, s = 0; s < i.length; s++) a(s);
                    t.globals.axisCharts || (t.globals.previousPaths = t.globals.series)
                }
            }, {
                key: "handlePrevBubbleScatterPaths",
                value: function(t) {
                    var e = this.w,
                        i = e.globals.dom.baseEl.querySelectorAll(".apexcharts-".concat(t, "-series .apexcharts-series"));
                    if (i.length > 0)
                        for (var a = 0; a < i.length; a++) {
                            for (var s = e.globals.dom.baseEl.querySelectorAll(".apexcharts-".concat(t, "-series .apexcharts-series[data\\:realIndex='").concat(a, "'] circle")), r = [], o = 0; o < s.length; o++) r.push({
                                x: s[o].getAttribute("cx"),
                                y: s[o].getAttribute("cy"),
                                r: s[o].getAttribute("r")
                            });
                            e.globals.previousPaths.push(r)
                        }
                }
            }, {
                key: "clearPreviousPaths",
                value: function() {
                    var t = this.w;
                    t.globals.previousPaths = [], t.globals.allSeriesCollapsed = !1
                }
            }, {
                key: "handleNoData",
                value: function() {
                    var t = this.w,
                        e = t.config.noData,
                        i = new m(this.ctx),
                        a = t.globals.svgWidth / 2,
                        s = t.globals.svgHeight / 2,
                        r = "middle";
                    if (t.globals.noData = !0, t.globals.animationEnded = !0, "left" === e.align ? (a = 10, r = "start") : "right" === e.align && (a = t.globals.svgWidth - 10, r = "end"), "top" === e.verticalAlign ? s = 50 : "bottom" === e.verticalAlign && (s = t.globals.svgHeight - 50), a += e.offsetX, s = s + parseInt(e.style.fontSize, 10) + 2 + e.offsetY, void 0 !== e.text && "" !== e.text) {
                        var o = i.drawText({
                            x: a,
                            y: s,
                            text: e.text,
                            textAnchor: r,
                            fontSize: e.style.fontSize,
                            fontFamily: e.style.fontFamily,
                            foreColor: e.style.color,
                            opacity: 1,
                            class: "apexcharts-text-nodata"
                        });
                        t.globals.dom.Paper.add(o)
                    }
                }
            }, {
                key: "setNullSeriesToZeroValues",
                value: function(t) {
                    for (var e = this.w, i = 0; i < t.length; i++)
                        if (0 === t[i].length)
                            for (var a = 0; a < t[e.globals.maxValsInArrayIndex].length; a++) t[i].push(0);
                    return t
                }
            }, {
                key: "hasAllSeriesEqualX",
                value: function() {
                    for (var t = !0, e = this.w, i = this.filteredSeriesX(), a = 0; a < i.length - 1; a++)
                        if (i[a][0] !== i[a + 1][0]) {
                            t = !1;
                            break
                        }
                    return e.globals.allSeriesHasEqualX = t, t
                }
            }, {
                key: "filteredSeriesX",
                value: function() {
                    var t = this.w.globals.seriesX.map((function(t) {
                        return t.length > 0 ? t : []
                    }));
                    return t
                }
            }]), t
        }(),
        Y = function() {
            function t(e) {
                a(this, t), this.w = e.w, this.barCtx = e
            }
            return r(t, [{
                key: "initVariables",
                value: function(t) {
                    var e = this.w;
                    this.barCtx.series = t, this.barCtx.totalItems = 0, this.barCtx.seriesLen = 0, this.barCtx.visibleI = -1, this.barCtx.visibleItems = 1;
                    for (var i = 0; i < t.length; i++)
                        if (t[i].length > 0 && (this.barCtx.seriesLen = this.barCtx.seriesLen + 1, this.barCtx.totalItems += t[i].length), e.globals.isXNumeric)
                            for (var a = 0; a < t[i].length; a++) e.globals.seriesX[i][a] > e.globals.minX && e.globals.seriesX[i][a] < e.globals.maxX && this.barCtx.visibleItems++;
                        else this.barCtx.visibleItems = e.globals.dataPoints;
                    0 === this.barCtx.seriesLen && (this.barCtx.seriesLen = 1), this.barCtx.zeroSerieses = [], this.barCtx.radiusOnSeriesNumber = t.length - 1, e.globals.comboCharts || this.checkZeroSeries({
                        series: t
                    })
                }
            }, {
                key: "initialPositions",
                value: function() {
                    var t, e, i, a, s, r, o, n, l = this.w,
                        h = l.globals.dataPoints;
                    this.barCtx.isRangeBar && (h = l.globals.labels.length);
                    var c = this.barCtx.seriesLen;
                    if (l.config.plotOptions.bar.rangeBarGroupRows && (c = 1), this.barCtx.isHorizontal) s = (i = l.globals.gridHeight / h) / c, l.globals.isXNumeric && (s = (i = l.globals.gridHeight / this.barCtx.totalItems) / this.barCtx.seriesLen), s = s * parseInt(this.barCtx.barOptions.barHeight, 10) / 100, n = this.barCtx.baseLineInvertedY + l.globals.padHorizontal + (this.barCtx.isReversed ? l.globals.gridWidth : 0) - (this.barCtx.isReversed ? 2 * this.barCtx.baseLineInvertedY : 0), e = (i - s * this.barCtx.seriesLen) / 2;
                    else {
                        if (a = l.globals.gridWidth / this.barCtx.visibleItems, l.config.xaxis.convertedCatToNumeric && (a = l.globals.gridWidth / l.globals.dataPoints), r = a / this.barCtx.seriesLen * parseInt(this.barCtx.barOptions.columnWidth, 10) / 100, l.globals.isXNumeric) {
                            var d = this.barCtx.xRatio;
                            l.config.xaxis.convertedCatToNumeric && (d = this.barCtx.initialXRatio), l.globals.minXDiff && .5 !== l.globals.minXDiff && l.globals.minXDiff / d > 0 && (a = l.globals.minXDiff / d), (r = a / this.barCtx.seriesLen * parseInt(this.barCtx.barOptions.columnWidth, 10) / 100) < 1 && (r = 1)
                        }
                        o = l.globals.gridHeight - this.barCtx.baseLineY[this.barCtx.yaxisIndex] - (this.barCtx.isReversed ? l.globals.gridHeight : 0) + (this.barCtx.isReversed ? 2 * this.barCtx.baseLineY[this.barCtx.yaxisIndex] : 0), t = l.globals.padHorizontal + (a - r * this.barCtx.seriesLen) / 2
                    }
                    return {
                        x: t,
                        y: e,
                        yDivision: i,
                        xDivision: a,
                        barHeight: s,
                        barWidth: r,
                        zeroH: o,
                        zeroW: n
                    }
                }
            }, {
                key: "getPathFillColor",
                value: function(t, e, i, a) {
                    var s = this.w,
                        r = new M(this.barCtx.ctx),
                        o = null,
                        n = this.barCtx.barOptions.distributed ? i : e;
                    this.barCtx.barOptions.colors.ranges.length > 0 && this.barCtx.barOptions.colors.ranges.map((function(a) {
                        t[e][i] >= a.from && t[e][i] <= a.to && (o = a.color)
                    }));
                    return s.config.series[e].data[i] && s.config.series[e].data[i].fillColor && (o = s.config.series[e].data[i].fillColor), r.fillPath({
                        seriesNumber: this.barCtx.barOptions.distributed ? n : a,
                        dataPointIndex: i,
                        color: o,
                        value: t[e][i]
                    })
                }
            }, {
                key: "getStrokeWidth",
                value: function(t, e, i) {
                    var a = 0,
                        s = this.w;
                    return void 0 === this.barCtx.series[t][e] || null === this.barCtx.series[t][e] ? this.barCtx.isNullValue = !0 : this.barCtx.isNullValue = !1, s.config.stroke.show && (this.barCtx.isNullValue || (a = Array.isArray(this.barCtx.strokeWidth) ? this.barCtx.strokeWidth[i] : this.barCtx.strokeWidth)), a
                }
            }, {
                key: "barBackground",
                value: function(t) {
                    var e = t.j,
                        i = t.i,
                        a = t.x1,
                        s = t.x2,
                        r = t.y1,
                        o = t.y2,
                        n = t.elSeries,
                        l = this.w,
                        h = new m(this.barCtx.ctx),
                        c = new E(this.barCtx.ctx).getActiveConfigSeriesIndex();
                    if (this.barCtx.barOptions.colors.backgroundBarColors.length > 0 && c === i) {
                        e >= this.barCtx.barOptions.colors.backgroundBarColors.length && (e %= this.barCtx.barOptions.colors.backgroundBarColors.length);
                        var d = this.barCtx.barOptions.colors.backgroundBarColors[e],
                            g = h.drawRect(void 0 !== a ? a : 0, void 0 !== r ? r : 0, void 0 !== s ? s : l.globals.gridWidth, void 0 !== o ? o : l.globals.gridHeight, this.barCtx.barOptions.colors.backgroundBarRadius, d, this.barCtx.barOptions.colors.backgroundBarOpacity);
                        n.add(g), g.node.classList.add("apexcharts-backgroundBar")
                    }
                }
            }, {
                key: "getColumnPaths",
                value: function(t) {
                    var e = t.barWidth,
                        i = t.barXPosition,
                        a = t.yRatio,
                        s = t.y1,
                        r = t.y2,
                        o = t.strokeWidth,
                        n = t.series,
                        l = t.realIndex,
                        h = t.i,
                        c = t.j,
                        d = t.w,
                        g = new m(this.barCtx.ctx);
                    (o = Array.isArray(o) ? o[l] : o) || (o = 0);
                    var u = {
                            barWidth: e,
                            strokeWidth: o,
                            yRatio: a,
                            barXPosition: i,
                            y1: s,
                            y2: r
                        },
                        f = this.getRoundedBars(d, u, n, h, c),
                        p = i,
                        x = i + e,
                        b = g.move(p, s),
                        v = g.move(p, s),
                        y = g.line(x - o, s);
                    return d.globals.previousPaths.length > 0 && (v = this.barCtx.getPreviousPath(l, c, !1)), b = b + g.line(p, f.y2) + f.pathWithRadius + g.line(x - o, f.y2) + y + y + "z", v = v + g.line(p, s) + y + y + y + y + y + g.line(p, s), d.config.chart.stacked && (this.barCtx.yArrj.push(f.y2WithRadius), this.barCtx.yArrjF.push(Math.abs(s - f.y2WithRadius)), this.barCtx.yArrjVal.push(this.barCtx.series[h][c])), {
                        pathTo: b,
                        pathFrom: v
                    }
                }
            }, {
                key: "getBarpaths",
                value: function(t) {
                    var e = t.barYPosition,
                        i = t.barHeight,
                        a = t.x1,
                        s = t.x2,
                        r = t.strokeWidth,
                        o = t.series,
                        n = t.realIndex,
                        l = t.i,
                        h = t.j,
                        c = t.w,
                        d = new m(this.barCtx.ctx);
                    (r = Array.isArray(r) ? r[n] : r) || (r = 0);
                    var g = {
                            barHeight: i,
                            strokeWidth: r,
                            barYPosition: e,
                            x2: s,
                            x1: a
                        },
                        u = this.getRoundedBars(c, g, o, l, h),
                        f = d.move(a, e),
                        p = d.move(a, e);
                    c.globals.previousPaths.length > 0 && (p = this.barCtx.getPreviousPath(n, h, !1));
                    var x = e,
                        b = e + i,
                        v = d.line(a, b - r);
                    return f = f + d.line(u.x2, x) + u.pathWithRadius + d.line(u.x2, b - r) + v + v + "z", p = p + d.line(a, x) + v + v + v + v + v + d.line(a, x), c.config.chart.stacked && (this.barCtx.xArrj.push(u.x2WithRadius), this.barCtx.xArrjF.push(Math.abs(a - u.x2WithRadius)), this.barCtx.xArrjVal.push(this.barCtx.series[l][h])), {
                        pathTo: f,
                        pathFrom: p
                    }
                }
            }, {
                key: "getRoundedBars",
                value: function(t, e, i, a, s) {
                    var r = new m(this.barCtx.ctx),
                        o = 0,
                        n = t.config.plotOptions.bar.borderRadius,
                        l = Array.isArray(n);
                    l ? o = n[a > n.length - 1 ? n.length - 1 : a] : o = n;
                    if (t.config.chart.stacked && i.length > 1 && a !== this.barCtx.radiusOnSeriesNumber && !l && (o = 0), this.barCtx.isHorizontal) {
                        var h = "",
                            c = e.x2;
                        if (Math.abs(e.x1 - e.x2) < o && (o = Math.abs(e.x1 - e.x2)), void 0 !== i[a][s] || null !== i[a][s]) {
                            var d = this.barCtx.isReversed ? i[a][s] > 0 : i[a][s] < 0;
                            d && (o *= -1), c -= o, h = r.quadraticCurve(c + o, e.barYPosition, c + o, e.barYPosition + (d ? -1 * o : o)) + r.line(c + o, e.barYPosition + e.barHeight - e.strokeWidth - (d ? -1 * o : o)) + r.quadraticCurve(c + o, e.barYPosition + e.barHeight - e.strokeWidth, c, e.barYPosition + e.barHeight - e.strokeWidth)
                        }
                        return {
                            pathWithRadius: h,
                            x2WithRadius: c + o,
                            x2: c
                        }
                    }
                    var g = "",
                        u = e.y2;
                    if (Math.abs(e.y1 - e.y2) < o && (o = Math.abs(e.y1 - e.y2)), void 0 !== i[a][s] || null !== i[a][s]) {
                        var f = i[a][s] < 0;
                        f && (o *= -1), u += o, g = r.quadraticCurve(e.barXPosition, u - o, e.barXPosition + (f ? -1 * o : o), u - o) + r.line(e.barXPosition + e.barWidth - e.strokeWidth - (f ? -1 * o : o), u - o) + r.quadraticCurve(e.barXPosition + e.barWidth - e.strokeWidth, u - o, e.barXPosition + e.barWidth - e.strokeWidth, u)
                    }
                    return {
                        pathWithRadius: g,
                        y2WithRadius: u - o,
                        y2: u
                    }
                }
            }, {
                key: "checkZeroSeries",
                value: function(t) {
                    for (var e = t.series, i = this.w, a = 0; a < e.length; a++) {
                        for (var s = 0, r = 0; r < e[i.globals.maxValsInArrayIndex].length; r++) s += e[a][r];
                        0 === s && this.barCtx.zeroSerieses.push(a)
                    }
                    for (var o = e.length - 1; o >= 0; o--) this.barCtx.zeroSerieses.indexOf(o) > -1 && o === this.radiusOnSeriesNumber && (this.barCtx.radiusOnSeriesNumber -= 1);
                    for (var n = e.length - 1; n >= 0; n--) i.globals.collapsedSeriesIndices.indexOf(this.barCtx.radiusOnSeriesNumber) > -1 && (this.barCtx.radiusOnSeriesNumber -= 1)
                }
            }, {
                key: "getXForValue",
                value: function(t, e) {
                    var i = !(arguments.length > 2 && void 0 !== arguments[2]) || arguments[2],
                        a = i ? e : null;
                    return null != t && (a = e + t / this.barCtx.invertedYRatio - 2 * (this.barCtx.isReversed ? t / this.barCtx.invertedYRatio : 0)), a
                }
            }, {
                key: "getYForValue",
                value: function(t, e) {
                    var i = !(arguments.length > 2 && void 0 !== arguments[2]) || arguments[2],
                        a = i ? e : null;
                    return null != t && (a = e - t / this.barCtx.yRatio[this.barCtx.yaxisIndex] + 2 * (this.barCtx.isReversed ? t / this.barCtx.yRatio[this.barCtx.yaxisIndex] : 0)), a
                }
            }, {
                key: "getGoalValues",
                value: function(t, e, i, a, s) {
                    var r = this,
                        n = this.w,
                        l = [];
                    return n.globals.seriesGoals[a] && n.globals.seriesGoals[a][s] && Array.isArray(n.globals.seriesGoals[a][s]) && n.globals.seriesGoals[a][s].forEach((function(a) {
                        var s;
                        l.push((o(s = {}, t, "x" === t ? r.getXForValue(a.value, e, !1) : r.getYForValue(a.value, i, !1)), o(s, "attrs", a), s))
                    })), l
                }
            }, {
                key: "drawGoalLine",
                value: function(t) {
                    var e = t.barXPosition,
                        i = t.barYPosition,
                        a = t.goalX,
                        s = t.goalY,
                        r = t.barWidth,
                        o = t.barHeight,
                        n = new m(this.barCtx.ctx),
                        l = n.group({
                            className: "apexcharts-bar-goals-groups"
                        }),
                        h = null;
                    return this.barCtx.isHorizontal ? Array.isArray(a) && a.forEach((function(t) {
                        var e = void 0 !== t.attrs.strokeHeight ? t.attrs.strokeHeight : o / 2,
                            a = i + e + o / 2;
                        h = n.drawLine(t.x, a - 2 * e, t.x, a, t.attrs.strokeColor ? t.attrs.strokeColor : void 0, t.attrs.strokeDashArray, t.attrs.strokeWidth ? t.attrs.strokeWidth : 2, t.attrs.strokeLineCap), l.add(h)
                    })) : Array.isArray(s) && s.forEach((function(t) {
                        var i = void 0 !== t.attrs.strokeWidth ? t.attrs.strokeWidth : r / 2,
                            a = e + i + r / 2;
                        h = n.drawLine(a - 2 * i, t.y, a, t.y, t.attrs.strokeColor ? t.attrs.strokeColor : void 0, t.attrs.strokeDashArray, t.attrs.strokeHeight ? t.attrs.strokeHeight : 2, t.attrs.strokeLineCap), l.add(h)
                    })), l
                }
            }]), t
        }(),
        F = function() {
            function t(e, i) {
                a(this, t), this.ctx = e, this.w = e.w;
                var s = this.w;
                this.barOptions = s.config.plotOptions.bar, this.isHorizontal = this.barOptions.horizontal, this.strokeWidth = s.config.stroke.width, this.isNullValue = !1, this.isRangeBar = s.globals.seriesRangeBar.length && this.isHorizontal, this.xyRatios = i, null !== this.xyRatios && (this.xRatio = i.xRatio, this.initialXRatio = i.initialXRatio, this.yRatio = i.yRatio, this.invertedXRatio = i.invertedXRatio, this.invertedYRatio = i.invertedYRatio, this.baseLineY = i.baseLineY, this.baseLineInvertedY = i.baseLineInvertedY), this.yaxisIndex = 0, this.seriesLen = 0, this.barHelpers = new Y(this)
            }
            return r(t, [{
                key: "draw",
                value: function(t, i) {
                    var a = this.w,
                        s = new m(this.ctx),
                        r = new y(this.ctx, a);
                    t = r.getLogSeries(t), this.series = t, this.yRatio = r.getLogYRatios(this.yRatio), this.barHelpers.initVariables(t);
                    var o = s.group({
                        class: "apexcharts-bar-series apexcharts-plot-series"
                    });
                    a.config.dataLabels.enabled && this.totalItems > this.barOptions.dataLabels.maxItems && console.warn("WARNING: DataLabels are enabled but there are too many to display. This may cause performance issue when rendering.");
                    for (var n = 0, l = 0; n < t.length; n++, l++) {
                        var h, c, d, g, u = void 0,
                            f = void 0,
                            p = [],
                            b = [],
                            v = a.globals.comboCharts ? i[n] : n,
                            w = s.group({
                                class: "apexcharts-series",
                                rel: n + 1,
                                seriesName: x.escapeString(a.globals.seriesNames[v]),
                                "data:realIndex": v
                            });
                        this.ctx.series.addCollapsedClassToSeries(w, v), t[n].length > 0 && (this.visibleI = this.visibleI + 1);
                        var k = 0,
                            A = 0;
                        this.yRatio.length > 1 && (this.yaxisIndex = v), this.isReversed = a.config.yaxis[this.yaxisIndex] && a.config.yaxis[this.yaxisIndex].reversed;
                        var S = this.barHelpers.initialPositions();
                        f = S.y, k = S.barHeight, c = S.yDivision, g = S.zeroW, u = S.x, A = S.barWidth, h = S.xDivision, d = S.zeroH, this.horizontal || b.push(u + A / 2);
                        for (var C = s.group({
                                class: "apexcharts-datalabels",
                                "data:realIndex": v
                            }), L = s.group({
                                class: "apexcharts-bar-goals-markers",
                                style: "pointer-events: none"
                            }), P = 0; P < a.globals.dataPoints; P++) {
                            var M = this.barHelpers.getStrokeWidth(n, P, v),
                                T = null,
                                I = {
                                    indexes: {
                                        i: n,
                                        j: P,
                                        realIndex: v,
                                        bc: l
                                    },
                                    x: u,
                                    y: f,
                                    strokeWidth: M,
                                    elSeries: w
                                };
                            this.isHorizontal ? (T = this.drawBarPaths(e(e({}, I), {}, {
                                barHeight: k,
                                zeroW: g,
                                yDivision: c
                            })), A = this.series[n][P] / this.invertedYRatio) : (T = this.drawColumnPaths(e(e({}, I), {}, {
                                xDivision: h,
                                barWidth: A,
                                zeroH: d
                            })), k = this.series[n][P] / this.yRatio[this.yaxisIndex]);
                            var z = this.barHelpers.drawGoalLine({
                                barXPosition: T.barXPosition,
                                barYPosition: T.barYPosition,
                                goalX: T.goalX,
                                goalY: T.goalY,
                                barHeight: k,
                                barWidth: A
                            });
                            z && L.add(z), f = T.y, u = T.x, P > 0 && b.push(u + A / 2), p.push(f);
                            var X = this.barHelpers.getPathFillColor(t, n, P, v);
                            this.renderSeries({
                                realIndex: v,
                                pathFill: X,
                                j: P,
                                i: n,
                                pathFrom: T.pathFrom,
                                pathTo: T.pathTo,
                                strokeWidth: M,
                                elSeries: w,
                                x: u,
                                y: f,
                                series: t,
                                barHeight: k,
                                barWidth: A,
                                elDataLabelsWrap: C,
                                elGoalsMarkers: L,
                                visibleSeries: this.visibleI,
                                type: "bar"
                            })
                        }
                        a.globals.seriesXvalues[v] = b, a.globals.seriesYvalues[v] = p, o.add(w)
                    }
                    return o
                }
            }, {
                key: "renderSeries",
                value: function(t) {
                    var e = t.realIndex,
                        i = t.pathFill,
                        a = t.lineFill,
                        s = t.j,
                        r = t.i,
                        o = t.pathFrom,
                        n = t.pathTo,
                        l = t.strokeWidth,
                        h = t.elSeries,
                        c = t.x,
                        d = t.y,
                        g = t.y1,
                        u = t.y2,
                        f = t.series,
                        p = t.barHeight,
                        x = t.barWidth,
                        b = t.barYPosition,
                        y = t.elDataLabelsWrap,
                        w = t.elGoalsMarkers,
                        k = t.visibleSeries,
                        A = t.type,
                        S = this.w,
                        C = new m(this.ctx);
                    a || (a = this.barOptions.distributed ? S.globals.stroke.colors[s] : S.globals.stroke.colors[e]), S.config.series[r].data[s] && S.config.series[r].data[s].strokeColor && (a = S.config.series[r].data[s].strokeColor), this.isNullValue && (i = "none");
                    var L = s / S.config.chart.animations.animateGradually.delay * (S.config.chart.animations.speed / S.globals.dataPoints) / 2.4,
                        P = C.renderPaths({
                            i: r,
                            j: s,
                            realIndex: e,
                            pathFrom: o,
                            pathTo: n,
                            stroke: a,
                            strokeWidth: l,
                            strokeLineCap: S.config.stroke.lineCap,
                            fill: i,
                            animationDelay: L,
                            initialSpeed: S.config.chart.animations.speed,
                            dataChangeSpeed: S.config.chart.animations.dynamicAnimation.speed,
                            className: "apexcharts-".concat(A, "-area")
                        });
                    P.attr("clip-path", "url(#gridRectMask".concat(S.globals.cuid, ")"));
                    var M = S.config.forecastDataPoints;
                    M.count > 0 && s >= S.globals.dataPoints - M.count && (P.node.setAttribute("stroke-dasharray", M.dashArray), P.node.setAttribute("stroke-width", M.strokeWidth), P.node.setAttribute("fill-opacity", M.fillOpacity)), void 0 !== g && void 0 !== u && (P.attr("data-range-y1", g), P.attr("data-range-y2", u)), new v(this.ctx).setSelectionFilter(P, e, s), h.add(P);
                    var T = new X(this).handleBarDataLabels({
                        x: c,
                        y: d,
                        y1: g,
                        y2: u,
                        i: r,
                        j: s,
                        series: f,
                        realIndex: e,
                        barHeight: p,
                        barWidth: x,
                        barYPosition: b,
                        renderedPath: P,
                        visibleSeries: k
                    });
                    return null !== T && y.add(T), h.add(y), w && h.add(w), h
                }
            }, {
                key: "drawBarPaths",
                value: function(t) {
                    var e = t.indexes,
                        i = t.barHeight,
                        a = t.strokeWidth,
                        s = t.zeroW,
                        r = t.x,
                        o = t.y,
                        n = t.yDivision,
                        l = t.elSeries,
                        h = this.w,
                        c = e.i,
                        d = e.j;
                    h.globals.isXNumeric && (o = (h.globals.seriesX[c][d] - h.globals.minX) / this.invertedXRatio - i);
                    var g = o + i * this.visibleI;
                    r = this.barHelpers.getXForValue(this.series[c][d], s);
                    var u = this.barHelpers.getBarpaths({
                        barYPosition: g,
                        barHeight: i,
                        x1: s,
                        x2: r,
                        strokeWidth: a,
                        series: this.series,
                        realIndex: e.realIndex,
                        i: c,
                        j: d,
                        w: h
                    });
                    return h.globals.isXNumeric || (o += n), this.barHelpers.barBackground({
                        j: d,
                        i: c,
                        y1: g - i * this.visibleI,
                        y2: i * this.seriesLen,
                        elSeries: l
                    }), {
                        pathTo: u.pathTo,
                        pathFrom: u.pathFrom,
                        x: r,
                        y: o,
                        goalX: this.barHelpers.getGoalValues("x", s, null, c, d),
                        barYPosition: g
                    }
                }
            }, {
                key: "drawColumnPaths",
                value: function(t) {
                    var e = t.indexes,
                        i = t.x,
                        a = t.y,
                        s = t.xDivision,
                        r = t.barWidth,
                        o = t.zeroH,
                        n = t.strokeWidth,
                        l = t.elSeries,
                        h = this.w,
                        c = e.realIndex,
                        d = e.i,
                        g = e.j,
                        u = e.bc;
                    if (h.globals.isXNumeric) {
                        var f = c;
                        h.globals.seriesX[c].length || (f = h.globals.maxValsInArrayIndex), i = (h.globals.seriesX[f][g] - h.globals.minX) / this.xRatio - r * this.seriesLen / 2
                    }
                    var p = i + r * this.visibleI;
                    a = this.barHelpers.getYForValue(this.series[d][g], o);
                    var x = this.barHelpers.getColumnPaths({
                        barXPosition: p,
                        barWidth: r,
                        y1: o,
                        y2: a,
                        strokeWidth: n,
                        series: this.series,
                        realIndex: e.realIndex,
                        i: d,
                        j: g,
                        w: h
                    });
                    return h.globals.isXNumeric || (i += s), this.barHelpers.barBackground({
                        bc: u,
                        j: g,
                        i: d,
                        x1: p - n / 2 - r * this.visibleI,
                        x2: r * this.seriesLen + n / 2,
                        elSeries: l
                    }), {
                        pathTo: x.pathTo,
                        pathFrom: x.pathFrom,
                        x: i,
                        y: a,
                        goalY: this.barHelpers.getGoalValues("y", null, o, d, g),
                        barXPosition: p
                    }
                }
            }, {
                key: "getPreviousPath",
                value: function(t, e) {
                    for (var i, a = this.w, s = 0; s < a.globals.previousPaths.length; s++) {
                        var r = a.globals.previousPaths[s];
                        r.paths && r.paths.length > 0 && parseInt(r.realIndex, 10) === parseInt(t, 10) && void 0 !== a.globals.previousPaths[s].paths[e] && (i = a.globals.previousPaths[s].paths[e].d)
                    }
                    return i
                }
            }]), t
        }(),
        R = function() {
            function t(e) {
                a(this, t), this.ctx = e, this.w = e.w, this.months31 = [1, 3, 5, 7, 8, 10, 12], this.months30 = [2, 4, 6, 9, 11], this.daysCntOfYear = [0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334]
            }
            return r(t, [{
                key: "isValidDate",
                value: function(t) {
                    return !isNaN(this.parseDate(t))
                }
            }, {
                key: "getTimeStamp",
                value: function(t) {
                    return Date.parse(t) ? this.w.config.xaxis.labels.datetimeUTC ? new Date(new Date(t).toISOString().substr(0, 25)).getTime() : new Date(t).getTime() : t
                }
            }, {
                key: "getDate",
                value: function(t) {
                    return this.w.config.xaxis.labels.datetimeUTC ? new Date(new Date(t).toUTCString()) : new Date(t)
                }
            }, {
                key: "parseDate",
                value: function(t) {
                    var e = Date.parse(t);
                    if (!isNaN(e)) return this.getTimeStamp(t);
                    var i = Date.parse(t.replace(/-/g, "/").replace(/[a-z]+/gi, " "));
                    return i = this.getTimeStamp(i)
                }
            }, {
                key: "parseDateWithTimezone",
                value: function(t) {
                    return Date.parse(t.replace(/-/g, "/").replace(/[a-z]+/gi, " "))
                }
            }, {
                key: "formatDate",
                value: function(t, e) {
                    var i = this.w.globals.locale,
                        a = this.w.config.xaxis.labels.datetimeUTC,
                        s = ["\0"].concat(u(i.months)),
                        r = ["\x01"].concat(u(i.shortMonths)),
                        o = ["\x02"].concat(u(i.days)),
                        n = ["\x03"].concat(u(i.shortDays));

                    function l(t, e) {
                        var i = t + "";
                        for (e = e || 2; i.length < e;) i = "0" + i;
                        return i
                    }
                    var h = a ? t.getUTCFullYear() : t.getFullYear();
                    e = (e = (e = e.replace(/(^|[^\\])yyyy+/g, "$1" + h)).replace(/(^|[^\\])yy/g, "$1" + h.toString().substr(2, 2))).replace(/(^|[^\\])y/g, "$1" + h);
                    var c = (a ? t.getUTCMonth() : t.getMonth()) + 1;
                    e = (e = (e = (e = e.replace(/(^|[^\\])MMMM+/g, "$1" + s[0])).replace(/(^|[^\\])MMM/g, "$1" + r[0])).replace(/(^|[^\\])MM/g, "$1" + l(c))).replace(/(^|[^\\])M/g, "$1" + c);
                    var d = a ? t.getUTCDate() : t.getDate();
                    e = (e = (e = (e = e.replace(/(^|[^\\])dddd+/g, "$1" + o[0])).replace(/(^|[^\\])ddd/g, "$1" + n[0])).replace(/(^|[^\\])dd/g, "$1" + l(d))).replace(/(^|[^\\])d/g, "$1" + d);
                    var g = a ? t.getUTCHours() : t.getHours(),
                        f = g > 12 ? g - 12 : 0 === g ? 12 : g;
                    e = (e = (e = (e = e.replace(/(^|[^\\])HH+/g, "$1" + l(g))).replace(/(^|[^\\])H/g, "$1" + g)).replace(/(^|[^\\])hh+/g, "$1" + l(f))).replace(/(^|[^\\])h/g, "$1" + f);
                    var p = a ? t.getUTCMinutes() : t.getMinutes();
                    e = (e = e.replace(/(^|[^\\])mm+/g, "$1" + l(p))).replace(/(^|[^\\])m/g, "$1" + p);
                    var x = a ? t.getUTCSeconds() : t.getSeconds();
                    e = (e = e.replace(/(^|[^\\])ss+/g, "$1" + l(x))).replace(/(^|[^\\])s/g, "$1" + x);
                    var b = a ? t.getUTCMilliseconds() : t.getMilliseconds();
                    e = e.replace(/(^|[^\\])fff+/g, "$1" + l(b, 3)), b = Math.round(b / 10), e = e.replace(/(^|[^\\])ff/g, "$1" + l(b)), b = Math.round(b / 10);
                    var v = g < 12 ? "AM" : "PM";
                    e = (e = (e = e.replace(/(^|[^\\])f/g, "$1" + b)).replace(/(^|[^\\])TT+/g, "$1" + v)).replace(/(^|[^\\])T/g, "$1" + v.charAt(0));
                    var m = v.toLowerCase();
                    e = (e = e.replace(/(^|[^\\])tt+/g, "$1" + m)).replace(/(^|[^\\])t/g, "$1" + m.charAt(0));
                    var y = -t.getTimezoneOffset(),
                        w = a || !y ? "Z" : y > 0 ? "+" : "-";
                    if (!a) {
                        var k = (y = Math.abs(y)) % 60;
                        w += l(Math.floor(y / 60)) + ":" + l(k)
                    }
                    e = e.replace(/(^|[^\\])K/g, "$1" + w);
                    var A = (a ? t.getUTCDay() : t.getDay()) + 1;
                    return e = (e = (e = (e = (e = e.replace(new RegExp(o[0], "g"), o[A])).replace(new RegExp(n[0], "g"), n[A])).replace(new RegExp(s[0], "g"), s[c])).replace(new RegExp(r[0], "g"), r[c])).replace(/\\(.)/g, "$1")
                }
            }, {
                key: "getTimeUnitsfromTimestamp",
                value: function(t, e, i) {
                    var a = this.w;
                    void 0 !== a.config.xaxis.min && (t = a.config.xaxis.min), void 0 !== a.config.xaxis.max && (e = a.config.xaxis.max);
                    var s = this.getDate(t),
                        r = this.getDate(e),
                        o = this.formatDate(s, "yyyy MM dd HH mm ss fff").split(" "),
                        n = this.formatDate(r, "yyyy MM dd HH mm ss fff").split(" ");
                    return {
                        minMillisecond: parseInt(o[6], 10),
                        maxMillisecond: parseInt(n[6], 10),
                        minSecond: parseInt(o[5], 10),
                        maxSecond: parseInt(n[5], 10),
                        minMinute: parseInt(o[4], 10),
                        maxMinute: parseInt(n[4], 10),
                        minHour: parseInt(o[3], 10),
                        maxHour: parseInt(n[3], 10),
                        minDate: parseInt(o[2], 10),
                        maxDate: parseInt(n[2], 10),
                        minMonth: parseInt(o[1], 10) - 1,
                        maxMonth: parseInt(n[1], 10) - 1,
                        minYear: parseInt(o[0], 10),
                        maxYear: parseInt(n[0], 10)
                    }
                }
            }, {
                key: "isLeapYear",
                value: function(t) {
                    return t % 4 == 0 && t % 100 != 0 || t % 400 == 0
                }
            }, {
                key: "calculcateLastDaysOfMonth",
                value: function(t, e, i) {
                    return this.determineDaysOfMonths(t, e) - i
                }
            }, {
                key: "determineDaysOfYear",
                value: function(t) {
                    var e = 365;
                    return this.isLeapYear(t) && (e = 366), e
                }
            }, {
                key: "determineRemainingDaysOfYear",
                value: function(t, e, i) {
                    var a = this.daysCntOfYear[e] + i;
                    return e > 1 && this.isLeapYear() && a++, a
                }
            }, {
                key: "determineDaysOfMonths",
                value: function(t, e) {
                    var i = 30;
                    switch (t = x.monthMod(t), !0) {
                        case this.months30.indexOf(t) > -1:
                            2 === t && (i = this.isLeapYear(e) ? 29 : 28);
                            break;
                        case this.months31.indexOf(t) > -1:
                        default:
                            i = 31
                    }
                    return i
                }
            }]), t
        }(),
        H = function(t) {
            n(s, t);
            var i = d(s);

            function s() {
                return a(this, s), i.apply(this, arguments)
            }
            return r(s, [{
                key: "draw",
                value: function(t, i) {
                    var a = this.w,
                        s = new m(this.ctx);
                    this.rangeBarOptions = this.w.config.plotOptions.rangeBar, this.series = t, this.seriesRangeStart = a.globals.seriesRangeStart, this.seriesRangeEnd = a.globals.seriesRangeEnd, this.barHelpers.initVariables(t);
                    for (var r = s.group({
                            class: "apexcharts-rangebar-series apexcharts-plot-series"
                        }), o = 0; o < t.length; o++) {
                        var n, l, h, c = void 0,
                            d = void 0,
                            g = void 0,
                            u = a.globals.comboCharts ? i[o] : o,
                            f = s.group({
                                class: "apexcharts-series",
                                seriesName: x.escapeString(a.globals.seriesNames[u]),
                                rel: o + 1,
                                "data:realIndex": u
                            });
                        this.ctx.series.addCollapsedClassToSeries(f, u), t[o].length > 0 && (this.visibleI = this.visibleI + 1);
                        var p = 0,
                            b = 0;
                        this.yRatio.length > 1 && (this.yaxisIndex = u);
                        var v = this.barHelpers.initialPositions();
                        d = v.y, h = v.zeroW, c = v.x, b = v.barWidth, n = v.xDivision, l = v.zeroH;
                        for (var y = s.group({
                                class: "apexcharts-datalabels",
                                "data:realIndex": u
                            }), w = s.group({
                                class: "apexcharts-rangebar-goals-markers",
                                style: "pointer-events: none"
                            }), k = 0; k < a.globals.dataPoints; k++) {
                            var A = this.barHelpers.getStrokeWidth(o, k, u),
                                S = this.seriesRangeStart[o][k],
                                C = this.seriesRangeEnd[o][k],
                                L = null,
                                P = null,
                                M = {
                                    x: c,
                                    y: d,
                                    strokeWidth: A,
                                    elSeries: f
                                };
                            if (g = v.yDivision, p = v.barHeight, this.isHorizontal) {
                                P = d + p * this.visibleI;
                                var T = this.seriesLen;
                                a.config.plotOptions.bar.rangeBarGroupRows && (T = 1);
                                var I = (g - p * T) / 2;
                                if (void 0 === a.config.series[o].data[k]) break;
                                if (a.config.series[o].data[k].x) {
                                    var z = this.detectOverlappingBars({
                                        i: o,
                                        j: k,
                                        barYPosition: P,
                                        srty: I,
                                        barHeight: p,
                                        yDivision: g,
                                        initPositions: v
                                    });
                                    p = z.barHeight, P = z.barYPosition
                                }
                                b = (L = this.drawRangeBarPaths(e({
                                    indexes: {
                                        i: o,
                                        j: k,
                                        realIndex: u
                                    },
                                    barHeight: p,
                                    barYPosition: P,
                                    zeroW: h,
                                    yDivision: g,
                                    y1: S,
                                    y2: C
                                }, M))).barWidth
                            } else p = (L = this.drawRangeColumnPaths(e({
                                indexes: {
                                    i: o,
                                    j: k,
                                    realIndex: u
                                },
                                zeroH: l,
                                barWidth: b,
                                xDivision: n
                            }, M))).barHeight;
                            var X = this.barHelpers.drawGoalLine({
                                barXPosition: L.barXPosition,
                                barYPosition: P,
                                goalX: L.goalX,
                                goalY: L.goalY,
                                barHeight: p,
                                barWidth: b
                            });
                            X && w.add(X), d = L.y, c = L.x;
                            var E = this.barHelpers.getPathFillColor(t, o, k, u),
                                Y = a.globals.stroke.colors[u];
                            this.renderSeries({
                                realIndex: u,
                                pathFill: E,
                                lineFill: Y,
                                j: k,
                                i: o,
                                x: c,
                                y: d,
                                y1: S,
                                y2: C,
                                pathFrom: L.pathFrom,
                                pathTo: L.pathTo,
                                strokeWidth: A,
                                elSeries: f,
                                series: t,
                                barHeight: p,
                                barYPosition: P,
                                barWidth: b,
                                elDataLabelsWrap: y,
                                elGoalsMarkers: w,
                                visibleSeries: this.visibleI,
                                type: "rangebar"
                            })
                        }
                        r.add(f)
                    }
                    return r
                }
            }, {
                key: "detectOverlappingBars",
                value: function(t) {
                    var e = t.i,
                        i = t.j,
                        a = t.barYPosition,
                        s = t.srty,
                        r = t.barHeight,
                        o = t.yDivision,
                        n = t.initPositions,
                        l = this.w,
                        h = [],
                        c = l.config.series[e].data[i].rangeName,
                        d = l.config.series[e].data[i].x,
                        g = l.globals.labels.indexOf(d),
                        u = l.globals.seriesRangeBar[e].findIndex((function(t) {
                            return t.x === d && t.overlaps.length > 0
                        }));
                    return a = l.config.plotOptions.bar.rangeBarGroupRows ? s + o * g : s + r * this.visibleI + o * g, u > -1 && !l.config.plotOptions.bar.rangeBarOverlap && (h = l.globals.seriesRangeBar[e][u].overlaps).indexOf(c) > -1 && (a = (r = n.barHeight / h.length) * this.visibleI + o * (100 - parseInt(this.barOptions.barHeight, 10)) / 100 / 2 + r * (this.visibleI + h.indexOf(c)) + o * g), {
                        barYPosition: a,
                        barHeight: r
                    }
                }
            }, {
                key: "drawRangeColumnPaths",
                value: function(t) {
                    var e = t.indexes,
                        i = t.x;
                    t.strokeWidth;
                    var a = t.xDivision,
                        s = t.barWidth,
                        r = t.zeroH,
                        o = this.w,
                        n = e.i,
                        l = e.j,
                        h = this.yRatio[this.yaxisIndex],
                        c = e.realIndex,
                        d = this.getRangeValue(c, l),
                        g = Math.min(d.start, d.end),
                        u = Math.max(d.start, d.end);
                    o.globals.isXNumeric && (i = (o.globals.seriesX[n][l] - o.globals.minX) / this.xRatio - s / 2);
                    var f = i + s * this.visibleI;
                    void 0 === this.series[n][l] || null === this.series[n][l] ? g = r : (g = r - g / h, u = r - u / h);
                    var p = Math.abs(u - g),
                        x = this.barHelpers.getColumnPaths({
                            barXPosition: f,
                            barWidth: s,
                            y1: g,
                            y2: u,
                            strokeWidth: this.strokeWidth,
                            series: this.seriesRangeEnd,
                            realIndex: e.realIndex,
                            i: c,
                            j: l,
                            w: o
                        });
                    return o.globals.isXNumeric || (i += a), {
                        pathTo: x.pathTo,
                        pathFrom: x.pathFrom,
                        barHeight: p,
                        x: i,
                        y: u,
                        goalY: this.barHelpers.getGoalValues("y", null, r, n, l),
                        barXPosition: f
                    }
                }
            }, {
                key: "drawRangeBarPaths",
                value: function(t) {
                    var e = t.indexes,
                        i = t.y,
                        a = t.y1,
                        s = t.y2,
                        r = t.yDivision,
                        o = t.barHeight,
                        n = t.barYPosition,
                        l = t.zeroW,
                        h = this.w,
                        c = l + a / this.invertedYRatio,
                        d = l + s / this.invertedYRatio,
                        g = Math.abs(d - c),
                        u = this.barHelpers.getBarpaths({
                            barYPosition: n,
                            barHeight: o,
                            x1: c,
                            x2: d,
                            strokeWidth: this.strokeWidth,
                            series: this.seriesRangeEnd,
                            i: e.realIndex,
                            realIndex: e.realIndex,
                            j: e.j,
                            w: h
                        });
                    return h.globals.isXNumeric || (i += r), {
                        pathTo: u.pathTo,
                        pathFrom: u.pathFrom,
                        barWidth: g,
                        x: d,
                        goalX: this.barHelpers.getGoalValues("x", l, null, e.realIndex, e.j),
                        y: i
                    }
                }
            }, {
                key: "getRangeValue",
                value: function(t, e) {
                    var i = this.w;
                    return {
                        start: i.globals.seriesRangeStart[t][e],
                        end: i.globals.seriesRangeEnd[t][e]
                    }
                }
            }, {
                key: "getTooltipValues",
                value: function(t) {
                    var e = t.ctx,
                        i = t.seriesIndex,
                        a = t.dataPointIndex,
                        s = t.y1,
                        r = t.y2,
                        o = t.w,
                        n = o.globals.seriesRangeStart[i][a],
                        l = o.globals.seriesRangeEnd[i][a],
                        h = o.globals.labels[a],
                        c = o.config.series[i].name ? o.config.series[i].name : "",
                        d = o.config.tooltip.y.formatter,
                        g = o.config.tooltip.y.title.formatter,
                        u = {
                            w: o,
                            seriesIndex: i,
                            dataPointIndex: a,
                            start: n,
                            end: l
                        };
                    "function" == typeof g && (c = g(c, u)), Number.isFinite(s) && Number.isFinite(r) && (n = s, l = r, o.config.series[i].data[a].x && (h = o.config.series[i].data[a].x + ":"), "function" == typeof d && (h = d(h, u)));
                    var f = "",
                        p = "",
                        x = o.globals.colors[i];
                    if (void 0 === o.config.tooltip.x.formatter)
                        if ("datetime" === o.config.xaxis.type) {
                            var b = new R(e);
                            f = b.formatDate(b.getDate(n), o.config.tooltip.x.format), p = b.formatDate(b.getDate(l), o.config.tooltip.x.format)
                        } else f = n, p = l;
                    else f = o.config.tooltip.x.formatter(n), p = o.config.tooltip.x.formatter(l);
                    return {
                        start: n,
                        end: l,
                        startVal: f,
                        endVal: p,
                        ylabel: h,
                        color: x,
                        seriesName: c
                    }
                }
            }, {
                key: "buildCustomTooltipHTML",
                value: function(t) {
                    var e = t.color,
                        i = t.seriesName;
                    return '<div class="apexcharts-tooltip-rangebar"><div> <span class="series-name" style="color: ' + e + '">' + (i || "") + '</span></div><div> <span class="category">' + t.ylabel + ' </span> <span class="value start-value">' + t.start + '</span> <span class="separator">-</span> <span class="value end-value">' + t.end + "</span></div></div>"
                }
            }]), s
        }(F),
        D = function() {
            function t(e) {
                a(this, t), this.opts = e
            }
            return r(t, [{
                key: "line",
                value: function() {
                    return {
                        chart: {
                            animations: {
                                easing: "swing"
                            }
                        },
                        dataLabels: {
                            enabled: !1
                        },
                        stroke: {
                            width: 5,
                            curve: "straight"
                        },
                        markers: {
                            size: 0,
                            hover: {
                                sizeOffset: 6
                            }
                        },
                        xaxis: {
                            crosshairs: {
                                width: 1
                            }
                        }
                    }
                }
            }, {
                key: "sparkline",
                value: function(t) {
                    this.opts.yaxis[0].show = !1, this.opts.yaxis[0].title.text = "", this.opts.yaxis[0].axisBorder.show = !1, this.opts.yaxis[0].axisTicks.show = !1, this.opts.yaxis[0].floating = !0;
                    return x.extend(t, {
                        grid: {
                            show: !1,
                            padding: {
                                left: 0,
                                right: 0,
                                top: 0,
                                bottom: 0
                            }
                        },
                        legend: {
                            show: !1
                        },
                        xaxis: {
                            labels: {
                                show: !1
                            },
                            tooltip: {
                                enabled: !1
                            },
                            axisBorder: {
                                show: !1
                            },
                            axisTicks: {
                                show: !1
                            }
                        },
                        chart: {
                            toolbar: {
                                show: !1
                            },
                            zoom: {
                                enabled: !1
                            }
                        },
                        dataLabels: {
                            enabled: !1
                        }
                    })
                }
            }, {
                key: "bar",
                value: function() {
                    return {
                        chart: {
                            stacked: !1,
                            animations: {
                                easing: "swing"
                            }
                        },
                        plotOptions: {
                            bar: {
                                dataLabels: {
                                    position: "center"
                                }
                            }
                        },
                        dataLabels: {
                            style: {
                                colors: ["#fff"]
                            },
                            background: {
                                enabled: !1
                            }
                        },
                        stroke: {
                            width: 0,
                            lineCap: "round"
                        },
                        fill: {
                            opacity: .85
                        },
                        legend: {
                            markers: {
                                shape: "square",
                                radius: 2,
                                size: 8
                            }
                        },
                        tooltip: {
                            shared: !1,
                            intersect: !0
                        },
                        xaxis: {
                            tooltip: {
                                enabled: !1
                            },
                            tickPlacement: "between",
                            crosshairs: {
                                width: "barWidth",
                                position: "back",
                                fill: {
                                    type: "gradient"
                                },
                                dropShadow: {
                                    enabled: !1
                                },
                                stroke: {
                                    width: 0
                                }
                            }
                        }
                    }
                }
            }, {
                key: "candlestick",
                value: function() {
                    var t = this;
                    return {
                        stroke: {
                            width: 1,
                            colors: ["#333"]
                        },
                        fill: {
                            opacity: 1
                        },
                        dataLabels: {
                            enabled: !1
                        },
                        tooltip: {
                            shared: !0,
                            custom: function(e) {
                                var i = e.seriesIndex,
                                    a = e.dataPointIndex,
                                    s = e.w;
                                return t._getBoxTooltip(s, i, a, ["Open", "High", "", "Low", "Close"], "candlestick")
                            }
                        },
                        states: {
                            active: {
                                filter: {
                                    type: "none"
                                }
                            }
                        },
                        xaxis: {
                            crosshairs: {
                                width: 1
                            }
                        }
                    }
                }
            }, {
                key: "boxPlot",
                value: function() {
                    var t = this;
                    return {
                        chart: {
                            animations: {
                                dynamicAnimation: {
                                    enabled: !1
                                }
                            }
                        },
                        stroke: {
                            width: 1,
                            colors: ["#24292e"]
                        },
                        dataLabels: {
                            enabled: !1
                        },
                        tooltip: {
                            shared: !0,
                            custom: function(e) {
                                var i = e.seriesIndex,
                                    a = e.dataPointIndex,
                                    s = e.w;
                                return t._getBoxTooltip(s, i, a, ["Minimum", "Q1", "Median", "Q3", "Maximum"], "boxPlot")
                            }
                        },
                        markers: {
                            size: 5,
                            strokeWidth: 1,
                            strokeColors: "#111"
                        },
                        xaxis: {
                            crosshairs: {
                                width: 1
                            }
                        }
                    }
                }
            }, {
                key: "rangeBar",
                value: function() {
                    return {
                        stroke: {
                            width: 0,
                            lineCap: "square"
                        },
                        plotOptions: {
                            bar: {
                                borderRadius: 0,
                                dataLabels: {
                                    position: "center"
                                }
                            }
                        },
                        dataLabels: {
                            enabled: !1,
                            formatter: function(t, e) {
                                e.ctx;
                                var i = e.seriesIndex,
                                    a = e.dataPointIndex,
                                    s = e.w,
                                    r = s.globals.seriesRangeStart[i][a];
                                return s.globals.seriesRangeEnd[i][a] - r
                            },
                            background: {
                                enabled: !1
                            },
                            style: {
                                colors: ["#fff"]
                            }
                        },
                        tooltip: {
                            shared: !1,
                            followCursor: !0,
                            custom: function(t) {
                                return t.w.config.plotOptions && t.w.config.plotOptions.bar && t.w.config.plotOptions.bar.horizontal ? function(t) {
                                    var e = new H(t.ctx, null),
                                        i = e.getTooltipValues(t),
                                        a = i.color,
                                        s = i.seriesName,
                                        r = i.ylabel,
                                        o = i.startVal,
                                        n = i.endVal;
                                    return e.buildCustomTooltipHTML({
                                        color: a,
                                        seriesName: s,
                                        ylabel: r,
                                        start: o,
                                        end: n
                                    })
                                }(t) : function(t) {
                                    var e = new H(t.ctx, null),
                                        i = e.getTooltipValues(t),
                                        a = i.color,
                                        s = i.seriesName,
                                        r = i.ylabel,
                                        o = i.start,
                                        n = i.end;
                                    return e.buildCustomTooltipHTML({
                                        color: a,
                                        seriesName: s,
                                        ylabel: r,
                                        start: o,
                                        end: n
                                    })
                                }(t)
                            }
                        },
                        xaxis: {
                            tickPlacement: "between",
                            tooltip: {
                                enabled: !1
                            },
                            crosshairs: {
                                stroke: {
                                    width: 0
                                }
                            }
                        }
                    }
                }
            }, {
                key: "area",
                value: function() {
                    return {
                        stroke: {
                            width: 4,
                            fill: {
                                type: "solid",
                                gradient: {
                                    inverseColors: !1,
                                    shade: "light",
                                    type: "vertical",
                                    opacityFrom: .65,
                                    opacityTo: .5,
                                    stops: [0, 100, 100]
                                }
                            }
                        },
                        fill: {
                            type: "gradient",
                            gradient: {
                                inverseColors: !1,
                                shade: "light",
                                type: "vertical",
                                opacityFrom: .65,
                                opacityTo: .5,
                                stops: [0, 100, 100]
                            }
                        },
                        markers: {
                            size: 0,
                            hover: {
                                sizeOffset: 6
                            }
                        },
                        tooltip: {
                            followCursor: !1
                        }
                    }
                }
            }, {
                key: "brush",
                value: function(t) {
                    return x.extend(t, {
                        chart: {
                            toolbar: {
                                autoSelected: "selection",
                                show: !1
                            },
                            zoom: {
                                enabled: !1
                            }
                        },
                        dataLabels: {
                            enabled: !1
                        },
                        stroke: {
                            width: 1
                        },
                        tooltip: {
                            enabled: !1
                        },
                        xaxis: {
                            tooltip: {
                                enabled: !1
                            }
                        }
                    })
                }
            }, {
                key: "stacked100",
                value: function(t) {
                    t.dataLabels = t.dataLabels || {}, t.dataLabels.formatter = t.dataLabels.formatter || void 0;
                    var e = t.dataLabels.formatter;
                    return t.yaxis.forEach((function(e, i) {
                        t.yaxis[i].min = 0, t.yaxis[i].max = 100
                    })), "bar" === t.chart.type && (t.dataLabels.formatter = e || function(t) {
                        return "number" == typeof t && t ? t.toFixed(0) + "%" : t
                    }), t
                }
            }, {
                key: "convertCatToNumeric",
                value: function(t) {
                    return t.xaxis.convertedCatToNumeric = !0, t
                }
            }, {
                key: "convertCatToNumericXaxis",
                value: function(t, e, i) {
                    t.xaxis.type = "numeric", t.xaxis.labels = t.xaxis.labels || {}, t.xaxis.labels.formatter = t.xaxis.labels.formatter || function(t) {
                        return x.isNumber(t) ? Math.floor(t) : t
                    };
                    var a = t.xaxis.labels.formatter,
                        s = t.xaxis.categories && t.xaxis.categories.length ? t.xaxis.categories : t.labels;
                    return i && i.length && (s = i.map((function(t) {
                        return Array.isArray(t) ? t : String(t)
                    }))), s && s.length && (t.xaxis.labels.formatter = function(t) {
                        return x.isNumber(t) ? a(s[Math.floor(t) - 1]) : a(t)
                    }), t.xaxis.categories = [], t.labels = [], t.xaxis.tickAmount = t.xaxis.tickAmount || "dataPoints", t
                }
            }, {
                key: "bubble",
                value: function() {
                    return {
                        dataLabels: {
                            style: {
                                colors: ["#fff"]
                            }
                        },
                        tooltip: {
                            shared: !1,
                            intersect: !0
                        },
                        xaxis: {
                            crosshairs: {
                                width: 0
                            }
                        },
                        fill: {
                            type: "solid",
                            gradient: {
                                shade: "light",
                                inverse: !0,
                                shadeIntensity: .55,
                                opacityFrom: .4,
                                opacityTo: .8
                            }
                        }
                    }
                }
            }, {
                key: "scatter",
                value: function() {
                    return {
                        dataLabels: {
                            enabled: !1
                        },
                        tooltip: {
                            shared: !1,
                            intersect: !0
                        },
                        markers: {
                            size: 6,
                            strokeWidth: 1,
                            hover: {
                                sizeOffset: 2
                            }
                        }
                    }
                }
            }, {
                key: "heatmap",
                value: function() {
                    return {
                        chart: {
                            stacked: !1
                        },
                        fill: {
                            opacity: 1
                        },
                        dataLabels: {
                            style: {
                                colors: ["#fff"]
                            }
                        },
                        stroke: {
                            colors: ["#fff"]
                        },
                        tooltip: {
                            followCursor: !0,
                            marker: {
                                show: !1
                            },
                            x: {
                                show: !1
                            }
                        },
                        legend: {
                            position: "top",
                            markers: {
                                shape: "square",
                                size: 10,
                                offsetY: 2
                            }
                        },
                        grid: {
                            padding: {
                                right: 20
                            }
                        }
                    }
                }
            }, {
                key: "treemap",
                value: function() {
                    return {
                        chart: {
                            zoom: {
                                enabled: !1
                            }
                        },
                        dataLabels: {
                            style: {
                                fontSize: 14,
                                fontWeight: 600,
                                colors: ["#fff"]
                            }
                        },
                        stroke: {
                            show: !0,
                            width: 2,
                            colors: ["#fff"]
                        },
                        legend: {
                            show: !1
                        },
                        fill: {
                            gradient: {
                                stops: [0, 100]
                            }
                        },
                        tooltip: {
                            followCursor: !0,
                            x: {
                                show: !1
                            }
                        },
                        grid: {
                            padding: {
                                left: 0,
                                right: 0
                            }
                        },
                        xaxis: {
                            crosshairs: {
                                show: !1
                            },
                            tooltip: {
                                enabled: !1
                            }
                        }
                    }
                }
            }, {
                key: "pie",
                value: function() {
                    return {
                        chart: {
                            toolbar: {
                                show: !1
                            }
                        },
                        plotOptions: {
                            pie: {
                                donut: {
                                    labels: {
                                        show: !1
                                    }
                                }
                            }
                        },
                        dataLabels: {
                            formatter: function(t) {
                                return t.toFixed(1) + "%"
                            },
                            style: {
                                colors: ["#fff"]
                            },
                            background: {
                                enabled: !1
                            },
                            dropShadow: {
                                enabled: !0
                            }
                        },
                        stroke: {
                            colors: ["#fff"]
                        },
                        fill: {
                            opacity: 1,
                            gradient: {
                                shade: "light",
                                stops: [0, 100]
                            }
                        },
                        tooltip: {
                            theme: "dark",
                            fillSeriesColor: !0
                        },
                        legend: {
                            position: "right"
                        }
                    }
                }
            }, {
                key: "donut",
                value: function() {
                    return {
                        chart: {
                            toolbar: {
                                show: !1
                            }
                        },
                        dataLabels: {
                            formatter: function(t) {
                                return t.toFixed(1) + "%"
                            },
                            style: {
                                colors: ["#fff"]
                            },
                            background: {
                                enabled: !1
                            },
                            dropShadow: {
                                enabled: !0
                            }
                        },
                        stroke: {
                            colors: ["#fff"]
                        },
                        fill: {
                            opacity: 1,
                            gradient: {
                                shade: "light",
                                shadeIntensity: .35,
                                stops: [80, 100],
                                opacityFrom: 1,
                                opacityTo: 1
                            }
                        },
                        tooltip: {
                            theme: "dark",
                            fillSeriesColor: !0
                        },
                        legend: {
                            position: "right"
                        }
                    }
                }
            }, {
                key: "polarArea",
                value: function() {
                    return this.opts.yaxis[0].tickAmount = this.opts.yaxis[0].tickAmount ? this.opts.yaxis[0].tickAmount : 6, {
                        chart: {
                            toolbar: {
                                show: !1
                            }
                        },
                        dataLabels: {
                            formatter: function(t) {
                                return t.toFixed(1) + "%"
                            },
                            enabled: !1
                        },
                        stroke: {
                            show: !0,
                            width: 2
                        },
                        fill: {
                            opacity: .7
                        },
                        tooltip: {
                            theme: "dark",
                            fillSeriesColor: !0
                        },
                        legend: {
                            position: "right"
                        }
                    }
                }
            }, {
                key: "radar",
                value: function() {
                    return this.opts.yaxis[0].labels.offsetY = this.opts.yaxis[0].labels.offsetY ? this.opts.yaxis[0].labels.offsetY : 6, {
                        dataLabels: {
                            enabled: !1,
                            style: {
                                fontSize: "11px"
                            }
                        },
                        stroke: {
                            width: 2
                        },
                        markers: {
                            size: 3,
                            strokeWidth: 1,
                            strokeOpacity: 1
                        },
                        fill: {
                            opacity: .2
                        },
                        tooltip: {
                            shared: !1,
                            intersect: !0,
                            followCursor: !0
                        },
                        grid: {
                            show: !1
                        },
                        xaxis: {
                            labels: {
                                formatter: function(t) {
                                    return t
                                },
                                style: {
                                    colors: ["#a8a8a8"],
                                    fontSize: "11px"
                                }
                            },
                            tooltip: {
                                enabled: !1
                            },
                            crosshairs: {
                                show: !1
                            }
                        }
                    }
                }
            }, {
                key: "radialBar",
                value: function() {
                    return {
                        chart: {
                            animations: {
                                dynamicAnimation: {
                                    enabled: !0,
                                    speed: 800
                                }
                            },
                            toolbar: {
                                show: !1
                            }
                        },
                        fill: {
                            gradient: {
                                shade: "dark",
                                shadeIntensity: .4,
                                inverseColors: !1,
                                type: "diagonal2",
                                opacityFrom: 1,
                                opacityTo: 1,
                                stops: [70, 98, 100]
                            }
                        },
                        legend: {
                            show: !1,
                            position: "right"
                        },
                        tooltip: {
                            enabled: !1,
                            fillSeriesColor: !0
                        }
                    }
                }
            }, {
                key: "_getBoxTooltip",
                value: function(t, e, i, a, s) {
                    var r = t.globals.seriesCandleO[e][i],
                        o = t.globals.seriesCandleH[e][i],
                        n = t.globals.seriesCandleM[e][i],
                        l = t.globals.seriesCandleL[e][i],
                        h = t.globals.seriesCandleC[e][i];
                    return t.config.series[e].type && t.config.series[e].type !== s ? '<div class="apexcharts-custom-tooltip">\n          '.concat(t.config.series[e].name ? t.config.series[e].name : "سری-" + (e + 1), ": <strong>").concat(t.globals.series[e][i], "</strong>\n        </div>") : '<div class="apexcharts-tooltip-box apexcharts-tooltip-'.concat(t.config.chart.type, '">') + "<div>".concat(a[0], ': <span class="value">') + r + "</span></div>" + "<div>".concat(a[1], ': <span class="value">') + o + "</span></div>" + (n ? "<div>".concat(a[2], ': <span class="value">') + n + "</span></div>" : "") + "<div>".concat(a[3], ': <span class="value">') + l + "</span></div>" + "<div>".concat(a[4], ': <span class="value">') + h + "</span></div></div>"
                }
            }]), t
        }(),
        N = function() {
            function t(e) {
                a(this, t), this.opts = e
            }
            return r(t, [{
                key: "init",
                value: function(t) {
                    var e = t.responsiveOverride,
                        a = this.opts,
                        s = new L,
                        r = new D(a);
                    this.chartType = a.chart.type, "histogram" === this.chartType && (a.chart.type = "bar", a = x.extend({
                        plotOptions: {
                            bar: {
                                columnWidth: "99.99%"
                            }
                        }
                    }, a)), a = this.extendYAxis(a), a = this.extendAnnotations(a);
                    var o = s.init(),
                        n = {};
                    if (a && "object" === i(a)) {
                        var l = {};
                        l = -1 !== ["line", "area", "bar", "candlestick", "boxPlot", "rangeBar", "histogram", "bubble", "scatter", "heatmap", "treemap", "pie", "polarArea", "donut", "radar", "radialBar"].indexOf(a.chart.type) ? r[a.chart.type]() : r.line(), a.chart.brush && a.chart.brush.enabled && (l = r.brush(l)), a.chart.stacked && "100%" === a.chart.stackType && (a = r.stacked100(a)), this.checkForDarkTheme(window.Apex), this.checkForDarkTheme(a), a.xaxis = a.xaxis || window.Apex.xaxis || {}, e || (a.xaxis.convertedCatToNumeric = !1), ((a = this.checkForCatToNumericXAxis(this.chartType, l, a)).chart.sparkline && a.chart.sparkline.enabled || window.Apex.chart && window.Apex.chart.sparkline && window.Apex.chart.sparkline.enabled) && (l = r.sparkline(l)), n = x.extend(o, l)
                    }
                    var h = x.extend(n, window.Apex);
                    return o = x.extend(h, a), o = this.handleUserInputErrors(o)
                }
            }, {
                key: "checkForCatToNumericXAxis",
                value: function(t, e, i) {
                    var a = new D(i),
                        s = ("bar" === t || "boxPlot" === t) && i.plotOptions && i.plotOptions.bar && i.plotOptions.bar.horizontal,
                        r = "pie" === t || "polarArea" === t || "donut" === t || "radar" === t || "radialBar" === t || "heatmap" === t,
                        o = "datetime" !== i.xaxis.type && "numeric" !== i.xaxis.type,
                        n = i.xaxis.tickPlacement ? i.xaxis.tickPlacement : e.xaxis && e.xaxis.tickPlacement;
                    return s || r || !o || "between" === n || (i = a.convertCatToNumeric(i)), i
                }
            }, {
                key: "extendYAxis",
                value: function(t, e) {
                    var i = new L;
                    (void 0 === t.yaxis || !t.yaxis || Array.isArray(t.yaxis) && 0 === t.yaxis.length) && (t.yaxis = {}), t.yaxis.constructor !== Array && window.Apex.yaxis && window.Apex.yaxis.constructor !== Array && (t.yaxis = x.extend(t.yaxis, window.Apex.yaxis)), t.yaxis.constructor !== Array ? t.yaxis = [x.extend(i.yAxis, t.yaxis)] : t.yaxis = x.extendArray(t.yaxis, i.yAxis);
                    var a = !1;
                    t.yaxis.forEach((function(t) {
                        t.logarithmic && (a = !0)
                    }));
                    var s = t.series;
                    return e && !s && (s = e.config.series), a && s.length !== t.yaxis.length && s.length && (t.yaxis = s.map((function(e, a) {
                        if (e.name || (s[a].name = "سری-".concat(a + 1)), t.yaxis[a]) return t.yaxis[a].seriesName = s[a].name, t.yaxis[a];
                        var r = x.extend(i.yAxis, t.yaxis[0]);
                        return r.show = !1, r
                    }))), a && s.length > 1 && s.length !== t.yaxis.length && console.warn("A multi-series logarithmic chart should have equal number of series and y-axes. Please make sure to equalize both."), t
                }
            }, {
                key: "extendAnnotations",
                value: function(t) {
                    return void 0 === t.annotations && (t.annotations = {}, t.annotations.yaxis = [], t.annotations.xaxis = [], t.annotations.points = []), t = this.extendYAxisAnnotations(t), t = this.extendXAxisAnnotations(t), t = this.extendPointAnnotations(t)
                }
            }, {
                key: "extendYAxisAnnotations",
                value: function(t) {
                    var e = new L;
                    return t.annotations.yaxis = x.extendArray(void 0 !== t.annotations.yaxis ? t.annotations.yaxis : [], e.yAxisAnnotation), t
                }
            }, {
                key: "extendXAxisAnnotations",
                value: function(t) {
                    var e = new L;
                    return t.annotations.xaxis = x.extendArray(void 0 !== t.annotations.xaxis ? t.annotations.xaxis : [], e.xAxisAnnotation), t
                }
            }, {
                key: "extendPointAnnotations",
                value: function(t) {
                    var e = new L;
                    return t.annotations.points = x.extendArray(void 0 !== t.annotations.points ? t.annotations.points : [], e.pointAnnotation), t
                }
            }, {
                key: "checkForDarkTheme",
                value: function(t) {
                    t.theme && "dark" === t.theme.mode && (t.tooltip || (t.tooltip = {}), "light" !== t.tooltip.theme && (t.tooltip.theme = "dark"), t.chart.foreColor || (t.chart.foreColor = "#f6f7f8"), t.chart.background || (t.chart.background = "#424242"), t.theme.palette || (t.theme.palette = "palette4"))
                }
            }, {
                key: "handleUserInputErrors",
                value: function(t) {
                    var e = t;
                    if (e.tooltip.shared && e.tooltip.intersect) throw new Error("tooltip.shared cannot be enabled when tooltip.intersect is true. Turn off any other option by setting it to false.");
                    if ("bar" === e.chart.type && e.plotOptions.bar.horizontal) {
                        if (e.yaxis.length > 1) throw new Error("Multiple Y Axis for bars are not supported. Switch to column chart by setting plotOptions.bar.horizontal=false");
                        e.yaxis[0].reversed && (e.yaxis[0].opposite = !0), e.xaxis.tooltip.enabled = !1, e.yaxis[0].tooltip.enabled = !1, e.chart.zoom.enabled = !1
                    }
                    return "bar" !== e.chart.type && "rangeBar" !== e.chart.type || e.tooltip.shared && "barWidth" === e.xaxis.crosshairs.width && e.series.length > 1 && (e.xaxis.crosshairs.width = "tickWidth"), "candlestick" !== e.chart.type && "boxPlot" !== e.chart.type || e.yaxis[0].reversed && (console.warn("Reversed y-axis in ".concat(e.chart.type, " chart is not supported.")), e.yaxis[0].reversed = !1), e
                }
            }]), t
        }(),
        O = function() {
            function t() {
                a(this, t)
            }
            return r(t, [{
                key: "initGlobalVars",
                value: function(t) {
                    t.series = [], t.seriesCandleO = [], t.seriesCandleH = [], t.seriesCandleM = [], t.seriesCandleL = [], t.seriesCandleC = [], t.seriesRangeStart = [], t.seriesRangeEnd = [], t.seriesRangeBar = [], t.seriesPercent = [], t.seriesGoals = [], t.seriesX = [], t.seriesZ = [], t.seriesNames = [], t.seriesTotals = [], t.seriesLog = [], t.seriesColors = [], t.stackedSeriesTotals = [], t.seriesXvalues = [], t.seriesYvalues = [], t.labels = [], t.hasGroups = !1, t.groups = [], t.categoryLabels = [], t.timescaleLabels = [], t.noLabelsProvided = !1, t.resizeTimer = null, t.selectionResizeTimer = null, t.delayedElements = [], t.pointsArray = [], t.dataLabelsRects = [], t.isXNumeric = !1, t.xaxisLabelsCount = 0, t.skipLastTimelinelabel = !1, t.skipFirstTimelinelabel = !1, t.isDataXYZ = !1, t.isMultiLineX = !1, t.isMultipleYAxis = !1, t.maxY = -Number.MAX_VALUE, t.minY = Number.MIN_VALUE, t.minYArr = [], t.maxYArr = [], t.maxX = -Number.MAX_VALUE, t.minX = Number.MAX_VALUE, t.initialMaxX = -Number.MAX_VALUE, t.initialMinX = Number.MAX_VALUE, t.maxDate = 0, t.minDate = Number.MAX_VALUE, t.minZ = Number.MAX_VALUE, t.maxZ = -Number.MAX_VALUE, t.minXDiff = Number.MAX_VALUE, t.yAxisScale = [], t.xAxisScale = null, t.xAxisTicksPositions = [], t.yLabelsCoords = [], t.yTitleCoords = [], t.barPadForNumericAxis = 0, t.padHorizontal = 0, t.xRange = 0, t.yRange = [], t.zRange = 0, t.dataPoints = 0, t.xTickAmount = 0
                }
            }, {
                key: "globalVars",
                value: function(t) {
                    return {
                        chartID: null,
                        cuid: null,
                        events: {
                            beforeMount: [],
                            mounted: [],
                            updated: [],
                            clicked: [],
                            selection: [],
                            dataPointSelection: [],
                            zoomed: [],
                            scrolled: []
                        },
                        colors: [],
                        clientX: null,
                        clientY: null,
                        fill: {
                            colors: []
                        },
                        stroke: {
                            colors: []
                        },
                        dataLabels: {
                            style: {
                                colors: []
                            }
                        },
                        radarPolygons: {
                            fill: {
                                colors: []
                            }
                        },
                        markers: {
                            colors: [],
                            size: t.markers.size,
                            largestSize: 0
                        },
                        animationEnded: !1,
                        isTouchDevice: "ontouchstart" in window || navigator.msMaxTouchPoints,
                        isDirty: !1,
                        isExecCalled: !1,
                        initialConfig: null,
                        initialSeries: [],
                        lastXAxis: [],
                        lastYAxis: [],
                        columnSeries: null,
                        labels: [],
                        timescaleLabels: [],
                        noLabelsProvided: !1,
                        allSeriesCollapsed: !1,
                        collapsedSeries: [],
                        collapsedSeriesIndices: [],
                        ancillaryCollapsedSeries: [],
                        ancillaryCollapsedSeriesIndices: [],
                        risingSeries: [],
                        dataFormatXNumeric: !1,
                        capturedSeriesIndex: -1,
                        capturedDataPointIndex: -1,
                        selectedDataPoints: [],
                        goldenPadding: 35,
                        invalidLogScale: !1,
                        ignoreYAxisIndexes: [],
                        yAxisSameScaleIndices: [],
                        maxValsInArrayIndex: 0,
                        radialSize: 0,
                        selection: void 0,
                        zoomEnabled: "zoom" === t.chart.toolbar.autoSelected && t.chart.toolbar.tools.zoom && t.chart.zoom.enabled,
                        panEnabled: "pan" === t.chart.toolbar.autoSelected && t.chart.toolbar.tools.pan,
                        selectionEnabled: "selection" === t.chart.toolbar.autoSelected && t.chart.toolbar.tools.selection,
                        yaxis: null,
                        mousedown: !1,
                        lastClientPosition: {},
                        visibleXRange: void 0,
                        yValueDecimal: 0,
                        total: 0,
                        SVGNS: "http://www.w3.org/2000/svg",
                        svgWidth: 0,
                        svgHeight: 0,
                        noData: !1,
                        locale: {},
                        dom: {},
                        memory: {
                            methodsToExec: []
                        },
                        shouldAnimate: !0,
                        skipLastTimelinelabel: !1,
                        skipFirstTimelinelabel: !1,
                        delayedElements: [],
                        axisCharts: !0,
                        isDataXYZ: !1,
                        resized: !1,
                        resizeTimer: null,
                        comboCharts: !1,
                        dataChanged: !1,
                        previousPaths: [],
                        allSeriesHasEqualX: !0,
                        pointsArray: [],
                        dataLabelsRects: [],
                        lastDrawnDataLabelsIndexes: [],
                        hasNullValues: !1,
                        easing: null,
                        zoomed: !1,
                        gridWidth: 0,
                        gridHeight: 0,
                        rotateXLabels: !1,
                        defaultLabels: !1,
                        xLabelFormatter: void 0,
                        yLabelFormatters: [],
                        xaxisTooltipFormatter: void 0,
                        ttKeyFormatter: void 0,
                        ttVal: void 0,
                        ttZFormatter: void 0,
                        LINE_HEIGHT_RATIO: 1.618,
                        xAxisLabelsHeight: 0,
                        xAxisGroupLabelsHeight: 0,
                        xAxisLabelsWidth: 0,
                        yAxisLabelsWidth: 0,
                        scaleX: 1,
                        scaleY: 1,
                        translateX: 0,
                        translateY: 0,
                        translateYAxisX: [],
                        yAxisWidths: [],
                        translateXAxisY: 0,
                        translateXAxisX: 0,
                        tooltip: null
                    }
                }
            }, {
                key: "init",
                value: function(t) {
                    var e = this.globalVars(t);
                    return this.initGlobalVars(e), e.initialConfig = x.extend({}, t), e.initialSeries = x.clone(t.series), e.lastXAxis = x.clone(e.initialConfig.xaxis), e.lastYAxis = x.clone(e.initialConfig.yaxis), e
                }
            }]), t
        }(),
        W = function() {
            function t(e) {
                a(this, t), this.opts = e
            }
            return r(t, [{
                key: "init",
                value: function() {
                    var t = new N(this.opts).init({
                        responsiveOverride: !1
                    });
                    return {
                        config: t,
                        globals: (new O).init(t)
                    }
                }
            }]), t
        }(),
        B = function() {
            function t(e) {
                a(this, t), this.ctx = e, this.w = e.w, this.twoDSeries = [], this.threeDSeries = [], this.twoDSeriesX = [], this.seriesGoals = [], this.coreUtils = new y(this.ctx)
            }
            return r(t, [{
                key: "isMultiFormat",
                value: function() {
                    return this.isFormatXY() || this.isFormat2DArray()
                }
            }, {
                key: "isFormatXY",
                value: function() {
                    var t = this.w.config.series.slice(),
                        e = new E(this.ctx);
                    if (this.activeSeriesIndex = e.getActiveConfigSeriesIndex(), void 0 !== t[this.activeSeriesIndex].data && t[this.activeSeriesIndex].data.length > 0 && null !== t[this.activeSeriesIndex].data[0] && void 0 !== t[this.activeSeriesIndex].data[0].x && null !== t[this.activeSeriesIndex].data[0]) return !0
                }
            }, {
                key: "isFormat2DArray",
                value: function() {
                    var t = this.w.config.series.slice(),
                        e = new E(this.ctx);
                    if (this.activeSeriesIndex = e.getActiveConfigSeriesIndex(), void 0 !== t[this.activeSeriesIndex].data && t[this.activeSeriesIndex].data.length > 0 && void 0 !== t[this.activeSeriesIndex].data[0] && null !== t[this.activeSeriesIndex].data[0] && t[this.activeSeriesIndex].data[0].constructor === Array) return !0
                }
            }, {
                key: "handleFormat2DArray",
                value: function(t, e) {
                    for (var i = this.w.config, a = this.w.globals, s = "boxPlot" === i.chart.type || "boxPlot" === i.series[e].type, r = 0; r < t[e].data.length; r++)
                        if (void 0 !== t[e].data[r][1] && (Array.isArray(t[e].data[r][1]) && 4 === t[e].data[r][1].length && !s ? this.twoDSeries.push(x.parseNumber(t[e].data[r][1][3])) : t[e].data[r].length >= 5 ? this.twoDSeries.push(x.parseNumber(t[e].data[r][4])) : this.twoDSeries.push(x.parseNumber(t[e].data[r][1])), a.dataFormatXNumeric = !0), "datetime" === i.xaxis.type) {
                            var o = new Date(t[e].data[r][0]);
                            o = new Date(o).getTime(), this.twoDSeriesX.push(o)
                        } else this.twoDSeriesX.push(t[e].data[r][0]);
                    for (var n = 0; n < t[e].data.length; n++) void 0 !== t[e].data[n][2] && (this.threeDSeries.push(t[e].data[n][2]), a.isDataXYZ = !0)
                }
            }, {
                key: "handleFormatXY",
                value: function(t, e) {
                    var i = this.w.config,
                        a = this.w.globals,
                        s = new R(this.ctx),
                        r = e;
                    a.collapsedSeriesIndices.indexOf(e) > -1 && (r = this.activeSeriesIndex);
                    for (var o = 0; o < t[e].data.length; o++) void 0 !== t[e].data[o].y && (Array.isArray(t[e].data[o].y) ? this.twoDSeries.push(x.parseNumber(t[e].data[o].y[t[e].data[o].y.length - 1])) : this.twoDSeries.push(x.parseNumber(t[e].data[o].y))), void 0 !== t[e].data[o].goals && Array.isArray(t[e].data[o].goals) ? (void 0 === this.seriesGoals[e] && (this.seriesGoals[e] = []), this.seriesGoals[e].push(t[e].data[o].goals)) : (void 0 === this.seriesGoals[e] && (this.seriesGoals[e] = []), this.seriesGoals[e].push(null));
                    for (var n = 0; n < t[r].data.length; n++) {
                        var l = "string" == typeof t[r].data[n].x,
                            h = Array.isArray(t[r].data[n].x),
                            c = !h && !!s.isValidDate(t[r].data[n].x.toString());
                        if (l || c)
                            if (l || i.xaxis.convertedCatToNumeric) {
                                var d = a.isBarHorizontal && a.isRangeData;
                                "datetime" !== i.xaxis.type || d ? (this.fallbackToCategory = !0, this.twoDSeriesX.push(t[r].data[n].x)) : this.twoDSeriesX.push(s.parseDate(t[r].data[n].x))
                            } else "datetime" === i.xaxis.type ? this.twoDSeriesX.push(s.parseDate(t[r].data[n].x.toString())) : (a.dataFormatXNumeric = !0, a.isXNumeric = !0, this.twoDSeriesX.push(parseFloat(t[r].data[n].x)));
                        else h ? (this.fallbackToCategory = !0, this.twoDSeriesX.push(t[r].data[n].x)) : (a.isXNumeric = !0, a.dataFormatXNumeric = !0, this.twoDSeriesX.push(t[r].data[n].x))
                    }
                    if (t[e].data[0] && void 0 !== t[e].data[0].z) {
                        for (var g = 0; g < t[e].data.length; g++) this.threeDSeries.push(t[e].data[g].z);
                        a.isDataXYZ = !0
                    }
                }
            }, {
                key: "handleRangeData",
                value: function(t, e) {
                    var i = this.w.globals,
                        a = {};
                    return this.isFormat2DArray() ? a = this.handleRangeDataFormat("array", t, e) : this.isFormatXY() && (a = this.handleRangeDataFormat("xy", t, e)), i.seriesRangeStart.push(a.start), i.seriesRangeEnd.push(a.end), i.seriesRangeBar.push(a.rangeUniques), i.seriesRangeBar.forEach((function(t, e) {
                        t && t.forEach((function(t, e) {
                            t.y.forEach((function(e, i) {
                                for (var a = 0; a < t.y.length; a++)
                                    if (i !== a) {
                                        var s = e.y1,
                                            r = e.y2,
                                            o = t.y[a].y1;
                                        s <= t.y[a].y2 && o <= r && (t.overlaps.indexOf(e.rangeName) < 0 && t.overlaps.push(e.rangeName), t.overlaps.indexOf(t.y[a].rangeName) < 0 && t.overlaps.push(t.y[a].rangeName))
                                    }
                            }))
                        }))
                    })), a
                }
            }, {
                key: "handleCandleStickBoxData",
                value: function(t, e) {
                    var i = this.w.globals,
                        a = {};
                    return this.isFormat2DArray() ? a = this.handleCandleStickBoxDataFormat("array", t, e) : this.isFormatXY() && (a = this.handleCandleStickBoxDataFormat("xy", t, e)), i.seriesCandleO[e] = a.o, i.seriesCandleH[e] = a.h, i.seriesCandleM[e] = a.m, i.seriesCandleL[e] = a.l, i.seriesCandleC[e] = a.c, a
                }
            }, {
                key: "handleRangeDataFormat",
                value: function(t, e, i) {
                    var a = [],
                        s = [],
                        r = e[i].data.filter((function(t, e, i) {
                            return e === i.findIndex((function(e) {
                                return e.x === t.x
                            }))
                        })).map((function(t, e) {
                            return {
                                x: t.x,
                                overlaps: [],
                                y: []
                            }
                        })),
                        o = "Please provide [Start, End] values in valid format. Read more https://apexcharts.com/docs/series/#rangecharts",
                        n = new E(this.ctx).getActiveConfigSeriesIndex();
                    if ("array" === t) {
                        if (2 !== e[n].data[0][1].length) throw new Error(o);
                        for (var l = 0; l < e[i].data.length; l++) a.push(e[i].data[l][1][0]), s.push(e[i].data[l][1][1])
                    } else if ("xy" === t) {
                        if (2 !== e[n].data[0].y.length) throw new Error(o);
                        for (var h = function(t) {
                                var o = x.randomId(),
                                    n = e[i].data[t].x,
                                    l = {
                                        y1: e[i].data[t].y[0],
                                        y2: e[i].data[t].y[1],
                                        rangeName: o
                                    };
                                e[i].data[t].rangeName = o;
                                var h = r.findIndex((function(t) {
                                    return t.x === n
                                }));
                                r[h].y.push(l), a.push(l.y1), s.push(l.y2)
                            }, c = 0; c < e[i].data.length; c++) h(c)
                    }
                    return {
                        start: a,
                        end: s,
                        rangeUniques: r
                    }
                }
            }, {
                key: "handleCandleStickBoxDataFormat",
                value: function(t, e, i) {
                    var a = this.w,
                        s = "boxPlot" === a.config.chart.type || "boxPlot" === a.config.series[i].type,
                        r = [],
                        o = [],
                        n = [],
                        l = [],
                        h = [];
                    if ("array" === t)
                        if (s && 6 === e[i].data[0].length || !s && 5 === e[i].data[0].length)
                            for (var c = 0; c < e[i].data.length; c++) r.push(e[i].data[c][1]), o.push(e[i].data[c][2]), s ? (n.push(e[i].data[c][3]), l.push(e[i].data[c][4]), h.push(e[i].data[c][5])) : (l.push(e[i].data[c][3]), h.push(e[i].data[c][4]));
                        else
                            for (var d = 0; d < e[i].data.length; d++) Array.isArray(e[i].data[d][1]) && (r.push(e[i].data[d][1][0]), o.push(e[i].data[d][1][1]), s ? (n.push(e[i].data[d][1][2]), l.push(e[i].data[d][1][3]), h.push(e[i].data[d][1][4])) : (l.push(e[i].data[d][1][2]), h.push(e[i].data[d][1][3])));
                    else if ("xy" === t)
                        for (var g = 0; g < e[i].data.length; g++) Array.isArray(e[i].data[g].y) && (r.push(e[i].data[g].y[0]), o.push(e[i].data[g].y[1]), s ? (n.push(e[i].data[g].y[2]), l.push(e[i].data[g].y[3]), h.push(e[i].data[g].y[4])) : (l.push(e[i].data[g].y[2]), h.push(e[i].data[g].y[3])));
                    return {
                        o: r,
                        h: o,
                        m: n,
                        l: l,
                        c: h
                    }
                }
            }, {
                key: "parseDataAxisCharts",
                value: function(t) {
                    var e = this,
                        i = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : this.ctx,
                        a = this.w.config,
                        s = this.w.globals,
                        r = new R(i),
                        o = a.labels.length > 0 ? a.labels.slice() : a.xaxis.categories.slice();
                    s.isRangeBar = "rangeBar" === a.chart.type && s.isBarHorizontal, s.hasGroups = "category" === a.xaxis.type && a.xaxis.group.groups.length > 0, s.hasGroups && (s.groups = a.xaxis.group.groups);
                    for (var n = function() {
                            for (var t = 0; t < o.length; t++)
                                if ("string" == typeof o[t]) {
                                    if (!r.isValidDate(o[t])) throw new Error("You have provided invalid Date format. Please provide a valid JavaScript Date");
                                    e.twoDSeriesX.push(r.parseDate(o[t]))
                                } else e.twoDSeriesX.push(o[t])
                        }, l = 0; l < t.length; l++) {
                        if (this.twoDSeries = [], this.twoDSeriesX = [], this.threeDSeries = [], void 0 === t[l].data) return void console.error("It is a possibility that you may have not included 'data' property in series.");
                        if ("rangeBar" !== a.chart.type && "rangeArea" !== a.chart.type && "rangeBar" !== t[l].type && "rangeArea" !== t[l].type || (s.isRangeData = !0, this.handleRangeData(t, l)), this.isMultiFormat()) this.isFormat2DArray() ? this.handleFormat2DArray(t, l) : this.isFormatXY() && this.handleFormatXY(t, l), "candlestick" !== a.chart.type && "candlestick" !== t[l].type && "boxPlot" !== a.chart.type && "boxPlot" !== t[l].type || this.handleCandleStickBoxData(t, l), s.series.push(this.twoDSeries), s.labels.push(this.twoDSeriesX), s.seriesX.push(this.twoDSeriesX), s.seriesGoals = this.seriesGoals, l !== this.activeSeriesIndex || this.fallbackToCategory || (s.isXNumeric = !0);
                        else {
                            "datetime" === a.xaxis.type ? (s.isXNumeric = !0, n(), s.seriesX.push(this.twoDSeriesX)) : "numeric" === a.xaxis.type && (s.isXNumeric = !0, o.length > 0 && (this.twoDSeriesX = o, s.seriesX.push(this.twoDSeriesX))), s.labels.push(this.twoDSeriesX);
                            var h = t[l].data.map((function(t) {
                                return x.parseNumber(t)
                            }));
                            s.series.push(h)
                        }
                        s.seriesZ.push(this.threeDSeries), void 0 !== t[l].name ? s.seriesNames.push(t[l].name) : s.seriesNames.push("سری-" + parseInt(l + 1, 10)), void 0 !== t[l].color ? s.seriesColors.push(t[l].color) : s.seriesColors.push(void 0)
                    }
                    return this.w
                }
            }, {
                key: "parseDataNonAxisCharts",
                value: function(t) {
                    var e = this.w.globals,
                        i = this.w.config;
                    e.series = t.slice(), e.seriesNames = i.labels.slice();
                    for (var a = 0; a < e.series.length; a++) void 0 === e.seriesNames[a] && e.seriesNames.push("سری-" + (a + 1));
                    return this.w
                }
            }, {
                key: "handleExternalLabelsData",
                value: function(t) {
                    var e = this.w.config,
                        i = this.w.globals;
                    if (e.xaxis.categories.length > 0) i.labels = e.xaxis.categories;
                    else if (e.labels.length > 0) i.labels = e.labels.slice();
                    else if (this.fallbackToCategory) {
                        if (i.labels = i.labels[0], i.seriesRangeBar.length && (i.seriesRangeBar.map((function(t) {
                                t.forEach((function(t) {
                                    i.labels.indexOf(t.x) < 0 && t.x && i.labels.push(t.x)
                                }))
                            })), i.labels = i.labels.filter((function(t, e, i) {
                                return i.indexOf(t) === e
                            }))), e.xaxis.convertedCatToNumeric) new D(e).convertCatToNumericXaxis(e, this.ctx, i.seriesX[0]), this._generateExternalLabels(t)
                    } else this._generateExternalLabels(t)
                }
            }, {
                key: "_generateExternalLabels",
                value: function(t) {
                    var e = this.w.globals,
                        i = this.w.config,
                        a = [];
                    if (e.axisCharts) {
                        if (e.series.length > 0)
                            if (this.isFormatXY())
                                for (var s = i.series.map((function(t, e) {
                                        return t.data.filter((function(t, e, i) {
                                            return i.findIndex((function(e) {
                                                return e.x === t.x
                                            })) === e
                                        }))
                                    })), r = s.reduce((function(t, e, i, a) {
                                        return a[t].length > e.length ? t : i
                                    }), 0), o = 0; o < s[r].length; o++) a.push(o + 1);
                            else
                                for (var n = 0; n < e.series[e.maxValsInArrayIndex].length; n++) a.push(n + 1);
                        e.seriesX = [];
                        for (var l = 0; l < t.length; l++) e.seriesX.push(a);
                        e.isXNumeric = !0
                    }
                    if (0 === a.length) {
                        a = e.axisCharts ? [] : e.series.map((function(t, e) {
                            return e + 1
                        }));
                        for (var h = 0; h < t.length; h++) e.seriesX.push(a)
                    }
                    e.labels = a, i.xaxis.convertedCatToNumeric && (e.categoryLabels = a.map((function(t) {
                        return i.xaxis.labels.formatter(t)
                    }))), e.noLabelsProvided = !0
                }
            }, {
                key: "parseData",
                value: function(t) {
                    var e = this.w,
                        i = e.config,
                        a = e.globals;
                    if (this.excludeCollapsedSeriesInYAxis(), this.fallbackToCategory = !1, this.ctx.core.resetGlobals(), this.ctx.core.isMultipleY(), a.axisCharts ? this.parseDataAxisCharts(t) : this.parseDataNonAxisCharts(t), this.coreUtils.getLargestSeries(), "bar" === i.chart.type && i.chart.stacked) {
                        var s = new E(this.ctx);
                        a.series = s.setNullSeriesToZeroValues(a.series)
                    }
                    this.coreUtils.getSeriesTotals(), a.axisCharts && this.coreUtils.getStackedSeriesTotals(), this.coreUtils.getPercentSeries(), a.dataFormatXNumeric || a.isXNumeric && ("numeric" !== i.xaxis.type || 0 !== i.labels.length || 0 !== i.xaxis.categories.length) || this.handleExternalLabelsData(t);
                    for (var r = this.coreUtils.getCategoryLabels(a.labels), o = 0; o < r.length; o++)
                        if (Array.isArray(r[o])) {
                            a.isMultiLineX = !0;
                            break
                        }
                }
            }, {
                key: "excludeCollapsedSeriesInYAxis",
                value: function() {
                    var t = this,
                        e = this.w;
                    e.globals.ignoreYAxisIndexes = e.globals.collapsedSeries.map((function(i, a) {
                        if (t.w.globals.isMultipleYAxis && !e.config.chart.stacked) return i.index
                    }))
                }
            }]), t
        }(),
        V = function() {
            function t(e) {
                a(this, t), this.ctx = e, this.w = e.w, this.tooltipKeyFormat = "dd MMM"
            }
            return r(t, [{
                key: "xLabelFormat",
                value: function(t, e, i, a) {
                    var s = this.w;
                    if ("datetime" === s.config.xaxis.type && void 0 === s.config.xaxis.labels.formatter && void 0 === s.config.tooltip.x.formatter) {
                        var r = new R(this.ctx);
                        return r.formatDate(r.getDate(e), s.config.tooltip.x.format)
                    }
                    return t(e, i, a)
                }
            }, {
                key: "defaultGeneralFormatter",
                value: function(t) {
                    return Array.isArray(t) ? t.map((function(t) {
                        return t
                    })) : t
                }
            }, {
                key: "defaultYFormatter",
                value: function(t, e, i) {
                    var a = this.w;
                    return x.isNumber(t) && (t = 0 !== a.globals.yValueDecimal ? t.toFixed(void 0 !== e.decimalsInFloat ? e.decimalsInFloat : a.globals.yValueDecimal) : a.globals.maxYArr[i] - a.globals.minYArr[i] < 5 ? t.toFixed(1) : t.toFixed(0)), t
                }
            }, {
                key: "setLabelFormatters",
                value: function() {
                    var t = this,
                        e = this.w;
                    return e.globals.xaxisTooltipFormatter = function(e) {
                        return t.defaultGeneralFormatter(e)
                    }, e.globals.ttKeyFormatter = function(e) {
                        return t.defaultGeneralFormatter(e)
                    }, e.globals.ttZFormatter = function(t) {
                        return t
                    }, e.globals.legendFormatter = function(e) {
                        return t.defaultGeneralFormatter(e)
                    }, void 0 !== e.config.xaxis.labels.formatter ? e.globals.xLabelFormatter = e.config.xaxis.labels.formatter : e.globals.xLabelFormatter = function(t) {
                        if (x.isNumber(t)) {
                            if (!e.config.xaxis.convertedCatToNumeric && "numeric" === e.config.xaxis.type) {
                                if (x.isNumber(e.config.xaxis.decimalsInFloat)) return t.toFixed(e.config.xaxis.decimalsInFloat);
                                var i = e.globals.maxX - e.globals.minX;
                                return i > 0 && i < 100 ? t.toFixed(1) : t.toFixed(0)
                            }
                            if (e.globals.isBarHorizontal)
                                if (e.globals.maxY - e.globals.minYArr < 4) return t.toFixed(1);
                            return t.toFixed(0)
                        }
                        return t
                    }, "function" == typeof e.config.tooltip.x.formatter ? e.globals.ttKeyFormatter = e.config.tooltip.x.formatter : e.globals.ttKeyFormatter = e.globals.xLabelFormatter, "function" == typeof e.config.xaxis.tooltip.formatter && (e.globals.xaxisTooltipFormatter = e.config.xaxis.tooltip.formatter), (Array.isArray(e.config.tooltip.y) || void 0 !== e.config.tooltip.y.formatter) && (e.globals.ttVal = e.config.tooltip.y), void 0 !== e.config.tooltip.z.formatter && (e.globals.ttZFormatter = e.config.tooltip.z.formatter), void 0 !== e.config.legend.formatter && (e.globals.legendFormatter = e.config.legend.formatter), e.config.yaxis.forEach((function(i, a) {
                        void 0 !== i.labels.formatter ? e.globals.yLabelFormatters[a] = i.labels.formatter : e.globals.yLabelFormatters[a] = function(s) {
                            return e.globals.xyCharts ? Array.isArray(s) ? s.map((function(e) {
                                return t.defaultYFormatter(e, i, a)
                            })) : t.defaultYFormatter(s, i, a) : s
                        }
                    })), e.globals
                }
            }, {
                key: "heatmapLabelFormatters",
                value: function() {
                    var t = this.w;
                    if ("heatmap" === t.config.chart.type) {
                        t.globals.yAxisScale[0].result = t.globals.seriesNames.slice();
                        var e = t.globals.seriesNames.reduce((function(t, e) {
                            return t.length > e.length ? t : e
                        }), 0);
                        t.globals.yAxisScale[0].niceMax = e, t.globals.yAxisScale[0].niceMin = e
                    }
                }
            }]), t
        }(),
        G = function() {
            function t(e) {
                a(this, t), this.ctx = e, this.w = e.w
            }
            return r(t, [{
                key: "getLabel",
                value: function(t, e, i, a) {
                    var s = arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : [],
                        r = arguments.length > 5 && void 0 !== arguments[5] ? arguments[5] : "12px",
                        o = !(arguments.length > 6 && void 0 !== arguments[6]) || arguments[6],
                        n = this.w,
                        l = void 0 === t[a] ? "" : t[a],
                        h = l,
                        c = n.globals.xLabelFormatter,
                        d = n.config.xaxis.labels.formatter,
                        g = !1,
                        u = new V(this.ctx),
                        f = l;
                    o && (h = u.xLabelFormat(c, l, f, {
                        i: a,
                        dateFormatter: new R(this.ctx).formatDate,
                        w: n
                    }), void 0 !== d && (h = d(l, t[a], {
                        i: a,
                        dateFormatter: new R(this.ctx).formatDate,
                        w: n
                    })));
                    var p = function(t) {
                        var i = null;
                        return e.forEach((function(t) {
                            "month" === t.unit ? i = "year" : "day" === t.unit ? i = "month" : "hour" === t.unit ? i = "day" : "minute" === t.unit && (i = "hour")
                        })), i === t
                    };
                    e.length > 0 ? (g = p(e[a].unit), i = e[a].position, h = e[a].value) : "datetime" === n.config.xaxis.type && void 0 === d && (h = ""), void 0 === h && (h = ""), h = Array.isArray(h) ? h : h.toString();
                    var x = new m(this.ctx),
                        b = {};
                    b = n.globals.rotateXLabels && o ? x.getTextRects(h, parseInt(r, 10), null, "rotate(".concat(n.config.xaxis.labels.rotate, " 0 0)"), !1) : x.getTextRects(h, parseInt(r, 10));
                    var v = !n.config.xaxis.labels.showDuplicates && this.ctx.timeScale;
                    return !Array.isArray(h) && (0 === h.indexOf("NaN") || 0 === h.toLowerCase().indexOf("invalid") || h.toLowerCase().indexOf("infinity") >= 0 || s.indexOf(h) >= 0 && v) && (h = ""), {
                        x: i,
                        text: h,
                        textRect: b,
                        isBold: g
                    }
                }
            }, {
                key: "checkLabelBasedOnTickamount",
                value: function(t, e, i) {
                    var a = this.w,
                        s = a.config.xaxis.tickAmount;
                    return "dataPoints" === s && (s = Math.round(a.globals.gridWidth / 120)), s > i || t % Math.round(i / (s + 1)) == 0 || (e.text = ""), e
                }
            }, {
                key: "checkForOverflowingLabels",
                value: function(t, e, i, a, s) {
                    var r = this.w;
                    if (0 === t && r.globals.skipFirstTimelinelabel && (e.text = ""), t === i - 1 && r.globals.skipLastTimelinelabel && (e.text = ""), r.config.xaxis.labels.hideOverlappingLabels && a.length > 0) {
                        var o = s[s.length - 1];
                        e.x < o.textRect.width / (r.globals.rotateXLabels ? Math.abs(r.config.xaxis.labels.rotate) / 12 : 1.01) + o.x && (e.text = "")
                    }
                    return e
                }
            }, {
                key: "checkForReversedLabels",
                value: function(t, e) {
                    var i = this.w;
                    return i.config.yaxis[t] && i.config.yaxis[t].reversed && e.reverse(), e
                }
            }, {
                key: "isYAxisHidden",
                value: function(t) {
                    var e = this.w,
                        i = new y(this.ctx);
                    return !e.config.yaxis[t].show || !e.config.yaxis[t].showForNullSeries && i.isSeriesNull(t) && -1 === e.globals.collapsedSeriesIndices.indexOf(t)
                }
            }, {
                key: "getYAxisForeColor",
                value: function(t, e) {
                    var i = this.w;
                    return Array.isArray(t) && i.globals.yAxisScale[e] && this.ctx.theme.pushExtraColors(t, i.globals.yAxisScale[e].result.length, !1), t
                }
            }, {
                key: "drawYAxisTicks",
                value: function(t, e, i, a, s, r, o) {
                    var n = this.w,
                        l = new m(this.ctx),
                        h = n.globals.translateY;
                    if (a.show && e > 0) {
                        !0 === n.config.yaxis[s].opposite && (t += a.width);
                        for (var c = e; c >= 0; c--) {
                            var d = h + e / 10 + n.config.yaxis[s].labels.offsetY - 1;
                            n.globals.isBarHorizontal && (d = r * c), "heatmap" === n.config.chart.type && (d += r / 2);
                            var g = l.drawLine(t + i.offsetX - a.width + a.offsetX, d + a.offsetY, t + i.offsetX + a.offsetX, d + a.offsetY, a.color);
                            o.add(g), h += r
                        }
                    }
                }
            }]), t
        }(),
        j = function() {
            function t(e) {
                a(this, t), this.ctx = e, this.w = e.w
            }
            return r(t, [{
                key: "scaleSvgNode",
                value: function(t, e) {
                    var i = parseFloat(t.getAttributeNS(null, "width")),
                        a = parseFloat(t.getAttributeNS(null, "height"));
                    t.setAttributeNS(null, "width", i * e), t.setAttributeNS(null, "height", a * e), t.setAttributeNS(null, "viewBox", "0 0 " + i + " " + a)
                }
            }, {
                key: "fixSvgStringForIe11",
                value: function(t) {
                    if (!x.isIE11()) return t.replace(/&nbsp;/g, "&#160;");
                    var e = 0,
                        i = t.replace(/xmlns="http:\/\/www.w3.org\/2000\/svg"/g, (function(t) {
                            return 2 === ++e ? 'xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:svgjs="http://svgjs.dev"' : t
                        }));
                    return i = (i = i.replace(/xmlns:NS\d+=""/g, "")).replace(/NS\d+:(\w+:\w+=")/g, "$1")
                }
            }, {
                key: "getSvgString",
                value: function(t) {
                    null == t && (t = 1);
                    var e = this.w.globals.dom.Paper.svg();
                    if (1 !== t) {
                        var i = this.w.globals.dom.Paper.node.cloneNode(!0);
                        this.scaleSvgNode(i, t), e = (new XMLSerializer).serializeToString(i)
                    }
                    return this.fixSvgStringForIe11(e)
                }
            }, {
                key: "cleanup",
                value: function() {
                    var t = this.w,
                        e = t.globals.dom.baseEl.getElementsByClassName("apexcharts-xcrosshairs"),
                        i = t.globals.dom.baseEl.getElementsByClassName("apexcharts-ycrosshairs"),
                        a = t.globals.dom.baseEl.querySelectorAll(".apexcharts-zoom-rect, .apexcharts-selection-rect");
                    Array.prototype.forEach.call(a, (function(t) {
                        t.setAttribute("width", 0)
                    })), e && e[0] && (e[0].setAttribute("x", -500), e[0].setAttribute("x1", -500), e[0].setAttribute("x2", -500)), i && i[0] && (i[0].setAttribute("y", -100), i[0].setAttribute("y1", -100), i[0].setAttribute("y2", -100))
                }
            }, {
                key: "svgUrl",
                value: function() {
                    this.cleanup();
                    var t = this.getSvgString(),
                        e = new Blob([t], {
                            type: "image/svg+xml;charset=utf-8"
                        });
                    return URL.createObjectURL(e)
                }
            }, {
                key: "dataURI",
                value: function(t) {
                    var e = this;
                    return new Promise((function(i) {
                        var a = e.w,
                            s = t ? t.scale || t.width / a.globals.svgWidth : 1;
                        e.cleanup();
                        var r = document.createElement("canvas");
                        r.width = a.globals.svgWidth * s, r.height = parseInt(a.globals.dom.elWrap.style.height, 10) * s;
                        var o = "transparent" === a.config.chart.background ? "#fff" : a.config.chart.background,
                            n = r.getContext("2d");
                        n.fillStyle = o, n.fillRect(0, 0, r.width * s, r.height * s);
                        var l = e.getSvgString(s);
                        if (window.canvg && x.isIE11()) {
                            var h = window.canvg.Canvg.fromString(n, l, {
                                ignoreClear: !0,
                                ignoreDimensions: !0
                            });
                            h.start();
                            var c = r.msToBlob();
                            h.stop(), i({
                                blob: c
                            })
                        } else {
                            var d = "data:image/svg+xml," + encodeURIComponent(l),
                                g = new Image;
                            g.crossOrigin = "anonymous", g.onload = function() {
                                if (n.drawImage(g, 0, 0), r.msToBlob) {
                                    var t = r.msToBlob();
                                    i({
                                        blob: t
                                    })
                                } else {
                                    var e = r.toDataURL("image/png");
                                    i({
                                        imgURI: e
                                    })
                                }
                            }, g.src = d
                        }
                    }))
                }
            }, {
                key: "exportToSVG",
                value: function() {
                    this.triggerDownload(this.svgUrl(), this.w.config.chart.toolbar.export.svg.filename, ".svg")
                }
            }, {
                key: "exportToPng",
                value: function() {
                    var t = this;
                    this.dataURI().then((function(e) {
                        var i = e.imgURI,
                            a = e.blob;
                        a ? navigator.msSaveOrOpenBlob(a, t.w.globals.chartID + ".png") : t.triggerDownload(i, t.w.config.chart.toolbar.export.png.filename, ".png")
                    }))
                }
            }, {
                key: "exportToCSV",
                value: function(t) {
                    var e = this,
                        i = t.series,
                        a = t.columnDelimiter,
                        s = void 0 === a ? "," : a,
                        r = t.lineDelimiter,
                        o = void 0 === r ? "\n" : r,
                        n = this.w;
                    i || (i = n.config.series);
                    var l = [],
                        h = [],
                        c = "",
                        d = new B(this.ctx),
                        g = new G(this.ctx),
                        u = function(t) {
                            var i = "";
                            if (n.globals.axisCharts) {
                                if ("category" === n.config.xaxis.type || n.config.xaxis.convertedCatToNumeric)
                                    if (n.globals.isBarHorizontal) {
                                        var a = n.globals.yLabelFormatters[0],
                                            r = new E(e.ctx).getActiveConfigSeriesIndex();
                                        i = a(n.globals.labels[t], {
                                            seriesIndex: r,
                                            dataPointIndex: t,
                                            w: n
                                        })
                                    } else i = g.getLabel(n.globals.labels, n.globals.timescaleLabels, 0, t).text;
                                "datetime" === n.config.xaxis.type && (n.config.xaxis.categories.length ? i = n.config.xaxis.categories[t] : n.config.labels.length && (i = n.config.labels[t]))
                            } else i = n.config.labels[t];
                            return Array.isArray(i) && (i = i.join(" ")), x.isNumber(i) ? i : i.split(s).join("")
                        };
                    l.push(n.config.chart.toolbar.export.csv.headerCategory), i.map((function(t, e) {
                        var i = t.name ? t.name : "سری-".concat(e);
                        n.globals.axisCharts && l.push(i.split(s).join("") ? i.split(s).join("") : "سری-".concat(e))
                    })), n.globals.axisCharts || (l.push(n.config.chart.toolbar.export.csv.headerValue), h.push(l.join(s))), i.map((function(t, e) {
                        n.globals.axisCharts ? function(t, e) {
                            if (l.length && 0 === e && h.push(l.join(s)), t.data && t.data.length)
                                for (var a = 0; a < t.data.length; a++) {
                                    l = [];
                                    var r = u(a);
                                    if (r || (d.isFormatXY() ? r = i[e].data[a].x : d.isFormat2DArray() && (r = i[e].data[a] ? i[e].data[a][0] : "")), 0 === e) {
                                        l.push((c = r, "datetime" === n.config.xaxis.type && String(c).length >= 10 ? n.config.chart.toolbar.export.csv.dateFormatter(r) : x.isNumber(r) ? r : r.split(s).join("")));
                                        for (var o = 0; o < n.globals.series.length; o++) d.isFormatXY() ? l.push(i[o].data[a].y) : l.push(n.globals.series[o][a])
                                    }("candlestick" === n.config.chart.type || t.type && "candlestick" === t.type) && (l.pop(), l.push(n.globals.seriesCandleO[e][a]), l.push(n.globals.seriesCandleH[e][a]), l.push(n.globals.seriesCandleL[e][a]), l.push(n.globals.seriesCandleC[e][a])), ("boxPlot" === n.config.chart.type || t.type && "boxPlot" === t.type) && (l.pop(), l.push(n.globals.seriesCandleO[e][a]), l.push(n.globals.seriesCandleH[e][a]), l.push(n.globals.seriesCandleM[e][a]), l.push(n.globals.seriesCandleL[e][a]), l.push(n.globals.seriesCandleC[e][a])), "rangeBar" === n.config.chart.type && (l.pop(), l.push(n.globals.seriesRangeStart[e][a]), l.push(n.globals.seriesRangeEnd[e][a])), l.length && h.push(l.join(s))
                                }
                            var c
                        }(t, e) : ((l = []).push(n.globals.labels[e].split(s).join("")), l.push(n.globals.series[e]), h.push(l.join(s)))
                    })), c += h.join(o), this.triggerDownload("data:text/csv; charset=utf-8," + encodeURIComponent("\ufeff" + c), n.config.chart.toolbar.export.csv.filename, ".csv")
                }
            }, {
                key: "triggerDownload",
                value: function(t, e, i) {
                    var a = document.createElement("a");
                    a.href = t, a.download = (e || this.w.globals.chartID) + i, document.body.appendChild(a), a.click(), document.body.removeChild(a)
                }
            }]), t
        }(),
        _ = function() {
            function t(e) {
                a(this, t), this.ctx = e, this.w = e.w;
                var i = this.w;
                this.axesUtils = new G(e), this.xaxisLabels = i.globals.labels.slice(), i.globals.timescaleLabels.length > 0 && !i.globals.isBarHorizontal && (this.xaxisLabels = i.globals.timescaleLabels.slice()), i.config.xaxis.overwriteCategories && (this.xaxisLabels = i.config.xaxis.overwriteCategories), this.drawnLabels = [], this.drawnLabelsRects = [], "top" === i.config.xaxis.position ? this.offY = 0 : this.offY = i.globals.gridHeight + 1, this.offY = this.offY + i.config.xaxis.axisBorder.offsetY, this.isCategoryBarHorizontal = "bar" === i.config.chart.type && i.config.plotOptions.bar.horizontal, this.xaxisFontSize = i.config.xaxis.labels.style.fontSize, this.xaxisFontFamily = i.config.xaxis.labels.style.fontFamily, this.xaxisForeColors = i.config.xaxis.labels.style.colors, this.xaxisBorderWidth = i.config.xaxis.axisBorder.width, this.isCategoryBarHorizontal && (this.xaxisBorderWidth = i.config.yaxis[0].axisBorder.width.toString()), this.xaxisBorderWidth.indexOf("%") > -1 ? this.xaxisBorderWidth = i.globals.gridWidth * parseInt(this.xaxisBorderWidth, 10) / 100 : this.xaxisBorderWidth = parseInt(this.xaxisBorderWidth, 10), this.xaxisBorderHeight = i.config.xaxis.axisBorder.height, this.yaxis = i.config.yaxis[0]
            }
            return r(t, [{
                key: "drawXaxis",
                value: function() {
                    var t = this.w,
                        e = new m(this.ctx),
                        i = e.group({
                            class: "apexcharts-xaxis",
                            transform: "translate(".concat(t.config.xaxis.offsetX, ", ").concat(t.config.xaxis.offsetY, ")")
                        }),
                        a = e.group({
                            class: "apexcharts-xaxis-texts-g",
                            transform: "translate(".concat(t.globals.translateXAxisX, ", ").concat(t.globals.translateXAxisY, ")")
                        });
                    i.add(a);
                    for (var s = [], r = 0; r < this.xaxisLabels.length; r++) s.push(this.xaxisLabels[r]);
                    if (this.drawXAxisLabelAndGroup(!0, e, a, s, t.globals.isXNumeric, (function(t, e) {
                            return e
                        })), t.globals.hasGroups) {
                        var o = t.globals.groups;
                        s = [];
                        for (var n = 0; n < o.length; n++) s.push(o[n].title);
                        var l = {};
                        t.config.xaxis.group.style && (l.xaxisFontSize = t.config.xaxis.group.style.fontSize, l.xaxisFontFamily = t.config.xaxis.group.style.fontFamily, l.xaxisForeColors = t.config.xaxis.group.style.colors, l.fontWeight = t.config.xaxis.group.style.fontWeight, l.cssClass = t.config.xaxis.group.style.cssClass), this.drawXAxisLabelAndGroup(!1, e, a, s, !1, (function(t, e) {
                            return o[t].cols * e
                        }), l)
                    }
                    if (void 0 !== t.config.xaxis.title.text) {
                        var h = e.group({
                                class: "apexcharts-xaxis-title"
                            }),
                            c = e.drawText({
                                x: t.globals.gridWidth / 2 + t.config.xaxis.title.offsetX,
                                y: this.offY + parseFloat(this.xaxisFontSize) + t.globals.xAxisLabelsHeight + t.config.xaxis.title.offsetY,
                                text: t.config.xaxis.title.text,
                                textAnchor: "middle",
                                fontSize: t.config.xaxis.title.style.fontSize,
                                fontFamily: t.config.xaxis.title.style.fontFamily,
                                fontWeight: t.config.xaxis.title.style.fontWeight,
                                foreColor: t.config.xaxis.title.style.color,
                                cssClass: "apexcharts-xaxis-title-text " + t.config.xaxis.title.style.cssClass
                            });
                        h.add(c), i.add(h)
                    }
                    if (t.config.xaxis.axisBorder.show) {
                        var d = t.globals.barPadForNumericAxis,
                            g = e.drawLine(t.globals.padHorizontal + t.config.xaxis.axisBorder.offsetX - d, this.offY, this.xaxisBorderWidth + d, this.offY, t.config.xaxis.axisBorder.color, 0, this.xaxisBorderHeight);
                        i.add(g)
                    }
                    return i
                }
            }, {
                key: "drawXAxisLabelAndGroup",
                value: function(t, e, i, a, s, r) {
                    var o, n = this,
                        l = arguments.length > 6 && void 0 !== arguments[6] ? arguments[6] : {},
                        h = [],
                        c = [],
                        d = this.w,
                        g = l.xaxisFontSize || this.xaxisFontSize,
                        u = l.xaxisFontFamily || this.xaxisFontFamily,
                        f = l.xaxisForeColors || this.xaxisForeColors,
                        p = l.fontWeight || d.config.xaxis.labels.style.fontWeight,
                        x = l.cssClass || d.config.xaxis.labels.style.cssClass,
                        b = d.globals.padHorizontal,
                        v = a.length,
                        m = "category" === d.config.xaxis.type ? d.globals.dataPoints : v;
                    if (s) {
                        var y = m > 1 ? m - 1 : m;
                        o = d.globals.gridWidth / y, b = b + r(0, o) / 2 + d.config.xaxis.labels.offsetX
                    } else o = d.globals.gridWidth / m, b = b + r(0, o) + d.config.xaxis.labels.offsetX;
                    for (var w = function(s) {
                            var l = b - r(s, o) / 2 + d.config.xaxis.labels.offsetX;
                            0 === s && 1 === v && o / 2 === b && 1 === m && (l = d.globals.gridWidth / 2);
                            var y = n.axesUtils.getLabel(a, d.globals.timescaleLabels, l, s, h, g, t),
                                w = 28;
                            d.globals.rotateXLabels && t && (w = 22), t || (w = w + parseFloat(g) + (d.globals.xAxisLabelsHeight - d.globals.xAxisGroupLabelsHeight) + (d.globals.rotateXLabels ? 10 : 0)), y = void 0 !== d.config.xaxis.tickAmount && "dataPoints" !== d.config.xaxis.tickAmount && "datetime" !== d.config.xaxis.type ? n.axesUtils.checkLabelBasedOnTickamount(s, y, v) : n.axesUtils.checkForOverflowingLabels(s, y, v, h, c);
                            if (t && y.text && d.globals.xaxisLabelsCount++, d.config.xaxis.labels.show) {
                                var k = e.drawText({
                                    x: y.x,
                                    y: n.offY + d.config.xaxis.labels.offsetY + w - ("top" === d.config.xaxis.position ? d.globals.xAxisHeight + d.config.xaxis.axisTicks.height - 2 : 0),
                                    text: y.text,
                                    textAnchor: "middle",
                                    fontWeight: y.isBold ? 600 : p,
                                    fontSize: g,
                                    fontFamily: u,
                                    foreColor: Array.isArray(f) ? t && d.config.xaxis.convertedCatToNumeric ? f[d.globals.minX + s - 1] : f[s] : f,
                                    isPlainText: !1,
                                    cssClass: (t ? "apexcharts-xaxis-label " : "apexcharts-xaxis-group-label ") + x
                                });
                                if (i.add(k), t) {
                                    var A = document.createElementNS(d.globals.SVGNS, "title");
                                    A.textContent = Array.isArray(y.text) ? y.text.join(" ") : y.text, k.node.appendChild(A), "" !== y.text && (h.push(y.text), c.push(y))
                                }
                            }
                            s < v - 1 && (b += r(s + 1, o))
                        }, k = 0; k <= v - 1; k++) w(k)
                }
            }, {
                key: "drawXaxisInversed",
                value: function(t) {
                    var e, i, a = this,
                        s = this.w,
                        r = new m(this.ctx),
                        o = s.config.yaxis[0].opposite ? s.globals.translateYAxisX[t] : 0,
                        n = r.group({
                            class: "apexcharts-yaxis apexcharts-xaxis-inversed",
                            rel: t
                        }),
                        l = r.group({
                            class: "apexcharts-yaxis-texts-g apexcharts-xaxis-inversed-texts-g",
                            transform: "translate(" + o + ", 0)"
                        });
                    n.add(l);
                    var h = [];
                    if (s.config.yaxis[t].show)
                        for (var c = 0; c < this.xaxisLabels.length; c++) h.push(this.xaxisLabels[c]);
                    e = s.globals.gridHeight / h.length, i = -e / 2.2;
                    var d = s.globals.yLabelFormatters[0],
                        g = s.config.yaxis[0].labels;
                    if (g.show)
                        for (var u = function(o) {
                                var n = void 0 === h[o] ? "" : h[o];
                                n = d(n, {
                                    seriesIndex: t,
                                    dataPointIndex: o,
                                    w: s
                                });
                                var c = a.axesUtils.getYAxisForeColor(g.style.colors, t),
                                    u = 0;
                                Array.isArray(n) && (u = n.length / 2 * parseInt(g.style.fontSize, 10));
                                var f = r.drawText({
                                    x: g.offsetX - 15,
                                    y: i + e + g.offsetY - u,
                                    text: n,
                                    textAnchor: a.yaxis.opposite ? "start" : "end",
                                    foreColor: Array.isArray(c) ? c[o] : c,
                                    fontSize: g.style.fontSize,
                                    fontFamily: g.style.fontFamily,
                                    fontWeight: g.style.fontWeight,
                                    isPlainText: !1,
                                    cssClass: "apexcharts-yaxis-label " + g.style.cssClass,
                                    maxWidth: g.maxWidth
                                });
                                l.add(f);
                                var p = document.createElementNS(s.globals.SVGNS, "title");
                                if (p.textContent = Array.isArray(n) ? n.join(" ") : n, f.node.appendChild(p), 0 !== s.config.yaxis[t].labels.rotate) {
                                    var x = r.rotateAroundCenter(f.node);
                                    f.node.setAttribute("transform", "rotate(".concat(s.config.yaxis[t].labels.rotate, " 0 ").concat(x.y, ")"))
                                }
                                i += e
                            }, f = 0; f <= h.length - 1; f++) u(f);
                    if (void 0 !== s.config.yaxis[0].title.text) {
                        var p = r.group({
                                class: "apexcharts-yaxis-title apexcharts-xaxis-title-inversed",
                                transform: "translate(" + o + ", 0)"
                            }),
                            x = r.drawText({
                                x: 0,
                                y: s.globals.gridHeight / 2,
                                text: s.config.yaxis[0].title.text,
                                textAnchor: "middle",
                                foreColor: s.config.yaxis[0].title.style.color,
                                fontSize: s.config.yaxis[0].title.style.fontSize,
                                fontWeight: s.config.yaxis[0].title.style.fontWeight,
                                fontFamily: s.config.yaxis[0].title.style.fontFamily,
                                cssClass: "apexcharts-yaxis-title-text " + s.config.yaxis[0].title.style.cssClass
                            });
                        p.add(x), n.add(p)
                    }
                    var b = 0;
                    this.isCategoryBarHorizontal && s.config.yaxis[0].opposite && (b = s.globals.gridWidth);
                    var v = s.config.xaxis.axisBorder;
                    if (v.show) {
                        var y = r.drawLine(s.globals.padHorizontal + v.offsetX + b, 1 + v.offsetY, s.globals.padHorizontal + v.offsetX + b, s.globals.gridHeight + v.offsetY, v.color, 0);
                        n.add(y)
                    }
                    return s.config.yaxis[0].axisTicks.show && this.axesUtils.drawYAxisTicks(b, h.length, s.config.yaxis[0].axisBorder, s.config.yaxis[0].axisTicks, 0, e, n), n
                }
            }, {
                key: "drawXaxisTicks",
                value: function(t, e, i) {
                    var a = this.w,
                        s = t;
                    if (!(t < 0 || t - 2 > a.globals.gridWidth)) {
                        var r = this.offY + a.config.xaxis.axisTicks.offsetY;
                        if (e = e + r + a.config.xaxis.axisTicks.height, "top" === a.config.xaxis.position && (e = r - a.config.xaxis.axisTicks.height), a.config.xaxis.axisTicks.show) {
                            var o = new m(this.ctx).drawLine(t + a.config.xaxis.axisTicks.offsetX, r + a.config.xaxis.offsetY, s + a.config.xaxis.axisTicks.offsetX, e + a.config.xaxis.offsetY, a.config.xaxis.axisTicks.color);
                            i.add(o), o.node.classList.add("apexcharts-xaxis-tick")
                        }
                    }
                }
            }, {
                key: "getXAxisTicksPositions",
                value: function() {
                    var t = this.w,
                        e = [],
                        i = this.xaxisLabels.length,
                        a = t.globals.padHorizontal;
                    if (t.globals.timescaleLabels.length > 0)
                        for (var s = 0; s < i; s++) a = this.xaxisLabels[s].position, e.push(a);
                    else
                        for (var r = i, o = 0; o < r; o++) {
                            var n = r;
                            t.globals.isXNumeric && "bar" !== t.config.chart.type && (n -= 1), a += t.globals.gridWidth / n, e.push(a)
                        }
                    return e
                }
            }, {
                key: "xAxisLabelCorrections",
                value: function() {
                    var t = this.w,
                        e = new m(this.ctx),
                        i = t.globals.dom.baseEl.querySelector(".apexcharts-xaxis-texts-g"),
                        a = t.globals.dom.baseEl.querySelectorAll(".apexcharts-xaxis-texts-g text:not(.apexcharts-xaxis-group-label)"),
                        s = t.globals.dom.baseEl.querySelectorAll(".apexcharts-yaxis-inversed text"),
                        r = t.globals.dom.baseEl.querySelectorAll(".apexcharts-xaxis-inversed-texts-g text tspan");
                    if (t.globals.rotateXLabels || t.config.xaxis.labels.rotateAlways)
                        for (var o = 0; o < a.length; o++) {
                            var n = e.rotateAroundCenter(a[o]);
                            n.y = n.y - 1, n.x = n.x + 1, a[o].setAttribute("transform", "rotate(".concat(t.config.xaxis.labels.rotate, " ").concat(n.x, " ").concat(n.y, ")")), a[o].setAttribute("text-anchor", "end");
                            i.setAttribute("transform", "translate(0, ".concat(-10, ")"));
                            var l = a[o].childNodes;
                            t.config.xaxis.labels.trim && Array.prototype.forEach.call(l, (function(i) {
                                e.placeTextWithEllipsis(i, i.textContent, t.globals.xAxisLabelsHeight - ("bottom" === t.config.legend.position ? 20 : 10))
                            }))
                        } else ! function() {
                            for (var i = t.globals.gridWidth / (t.globals.labels.length + 1), s = 0; s < a.length; s++) {
                                var r = a[s].childNodes;
                                t.config.xaxis.labels.trim && "datetime" !== t.config.xaxis.type && Array.prototype.forEach.call(r, (function(t) {
                                    e.placeTextWithEllipsis(t, t.textContent, i)
                                }))
                            }
                        }();
                    if (s.length > 0) {
                        var h = s[s.length - 1].getBBox(),
                            c = s[0].getBBox();
                        h.x < -20 && s[s.length - 1].parentNode.removeChild(s[s.length - 1]), c.x + c.width > t.globals.gridWidth && !t.globals.isBarHorizontal && s[0].parentNode.removeChild(s[0]);
                        for (var d = 0; d < r.length; d++) e.placeTextWithEllipsis(r[d], r[d].textContent, t.config.yaxis[0].labels.maxWidth - (t.config.yaxis[0].title.text ? 2 * parseFloat(t.config.yaxis[0].title.style.fontSize) : 0) - 15)
                    }
                }
            }]), t
        }(),
        U = function() {
            function t(e) {
                a(this, t), this.ctx = e, this.w = e.w;
                var i = this.w;
                this.xaxisLabels = i.globals.labels.slice(), this.axesUtils = new G(e), this.isRangeBar = i.globals.seriesRangeBar.length, i.globals.timescaleLabels.length > 0 && (this.xaxisLabels = i.globals.timescaleLabels.slice())
            }
            return r(t, [{
                key: "drawGridArea",
                value: function() {
                    var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : null,
                        e = this.w,
                        i = new m(this.ctx);
                    null === t && (t = i.group({
                        class: "apexcharts-grid"
                    }));
                    var a = i.drawLine(e.globals.padHorizontal, 1, e.globals.padHorizontal, e.globals.gridHeight, "transparent"),
                        s = i.drawLine(e.globals.padHorizontal, e.globals.gridHeight, e.globals.gridWidth, e.globals.gridHeight, "transparent");
                    return t.add(s), t.add(a), t
                }
            }, {
                key: "drawGrid",
                value: function() {
                    var t = null;
                    return this.w.globals.axisCharts && (t = this.renderGrid(), this.drawGridArea(t.el)), t
                }
            }, {
                key: "createGridMask",
                value: function() {
                    var t = this.w,
                        e = t.globals,
                        i = new m(this.ctx),
                        a = Array.isArray(t.config.stroke.width) ? 0 : t.config.stroke.width;
                    if (Array.isArray(t.config.stroke.width)) {
                        var s = 0;
                        t.config.stroke.width.forEach((function(t) {
                            s = Math.max(s, t)
                        })), a = s
                    }
                    e.dom.elGridRectMask = document.createElementNS(e.SVGNS, "clipPath"), e.dom.elGridRectMask.setAttribute("id", "gridRectMask".concat(e.cuid)), e.dom.elGridRectMarkerMask = document.createElementNS(e.SVGNS, "clipPath"), e.dom.elGridRectMarkerMask.setAttribute("id", "gridRectMarkerMask".concat(e.cuid)), e.dom.elForecastMask = document.createElementNS(e.SVGNS, "clipPath"), e.dom.elForecastMask.setAttribute("id", "forecastMask".concat(e.cuid)), e.dom.elNonForecastMask = document.createElementNS(e.SVGNS, "clipPath"), e.dom.elNonForecastMask.setAttribute("id", "nonForecastMask".concat(e.cuid));
                    var r = t.config.chart.type,
                        o = 0,
                        n = 0;
                    ("bar" === r || "rangeBar" === r || "candlestick" === r || "boxPlot" === r || t.globals.comboBarCount > 0) && t.globals.isXNumeric && !t.globals.isBarHorizontal && (o = t.config.grid.padding.left, n = t.config.grid.padding.right, e.barPadForNumericAxis > o && (o = e.barPadForNumericAxis, n = e.barPadForNumericAxis)), e.dom.elGridRect = i.drawRect(-a / 2 - o - 2, -a / 2, e.gridWidth + a + n + o + 4, e.gridHeight + a, 0, "#fff");
                    var l = t.globals.markers.largestSize + 1;
                    e.dom.elGridRectMarker = i.drawRect(2 * -l, 2 * -l, e.gridWidth + 4 * l, e.gridHeight + 4 * l, 0, "#fff"), e.dom.elGridRectMask.appendChild(e.dom.elGridRect.node), e.dom.elGridRectMarkerMask.appendChild(e.dom.elGridRectMarker.node);
                    var h = e.dom.baseEl.querySelector("defs");
                    h.appendChild(e.dom.elGridRectMask), h.appendChild(e.dom.elForecastMask), h.appendChild(e.dom.elNonForecastMask), h.appendChild(e.dom.elGridRectMarkerMask)
                }
            }, {
                key: "_drawGridLines",
                value: function(t) {
                    var e = t.i,
                        i = t.x1,
                        a = t.y1,
                        s = t.x2,
                        r = t.y2,
                        o = t.xCount,
                        n = t.parent,
                        l = this.w;
                    if (!(0 === e && l.globals.skipFirstTimelinelabel || e === o - 1 && l.globals.skipLastTimelinelabel && !l.config.xaxis.labels.formatter || "radar" === l.config.chart.type)) {
                        l.config.grid.xaxis.lines.show && this._drawGridLine({
                            x1: i,
                            y1: a,
                            x2: s,
                            y2: r,
                            parent: n
                        });
                        var h = 0;
                        if (l.globals.hasGroups && "between" === l.config.xaxis.tickPlacement) {
                            var c = l.globals.groups;
                            if (c) {
                                for (var d = 0, g = 0; d < e && g < c.length; g++) d += c[g].cols;
                                d === e && (h = .6 * l.globals.xAxisLabelsHeight)
                            }
                        }
                        new _(this.ctx).drawXaxisTicks(i, h, this.elg)
                    }
                }
            }, {
                key: "_drawGridLine",
                value: function(t) {
                    var e = t.x1,
                        i = t.y1,
                        a = t.x2,
                        s = t.y2,
                        r = t.parent,
                        o = this.w,
                        n = r.node.classList.contains("apexcharts-gridlines-horizontal"),
                        l = o.config.grid.strokeDashArray,
                        h = o.globals.barPadForNumericAxis,
                        c = new m(this).drawLine(e - (n ? h : 0), i, a + (n ? h : 0), s, o.config.grid.borderColor, l);
                    c.node.classList.add("apexcharts-gridline"), r.add(c)
                }
            }, {
                key: "_drawGridBandRect",
                value: function(t) {
                    var e = t.c,
                        i = t.x1,
                        a = t.y1,
                        s = t.x2,
                        r = t.y2,
                        o = t.type,
                        n = this.w,
                        l = new m(this.ctx),
                        h = n.globals.barPadForNumericAxis;
                    if ("column" !== o || "datetime" !== n.config.xaxis.type) {
                        var c = n.config.grid[o].colors[e],
                            d = l.drawRect(i - ("row" === o ? h : 0), a, s + ("row" === o ? 2 * h : 0), r, 0, c, n.config.grid[o].opacity);
                        this.elg.add(d), d.attr("clip-path", "url(#gridRectMask".concat(n.globals.cuid, ")")), d.node.classList.add("apexcharts-grid-".concat(o))
                    }
                }
            }, {
                key: "_drawXYLines",
                value: function(t) {
                    var e = this,
                        i = t.xCount,
                        a = t.tickAmount,
                        s = this.w;
                    if (s.config.grid.xaxis.lines.show || s.config.xaxis.axisTicks.show) {
                        var r, o = s.globals.padHorizontal,
                            n = s.globals.gridHeight;
                        s.globals.timescaleLabels.length ? function(t) {
                            for (var a = t.xC, s = t.x1, r = t.y1, o = t.x2, n = t.y2, l = 0; l < a; l++) s = e.xaxisLabels[l].position, o = e.xaxisLabels[l].position, e._drawGridLines({
                                i: l,
                                x1: s,
                                y1: r,
                                x2: o,
                                y2: n,
                                xCount: i,
                                parent: e.elgridLinesV
                            })
                        }({
                            xC: i,
                            x1: o,
                            y1: 0,
                            x2: r,
                            y2: n
                        }) : (s.globals.isXNumeric && (i = s.globals.xAxisScale.result.length), s.config.xaxis.convertedCatToNumeric && (i = s.globals.xaxisLabelsCount), function(t) {
                            var a = t.xC,
                                r = t.x1,
                                o = t.y1,
                                n = t.x2,
                                l = t.y2;
                            if (void 0 !== s.config.xaxis.tickAmount && "dataPoints" !== s.config.xaxis.tickAmount && "on" === s.config.xaxis.tickPlacement) s.globals.dom.baseEl.querySelectorAll(".apexcharts-text.apexcharts-xaxis-label tspan:not(:empty)").forEach((function(t, a) {
                                var s = t.getBBox();
                                e._drawGridLines({
                                    i: a,
                                    x1: s.x + s.width / 2,
                                    y1: o,
                                    x2: s.x + s.width / 2,
                                    y2: l,
                                    xCount: i,
                                    parent: e.elgridLinesV
                                })
                            }));
                            else
                                for (var h = 0; h < a + (s.globals.isXNumeric ? 0 : 1); h++) 0 === h && 1 === a && 1 === s.globals.dataPoints && (n = r = s.globals.gridWidth / 2), e._drawGridLines({
                                    i: h,
                                    x1: r,
                                    y1: o,
                                    x2: n,
                                    y2: l,
                                    xCount: i,
                                    parent: e.elgridLinesV
                                }), n = r += s.globals.gridWidth / (s.globals.isXNumeric ? a - 1 : a)
                        }({
                            xC: i,
                            x1: o,
                            y1: 0,
                            x2: r,
                            y2: n
                        }))
                    }
                    if (s.config.grid.yaxis.lines.show) {
                        var l = 0,
                            h = 0,
                            c = s.globals.gridWidth,
                            d = a + 1;
                        this.isRangeBar && (d = s.globals.labels.length);
                        for (var g = 0; g < d + (this.isRangeBar ? 1 : 0); g++) this._drawGridLine({
                            x1: 0,
                            y1: l,
                            x2: c,
                            y2: h,
                            parent: this.elgridLinesH
                        }), h = l += s.globals.gridHeight / (this.isRangeBar ? d : a)
                    }
                }
            }, {
                key: "_drawInvertedXYLines",
                value: function(t) {
                    var e = t.xCount,
                        i = this.w;
                    if (i.config.grid.xaxis.lines.show || i.config.xaxis.axisTicks.show)
                        for (var a, s = i.globals.padHorizontal, r = i.globals.gridHeight, o = 0; o < e + 1; o++) {
                            i.config.grid.xaxis.lines.show && this._drawGridLine({
                                x1: s,
                                y1: 0,
                                x2: a,
                                y2: r,
                                parent: this.elgridLinesV
                            }), new _(this.ctx).drawXaxisTicks(s, 0, this.elg), a = s = s + i.globals.gridWidth / e + .3
                        }
                    if (i.config.grid.yaxis.lines.show)
                        for (var n = 0, l = 0, h = i.globals.gridWidth, c = 0; c < i.globals.dataPoints + 1; c++) this._drawGridLine({
                            x1: 0,
                            y1: n,
                            x2: h,
                            y2: l,
                            parent: this.elgridLinesH
                        }), l = n += i.globals.gridHeight / i.globals.dataPoints
                }
            }, {
                key: "renderGrid",
                value: function() {
                    var t = this.w,
                        e = new m(this.ctx);
                    this.elg = e.group({
                        class: "apexcharts-grid"
                    }), this.elgridLinesH = e.group({
                        class: "apexcharts-gridlines-horizontal"
                    }), this.elgridLinesV = e.group({
                        class: "apexcharts-gridlines-vertical"
                    }), this.elg.add(this.elgridLinesH), this.elg.add(this.elgridLinesV), t.config.grid.show || (this.elgridLinesV.hide(), this.elgridLinesH.hide());
                    for (var i, a = t.globals.yAxisScale.length ? t.globals.yAxisScale[0].result.length - 1 : 5, s = 0; s < t.globals.series.length && (void 0 !== t.globals.yAxisScale[s] && (a = t.globals.yAxisScale[s].result.length - 1), !(a > 2)); s++);
                    return !t.globals.isBarHorizontal || this.isRangeBar ? (i = this.xaxisLabels.length, this.isRangeBar && (a = t.globals.labels.length, t.config.xaxis.tickAmount && t.config.xaxis.labels.formatter && (i = t.config.xaxis.tickAmount)), this._drawXYLines({
                        xCount: i,
                        tickAmount: a
                    })) : (i = a, a = t.globals.xTickAmount, this._drawInvertedXYLines({
                        xCount: i,
                        tickAmount: a
                    })), this.drawGridBands(i, a), {
                        el: this.elg,
                        xAxisTickWidth: t.globals.gridWidth / i
                    }
                }
            }, {
                key: "drawGridBands",
                value: function(t, e) {
                    var i = this.w;
                    if (void 0 !== i.config.grid.row.colors && i.config.grid.row.colors.length > 0)
                        for (var a = 0, s = i.globals.gridHeight / e, r = i.globals.gridWidth, o = 0, n = 0; o < e; o++, n++) n >= i.config.grid.row.colors.length && (n = 0), this._drawGridBandRect({
                            c: n,
                            x1: 0,
                            y1: a,
                            x2: r,
                            y2: s,
                            type: "row"
                        }), a += i.globals.gridHeight / e;
                    if (void 0 !== i.config.grid.column.colors && i.config.grid.column.colors.length > 0)
                        for (var l = i.globals.isBarHorizontal || "category" !== i.config.xaxis.type && !i.config.xaxis.convertedCatToNumeric ? t : t - 1, h = i.globals.padHorizontal, c = i.globals.padHorizontal + i.globals.gridWidth / l, d = i.globals.gridHeight, g = 0, u = 0; g < t; g++, u++) u >= i.config.grid.column.colors.length && (u = 0), this._drawGridBandRect({
                            c: u,
                            x1: h,
                            y1: 0,
                            x2: c,
                            y2: d,
                            type: "column"
                        }), h += i.globals.gridWidth / l
                }
            }]), t
        }(),
        q = function() {
            function t(e) {
                a(this, t), this.ctx = e, this.w = e.w
            }
            return r(t, [{
                key: "niceScale",
                value: function(t, e) {
                    var i = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 10,
                        a = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : 0,
                        s = arguments.length > 4 ? arguments[4] : void 0,
                        r = this.w,
                        o = Math.abs(e - t);
                    if ("dataPoints" === (i = this._adjustTicksForSmallRange(i, a, o)) && (i = r.globals.dataPoints - 1), t === Number.MIN_VALUE && 0 === e || !x.isNumber(t) && !x.isNumber(e) || t === Number.MIN_VALUE && e === -Number.MAX_VALUE) {
                        t = 0, e = i;
                        var n = this.linearScale(t, e, i);
                        return n
                    }
                    t > e ? (console.warn("axis.min cannot be greater than axis.max"), e = t + .1) : t === e && (t = 0 === t ? 0 : t - .5, e = 0 === e ? 2 : e + .5);
                    var l = [];
                    o < 1 && s && ("candlestick" === r.config.chart.type || "candlestick" === r.config.series[a].type || "boxPlot" === r.config.chart.type || "boxPlot" === r.config.series[a].type || r.globals.isRangeData) && (e *= 1.01);
                    var h = i + 1;
                    h < 2 ? h = 2 : h > 2 && (h -= 2);
                    var c = o / h,
                        d = Math.floor(x.log10(c)),
                        g = Math.pow(10, d),
                        u = Math.round(c / g);
                    u < 1 && (u = 1);
                    var f = u * g,
                        p = f * Math.floor(t / f),
                        b = f * Math.ceil(e / f),
                        v = p;
                    if (s && o > 2) {
                        for (; l.push(v), !((v += f) > b););
                        return {
                            result: l,
                            niceMin: l[0],
                            niceMax: l[l.length - 1]
                        }
                    }
                    var m = t;
                    (l = []).push(m);
                    for (var y = Math.abs(e - t) / i, w = 0; w <= i; w++) m += y, l.push(m);
                    return l[l.length - 2] >= e && l.pop(), {
                        result: l,
                        niceMin: l[0],
                        niceMax: l[l.length - 1]
                    }
                }
            }, {
                key: "linearScale",
                value: function(t, e) {
                    var i = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 10,
                        a = arguments.length > 3 ? arguments[3] : void 0,
                        s = Math.abs(e - t);
                    "dataPoints" === (i = this._adjustTicksForSmallRange(i, a, s)) && (i = this.w.globals.dataPoints - 1);
                    var r = s / i;
                    i === Number.MAX_VALUE && (i = 10, r = 1);
                    for (var o = [], n = t; i >= 0;) o.push(n), n += r, i -= 1;
                    return {
                        result: o,
                        niceMin: o[0],
                        niceMax: o[o.length - 1]
                    }
                }
            }, {
                key: "logarithmicScaleNice",
                value: function(t, e, i) {
                    e <= 0 && (e = Math.max(t, i)), t <= 0 && (t = Math.min(e, i));
                    for (var a = [], s = Math.ceil(Math.log(e) / Math.log(i) + 1), r = Math.floor(Math.log(t) / Math.log(i)); r < s; r++) a.push(Math.pow(i, r));
                    return {
                        result: a,
                        niceMin: a[0],
                        niceMax: a[a.length - 1]
                    }
                }
            }, {
                key: "logarithmicScale",
                value: function(t, e, i) {
                    e <= 0 && (e = Math.max(t, i)), t <= 0 && (t = Math.min(e, i));
                    for (var a = [], s = Math.log(e) / Math.log(i), r = Math.log(t) / Math.log(i), o = s - r, n = Math.round(o), l = o / n, h = 0, c = r; h < n; h++, c += l) a.push(Math.pow(i, c));
                    return a.push(Math.pow(i, s)), {
                        result: a,
                        niceMin: t,
                        niceMax: e
                    }
                }
            }, {
                key: "_adjustTicksForSmallRange",
                value: function(t, e, i) {
                    var a = t;
                    if (void 0 !== e && this.w.config.yaxis[e].labels.formatter && void 0 === this.w.config.yaxis[e].tickAmount) {
                        var s = this.w.config.yaxis[e].labels.formatter(1);
                        x.isNumber(Number(s)) && !x.isFloat(s) && (a = Math.ceil(i))
                    }
                    return a < t ? a : t
                }
            }, {
                key: "setYScaleForIndex",
                value: function(t, e, i) {
                    var a = this.w.globals,
                        s = this.w.config,
                        r = a.isBarHorizontal ? s.xaxis : s.yaxis[t];
                    void 0 === a.yAxisScale[t] && (a.yAxisScale[t] = []);
                    var o = Math.abs(i - e);
                    if (r.logarithmic && o <= 5 && (a.invalidLogScale = !0), r.logarithmic && o > 5) a.allSeriesCollapsed = !1, a.yAxisScale[t] = this.logarithmicScale(e, i, r.logBase), a.yAxisScale[t] = r.forceNiceScale ? this.logarithmicScaleNice(e, i, r.logBase) : this.logarithmicScale(e, i, r.logBase);
                    else if (i !== -Number.MAX_VALUE && x.isNumber(i))
                        if (a.allSeriesCollapsed = !1, void 0 === r.min && void 0 === r.max || r.forceNiceScale) {
                            var n = void 0 === s.yaxis[t].max && void 0 === s.yaxis[t].min || s.yaxis[t].forceNiceScale;
                            a.yAxisScale[t] = this.niceScale(e, i, r.tickAmount ? r.tickAmount : o < 5 && o > 1 ? o + 1 : 5, t, n)
                        } else a.yAxisScale[t] = this.linearScale(e, i, r.tickAmount, t);
                    else a.yAxisScale[t] = this.linearScale(0, 5, 5)
                }
            }, {
                key: "setXScale",
                value: function(t, e) {
                    var i = this.w,
                        a = i.globals,
                        s = i.config.xaxis,
                        r = Math.abs(e - t);
                    return e !== -Number.MAX_VALUE && x.isNumber(e) ? a.xAxisScale = this.linearScale(t, e, s.tickAmount ? s.tickAmount : r < 5 && r > 1 ? r + 1 : 5, 0) : a.xAxisScale = this.linearScale(0, 5, 5), a.xAxisScale
                }
            }, {
                key: "setMultipleYScales",
                value: function() {
                    var t = this,
                        e = this.w.globals,
                        i = this.w.config,
                        a = e.minYArr.concat([]),
                        s = e.maxYArr.concat([]),
                        r = [];
                    i.yaxis.forEach((function(e, o) {
                        var n = o;
                        i.series.forEach((function(t, i) {
                            t.name === e.seriesName && (n = i, o !== i ? r.push({
                                index: i,
                                similarIndex: o,
                                alreadyExists: !0
                            }) : r.push({
                                index: i
                            }))
                        }));
                        var l = a[n],
                            h = s[n];
                        t.setYScaleForIndex(o, l, h)
                    })), this.sameScaleInMultipleAxes(a, s, r)
                }
            }, {
                key: "sameScaleInMultipleAxes",
                value: function(t, e, i) {
                    var a = this,
                        s = this.w.config,
                        r = this.w.globals,
                        o = [];
                    i.forEach((function(t) {
                        t.alreadyExists && (void 0 === o[t.index] && (o[t.index] = []), o[t.index].push(t.index), o[t.index].push(t.similarIndex))
                    })), r.yAxisSameScaleIndices = o, o.forEach((function(t, e) {
                        o.forEach((function(i, a) {
                            var s, r;
                            e !== a && (s = t, r = i, s.filter((function(t) {
                                return -1 !== r.indexOf(t)
                            }))).length > 0 && (o[e] = o[e].concat(o[a]))
                        }))
                    }));
                    var n = o.map((function(t) {
                        return t.filter((function(e, i) {
                            return t.indexOf(e) === i
                        }))
                    })).map((function(t) {
                        return t.sort()
                    }));
                    o = o.filter((function(t) {
                        return !!t
                    }));
                    var l = n.slice(),
                        h = l.map((function(t) {
                            return JSON.stringify(t)
                        }));
                    l = l.filter((function(t, e) {
                        return h.indexOf(JSON.stringify(t)) === e
                    }));
                    var c = [],
                        d = [];
                    t.forEach((function(t, i) {
                        l.forEach((function(a, s) {
                            a.indexOf(i) > -1 && (void 0 === c[s] && (c[s] = [], d[s] = []), c[s].push({
                                key: i,
                                value: t
                            }), d[s].push({
                                key: i,
                                value: e[i]
                            }))
                        }))
                    }));
                    var g = Array.apply(null, Array(l.length)).map(Number.prototype.valueOf, Number.MIN_VALUE),
                        u = Array.apply(null, Array(l.length)).map(Number.prototype.valueOf, -Number.MAX_VALUE);
                    c.forEach((function(t, e) {
                        t.forEach((function(t, i) {
                            g[e] = Math.min(t.value, g[e])
                        }))
                    })), d.forEach((function(t, e) {
                        t.forEach((function(t, i) {
                            u[e] = Math.max(t.value, u[e])
                        }))
                    })), t.forEach((function(t, e) {
                        d.forEach((function(t, i) {
                            var o = g[i],
                                n = u[i];
                            s.chart.stacked && (n = 0, t.forEach((function(t, e) {
                                t.value !== -Number.MAX_VALUE && (n += t.value), o !== Number.MIN_VALUE && (o += c[i][e].value)
                            }))), t.forEach((function(i, l) {
                                t[l].key === e && (void 0 !== s.yaxis[e].min && (o = "function" == typeof s.yaxis[e].min ? s.yaxis[e].min(r.minY) : s.yaxis[e].min), void 0 !== s.yaxis[e].max && (n = "function" == typeof s.yaxis[e].max ? s.yaxis[e].max(r.maxY) : s.yaxis[e].max), a.setYScaleForIndex(e, o, n))
                            }))
                        }))
                    }))
                }
            }, {
                key: "autoScaleY",
                value: function(t, e, i) {
                    t || (t = this);
                    var a = t.w;
                    if (a.globals.isMultipleYAxis || a.globals.collapsedSeries.length) return console.warn("autoScaleYaxis is not supported in a multi-yaxis chart."), e;
                    var s = a.globals.seriesX[0],
                        r = a.config.chart.stacked;
                    return e.forEach((function(t, o) {
                        for (var n = 0, l = 0; l < s.length; l++)
                            if (s[l] >= i.xaxis.min) {
                                n = l;
                                break
                            }
                        var h, c, d = a.globals.minYArr[o],
                            g = a.globals.maxYArr[o],
                            u = a.globals.stackedSeriesTotals;
                        a.globals.series.forEach((function(o, l) {
                            var f = o[n];
                            r ? (f = u[n], h = c = f, u.forEach((function(t, e) {
                                s[e] <= i.xaxis.max && s[e] >= i.xaxis.min && (t > c && null !== t && (c = t), o[e] < h && null !== o[e] && (h = o[e]))
                            }))) : (h = c = f, o.forEach((function(t, e) {
                                if (s[e] <= i.xaxis.max && s[e] >= i.xaxis.min) {
                                    var r = t,
                                        o = t;
                                    a.globals.series.forEach((function(i, a) {
                                        null !== t && (r = Math.min(i[e], r), o = Math.max(i[e], o))
                                    })), o > c && null !== o && (c = o), r < h && null !== r && (h = r)
                                }
                            }))), void 0 === h && void 0 === c && (h = d, c = g), c *= c < 0 ? .9 : 1.1, 0 === (h *= h < 0 ? 1.1 : .9) && 0 === c && (h = -1, c = 1), c < 0 && c < g && (c = g), h < 0 && h > d && (h = d), e.length > 1 ? (e[l].min = void 0 === t.min ? h : t.min, e[l].max = void 0 === t.max ? c : t.max) : (e[0].min = void 0 === t.min ? h : t.min, e[0].max = void 0 === t.max ? c : t.max)
                        }))
                    })), e
                }
            }]), t
        }(),
        Z = function() {
            function t(e) {
                a(this, t), this.ctx = e, this.w = e.w, this.scales = new q(e)
            }
            return r(t, [{
                key: "init",
                value: function() {
                    this.setYRange(), this.setXRange(), this.setZRange()
                }
            }, {
                key: "getMinYMaxY",
                value: function(t) {
                    var e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : Number.MAX_VALUE,
                        i = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : -Number.MAX_VALUE,
                        a = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : null,
                        s = this.w.config,
                        r = this.w.globals,
                        o = -Number.MAX_VALUE,
                        n = Number.MIN_VALUE;
                    null === a && (a = t + 1);
                    var l = r.series,
                        h = l,
                        c = l;
                    "candlestick" === s.chart.type ? (h = r.seriesCandleL, c = r.seriesCandleH) : "boxPlot" === s.chart.type ? (h = r.seriesCandleO, c = r.seriesCandleC) : r.isRangeData && (h = r.seriesRangeStart, c = r.seriesRangeEnd);
                    for (var d = t; d < a; d++) {
                        r.dataPoints = Math.max(r.dataPoints, l[d].length), r.categoryLabels.length && (r.dataPoints = r.categoryLabels.filter((function(t) {
                            return void 0 !== t
                        })).length);
                        for (var g = 0; g < r.series[d].length; g++) {
                            var u = l[d][g];
                            null !== u && x.isNumber(u) ? (void 0 !== c[d][g] && (o = Math.max(o, c[d][g]), e = Math.min(e, c[d][g])), void 0 !== h[d][g] && (e = Math.min(e, h[d][g]), i = Math.max(i, h[d][g])), "candlestick" !== this.w.config.chart.type && "boxPlot" !== this.w.config.chart.type || (void 0 !== r.seriesCandleC[d][g] && (o = Math.max(o, r.seriesCandleO[d][g]), o = Math.max(o, r.seriesCandleH[d][g]), o = Math.max(o, r.seriesCandleL[d][g]), o = Math.max(o, r.seriesCandleC[d][g]), "boxPlot" === this.w.config.chart.type && (o = Math.max(o, r.seriesCandleM[d][g]))), !s.series[d].type || "candlestick" === s.series[d].type && "boxPlot" === s.series[d].type || (o = Math.max(o, r.series[d][g]), e = Math.min(e, r.series[d][g])), i = o), r.seriesGoals[d] && r.seriesGoals[d][g] && Array.isArray(r.seriesGoals[d][g]) && r.seriesGoals[d][g].forEach((function(t) {
                                n !== Number.MIN_VALUE && (n = Math.min(n, t.value), e = n), o = Math.max(o, t.value), i = o
                            })), x.isFloat(u) && (u = x.noExponents(u), r.yValueDecimal = Math.max(r.yValueDecimal, u.toString().split(".")[1].length)), n > h[d][g] && h[d][g] < 0 && (n = h[d][g])) : r.hasNullValues = !0
                        }
                    }
                    return "rangeBar" === s.chart.type && r.seriesRangeStart.length && r.isBarHorizontal && (n = e), "bar" === s.chart.type && (n < 0 && o < 0 && (o = 0), n === Number.MIN_VALUE && (n = 0)), {
                        minY: n,
                        maxY: o,
                        lowestY: e,
                        highestY: i
                    }
                }
            }, {
                key: "setYRange",
                value: function() {
                    var t = this.w.globals,
                        e = this.w.config;
                    t.maxY = -Number.MAX_VALUE, t.minY = Number.MIN_VALUE;
                    var i = Number.MAX_VALUE;
                    if (t.isMultipleYAxis)
                        for (var a = 0; a < t.series.length; a++) {
                            var s = this.getMinYMaxY(a, i, null, a + 1);
                            t.minYArr.push(s.minY), t.maxYArr.push(s.maxY), i = s.lowestY
                        }
                    var r = this.getMinYMaxY(0, i, null, t.series.length);
                    if (t.minY = r.minY, t.maxY = r.maxY, i = r.lowestY, e.chart.stacked && this._setStackedMinMax(), ("line" === e.chart.type || "area" === e.chart.type || "candlestick" === e.chart.type || "boxPlot" === e.chart.type || "rangeBar" === e.chart.type && !t.isBarHorizontal) && t.minY === Number.MIN_VALUE && i !== -Number.MAX_VALUE && i !== t.maxY) {
                        var o = t.maxY - i;
                        (i >= 0 && i <= 10 || void 0 !== e.yaxis[0].min || void 0 !== e.yaxis[0].max) && (o = 0), t.minY = i - 5 * o / 100, i > 0 && t.minY < 0 && (t.minY = 0), t.maxY = t.maxY + 5 * o / 100
                    }
                    if (e.yaxis.forEach((function(e, i) {
                            void 0 !== e.max && ("number" == typeof e.max ? t.maxYArr[i] = e.max : "function" == typeof e.max && (t.maxYArr[i] = e.max(t.isMultipleYAxis ? t.maxYArr[i] : t.maxY)), t.maxY = t.maxYArr[i]), void 0 !== e.min && ("number" == typeof e.min ? t.minYArr[i] = e.min : "function" == typeof e.min && (t.minYArr[i] = e.min(t.isMultipleYAxis ? t.minYArr[i] === Number.MIN_VALUE ? 0 : t.minYArr[i] : t.minY)), t.minY = t.minYArr[i])
                        })), t.isBarHorizontal) {
                        ["min", "max"].forEach((function(i) {
                            void 0 !== e.xaxis[i] && "number" == typeof e.xaxis[i] && ("min" === i ? t.minY = e.xaxis[i] : t.maxY = e.xaxis[i])
                        }))
                    }
                    return t.isMultipleYAxis ? (this.scales.setMultipleYScales(), t.minY = i, t.yAxisScale.forEach((function(e, i) {
                        t.minYArr[i] = e.niceMin, t.maxYArr[i] = e.niceMax
                    }))) : (this.scales.setYScaleForIndex(0, t.minY, t.maxY), t.minY = t.yAxisScale[0].niceMin, t.maxY = t.yAxisScale[0].niceMax, t.minYArr[0] = t.yAxisScale[0].niceMin, t.maxYArr[0] = t.yAxisScale[0].niceMax), {
                        minY: t.minY,
                        maxY: t.maxY,
                        minYArr: t.minYArr,
                        maxYArr: t.maxYArr,
                        yAxisScale: t.yAxisScale
                    }
                }
            }, {
                key: "setXRange",
                value: function() {
                    var t = this.w.globals,
                        e = this.w.config,
                        i = "numeric" === e.xaxis.type || "datetime" === e.xaxis.type || "category" === e.xaxis.type && !t.noLabelsProvided || t.noLabelsProvided || t.isXNumeric;
                    if (t.isXNumeric && function() {
                            for (var e = 0; e < t.series.length; e++)
                                if (t.labels[e])
                                    for (var i = 0; i < t.labels[e].length; i++) null !== t.labels[e][i] && x.isNumber(t.labels[e][i]) && (t.maxX = Math.max(t.maxX, t.labels[e][i]), t.initialMaxX = Math.max(t.maxX, t.labels[e][i]), t.minX = Math.min(t.minX, t.labels[e][i]), t.initialMinX = Math.min(t.minX, t.labels[e][i]))
                        }(), t.noLabelsProvided && 0 === e.xaxis.categories.length && (t.maxX = t.labels[t.labels.length - 1], t.initialMaxX = t.labels[t.labels.length - 1], t.minX = 1, t.initialMinX = 1), t.isXNumeric || t.noLabelsProvided || t.dataFormatXNumeric) {
                        var a;
                        if (void 0 === e.xaxis.tickAmount ? (a = Math.round(t.svgWidth / 150), "numeric" === e.xaxis.type && t.dataPoints < 30 && (a = t.dataPoints - 1), a > t.dataPoints && 0 !== t.dataPoints && (a = t.dataPoints - 1)) : "dataPoints" === e.xaxis.tickAmount ? (t.series.length > 1 && (a = t.series[t.maxValsInArrayIndex].length - 1), t.isXNumeric && (a = t.maxX - t.minX - 1)) : a = e.xaxis.tickAmount, t.xTickAmount = a, void 0 !== e.xaxis.max && "number" == typeof e.xaxis.max && (t.maxX = e.xaxis.max), void 0 !== e.xaxis.min && "number" == typeof e.xaxis.min && (t.minX = e.xaxis.min), void 0 !== e.xaxis.range && (t.minX = t.maxX - e.xaxis.range), t.minX !== Number.MAX_VALUE && t.maxX !== -Number.MAX_VALUE)
                            if (e.xaxis.convertedCatToNumeric && !t.dataFormatXNumeric) {
                                for (var s = [], r = t.minX - 1; r < t.maxX; r++) s.push(r + 1);
                                t.xAxisScale = {
                                    result: s,
                                    niceMin: s[0],
                                    niceMax: s[s.length - 1]
                                }
                            } else t.xAxisScale = this.scales.setXScale(t.minX, t.maxX);
                        else t.xAxisScale = this.scales.linearScale(1, a, a), t.noLabelsProvided && t.labels.length > 0 && (t.xAxisScale = this.scales.linearScale(1, t.labels.length, a - 1), t.seriesX = t.labels.slice());
                        i && (t.labels = t.xAxisScale.result.slice())
                    }
                    return t.isBarHorizontal && t.labels.length && (t.xTickAmount = t.labels.length), this._handleSingleDataPoint(), this._getMinXDiff(), {
                        minX: t.minX,
                        maxX: t.maxX
                    }
                }
            }, {
                key: "setZRange",
                value: function() {
                    var t = this.w.globals;
                    if (t.isDataXYZ)
                        for (var e = 0; e < t.series.length; e++)
                            if (void 0 !== t.seriesZ[e])
                                for (var i = 0; i < t.seriesZ[e].length; i++) null !== t.seriesZ[e][i] && x.isNumber(t.seriesZ[e][i]) && (t.maxZ = Math.max(t.maxZ, t.seriesZ[e][i]), t.minZ = Math.min(t.minZ, t.seriesZ[e][i]))
                }
            }, {
                key: "_handleSingleDataPoint",
                value: function() {
                    var t = this.w.globals,
                        e = this.w.config;
                    if (t.minX === t.maxX) {
                        var i = new R(this.ctx);
                        if ("datetime" === e.xaxis.type) {
                            var a = i.getDate(t.minX);
                            e.xaxis.labels.datetimeUTC ? a.setUTCDate(a.getUTCDate() - 2) : a.setDate(a.getDate() - 2), t.minX = new Date(a).getTime();
                            var s = i.getDate(t.maxX);
                            e.xaxis.labels.datetimeUTC ? s.setUTCDate(s.getUTCDate() + 2) : s.setDate(s.getDate() + 2), t.maxX = new Date(s).getTime()
                        } else("numeric" === e.xaxis.type || "category" === e.xaxis.type && !t.noLabelsProvided) && (t.minX = t.minX - 2, t.initialMinX = t.minX, t.maxX = t.maxX + 2, t.initialMaxX = t.maxX)
                    }
                }
            }, {
                key: "_getMinXDiff",
                value: function() {
                    var t = this.w.globals;
                    t.isXNumeric && t.seriesX.forEach((function(e, i) {
                        1 === e.length && e.push(t.seriesX[t.maxValsInArrayIndex][t.seriesX[t.maxValsInArrayIndex].length - 1]);
                        var a = e.slice();
                        a.sort((function(t, e) {
                            return t - e
                        })), a.forEach((function(e, i) {
                            if (i > 0) {
                                var s = e - a[i - 1];
                                s > 0 && (t.minXDiff = Math.min(s, t.minXDiff))
                            }
                        })), 1 !== t.dataPoints && t.minXDiff !== Number.MAX_VALUE || (t.minXDiff = .5)
                    }))
                }
            }, {
                key: "_setStackedMinMax",
                value: function() {
                    var t = this.w.globals,
                        e = [],
                        i = [];
                    if (t.series.length)
                        for (var a = 0; a < t.series[t.maxValsInArrayIndex].length; a++)
                            for (var s = 0, r = 0, o = 0; o < t.series.length; o++) null !== t.series[o][a] && x.isNumber(t.series[o][a]) && (t.series[o][a] > 0 ? s = s + parseFloat(t.series[o][a]) + 1e-4 : r += parseFloat(t.series[o][a])), o === t.series.length - 1 && (e.push(s), i.push(r));
                    for (var n = 0; n < e.length; n++) t.maxY = Math.max(t.maxY, e[n]), t.minY = Math.min(t.minY, i[n])
                }
            }]), t
        }(),
        $ = function() {
            function t(e) {
                a(this, t), this.ctx = e, this.w = e.w;
                var i = this.w;
                this.xaxisFontSize = i.config.xaxis.labels.style.fontSize, this.axisFontFamily = i.config.xaxis.labels.style.fontFamily, this.xaxisForeColors = i.config.xaxis.labels.style.colors, this.isCategoryBarHorizontal = "bar" === i.config.chart.type && i.config.plotOptions.bar.horizontal, this.xAxisoffX = 0, "bottom" === i.config.xaxis.position && (this.xAxisoffX = i.globals.gridHeight), this.drawnLabels = [], this.axesUtils = new G(e)
            }
            return r(t, [{
                key: "drawYaxis",
                value: function(t) {
                    var e = this,
                        i = this.w,
                        a = new m(this.ctx),
                        s = i.config.yaxis[t].labels.style,
                        r = s.fontSize,
                        o = s.fontFamily,
                        n = s.fontWeight,
                        l = a.group({
                            class: "apexcharts-yaxis",
                            rel: t,
                            transform: "translate(" + i.globals.translateYAxisX[t] + ", 0)"
                        });
                    if (this.axesUtils.isYAxisHidden(t)) return l;
                    var h = a.group({
                        class: "apexcharts-yaxis-texts-g"
                    });
                    l.add(h);
                    var c = i.globals.yAxisScale[t].result.length - 1,
                        d = i.globals.gridHeight / c,
                        g = i.globals.translateY,
                        u = i.globals.yLabelFormatters[t],
                        f = i.globals.yAxisScale[t].result.slice();
                    f = this.axesUtils.checkForReversedLabels(t, f);
                    var p = "";
                    if (i.config.yaxis[t].labels.show)
                        for (var x = function(l) {
                                var x = f[l];
                                x = u(x, l, i);
                                var b = i.config.yaxis[t].labels.padding;
                                i.config.yaxis[t].opposite && 0 !== i.config.yaxis.length && (b *= -1);
                                var v = e.axesUtils.getYAxisForeColor(s.colors, t),
                                    m = a.drawText({
                                        x: b,
                                        y: g + c / 10 + i.config.yaxis[t].labels.offsetY + 1,
                                        text: x,
                                        textAnchor: i.config.yaxis[t].opposite ? "start" : "end",
                                        fontSize: r,
                                        fontFamily: o,
                                        fontWeight: n,
                                        maxWidth: i.config.yaxis[t].labels.maxWidth,
                                        foreColor: Array.isArray(v) ? v[l] : v,
                                        isPlainText: !1,
                                        cssClass: "apexcharts-yaxis-label " + s.cssClass
                                    });
                                l === c && (p = m), h.add(m);
                                var y = document.createElementNS(i.globals.SVGNS, "title");
                                if (y.textContent = Array.isArray(x) ? x.join(" ") : x, m.node.appendChild(y), 0 !== i.config.yaxis[t].labels.rotate) {
                                    var w = a.rotateAroundCenter(p.node),
                                        k = a.rotateAroundCenter(m.node);
                                    m.node.setAttribute("transform", "rotate(".concat(i.config.yaxis[t].labels.rotate, " ").concat(w.x, " ").concat(k.y, ")"))
                                }
                                g += d
                            }, b = c; b >= 0; b--) x(b);
                    if (void 0 !== i.config.yaxis[t].title.text) {
                        var v = a.group({
                                class: "apexcharts-yaxis-title"
                            }),
                            y = 0;
                        i.config.yaxis[t].opposite && (y = i.globals.translateYAxisX[t]);
                        var w = a.drawText({
                            x: y,
                            y: i.globals.gridHeight / 2 + i.globals.translateY + i.config.yaxis[t].title.offsetY,
                            text: i.config.yaxis[t].title.text,
                            textAnchor: "end",
                            foreColor: i.config.yaxis[t].title.style.color,
                            fontSize: i.config.yaxis[t].title.style.fontSize,
                            fontWeight: i.config.yaxis[t].title.style.fontWeight,
                            fontFamily: i.config.yaxis[t].title.style.fontFamily,
                            cssClass: "apexcharts-yaxis-title-text " + i.config.yaxis[t].title.style.cssClass
                        });
                        v.add(w), l.add(v)
                    }
                    var k = i.config.yaxis[t].axisBorder,
                        A = 31 + k.offsetX;
                    if (i.config.yaxis[t].opposite && (A = -31 - k.offsetX), k.show) {
                        var S = a.drawLine(A, i.globals.translateY + k.offsetY - 2, A, i.globals.gridHeight + i.globals.translateY + k.offsetY + 2, k.color, 0, k.width);
                        l.add(S)
                    }
                    return i.config.yaxis[t].axisTicks.show && this.axesUtils.drawYAxisTicks(A, c, k, i.config.yaxis[t].axisTicks, t, d, l), l
                }
            }, {
                key: "drawYaxisInversed",
                value: function(t) {
                    var e = this.w,
                        i = new m(this.ctx),
                        a = i.group({
                            class: "apexcharts-xaxis apexcharts-yaxis-inversed"
                        }),
                        s = i.group({
                            class: "apexcharts-xaxis-texts-g",
                            transform: "translate(".concat(e.globals.translateXAxisX, ", ").concat(e.globals.translateXAxisY, ")")
                        });
                    a.add(s);
                    var r = e.globals.yAxisScale[t].result.length - 1,
                        o = e.globals.gridWidth / r + .1,
                        n = o + e.config.xaxis.labels.offsetX,
                        l = e.globals.xLabelFormatter,
                        h = e.globals.yAxisScale[t].result.slice(),
                        c = e.globals.timescaleLabels;
                    c.length > 0 && (this.xaxisLabels = c.slice(), r = (h = c.slice()).length), h = this.axesUtils.checkForReversedLabels(t, h);
                    var d = c.length;
                    if (e.config.xaxis.labels.show)
                        for (var g = d ? 0 : r; d ? g < d : g >= 0; d ? g++ : g--) {
                            var u = h[g];
                            u = l(u, g, e);
                            var f = e.globals.gridWidth + e.globals.padHorizontal - (n - o + e.config.xaxis.labels.offsetX);
                            if (c.length) {
                                var p = this.axesUtils.getLabel(h, c, f, g, this.drawnLabels, this.xaxisFontSize);
                                f = p.x, u = p.text, this.drawnLabels.push(p.text), 0 === g && e.globals.skipFirstTimelinelabel && (u = ""), g === h.length - 1 && e.globals.skipLastTimelinelabel && (u = "")
                            }
                            var x = i.drawText({
                                x: f,
                                y: this.xAxisoffX + e.config.xaxis.labels.offsetY + 30 - ("top" === e.config.xaxis.position ? e.globals.xAxisHeight + e.config.xaxis.axisTicks.height - 2 : 0),
                                text: u,
                                textAnchor: "middle",
                                foreColor: Array.isArray(this.xaxisForeColors) ? this.xaxisForeColors[t] : this.xaxisForeColors,
                                fontSize: this.xaxisFontSize,
                                fontFamily: this.xaxisFontFamily,
                                fontWeight: e.config.xaxis.labels.style.fontWeight,
                                isPlainText: !1,
                                cssClass: "apexcharts-xaxis-label " + e.config.xaxis.labels.style.cssClass
                            });
                            s.add(x), x.tspan(u);
                            var b = document.createElementNS(e.globals.SVGNS, "title");
                            b.textContent = u, x.node.appendChild(b), n += o
                        }
                    return this.inversedYAxisTitleText(a), this.inversedYAxisBorder(a), a
                }
            }, {
                key: "inversedYAxisBorder",
                value: function(t) {
                    var e = this.w,
                        i = new m(this.ctx),
                        a = e.config.xaxis.axisBorder;
                    if (a.show) {
                        var s = 0;
                        "bar" === e.config.chart.type && e.globals.isXNumeric && (s -= 15);
                        var r = i.drawLine(e.globals.padHorizontal + s + a.offsetX, this.xAxisoffX, e.globals.gridWidth, this.xAxisoffX, a.color, 0, a.height);
                        t.add(r)
                    }
                }
            }, {
                key: "inversedYAxisTitleText",
                value: function(t) {
                    var e = this.w,
                        i = new m(this.ctx);
                    if (void 0 !== e.config.xaxis.title.text) {
                        var a = i.group({
                                class: "apexcharts-xaxis-title apexcharts-yaxis-title-inversed"
                            }),
                            s = i.drawText({
                                x: e.globals.gridWidth / 2 + e.config.xaxis.title.offsetX,
                                y: this.xAxisoffX + parseFloat(this.xaxisFontSize) + parseFloat(e.config.xaxis.title.style.fontSize) + e.config.xaxis.title.offsetY + 20,
                                text: e.config.xaxis.title.text,
                                textAnchor: "middle",
                                fontSize: e.config.xaxis.title.style.fontSize,
                                fontFamily: e.config.xaxis.title.style.fontFamily,
                                fontWeight: e.config.xaxis.title.style.fontWeight,
                                foreColor: e.config.xaxis.title.style.color,
                                cssClass: "apexcharts-xaxis-title-text " + e.config.xaxis.title.style.cssClass
                            });
                        a.add(s), t.add(a)
                    }
                }
            }, {
                key: "yAxisTitleRotate",
                value: function(t, e) {
                    var i = this.w,
                        a = new m(this.ctx),
                        s = {
                            width: 0,
                            height: 0
                        },
                        r = {
                            width: 0,
                            height: 0
                        },
                        o = i.globals.dom.baseEl.querySelector(" .apexcharts-yaxis[rel='".concat(t, "'] .apexcharts-yaxis-texts-g"));
                    null !== o && (s = o.getBoundingClientRect());
                    var n = i.globals.dom.baseEl.querySelector(".apexcharts-yaxis[rel='".concat(t, "'] .apexcharts-yaxis-title text"));
                    if (null !== n && (r = n.getBoundingClientRect()), null !== n) {
                        var l = this.xPaddingForYAxisTitle(t, s, r, e);
                        n.setAttribute("x", l.xPos - (e ? 10 : 0))
                    }
                    if (null !== n) {
                        var h = a.rotateAroundCenter(n);
                        n.setAttribute("transform", "rotate(".concat(e ? -1 * i.config.yaxis[t].title.rotate : i.config.yaxis[t].title.rotate, " ").concat(h.x, " ").concat(h.y, ")"))
                    }
                }
            }, {
                key: "xPaddingForYAxisTitle",
                value: function(t, e, i, a) {
                    var s = this.w,
                        r = 0,
                        o = 0,
                        n = 10;
                    return void 0 === s.config.yaxis[t].title.text || t < 0 ? {
                        xPos: o,
                        padd: 0
                    } : (a ? (o = e.width + s.config.yaxis[t].title.offsetX + i.width / 2 + n / 2, 0 === (r += 1) && (o -= n / 2)) : (o = -1 * e.width + s.config.yaxis[t].title.offsetX + n / 2 + i.width / 2, s.globals.isBarHorizontal && (n = 25, o = -1 * e.width - s.config.yaxis[t].title.offsetX - n)), {
                        xPos: o,
                        padd: n
                    })
                }
            }, {
                key: "setYAxisXPosition",
                value: function(t, e) {
                    var i = this.w,
                        a = 0,
                        s = 0,
                        r = 18,
                        o = 1;
                    i.config.yaxis.length > 1 && (this.multipleYs = !0), i.config.yaxis.map((function(n, l) {
                        var h = i.globals.ignoreYAxisIndexes.indexOf(l) > -1 || !n.show || n.floating || 0 === t[l].width,
                            c = t[l].width + e[l].width;
                        n.opposite ? i.globals.isBarHorizontal ? (s = i.globals.gridWidth + i.globals.translateX - 1, i.globals.translateYAxisX[l] = s - n.labels.offsetX) : (s = i.globals.gridWidth + i.globals.translateX + o, h || (o = o + c + 20), i.globals.translateYAxisX[l] = s - n.labels.offsetX + 20) : (a = i.globals.translateX - r, h || (r = r + c + 20), i.globals.translateYAxisX[l] = a + n.labels.offsetX)
                    }))
                }
            }, {
                key: "setYAxisTextAlignments",
                value: function() {
                    var t = this.w,
                        e = t.globals.dom.baseEl.getElementsByClassName("apexcharts-yaxis");
                    (e = x.listToArray(e)).forEach((function(e, i) {
                        var a = t.config.yaxis[i];
                        if (a && void 0 !== a.labels.align) {
                            var s = t.globals.dom.baseEl.querySelector(".apexcharts-yaxis[rel='".concat(i, "'] .apexcharts-yaxis-texts-g")),
                                r = t.globals.dom.baseEl.querySelectorAll(".apexcharts-yaxis[rel='".concat(i, "'] .apexcharts-yaxis-label"));
                            r = x.listToArray(r);
                            var o = s.getBoundingClientRect();
                            "left" === a.labels.align ? (r.forEach((function(t, e) {
                                t.setAttribute("text-anchor", "start")
                            })), a.opposite || s.setAttribute("transform", "translate(-".concat(o.width, ", 0)"))) : "center" === a.labels.align ? (r.forEach((function(t, e) {
                                t.setAttribute("text-anchor", "middle")
                            })), s.setAttribute("transform", "translate(".concat(o.width / 2 * (a.opposite ? 1 : -1), ", 0)"))) : "right" === a.labels.align && (r.forEach((function(t, e) {
                                t.setAttribute("text-anchor", "end")
                            })), a.opposite && s.setAttribute("transform", "translate(".concat(o.width, ", 0)")))
                        }
                    }))
                }
            }]), t
        }(),
        J = function() {
            function t(e) {
                a(this, t), this.ctx = e, this.w = e.w, this.documentEvent = x.bind(this.documentEvent, this)
            }
            return r(t, [{
                key: "addEventListener",
                value: function(t, e) {
                    var i = this.w;
                    i.globals.events.hasOwnProperty(t) ? i.globals.events[t].push(e) : i.globals.events[t] = [e]
                }
            }, {
                key: "removeEventListener",
                value: function(t, e) {
                    var i = this.w;
                    if (i.globals.events.hasOwnProperty(t)) {
                        var a = i.globals.events[t].indexOf(e); - 1 !== a && i.globals.events[t].splice(a, 1)
                    }
                }
            }, {
                key: "fireEvent",
                value: function(t, e) {
                    var i = this.w;
                    if (i.globals.events.hasOwnProperty(t)) {
                        e && e.length || (e = []);
                        for (var a = i.globals.events[t], s = a.length, r = 0; r < s; r++) a[r].apply(null, e)
                    }
                }
            }, {
                key: "setupEventHandlers",
                value: function() {
                    var t = this,
                        e = this.w,
                        i = this.ctx,
                        a = e.globals.dom.baseEl.querySelector(e.globals.chartClass);
                    this.ctx.eventList.forEach((function(t) {
                        a.addEventListener(t, (function(t) {
                            var a = Object.assign({}, e, {
                                seriesIndex: e.globals.capturedSeriesIndex,
                                dataPointIndex: e.globals.capturedDataPointIndex
                            });
                            "mousemove" === t.type || "touchmove" === t.type ? "function" == typeof e.config.chart.events.mouseMove && e.config.chart.events.mouseMove(t, i, a) : "mouseleave" === t.type || "touchleave" === t.type ? "function" == typeof e.config.chart.events.mouseLeave && e.config.chart.events.mouseLeave(t, i, a) : ("mouseup" === t.type && 1 === t.which || "touchend" === t.type) && ("function" == typeof e.config.chart.events.click && e.config.chart.events.click(t, i, a), i.ctx.events.fireEvent("click", [t, i, a]))
                        }), {
                            capture: !1,
                            passive: !0
                        })
                    })), this.ctx.eventList.forEach((function(i) {
                        e.globals.dom.baseEl.addEventListener(i, t.documentEvent, {
                            passive: !0
                        })
                    })), this.ctx.core.setupBrushHandler()
                }
            }, {
                key: "documentEvent",
                value: function(t) {
                    var e = this.w,
                        i = t.target.className;
                    if ("click" === t.type) {
                        var a = e.globals.dom.baseEl.querySelector(".apexcharts-menu");
                        a && a.classList.contains("apexcharts-menu-open") && "apexcharts-menu-icon" !== i && a.classList.remove("apexcharts-menu-open")
                    }
                    e.globals.clientX = "touchmove" === t.type ? t.touches[0].clientX : t.clientX, e.globals.clientY = "touchmove" === t.type ? t.touches[0].clientY : t.clientY
                }
            }]), t
        }(),
        Q = function() {
            function t(e) {
                a(this, t), this.ctx = e, this.w = e.w
            }
            return r(t, [{
                key: "setCurrentLocaleValues",
                value: function(t) {
                    var e = this.w.config.chart.locales;
                    window.Apex.chart && window.Apex.chart.locales && window.Apex.chart.locales.length > 0 && (e = this.w.config.chart.locales.concat(window.Apex.chart.locales));
                    var i = e.filter((function(e) {
                        return e.name === t
                    }))[0];
                    if (!i) throw new Error("Wrong locale name provided. Please make sure you set the correct locale name in options");
                    var a = x.extend(C, i);
                    this.w.globals.locale = a.options
                }
            }]), t
        }(),
        K = function() {
            function t(e) {
                a(this, t), this.ctx = e, this.w = e.w
            }
            return r(t, [{
                key: "drawAxis",
                value: function(t, e) {
                    var i, a, s = this.w.globals,
                        r = this.w.config,
                        o = new _(this.ctx),
                        n = new $(this.ctx);
                    s.axisCharts && "radar" !== t && (s.isBarHorizontal ? (a = n.drawYaxisInversed(0), i = o.drawXaxisInversed(0), s.dom.elGraphical.add(i), s.dom.elGraphical.add(a)) : (i = o.drawXaxis(), s.dom.elGraphical.add(i), r.yaxis.map((function(t, e) {
                        -1 === s.ignoreYAxisIndexes.indexOf(e) && (a = n.drawYaxis(e), s.dom.Paper.add(a))
                    }))))
                }
            }]), t
        }(),
        tt = function() {
            function t(e) {
                a(this, t), this.ctx = e, this.w = e.w
            }
            return r(t, [{
                key: "drawXCrosshairs",
                value: function() {
                    var t = this.w,
                        e = new m(this.ctx),
                        i = new v(this.ctx),
                        a = t.config.xaxis.crosshairs.fill.gradient,
                        s = t.config.xaxis.crosshairs.dropShadow,
                        r = t.config.xaxis.crosshairs.fill.type,
                        o = a.colorFrom,
                        n = a.colorTo,
                        l = a.opacityFrom,
                        h = a.opacityTo,
                        c = a.stops,
                        d = s.enabled,
                        g = s.left,
                        u = s.top,
                        f = s.blur,
                        p = s.color,
                        b = s.opacity,
                        y = t.config.xaxis.crosshairs.fill.color;
                    if (t.config.xaxis.crosshairs.show) {
                        "gradient" === r && (y = e.drawGradient("vertical", o, n, l, h, null, c, null));
                        var w = e.drawRect();
                        1 === t.config.xaxis.crosshairs.width && (w = e.drawLine());
                        var k = t.globals.gridHeight;
                        (!x.isNumber(k) || k < 0) && (k = 0);
                        var A = t.config.xaxis.crosshairs.width;
                        (!x.isNumber(A) || A < 0) && (A = 0), w.attr({
                            class: "apexcharts-xcrosshairs",
                            x: 0,
                            y: 0,
                            y2: k,
                            width: A,
                            height: k,
                            fill: y,
                            filter: "none",
                            "fill-opacity": t.config.xaxis.crosshairs.opacity,
                            stroke: t.config.xaxis.crosshairs.stroke.color,
                            "stroke-width": t.config.xaxis.crosshairs.stroke.width,
                            "stroke-dasharray": t.config.xaxis.crosshairs.stroke.dashArray
                        }), d && (w = i.dropShadow(w, {
                            left: g,
                            top: u,
                            blur: f,
                            color: p,
                            opacity: b
                        })), t.globals.dom.elGraphical.add(w)
                    }
                }
            }, {
                key: "drawYCrosshairs",
                value: function() {
                    var t = this.w,
                        e = new m(this.ctx),
                        i = t.config.yaxis[0].crosshairs,
                        a = t.globals.barPadForNumericAxis;
                    if (t.config.yaxis[0].crosshairs.show) {
                        var s = e.drawLine(-a, 0, t.globals.gridWidth + a, 0, i.stroke.color, i.stroke.dashArray, i.stroke.width);
                        s.attr({
                            class: "apexcharts-ycrosshairs"
                        }), t.globals.dom.elGraphical.add(s)
                    }
                    var r = e.drawLine(-a, 0, t.globals.gridWidth + a, 0, i.stroke.color, 0, 0);
                    r.attr({
                        class: "apexcharts-ycrosshairs-hidden"
                    }), t.globals.dom.elGraphical.add(r)
                }
            }]), t
        }(),
        et = function() {
            function t(e) {
                a(this, t), this.ctx = e, this.w = e.w
            }
            return r(t, [{
                key: "checkResponsiveConfig",
                value: function(t) {
                    var e = this,
                        i = this.w,
                        a = i.config;
                    if (0 !== a.responsive.length) {
                        var s = a.responsive.slice();
                        s.sort((function(t, e) {
                            return t.breakpoint > e.breakpoint ? 1 : e.breakpoint > t.breakpoint ? -1 : 0
                        })).reverse();
                        var r = new N({}),
                            o = function() {
                                var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},
                                    a = s[0].breakpoint,
                                    o = window.innerWidth > 0 ? window.innerWidth : screen.width;
                                if (o > a) {
                                    var n = y.extendArrayProps(r, i.globals.initialConfig, i);
                                    t = x.extend(n, t), t = x.extend(i.config, t), e.overrideResponsiveOptions(t)
                                } else
                                    for (var l = 0; l < s.length; l++) o < s[l].breakpoint && (t = y.extendArrayProps(r, s[l].options, i), t = x.extend(i.config, t), e.overrideResponsiveOptions(t))
                            };
                        if (t) {
                            var n = y.extendArrayProps(r, t, i);
                            n = x.extend(i.config, n), o(n = x.extend(n, t))
                        } else o({})
                    }
                }
            }, {
                key: "overrideResponsiveOptions",
                value: function(t) {
                    var e = new N(t).init({
                        responsiveOverride: !0
                    });
                    this.w.config = e
                }
            }]), t
        }(),
        it = function() {
            function t(e) {
                a(this, t), this.ctx = e, this.colors = [], this.w = e.w;
                var i = this.w;
                this.isColorFn = !1, this.isHeatmapDistributed = "treemap" === i.config.chart.type && i.config.plotOptions.treemap.distributed || "heatmap" === i.config.chart.type && i.config.plotOptions.heatmap.distributed, this.isBarDistributed = i.config.plotOptions.bar.distributed && ("bar" === i.config.chart.type || "rangeBar" === i.config.chart.type)
            }
            return r(t, [{
                key: "init",
                value: function() {
                    this.setDefaultColors()
                }
            }, {
                key: "setDefaultColors",
                value: function() {
                    var t = this,
                        e = this.w,
                        i = new x;
                    if (e.globals.dom.elWrap.classList.add("apexcharts-theme-".concat(e.config.theme.mode)), void 0 === e.config.colors ? e.globals.colors = this.predefined() : (e.globals.colors = e.config.colors, Array.isArray(e.config.colors) && e.config.colors.length > 0 && "function" == typeof e.config.colors[0] && (e.globals.colors = e.config.series.map((function(i, a) {
                            var s = e.config.colors[a];
                            return s || (s = e.config.colors[0]), "function" == typeof s ? (t.isColorFn = !0, s({
                                value: e.globals.axisCharts ? e.globals.series[a][0] ? e.globals.series[a][0] : 0 : e.globals.series[a],
                                seriesIndex: a,
                                dataPointIndex: a,
                                w: e
                            })) : s
                        })))), e.globals.seriesColors.map((function(t, i) {
                            t && (e.globals.colors[i] = t)
                        })), e.config.theme.monochrome.enabled) {
                        var a = [],
                            s = e.globals.series.length;
                        (this.isBarDistributed || this.isHeatmapDistributed) && (s = e.globals.series[0].length * e.globals.series.length);
                        for (var r = e.config.theme.monochrome.color, o = 1 / (s / e.config.theme.monochrome.shadeIntensity), n = e.config.theme.monochrome.shadeTo, l = 0, h = 0; h < s; h++) {
                            var c = void 0;
                            "dark" === n ? (c = i.shadeColor(-1 * l, r), l += o) : (c = i.shadeColor(l, r), l += o), a.push(c)
                        }
                        e.globals.colors = a.slice()
                    }
                    var d = e.globals.colors.slice();
                    this.pushExtraColors(e.globals.colors);
                    ["fill", "stroke"].forEach((function(i) {
                        void 0 === e.config[i].colors ? e.globals[i].colors = t.isColorFn ? e.config.colors : d : e.globals[i].colors = e.config[i].colors.slice(), t.pushExtraColors(e.globals[i].colors)
                    })), void 0 === e.config.dataLabels.style.colors ? e.globals.dataLabels.style.colors = d : e.globals.dataLabels.style.colors = e.config.dataLabels.style.colors.slice(), this.pushExtraColors(e.globals.dataLabels.style.colors, 50), void 0 === e.config.plotOptions.radar.polygons.fill.colors ? e.globals.radarPolygons.fill.colors = ["dark" === e.config.theme.mode ? "#424242" : "none"] : e.globals.radarPolygons.fill.colors = e.config.plotOptions.radar.polygons.fill.colors.slice(), this.pushExtraColors(e.globals.radarPolygons.fill.colors, 20), void 0 === e.config.markers.colors ? e.globals.markers.colors = d : e.globals.markers.colors = e.config.markers.colors.slice(), this.pushExtraColors(e.globals.markers.colors)
                }
            }, {
                key: "pushExtraColors",
                value: function(t, e) {
                    var i = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : null,
                        a = this.w,
                        s = e || a.globals.series.length;
                    if (null === i && (i = this.isBarDistributed || this.isHeatmapDistributed || "heatmap" === a.config.chart.type && a.config.plotOptions.heatmap.colorScale.inverse), i && a.globals.series.length && (s = a.globals.series[a.globals.maxValsInArrayIndex].length * a.globals.series.length), t.length < s)
                        for (var r = s - t.length, o = 0; o < r; o++) t.push(t[o])
                }
            }, {
                key: "updateThemeOptions",
                value: function(t) {
                    t.chart = t.chart || {}, t.tooltip = t.tooltip || {};
                    var e = t.theme.mode || "light",
                        i = t.theme.palette ? t.theme.palette : "dark" === e ? "palette4" : "palette1",
                        a = t.chart.foreColor ? t.chart.foreColor : "dark" === e ? "#f6f7f8" : "#373d3f";
                    return t.tooltip.theme = e, t.chart.foreColor = a, t.theme.palette = i, t
                }
            }, {
                key: "predefined",
                value: function() {
                    switch (this.w.config.theme.palette) {
                        case "palette1":
                            this.colors = ["#008FFB", "#00E396", "#FEB019", "#FF4560", "#775DD0"];
                            break;
                        case "palette2":
                            this.colors = ["#3f51b5", "#03a9f4", "#4caf50", "#f9ce1d", "#FF9800"];
                            break;
                        case "palette3":
                            this.colors = ["#33b2df", "#546E7A", "#d4526e", "#13d8aa", "#A5978B"];
                            break;
                        case "palette4":
                            this.colors = ["#4ecdc4", "#c7f464", "#81D4FA", "#fd6a6a", "#546E7A"];
                            break;
                        case "palette5":
                            this.colors = ["#2b908f", "#f9a3a4", "#90ee7e", "#fa4443", "#69d2e7"];
                            break;
                        case "palette6":
                            this.colors = ["#449DD1", "#F86624", "#EA3546", "#662E9B", "#C5D86D"];
                            break;
                        case "palette7":
                            this.colors = ["#D7263D", "#1B998B", "#2E294E", "#F46036", "#E2C044"];
                            break;
                        case "palette8":
                            this.colors = ["#662E9B", "#F86624", "#F9C80E", "#EA3546", "#43BCCD"];
                            break;
                        case "palette9":
                            this.colors = ["#5C4742", "#A5978B", "#8D5B4C", "#5A2A27", "#C4BBAF"];
                            break;
                        case "palette10":
                            this.colors = ["#A300D6", "#7D02EB", "#5653FE", "#2983FF", "#00B1F2"];
                            break;
                        default:
                            this.colors = ["#008FFB", "#00E396", "#FEB019", "#FF4560", "#775DD0"]
                    }
                    return this.colors
                }
            }]), t
        }(),
        at = function() {
            function t(e) {
                a(this, t), this.ctx = e, this.w = e.w
            }
            return r(t, [{
                key: "draw",
                value: function() {
                    this.drawTitleSubtitle("title"), this.drawTitleSubtitle("subtitle")
                }
            }, {
                key: "drawTitleSubtitle",
                value: function(t) {
                    var e = this.w,
                        i = "title" === t ? e.config.title : e.config.subtitle,
                        a = e.globals.svgWidth / 2,
                        s = i.offsetY,
                        r = "middle";
                    if ("left" === i.align ? (a = 10, r = "start") : "right" === i.align && (a = e.globals.svgWidth - 10, r = "end"), a += i.offsetX, s = s + parseInt(i.style.fontSize, 10) + i.margin / 2, void 0 !== i.text) {
                        var o = new m(this.ctx).drawText({
                            x: a,
                            y: s,
                            text: i.text,
                            textAnchor: r,
                            fontSize: i.style.fontSize,
                            fontFamily: i.style.fontFamily,
                            fontWeight: i.style.fontWeight,
                            foreColor: i.style.color,
                            opacity: 1
                        });
                        o.node.setAttribute("class", "apexcharts-".concat(t, "-text")), e.globals.dom.Paper.add(o)
                    }
                }
            }]), t
        }(),
        st = function() {
            function t(e) {
                a(this, t), this.w = e.w, this.dCtx = e
            }
            return r(t, [{
                key: "getTitleSubtitleCoords",
                value: function(t) {
                    var e = this.w,
                        i = 0,
                        a = 0,
                        s = "title" === t ? e.config.title.floating : e.config.subtitle.floating,
                        r = e.globals.dom.baseEl.querySelector(".apexcharts-".concat(t, "-text"));
                    if (null !== r && !s) {
                        var o = r.getBoundingClientRect();
                        i = o.width, a = e.globals.axisCharts ? o.height + 5 : o.height
                    }
                    return {
                        width: i,
                        height: a
                    }
                }
            }, {
                key: "getLegendsRect",
                value: function() {
                    var t = this.w,
                        e = t.globals.dom.baseEl.querySelector(".apexcharts-legend");
                    t.config.legend.height || "top" !== t.config.legend.position && "bottom" !== t.config.legend.position || (e.style.maxHeight = t.globals.svgHeight / 2 + "px");
                    var i = Object.assign({}, x.getBoundingClientRect(e));
                    return null !== e && !t.config.legend.floating && t.config.legend.show ? this.dCtx.lgRect = {
                        x: i.x,
                        y: i.y,
                        height: i.height,
                        width: 0 === i.height ? 0 : i.width
                    } : this.dCtx.lgRect = {
                        x: 0,
                        y: 0,
                        height: 0,
                        width: 0
                    }, "left" !== t.config.legend.position && "right" !== t.config.legend.position || 1.5 * this.dCtx.lgRect.width > t.globals.svgWidth && (this.dCtx.lgRect.width = t.globals.svgWidth / 1.5), this.dCtx.lgRect
                }
            }, {
                key: "getLargestStringFromMultiArr",
                value: function(t, e) {
                    var i = t;
                    if (this.w.globals.isMultiLineX) {
                        var a = e.map((function(t, e) {
                                return Array.isArray(t) ? t.length : 1
                            })),
                            s = Math.max.apply(Math, u(a));
                        i = e[a.indexOf(s)]
                    }
                    return i
                }
            }]), t
        }(),
        rt = function() {
            function t(e) {
                a(this, t), this.w = e.w, this.dCtx = e
            }
            return r(t, [{
                key: "getxAxisLabelsCoords",
                value: function() {
                    var t, e = this.w,
                        i = e.globals.labels.slice();
                    if (e.config.xaxis.convertedCatToNumeric && 0 === i.length && (i = e.globals.categoryLabels), e.globals.timescaleLabels.length > 0) {
                        var a = this.getxAxisTimeScaleLabelsCoords();
                        t = {
                            width: a.width,
                            height: a.height
                        }, e.globals.rotateXLabels = !1
                    } else {
                        this.dCtx.lgWidthForSideLegends = "left" !== e.config.legend.position && "right" !== e.config.legend.position || e.config.legend.floating ? 0 : this.dCtx.lgRect.width;
                        var s = e.globals.xLabelFormatter,
                            r = x.getLargestStringFromArr(i),
                            o = this.dCtx.dimHelpers.getLargestStringFromMultiArr(r, i);
                        e.globals.isBarHorizontal && (o = r = e.globals.yAxisScale[0].result.reduce((function(t, e) {
                            return t.length > e.length ? t : e
                        }), 0));
                        var n = new V(this.dCtx.ctx),
                            l = r;
                        r = n.xLabelFormat(s, r, l, {
                            i: void 0,
                            dateFormatter: new R(this.dCtx.ctx).formatDate,
                            w: e
                        }), o = n.xLabelFormat(s, o, l, {
                            i: void 0,
                            dateFormatter: new R(this.dCtx.ctx).formatDate,
                            w: e
                        }), (e.config.xaxis.convertedCatToNumeric && void 0 === r || "" === String(r).trim()) && (o = r = "1");
                        var h = new m(this.dCtx.ctx),
                            c = h.getTextRects(r, e.config.xaxis.labels.style.fontSize),
                            d = c;
                        if (r !== o && (d = h.getTextRects(o, e.config.xaxis.labels.style.fontSize)), (t = {
                                width: c.width >= d.width ? c.width : d.width,
                                height: c.height >= d.height ? c.height : d.height
                            }).width * i.length > e.globals.svgWidth - this.dCtx.lgWidthForSideLegends - this.dCtx.yAxisWidth - this.dCtx.gridPad.left - this.dCtx.gridPad.right && 0 !== e.config.xaxis.labels.rotate || e.config.xaxis.labels.rotateAlways) {
                            if (!e.globals.isBarHorizontal) {
                                e.globals.rotateXLabels = !0;
                                var g = function(t) {
                                    return h.getTextRects(t, e.config.xaxis.labels.style.fontSize, e.config.xaxis.labels.style.fontFamily, "rotate(".concat(e.config.xaxis.labels.rotate, " 0 0)"), !1)
                                };
                                c = g(r), r !== o && (d = g(o)), t.height = (c.height > d.height ? c.height : d.height) / 1.5, t.width = c.width > d.width ? c.width : d.width
                            }
                        } else e.globals.rotateXLabels = !1
                    }
                    return e.config.xaxis.labels.show || (t = {
                        width: 0,
                        height: 0
                    }), {
                        width: t.width,
                        height: t.height
                    }
                }
            }, {
                key: "getxAxisGroupLabelsCoords",
                value: function() {
                    var t, e = this.w;
                    if (!e.globals.hasGroups) return {
                        width: 0,
                        height: 0
                    };
                    var i, a = (null === (t = e.config.xaxis.group.style) || void 0 === t ? void 0 : t.fontSize) || e.config.xaxis.labels.style.fontSize,
                        s = e.globals.groups.map((function(t) {
                            return t.title
                        })),
                        r = x.getLargestStringFromArr(s),
                        o = this.dCtx.dimHelpers.getLargestStringFromMultiArr(r, s),
                        n = new m(this.dCtx.ctx),
                        l = n.getTextRects(r, a),
                        h = l;
                    return r !== o && (h = n.getTextRects(o, a)), i = {
                        width: l.width >= h.width ? l.width : h.width,
                        height: l.height >= h.height ? l.height : h.height
                    }, e.config.xaxis.labels.show || (i = {
                        width: 0,
                        height: 0
                    }), {
                        width: i.width,
                        height: i.height
                    }
                }
            }, {
                key: "getxAxisTitleCoords",
                value: function() {
                    var t = this.w,
                        e = 0,
                        i = 0;
                    if (void 0 !== t.config.xaxis.title.text) {
                        var a = new m(this.dCtx.ctx).getTextRects(t.config.xaxis.title.text, t.config.xaxis.title.style.fontSize);
                        e = a.width, i = a.height
                    }
                    return {
                        width: e,
                        height: i
                    }
                }
            }, {
                key: "getxAxisTimeScaleLabelsCoords",
                value: function() {
                    var t, e = this.w;
                    this.dCtx.timescaleLabels = e.globals.timescaleLabels.slice();
                    var i = this.dCtx.timescaleLabels.map((function(t) {
                            return t.value
                        })),
                        a = i.reduce((function(t, e) {
                            return void 0 === t ? (console.error("You have possibly supplied invalid Date format. Please supply a valid JavaScript Date"), 0) : t.length > e.length ? t : e
                        }), 0);
                    return 1.05 * (t = new m(this.dCtx.ctx).getTextRects(a, e.config.xaxis.labels.style.fontSize)).width * i.length > e.globals.gridWidth && 0 !== e.config.xaxis.labels.rotate && (e.globals.overlappingXLabels = !0), t
                }
            }, {
                key: "additionalPaddingXLabels",
                value: function(t) {
                    var e = this,
                        i = this.w,
                        a = i.globals,
                        s = i.config,
                        r = s.xaxis.type,
                        o = t.width;
                    a.skipLastTimelinelabel = !1, a.skipFirstTimelinelabel = !1;
                    var n = i.config.yaxis[0].opposite && i.globals.isBarHorizontal,
                        l = function(t, n) {
                            (function(t) {
                                return -1 !== a.collapsedSeriesIndices.indexOf(t)
                            })(n) || function(t) {
                                if (e.dCtx.timescaleLabels && e.dCtx.timescaleLabels.length) {
                                    var n = e.dCtx.timescaleLabels[0],
                                        l = e.dCtx.timescaleLabels[e.dCtx.timescaleLabels.length - 1].position + o / 1.75 - e.dCtx.yAxisWidthRight,
                                        h = n.position - o / 1.75 + e.dCtx.yAxisWidthLeft,
                                        c = "right" === i.config.legend.position && e.dCtx.lgRect.width > 0 ? e.dCtx.lgRect.width : 0;
                                    l > a.svgWidth - a.translateX - c && (a.skipLastTimelinelabel = !0), h < -(t.show && !t.floating || "bar" !== s.chart.type && "candlestick" !== s.chart.type && "rangeBar" !== s.chart.type && "boxPlot" !== s.chart.type ? 10 : o / 1.75) && (a.skipFirstTimelinelabel = !0)
                                } else "datetime" === r ? e.dCtx.gridPad.right < o && !a.rotateXLabels && (a.skipLastTimelinelabel = !0) : "datetime" !== r && e.dCtx.gridPad.right < o / 2 - e.dCtx.yAxisWidthRight && !a.rotateXLabels && !i.config.xaxis.labels.trim && ("between" !== i.config.xaxis.tickPlacement || i.globals.isBarHorizontal) && (e.dCtx.xPadRight = o / 2 + 1)
                            }(t)
                        };
                    s.yaxis.forEach((function(t, i) {
                        n ? (e.dCtx.gridPad.left < o && (e.dCtx.xPadLeft = o / 2 + 1), e.dCtx.xPadRight = o / 2 + 1) : l(t, i)
                    }))
                }
            }]), t
        }(),
        ot = function() {
            function t(e) {
                a(this, t), this.w = e.w, this.dCtx = e
            }
            return r(t, [{
                key: "getyAxisLabelsCoords",
                value: function() {
                    var t = this,
                        e = this.w,
                        i = [],
                        a = 10,
                        s = new G(this.dCtx.ctx);
                    return e.config.yaxis.map((function(r, o) {
                        var n = e.globals.yAxisScale[o],
                            l = 0;
                        if (!s.isYAxisHidden(o) && r.labels.show && void 0 !== r.labels.minWidth && (l = r.labels.minWidth), !s.isYAxisHidden(o) && r.labels.show && n.result.length) {
                            var h = e.globals.yLabelFormatters[o],
                                c = n.niceMin === Number.MIN_VALUE ? 0 : n.niceMin,
                                d = String(c).length > String(n.niceMax).length ? c : n.niceMax,
                                g = h(d, {
                                    seriesIndex: o,
                                    dataPointIndex: -1,
                                    w: e
                                }),
                                u = g;
                            if (void 0 !== g && 0 !== g.length || (g = d), e.globals.isBarHorizontal) {
                                a = 0;
                                var f = e.globals.labels.slice();
                                g = h(g = x.getLargestStringFromArr(f), {
                                    seriesIndex: o,
                                    dataPointIndex: -1,
                                    w: e
                                }), u = t.dCtx.dimHelpers.getLargestStringFromMultiArr(g, f)
                            }
                            var p = new m(t.dCtx.ctx),
                                b = "rotate(".concat(r.labels.rotate, " 0 0)"),
                                v = p.getTextRects(g, r.labels.style.fontSize, r.labels.style.fontFamily, b, !1),
                                y = v;
                            g !== u && (y = p.getTextRects(u, r.labels.style.fontSize, r.labels.style.fontFamily, b, !1)), i.push({
                                width: (l > y.width || l > v.width ? l : y.width > v.width ? y.width : v.width) + a,
                                height: y.height > v.height ? y.height : v.height
                            })
                        } else i.push({
                            width: 0,
                            height: 0
                        })
                    })), i
                }
            }, {
                key: "getyAxisTitleCoords",
                value: function() {
                    var t = this,
                        e = this.w,
                        i = [];
                    return e.config.yaxis.map((function(e, a) {
                        if (e.show && void 0 !== e.title.text) {
                            var s = new m(t.dCtx.ctx),
                                r = "rotate(".concat(e.title.rotate, " 0 0)"),
                                o = s.getTextRects(e.title.text, e.title.style.fontSize, e.title.style.fontFamily, r, !1);
                            i.push({
                                width: o.width,
                                height: o.height
                            })
                        } else i.push({
                            width: 0,
                            height: 0
                        })
                    })), i
                }
            }, {
                key: "getTotalYAxisWidth",
                value: function() {
                    var t = this.w,
                        e = 0,
                        i = 0,
                        a = 0,
                        s = t.globals.yAxisScale.length > 1 ? 10 : 0,
                        r = new G(this.dCtx.ctx),
                        o = function(o, n) {
                            var l = t.config.yaxis[n].floating,
                                h = 0;
                            o.width > 0 && !l ? (h = o.width + s, function(e) {
                                return t.globals.ignoreYAxisIndexes.indexOf(e) > -1
                            }(n) && (h = h - o.width - s)) : h = l || r.isYAxisHidden(n) ? 0 : 5, t.config.yaxis[n].opposite ? a += h : i += h, e += h
                        };
                    return t.globals.yLabelsCoords.map((function(t, e) {
                        o(t, e)
                    })), t.globals.yTitleCoords.map((function(t, e) {
                        o(t, e)
                    })), t.globals.isBarHorizontal && !t.config.yaxis[0].floating && (e = t.globals.yLabelsCoords[0].width + t.globals.yTitleCoords[0].width + 15), this.dCtx.yAxisWidthLeft = i, this.dCtx.yAxisWidthRight = a, e
                }
            }]), t
        }(),
        nt = function() {
            function t(e) {
                a(this, t), this.w = e.w, this.dCtx = e
            }
            return r(t, [{
                key: "gridPadForColumnsInNumericAxis",
                value: function(t) {
                    var e = this.w;
                    if (e.globals.noData || e.globals.allSeriesCollapsed) return 0;
                    var i = function(t) {
                            return "bar" === t || "rangeBar" === t || "candlestick" === t || "boxPlot" === t
                        },
                        a = e.config.chart.type,
                        s = 0,
                        r = i(a) ? e.config.series.length : 1;
                    if (e.globals.comboBarCount > 0 && (r = e.globals.comboBarCount), e.globals.collapsedSeries.forEach((function(t) {
                            i(t.type) && (r -= 1)
                        })), e.config.chart.stacked && (r = 1), (i(a) || e.globals.comboBarCount > 0) && e.globals.isXNumeric && !e.globals.isBarHorizontal && r > 0) {
                        var o, n, l = Math.abs(e.globals.initialMaxX - e.globals.initialMinX);
                        l <= 3 && (l = e.globals.dataPoints), o = l / t, e.globals.minXDiff && e.globals.minXDiff / o > 0 && (n = e.globals.minXDiff / o), n > t / 2 && (n /= 2), (s = n / r * parseInt(e.config.plotOptions.bar.columnWidth, 10) / 100) < 1 && (s = 1), s = s / (r > 1 ? 1 : 1.5) + 5, e.globals.barPadForNumericAxis = s
                    }
                    return s
                }
            }, {
                key: "gridPadFortitleSubtitle",
                value: function() {
                    var t = this,
                        e = this.w,
                        i = e.globals,
                        a = this.dCtx.isSparkline || !e.globals.axisCharts ? 0 : 10;
                    ["title", "subtitle"].forEach((function(i) {
                        void 0 !== e.config[i].text ? a += e.config[i].margin : a += t.dCtx.isSparkline || !e.globals.axisCharts ? 0 : 5
                    })), !e.config.legend.show || "bottom" !== e.config.legend.position || e.config.legend.floating || e.globals.axisCharts || (a += 10);
                    var s = this.dCtx.dimHelpers.getTitleSubtitleCoords("title"),
                        r = this.dCtx.dimHelpers.getTitleSubtitleCoords("subtitle");
                    i.gridHeight = i.gridHeight - s.height - r.height - a, i.translateY = i.translateY + s.height + r.height + a
                }
            }, {
                key: "setGridXPosForDualYAxis",
                value: function(t, e) {
                    var i = this.w,
                        a = new G(this.dCtx.ctx);
                    i.config.yaxis.map((function(s, r) {
                        -1 !== i.globals.ignoreYAxisIndexes.indexOf(r) || s.floating || a.isYAxisHidden(r) || (s.opposite && (i.globals.translateX = i.globals.translateX - (e[r].width + t[r].width) - parseInt(i.config.yaxis[r].labels.style.fontSize, 10) / 1.2 - 12), i.globals.translateX < 2 && (i.globals.translateX = 2))
                    }))
                }
            }]), t
        }(),
        lt = function() {
            function t(e) {
                a(this, t), this.ctx = e, this.w = e.w, this.lgRect = {}, this.yAxisWidth = 0, this.yAxisWidthLeft = 0, this.yAxisWidthRight = 0, this.xAxisHeight = 0, this.isSparkline = this.w.config.chart.sparkline.enabled, this.dimHelpers = new st(this), this.dimYAxis = new ot(this), this.dimXAxis = new rt(this), this.dimGrid = new nt(this), this.lgWidthForSideLegends = 0, this.gridPad = this.w.config.grid.padding, this.xPadRight = 0, this.xPadLeft = 0
            }
            return r(t, [{
                key: "plotCoords",
                value: function() {
                    var t = this,
                        e = this.w,
                        i = e.globals;
                    this.lgRect = this.dimHelpers.getLegendsRect(), this.isSparkline && (e.config.markers.discrete.length > 0 || e.config.markers.size > 0) && Object.entries(this.gridPad).forEach((function(e) {
                        var i = g(e, 2),
                            a = i[0],
                            s = i[1];
                        t.gridPad[a] = Math.max(s, t.w.globals.markers.largestSize / 1.5)
                    })), i.axisCharts ? this.setDimensionsForAxisCharts() : this.setDimensionsForNonAxisCharts(), this.dimGrid.gridPadFortitleSubtitle(), i.gridHeight = i.gridHeight - this.gridPad.top - this.gridPad.bottom, i.gridWidth = i.gridWidth - this.gridPad.left - this.gridPad.right - this.xPadRight - this.xPadLeft;
                    var a = this.dimGrid.gridPadForColumnsInNumericAxis(i.gridWidth);
                    i.gridWidth = i.gridWidth - 2 * a, i.translateX = i.translateX + this.gridPad.left + this.xPadLeft + (a > 0 ? a + 4 : 0), i.translateY = i.translateY + this.gridPad.top
                }
            }, {
                key: "setDimensionsForAxisCharts",
                value: function() {
                    var t = this,
                        e = this.w,
                        i = e.globals,
                        a = this.dimYAxis.getyAxisLabelsCoords(),
                        s = this.dimYAxis.getyAxisTitleCoords();
                    e.globals.yLabelsCoords = [], e.globals.yTitleCoords = [], e.config.yaxis.map((function(t, i) {
                        e.globals.yLabelsCoords.push({
                            width: a[i].width,
                            index: i
                        }), e.globals.yTitleCoords.push({
                            width: s[i].width,
                            index: i
                        })
                    })), this.yAxisWidth = this.dimYAxis.getTotalYAxisWidth();
                    var r = this.dimXAxis.getxAxisLabelsCoords(),
                        o = this.dimXAxis.getxAxisGroupLabelsCoords(),
                        n = this.dimXAxis.getxAxisTitleCoords();
                    this.conditionalChecksForAxisCoords(r, n, o), i.translateXAxisY = e.globals.rotateXLabels ? this.xAxisHeight / 8 : -4, i.translateXAxisX = e.globals.rotateXLabels && e.globals.isXNumeric && e.config.xaxis.labels.rotate <= -45 ? -this.xAxisWidth / 4 : 0, e.globals.isBarHorizontal && (i.rotateXLabels = !1, i.translateXAxisY = parseInt(e.config.xaxis.labels.style.fontSize, 10) / 1.5 * -1), i.translateXAxisY = i.translateXAxisY + e.config.xaxis.labels.offsetY, i.translateXAxisX = i.translateXAxisX + e.config.xaxis.labels.offsetX;
                    var l = this.yAxisWidth,
                        h = this.xAxisHeight;
                    i.xAxisLabelsHeight = this.xAxisHeight - n.height, i.xAxisGroupLabelsHeight = i.xAxisLabelsHeight - r.height, i.xAxisLabelsWidth = this.xAxisWidth, i.xAxisHeight = this.xAxisHeight;
                    var c = 10;
                    ("radar" === e.config.chart.type || this.isSparkline) && (l = 0, h = i.goldenPadding), this.isSparkline && (this.lgRect = {
                        height: 0,
                        width: 0
                    }), (this.isSparkline || "treemap" === e.config.chart.type) && (l = 0, h = 0, c = 0), this.isSparkline || this.dimXAxis.additionalPaddingXLabels(r);
                    var d = function() {
                        i.translateX = l, i.gridHeight = i.svgHeight - t.lgRect.height - h - (t.isSparkline || "treemap" === e.config.chart.type ? 0 : e.globals.rotateXLabels ? 10 : 15), i.gridWidth = i.svgWidth - l
                    };
                    switch ("top" === e.config.xaxis.position && (c = i.xAxisHeight - e.config.xaxis.axisTicks.height - 5), e.config.legend.position) {
                        case "bottom":
                            i.translateY = c, d();
                            break;
                        case "top":
                            i.translateY = this.lgRect.height + c, d();
                            break;
                        case "left":
                            i.translateY = c, i.translateX = this.lgRect.width + l, i.gridHeight = i.svgHeight - h - 12, i.gridWidth = i.svgWidth - this.lgRect.width - l;
                            break;
                        case "right":
                            i.translateY = c, i.translateX = l, i.gridHeight = i.svgHeight - h - 12, i.gridWidth = i.svgWidth - this.lgRect.width - l - 5;
                            break;
                        default:
                            throw new Error("Legend position not supported")
                    }
                    this.dimGrid.setGridXPosForDualYAxis(s, a), new $(this.ctx).setYAxisXPosition(a, s)
                }
            }, {
                key: "setDimensionsForNonAxisCharts",
                value: function() {
                    var t = this.w,
                        e = t.globals,
                        i = t.config,
                        a = 0;
                    t.config.legend.show && !t.config.legend.floating && (a = 20);
                    var s = "pie" === i.chart.type || "polarArea" === i.chart.type || "donut" === i.chart.type ? "pie" : "radialBar",
                        r = i.plotOptions[s].offsetY,
                        o = i.plotOptions[s].offsetX;
                    if (!i.legend.show || i.legend.floating) return e.gridHeight = e.svgHeight - i.grid.padding.left + i.grid.padding.right, e.gridWidth = e.gridHeight, e.translateY = r, void(e.translateX = o + (e.svgWidth - e.gridWidth) / 2);
                    switch (i.legend.position) {
                        case "bottom":
                            e.gridHeight = e.svgHeight - this.lgRect.height - e.goldenPadding, e.gridWidth = e.svgWidth, e.translateY = r - 10, e.translateX = o + (e.svgWidth - e.gridWidth) / 2;
                            break;
                        case "top":
                            e.gridHeight = e.svgHeight - this.lgRect.height - e.goldenPadding, e.gridWidth = e.svgWidth, e.translateY = this.lgRect.height + r + 10, e.translateX = o + (e.svgWidth - e.gridWidth) / 2;
                            break;
                        case "left":
                            e.gridWidth = e.svgWidth - this.lgRect.width - a, e.gridHeight = "auto" !== i.chart.height ? e.svgHeight : e.gridWidth, e.translateY = r, e.translateX = o + this.lgRect.width + a;
                            break;
                        case "right":
                            e.gridWidth = e.svgWidth - this.lgRect.width - a - 5, e.gridHeight = "auto" !== i.chart.height ? e.svgHeight : e.gridWidth, e.translateY = r, e.translateX = o + 10;
                            break;
                        default:
                            throw new Error("Legend position not supported")
                    }
                }
            }, {
                key: "conditionalChecksForAxisCoords",
                value: function(t, e, i) {
                    var a = this.w,
                        s = a.globals.hasGroups ? 2 : 1,
                        r = i.height + t.height + e.height,
                        o = a.globals.isMultiLineX ? 1.2 : a.globals.LINE_HEIGHT_RATIO,
                        n = a.globals.rotateXLabels ? 22 : 10,
                        l = a.globals.rotateXLabels && "bottom" === a.config.legend.position ? 10 : 0;
                    this.xAxisHeight = r * o + s * n + l, this.xAxisWidth = t.width, this.xAxisHeight - e.height > a.config.xaxis.labels.maxHeight && (this.xAxisHeight = a.config.xaxis.labels.maxHeight), a.config.xaxis.labels.minHeight && this.xAxisHeight < a.config.xaxis.labels.minHeight && (this.xAxisHeight = a.config.xaxis.labels.minHeight), a.config.xaxis.floating && (this.xAxisHeight = 0);
                    var h = 0,
                        c = 0;
                    a.config.yaxis.forEach((function(t) {
                        h += t.labels.minWidth, c += t.labels.maxWidth
                    })), this.yAxisWidth < h && (this.yAxisWidth = h), this.yAxisWidth > c && (this.yAxisWidth = c)
                }
            }]), t
        }(),
        ht = function() {
            function t(e) {
                a(this, t), this.w = e.w, this.lgCtx = e
            }
            return r(t, [{
                key: "getLegendStyles",
                value: function() {
                    var t = document.createElement("style");
                    t.setAttribute("type", "text/css");
                    var e = document.createTextNode("\t\n    \t\n      .apexcharts-legend {\t\n        display: flex;\t\n        overflow: auto;\t\n        padding: 0 10px;\t\n      }\t\n      .apexcharts-legend.apx-legend-position-bottom, .apexcharts-legend.apx-legend-position-top {\t\n        flex-wrap: wrap\t\n      }\t\n      .apexcharts-legend.apx-legend-position-right, .apexcharts-legend.apx-legend-position-left {\t\n        flex-direction: column;\t\n        bottom: 0;\t\n      }\t\n      .apexcharts-legend.apx-legend-position-bottom.apexcharts-align-left, .apexcharts-legend.apx-legend-position-top.apexcharts-align-left, .apexcharts-legend.apx-legend-position-right, .apexcharts-legend.apx-legend-position-left {\t\n        justify-content: flex-start;\t\n      }\t\n      .apexcharts-legend.apx-legend-position-bottom.apexcharts-align-center, .apexcharts-legend.apx-legend-position-top.apexcharts-align-center {\t\n        justify-content: center;  \t\n      }\t\n      .apexcharts-legend.apx-legend-position-bottom.apexcharts-align-right, .apexcharts-legend.apx-legend-position-top.apexcharts-align-right {\t\n        justify-content: flex-end;\t\n      }\t\n      .apexcharts-legend-series {\t\n        cursor: pointer;\t\n        line-height: normal;\t\n      }\t\n      .apexcharts-legend.apx-legend-position-bottom .apexcharts-legend-series, .apexcharts-legend.apx-legend-position-top .apexcharts-legend-series{\t\n        display: flex;\t\n        align-items: center;\t\n      }\t\n      .apexcharts-legend-text {\t\n        position: relative;\t\n        font-size: 14px;\t\n      }\t\n      .apexcharts-legend-text *, .apexcharts-legend-marker * {\t\n        pointer-events: none;\t\n      }\t\n      .apexcharts-legend-marker {\t\n        position: relative;\t\n        display: inline-block;\t\n        cursor: pointer;\t\n        margin-right: 3px;\t\n        border-style: solid;\n      }\t\n      \t\n      .apexcharts-legend.apexcharts-align-right .apexcharts-legend-series, .apexcharts-legend.apexcharts-align-left .apexcharts-legend-series{\t\n        display: inline-block;\t\n      }\t\n      .apexcharts-legend-series.apexcharts-no-click {\t\n        cursor: auto;\t\n      }\t\n      .apexcharts-legend .apexcharts-hidden-zero-series, .apexcharts-legend .apexcharts-hidden-null-series {\t\n        display: none !important;\t\n      }\t\n      .apexcharts-inactive-legend {\t\n        opacity: 0.45;\t\n      }");
                    return t.appendChild(e), t
                }
            }, {
                key: "getLegendBBox",
                value: function() {
                    var t = this.w.globals.dom.baseEl.querySelector(".apexcharts-legend").getBoundingClientRect(),
                        e = t.width;
                    return {
                        clwh: t.height,
                        clww: e
                    }
                }
            }, {
                key: "appendToForeignObject",
                value: function() {
                    var t = this.w.globals;
                    t.dom.elLegendForeign = document.createElementNS(t.SVGNS, "foreignObject");
                    var e = t.dom.elLegendForeign;
                    e.setAttribute("x", 0), e.setAttribute("y", 0), e.setAttribute("width", t.svgWidth), e.setAttribute("height", t.svgHeight), t.dom.elLegendWrap.setAttribute("xmlns", "http://www.w3.org/1999/xhtml"), e.appendChild(t.dom.elLegendWrap), e.appendChild(this.getLegendStyles()), t.dom.Paper.node.insertBefore(e, t.dom.elGraphical.node)
                }
            }, {
                key: "toggleDataSeries",
                value: function(t, e) {
                    var i = this,
                        a = this.w;
                    if (a.globals.axisCharts || "radialBar" === a.config.chart.type) {
                        a.globals.resized = !0;
                        var s = null,
                            r = null;
                        if (a.globals.risingSeries = [], a.globals.axisCharts ? (s = a.globals.dom.baseEl.querySelector(".apexcharts-series[data\\:realIndex='".concat(t, "']")), r = parseInt(s.getAttribute("data:realIndex"), 10)) : (s = a.globals.dom.baseEl.querySelector(".apexcharts-series[rel='".concat(t + 1, "']")), r = parseInt(s.getAttribute("rel"), 10) - 1), e)[{
                            cs: a.globals.collapsedSeries,
                            csi: a.globals.collapsedSeriesIndices
                        }, {
                            cs: a.globals.ancillaryCollapsedSeries,
                            csi: a.globals.ancillaryCollapsedSeriesIndices
                        }].forEach((function(t) {
                            i.riseCollapsedSeries(t.cs, t.csi, r)
                        }));
                        else this.hideSeries({
                            seriesEl: s,
                            realIndex: r
                        })
                    } else {
                        var o = a.globals.dom.Paper.select(" .apexcharts-series[rel='".concat(t + 1, "'] path")),
                            n = a.config.chart.type;
                        if ("pie" === n || "polarArea" === n || "donut" === n) {
                            var l = a.config.plotOptions.pie.donut.labels;
                            new m(this.lgCtx.ctx).pathMouseDown(o.members[0], null), this.lgCtx.ctx.pie.printDataLabelsInner(o.members[0].node, l)
                        }
                        o.fire("click")
                    }
                }
            }, {
                key: "hideSeries",
                value: function(t) {
                    var e = t.seriesEl,
                        i = t.realIndex,
                        a = this.w,
                        s = x.clone(a.config.series);
                    if (a.globals.axisCharts) {
                        var r = !1;
                        if (a.config.yaxis[i] && a.config.yaxis[i].show && a.config.yaxis[i].showAlways && (r = !0, a.globals.ancillaryCollapsedSeriesIndices.indexOf(i) < 0 && (a.globals.ancillaryCollapsedSeries.push({
                                index: i,
                                data: s[i].data.slice(),
                                type: e.parentNode.className.baseVal.split("-")[1]
                            }), a.globals.ancillaryCollapsedSeriesIndices.push(i))), !r) {
                            a.globals.collapsedSeries.push({
                                index: i,
                                data: s[i].data.slice(),
                                type: e.parentNode.className.baseVal.split("-")[1]
                            }), a.globals.collapsedSeriesIndices.push(i);
                            var o = a.globals.risingSeries.indexOf(i);
                            a.globals.risingSeries.splice(o, 1)
                        }
                    } else a.globals.collapsedSeries.push({
                        index: i,
                        data: s[i]
                    }), a.globals.collapsedSeriesIndices.push(i);
                    for (var n = e.childNodes, l = 0; l < n.length; l++) n[l].classList.contains("apexcharts-series-markers-wrap") && (n[l].classList.contains("apexcharts-hide") ? n[l].classList.remove("apexcharts-hide") : n[l].classList.add("apexcharts-hide"));
                    a.globals.allSeriesCollapsed = a.globals.collapsedSeries.length === a.config.series.length, s = this._getSeriesBasedOnCollapsedState(s), this.lgCtx.ctx.updateHelpers._updateSeries(s, a.config.chart.animations.dynamicAnimation.enabled)
                }
            }, {
                key: "riseCollapsedSeries",
                value: function(t, e, i) {
                    var a = this.w,
                        s = x.clone(a.config.series);
                    if (t.length > 0) {
                        for (var r = 0; r < t.length; r++) t[r].index === i && (a.globals.axisCharts ? (s[i].data = t[r].data.slice(), t.splice(r, 1), e.splice(r, 1), a.globals.risingSeries.push(i)) : (s[i] = t[r].data, t.splice(r, 1), e.splice(r, 1), a.globals.risingSeries.push(i)));
                        s = this._getSeriesBasedOnCollapsedState(s), this.lgCtx.ctx.updateHelpers._updateSeries(s, a.config.chart.animations.dynamicAnimation.enabled)
                    }
                }
            }, {
                key: "_getSeriesBasedOnCollapsedState",
                value: function(t) {
                    var e = this.w;
                    return e.globals.axisCharts ? t.forEach((function(i, a) {
                        e.globals.collapsedSeriesIndices.indexOf(a) > -1 && (t[a].data = [])
                    })) : t.forEach((function(i, a) {
                        e.globals.collapsedSeriesIndices.indexOf(a) > -1 && (t[a] = 0)
                    })), t
                }
            }]), t
        }(),
        ct = function() {
            function t(e, i) {
                a(this, t), this.ctx = e, this.w = e.w, this.onLegendClick = this.onLegendClick.bind(this), this.onLegendHovered = this.onLegendHovered.bind(this), this.isBarsDistributed = "bar" === this.w.config.chart.type && this.w.config.plotOptions.bar.distributed && 1 === this.w.config.series.length, this.legendHelpers = new ht(this)
            }
            return r(t, [{
                key: "init",
                value: function() {
                    var t = this.w,
                        e = t.globals,
                        i = t.config;
                    if ((i.legend.showForSingleSeries && 1 === e.series.length || this.isBarsDistributed || e.series.length > 1 || !e.axisCharts) && i.legend.show) {
                        for (; e.dom.elLegendWrap.firstChild;) e.dom.elLegendWrap.removeChild(e.dom.elLegendWrap.firstChild);
                        this.drawLegends(), x.isIE11() ? document.getElementsByTagName("head")[0].appendChild(this.legendHelpers.getLegendStyles()) : this.legendHelpers.appendToForeignObject(), "bottom" === i.legend.position || "top" === i.legend.position ? this.legendAlignHorizontal() : "right" !== i.legend.position && "left" !== i.legend.position || this.legendAlignVertical()
                    }
                }
            }, {
                key: "drawLegends",
                value: function() {
                    var t = this,
                        e = this.w,
                        i = e.config.legend.fontFamily,
                        a = e.globals.seriesNames,
                        s = e.globals.colors.slice();
                    if ("heatmap" === e.config.chart.type) {
                        var r = e.config.plotOptions.heatmap.colorScale.ranges;
                        a = r.map((function(t) {
                            return t.name ? t.name : t.from + " - " + t.to
                        })), s = r.map((function(t) {
                            return t.color
                        }))
                    } else this.isBarsDistributed && (a = e.globals.labels.slice());
                    e.config.legend.customLegendItems.length && (a = e.config.legend.customLegendItems);
                    for (var o = e.globals.legendFormatter, n = e.config.legend.inverseOrder, l = n ? a.length - 1 : 0; n ? l >= 0 : l <= a.length - 1; n ? l-- : l++) {
                        var h = o(a[l], {
                                seriesIndex: l,
                                w: e
                            }),
                            c = !1,
                            d = !1;
                        if (e.globals.collapsedSeries.length > 0)
                            for (var g = 0; g < e.globals.collapsedSeries.length; g++) e.globals.collapsedSeries[g].index === l && (c = !0);
                        if (e.globals.ancillaryCollapsedSeriesIndices.length > 0)
                            for (var u = 0; u < e.globals.ancillaryCollapsedSeriesIndices.length; u++) e.globals.ancillaryCollapsedSeriesIndices[u] === l && (d = !0);
                        var f = document.createElement("span");
                        f.classList.add("apexcharts-legend-marker");
                        var p = e.config.legend.markers.offsetX,
                            b = e.config.legend.markers.offsetY,
                            v = e.config.legend.markers.height,
                            w = e.config.legend.markers.width,
                            k = e.config.legend.markers.strokeWidth,
                            A = e.config.legend.markers.strokeColor,
                            S = e.config.legend.markers.radius,
                            C = f.style;
                        C.background = s[l], C.color = s[l], C.setProperty("background", s[l], "important"), e.config.legend.markers.fillColors && e.config.legend.markers.fillColors[l] && (C.background = e.config.legend.markers.fillColors[l]), void 0 !== e.globals.seriesColors[l] && (C.background = e.globals.seriesColors[l], C.color = e.globals.seriesColors[l]), C.height = Array.isArray(v) ? parseFloat(v[l]) + "px" : parseFloat(v) + "px", C.width = Array.isArray(w) ? parseFloat(w[l]) + "px" : parseFloat(w) + "px", C.left = (Array.isArray(p) ? parseFloat(p[l]) : parseFloat(p)) + "px", C.top = (Array.isArray(b) ? parseFloat(b[l]) : parseFloat(b)) + "px", C.borderWidth = Array.isArray(k) ? k[l] : k, C.borderColor = Array.isArray(A) ? A[l] : A, C.borderRadius = Array.isArray(S) ? parseFloat(S[l]) + "px" : parseFloat(S) + "px", e.config.legend.markers.customHTML && (Array.isArray(e.config.legend.markers.customHTML) ? e.config.legend.markers.customHTML[l] && (f.innerHTML = e.config.legend.markers.customHTML[l]()) : f.innerHTML = e.config.legend.markers.customHTML()), m.setAttrs(f, {
                            rel: l + 1,
                            "data:collapsed": c || d
                        }), (c || d) && f.classList.add("apexcharts-inactive-legend");
                        var L = document.createElement("div"),
                            P = document.createElement("span");
                        P.classList.add("apexcharts-legend-text"), P.innerHTML = Array.isArray(h) ? h.join(" ") : h;
                        var M = e.config.legend.labels.useSeriesColors ? e.globals.colors[l] : e.config.legend.labels.colors;
                        M || (M = e.config.chart.foreColor), P.style.color = M, P.style.fontSize = parseFloat(e.config.legend.fontSize) + "px", P.style.fontWeight = e.config.legend.fontWeight, P.style.fontFamily = i || e.config.chart.fontFamily, m.setAttrs(P, {
                            rel: l + 1,
                            i: l,
                            "data:default-text": encodeURIComponent(h),
                            "data:collapsed": c || d
                        }), L.appendChild(f), L.appendChild(P);
                        var T = new y(this.ctx);
                        if (!e.config.legend.showForZeroSeries) 0 === T.getSeriesTotalByIndex(l) && T.seriesHaveSameValues(l) && !T.isSeriesNull(l) && -1 === e.globals.collapsedSeriesIndices.indexOf(l) && -1 === e.globals.ancillaryCollapsedSeriesIndices.indexOf(l) && L.classList.add("apexcharts-hidden-zero-series");
                        e.config.legend.showForNullSeries || T.isSeriesNull(l) && -1 === e.globals.collapsedSeriesIndices.indexOf(l) && -1 === e.globals.ancillaryCollapsedSeriesIndices.indexOf(l) && L.classList.add("apexcharts-hidden-null-series"), e.globals.dom.elLegendWrap.appendChild(L), e.globals.dom.elLegendWrap.classList.add("apexcharts-align-".concat(e.config.legend.horizontalAlign)), e.globals.dom.elLegendWrap.classList.add("apx-legend-position-" + e.config.legend.position), L.classList.add("apexcharts-legend-series"), L.style.margin = "".concat(e.config.legend.itemMargin.vertical, "px ").concat(e.config.legend.itemMargin.horizontal, "px"), e.globals.dom.elLegendWrap.style.width = e.config.legend.width ? e.config.legend.width + "px" : "", e.globals.dom.elLegendWrap.style.height = e.config.legend.height ? e.config.legend.height + "px" : "", m.setAttrs(L, {
                            rel: l + 1,
                            seriesName: x.escapeString(a[l]),
                            "data:collapsed": c || d
                        }), (c || d) && L.classList.add("apexcharts-inactive-legend"), e.config.legend.onItemClick.toggleDataSeries || L.classList.add("apexcharts-no-click")
                    }
                    e.globals.dom.elWrap.addEventListener("click", t.onLegendClick, !0), e.config.legend.onItemHover.highlightDataSeries && 0 === e.config.legend.customLegendItems.length && (e.globals.dom.elWrap.addEventListener("mousemove", t.onLegendHovered, !0), e.globals.dom.elWrap.addEventListener("mouseout", t.onLegendHovered, !0))
                }
            }, {
                key: "setLegendWrapXY",
                value: function(t, e) {
                    var i = this.w,
                        a = i.globals.dom.baseEl.querySelector(".apexcharts-legend"),
                        s = a.getBoundingClientRect(),
                        r = 0,
                        o = 0;
                    if ("bottom" === i.config.legend.position) o += i.globals.svgHeight - s.height / 2;
                    else if ("top" === i.config.legend.position) {
                        var n = new lt(this.ctx),
                            l = n.dimHelpers.getTitleSubtitleCoords("title").height,
                            h = n.dimHelpers.getTitleSubtitleCoords("subtitle").height;
                        o = o + (l > 0 ? l - 10 : 0) + (h > 0 ? h - 10 : 0)
                    }
                    a.style.position = "absolute", r = r + t + i.config.legend.offsetX, o = o + e + i.config.legend.offsetY, a.style.left = r + "px", a.style.top = o + "px", "bottom" === i.config.legend.position ? (a.style.top = "auto", a.style.bottom = 5 - i.config.legend.offsetY + "px") : "right" === i.config.legend.position && (a.style.left = "auto", a.style.right = 25 + i.config.legend.offsetX + "px");
                    ["width", "height"].forEach((function(t) {
                        a.style[t] && (a.style[t] = parseInt(i.config.legend[t], 10) + "px")
                    }))
                }
            }, {
                key: "legendAlignHorizontal",
                value: function() {
                    var t = this.w;
                    t.globals.dom.baseEl.querySelector(".apexcharts-legend").style.right = 0;
                    var e = this.legendHelpers.getLegendBBox(),
                        i = new lt(this.ctx),
                        a = i.dimHelpers.getTitleSubtitleCoords("title"),
                        s = i.dimHelpers.getTitleSubtitleCoords("subtitle"),
                        r = 0;
                    "bottom" === t.config.legend.position ? r = -e.clwh / 1.8 : "top" === t.config.legend.position && (r = a.height + s.height + t.config.title.margin + t.config.subtitle.margin - 10), this.setLegendWrapXY(20, r)
                }
            }, {
                key: "legendAlignVertical",
                value: function() {
                    var t = this.w,
                        e = this.legendHelpers.getLegendBBox(),
                        i = 0;
                    "left" === t.config.legend.position && (i = 20), "right" === t.config.legend.position && (i = t.globals.svgWidth - e.clww - 10), this.setLegendWrapXY(i, 20)
                }
            }, {
                key: "onLegendHovered",
                value: function(t) {
                    var e = this.w,
                        i = t.target.classList.contains("apexcharts-legend-text") || t.target.classList.contains("apexcharts-legend-marker");
                    if ("heatmap" === e.config.chart.type || this.isBarsDistributed) {
                        if (i) {
                            var a = parseInt(t.target.getAttribute("rel"), 10) - 1;
                            this.ctx.events.fireEvent("legendHover", [this.ctx, a, this.w]), new E(this.ctx).highlightRangeInSeries(t, t.target)
                        }
                    } else !t.target.classList.contains("apexcharts-inactive-legend") && i && new E(this.ctx).toggleSeriesOnHover(t, t.target)
                }
            }, {
                key: "onLegendClick",
                value: function(t) {
                    var e = this.w;
                    if (!e.config.legend.customLegendItems.length && (t.target.classList.contains("apexcharts-legend-text") || t.target.classList.contains("apexcharts-legend-marker"))) {
                        var i = parseInt(t.target.getAttribute("rel"), 10) - 1,
                            a = "true" === t.target.getAttribute("data:collapsed"),
                            s = this.w.config.chart.events.legendClick;
                        "function" == typeof s && s(this.ctx, i, this.w), this.ctx.events.fireEvent("legendClick", [this.ctx, i, this.w]);
                        var r = this.w.config.legend.markers.onClick;
                        "function" == typeof r && t.target.classList.contains("apexcharts-legend-marker") && (r(this.ctx, i, this.w), this.ctx.events.fireEvent("legendMarkerClick", [this.ctx, i, this.w])), "treemap" !== e.config.chart.type && "heatmap" !== e.config.chart.type && !this.isBarsDistributed && e.config.legend.onItemClick.toggleDataSeries && this.legendHelpers.toggleDataSeries(i, a)
                    }
                }
            }]), t
        }(),
        dt = function() {
            function t(e) {
                a(this, t), this.ctx = e, this.w = e.w;
                var i = this.w;
                this.ev = this.w.config.chart.events, this.selectedClass = "apexcharts-selected", this.localeValues = this.w.globals.locale.toolbar, this.minX = i.globals.minX, this.maxX = i.globals.maxX
            }
            return r(t, [{
                key: "createToolbar",
                value: function() {
                    var t = this,
                        e = this.w,
                        i = function() {
                            return document.createElement("div")
                        },
                        a = i();
                    if (a.setAttribute("class", "apexcharts-toolbar"), a.style.top = e.config.chart.toolbar.offsetY + "px", a.style.right = 3 - e.config.chart.toolbar.offsetX + "px", e.globals.dom.elWrap.appendChild(a), this.elZoom = i(), this.elZoomIn = i(), this.elZoomOut = i(), this.elPan = i(), this.elSelection = i(), this.elZoomReset = i(), this.elMenuIcon = i(), this.elMenu = i(), this.elCustomIcons = [], this.t = e.config.chart.toolbar.tools, Array.isArray(this.t.customIcons))
                        for (var s = 0; s < this.t.customIcons.length; s++) this.elCustomIcons.push(i());
                    var r = [],
                        o = function(i, a, s) {
                            var o = i.toLowerCase();
                            t.t[o] && e.config.chart.zoom.enabled && r.push({
                                el: a,
                                icon: "string" == typeof t.t[o] ? t.t[o] : s,
                                title: t.localeValues[i],
                                class: "apexcharts-".concat(o, "-icon")
                            })
                        };
                    o("zoomIn", this.elZoomIn, '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24">\n    <path d="M0 0h24v24H0z" fill="none"/>\n    <path d="M13 7h-2v4H7v2h4v4h2v-4h4v-2h-4V7zm-1-5C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8z"/>\n</svg>\n'), o("zoomOut", this.elZoomOut, '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24">\n    <path d="M0 0h24v24H0z" fill="none"/>\n    <path d="M7 11v2h10v-2H7zm5-9C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8z"/>\n</svg>\n');
                    var n = function(i) {
                        t.t[i] && e.config.chart[i].enabled && r.push({
                            el: "zoom" === i ? t.elZoom : t.elSelection,
                            icon: "string" == typeof t.t[i] ? t.t[i] : "zoom" === i ? '<svg xmlns="http://www.w3.org/2000/svg" fill="#000000" height="24" viewBox="0 0 24 24" width="24">\n    <path d="M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z"/>\n    <path d="M0 0h24v24H0V0z" fill="none"/>\n    <path d="M12 10h-2v2H9v-2H7V9h2V7h1v2h2v1z"/>\n</svg>' : '<svg fill="#6E8192" height="24" viewBox="0 0 24 24" width="24" xmlns="http://www.w3.org/2000/svg">\n    <path d="M0 0h24v24H0z" fill="none"/>\n    <path d="M3 5h2V3c-1.1 0-2 .9-2 2zm0 8h2v-2H3v2zm4 8h2v-2H7v2zM3 9h2V7H3v2zm10-6h-2v2h2V3zm6 0v2h2c0-1.1-.9-2-2-2zM5 21v-2H3c0 1.1.9 2 2 2zm-2-4h2v-2H3v2zM9 3H7v2h2V3zm2 18h2v-2h-2v2zm8-8h2v-2h-2v2zm0 8c1.1 0 2-.9 2-2h-2v2zm0-12h2V7h-2v2zm0 8h2v-2h-2v2zm-4 4h2v-2h-2v2zm0-16h2V3h-2v2z"/>\n</svg>',
                            title: t.localeValues["zoom" === i ? "selectionZoom" : "selection"],
                            class: e.globals.isTouchDevice ? "apexcharts-element-hidden" : "apexcharts-".concat(i, "-icon")
                        })
                    };
                    n("zoom"), n("selection"), this.t.pan && e.config.chart.zoom.enabled && r.push({
                        el: this.elPan,
                        icon: "string" == typeof this.t.pan ? this.t.pan : '<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" fill="#000000" height="24" viewBox="0 0 24 24" width="24">\n    <defs>\n        <path d="M0 0h24v24H0z" id="a"/>\n    </defs>\n    <clipPath id="b">\n        <use overflow="visible" xlink:href="#a"/>\n    </clipPath>\n    <path clip-path="url(#b)" d="M23 5.5V20c0 2.2-1.8 4-4 4h-7.3c-1.08 0-2.1-.43-2.85-1.19L1 14.83s1.26-1.23 1.3-1.25c.22-.19.49-.29.79-.29.22 0 .42.06.6.16.04.01 4.31 2.46 4.31 2.46V4c0-.83.67-1.5 1.5-1.5S11 3.17 11 4v7h1V1.5c0-.83.67-1.5 1.5-1.5S15 .67 15 1.5V11h1V2.5c0-.83.67-1.5 1.5-1.5s1.5.67 1.5 1.5V11h1V5.5c0-.83.67-1.5 1.5-1.5s1.5.67 1.5 1.5z"/>\n</svg>',
                        title: this.localeValues.pan,
                        class: e.globals.isTouchDevice ? "apexcharts-element-hidden" : "apexcharts-pan-icon"
                    }), o("reset", this.elZoomReset, '<svg fill="#000000" height="24" viewBox="0 0 24 24" width="24" xmlns="http://www.w3.org/2000/svg">\n    <path d="M10 20v-6h4v6h5v-8h3L12 3 2 12h3v8z"/>\n    <path d="M0 0h24v24H0z" fill="none"/>\n</svg>'), this.t.download && r.push({
                        el: this.elMenuIcon,
                        icon: "string" == typeof this.t.download ? this.t.download : '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24"><path fill="none" d="M0 0h24v24H0V0z"/><path d="M3 18h18v-2H3v2zm0-5h18v-2H3v2zm0-7v2h18V6H3z"/></svg>',
                        title: this.localeValues.menu,
                        class: "apexcharts-menu-icon"
                    });
                    for (var l = 0; l < this.elCustomIcons.length; l++) r.push({
                        el: this.elCustomIcons[l],
                        icon: this.t.customIcons[l].icon,
                        title: this.t.customIcons[l].title,
                        index: this.t.customIcons[l].index,
                        class: "apexcharts-toolbar-custom-icon " + this.t.customIcons[l].class
                    });
                    r.forEach((function(t, e) {
                        t.index && x.moveIndexInArray(r, e, t.index)
                    }));
                    for (var h = 0; h < r.length; h++) m.setAttrs(r[h].el, {
                        class: r[h].class,
                        title: r[h].title
                    }), r[h].el.innerHTML = r[h].icon, a.appendChild(r[h].el);
                    this._createHamburgerMenu(a), e.globals.zoomEnabled ? this.elZoom.classList.add(this.selectedClass) : e.globals.panEnabled ? this.elPan.classList.add(this.selectedClass) : e.globals.selectionEnabled && this.elSelection.classList.add(this.selectedClass), this.addToolbarEventListeners()
                }
            }, {
                key: "_createHamburgerMenu",
                value: function(t) {
                    this.elMenuItems = [], t.appendChild(this.elMenu), m.setAttrs(this.elMenu, {
                        class: "apexcharts-menu"
                    });
                    var e = [{
                        name: "exportSVG",
                        title: this.localeValues.exportToSVG
                    }, {
                        name: "exportPNG",
                        title: this.localeValues.exportToPNG
                    }, {
                        name: "exportCSV",
                        title: this.localeValues.exportToCSV
                    }];
                    this.w.globals.allSeriesHasEqualX || e.splice(2, 1);
                    for (var i = 0; i < e.length; i++) this.elMenuItems.push(document.createElement("div")), this.elMenuItems[i].innerHTML = e[i].title, m.setAttrs(this.elMenuItems[i], {
                        class: "apexcharts-menu-item ".concat(e[i].name),
                        title: e[i].title
                    }), this.elMenu.appendChild(this.elMenuItems[i])
                }
            }, {
                key: "addToolbarEventListeners",
                value: function() {
                    var t = this;
                    this.elZoomReset.addEventListener("click", this.handleZoomReset.bind(this)), this.elSelection.addEventListener("click", this.toggleZoomSelection.bind(this, "selection")), this.elZoom.addEventListener("click", this.toggleZoomSelection.bind(this, "zoom")), this.elZoomIn.addEventListener("click", this.handleZoomIn.bind(this)), this.elZoomOut.addEventListener("click", this.handleZoomOut.bind(this)), this.elPan.addEventListener("click", this.togglePanning.bind(this)), this.elMenuIcon.addEventListener("click", this.toggleMenu.bind(this)), this.elMenuItems.forEach((function(e) {
                        e.classList.contains("exportSVG") ? e.addEventListener("click", t.handleDownload.bind(t, "svg")) : e.classList.contains("exportPNG") ? e.addEventListener("click", t.handleDownload.bind(t, "png")) : e.classList.contains("exportCSV") && e.addEventListener("click", t.handleDownload.bind(t, "csv"))
                    }));
                    for (var e = 0; e < this.t.customIcons.length; e++) this.elCustomIcons[e].addEventListener("click", this.t.customIcons[e].click.bind(this, this.ctx, this.ctx.w))
                }
            }, {
                key: "toggleZoomSelection",
                value: function(t) {
                    this.ctx.getSyncedCharts().forEach((function(e) {
                        e.ctx.toolbar.toggleOtherControls();
                        var i = "selection" === t ? e.ctx.toolbar.elSelection : e.ctx.toolbar.elZoom,
                            a = "selection" === t ? "selectionEnabled" : "zoomEnabled";
                        e.w.globals[a] = !e.w.globals[a], i.classList.contains(e.ctx.toolbar.selectedClass) ? i.classList.remove(e.ctx.toolbar.selectedClass) : i.classList.add(e.ctx.toolbar.selectedClass)
                    }))
                }
            }, {
                key: "getToolbarIconsReference",
                value: function() {
                    var t = this.w;
                    this.elZoom || (this.elZoom = t.globals.dom.baseEl.querySelector(".apexcharts-zoom-icon")), this.elPan || (this.elPan = t.globals.dom.baseEl.querySelector(".apexcharts-pan-icon")), this.elSelection || (this.elSelection = t.globals.dom.baseEl.querySelector(".apexcharts-selection-icon"))
                }
            }, {
                key: "enableZoomPanFromToolbar",
                value: function(t) {
                    this.toggleOtherControls(), "pan" === t ? this.w.globals.panEnabled = !0 : this.w.globals.zoomEnabled = !0;
                    var e = "pan" === t ? this.elPan : this.elZoom,
                        i = "pan" === t ? this.elZoom : this.elPan;
                    e && e.classList.add(this.selectedClass), i && i.classList.remove(this.selectedClass)
                }
            }, {
                key: "togglePanning",
                value: function() {
                    this.ctx.getSyncedCharts().forEach((function(t) {
                        t.ctx.toolbar.toggleOtherControls(), t.w.globals.panEnabled = !t.w.globals.panEnabled, t.ctx.toolbar.elPan.classList.contains(t.ctx.toolbar.selectedClass) ? t.ctx.toolbar.elPan.classList.remove(t.ctx.toolbar.selectedClass) : t.ctx.toolbar.elPan.classList.add(t.ctx.toolbar.selectedClass)
                    }))
                }
            }, {
                key: "toggleOtherControls",
                value: function() {
                    var t = this,
                        e = this.w;
                    e.globals.panEnabled = !1, e.globals.zoomEnabled = !1, e.globals.selectionEnabled = !1, this.getToolbarIconsReference(), [this.elPan, this.elSelection, this.elZoom].forEach((function(e) {
                        e && e.classList.remove(t.selectedClass)
                    }))
                }
            }, {
                key: "handleZoomIn",
                value: function() {
                    var t = this.w;
                    t.globals.isRangeBar && (this.minX = t.globals.minY, this.maxX = t.globals.maxY);
                    var e = (this.minX + this.maxX) / 2,
                        i = (this.minX + e) / 2,
                        a = (this.maxX + e) / 2,
                        s = this._getNewMinXMaxX(i, a);
                    t.globals.disableZoomIn || this.zoomUpdateOptions(s.minX, s.maxX)
                }
            }, {
                key: "handleZoomOut",
                value: function() {
                    var t = this.w;
                    if (t.globals.isRangeBar && (this.minX = t.globals.minY, this.maxX = t.globals.maxY), !("datetime" === t.config.xaxis.type && new Date(this.minX).getUTCFullYear() < 1e3)) {
                        var e = (this.minX + this.maxX) / 2,
                            i = this.minX - (e - this.minX),
                            a = this.maxX - (e - this.maxX),
                            s = this._getNewMinXMaxX(i, a);
                        t.globals.disableZoomOut || this.zoomUpdateOptions(s.minX, s.maxX)
                    }
                }
            }, {
                key: "_getNewMinXMaxX",
                value: function(t, e) {
                    var i = this.w.config.xaxis.convertedCatToNumeric;
                    return {
                        minX: i ? Math.floor(t) : t,
                        maxX: i ? Math.floor(e) : e
                    }
                }
            }, {
                key: "zoomUpdateOptions",
                value: function(t, e) {
                    var i = this.w;
                    if (void 0 !== t || void 0 !== e) {
                        if (!(i.config.xaxis.convertedCatToNumeric && (t < 1 && (t = 1, e = i.globals.dataPoints), e - t < 2))) {
                            var a = {
                                    min: t,
                                    max: e
                                },
                                s = this.getBeforeZoomRange(a);
                            s && (a = s.xaxis);
                            var r = {
                                    xaxis: a
                                },
                                o = x.clone(i.globals.initialConfig.yaxis);
                            if (i.config.chart.zoom.autoScaleYaxis) o = new q(this.ctx).autoScaleY(this.ctx, o, {
                                xaxis: a
                            });
                            i.config.chart.group || (r.yaxis = o), this.w.globals.zoomed = !0, this.ctx.updateHelpers._updateOptions(r, !1, this.w.config.chart.animations.dynamicAnimation.enabled), this.zoomCallback(a, o)
                        }
                    } else this.handleZoomReset()
                }
            }, {
                key: "zoomCallback",
                value: function(t, e) {
                    "function" == typeof this.ev.zoomed && this.ev.zoomed(this.ctx, {
                        xaxis: t,
                        yaxis: e
                    })
                }
            }, {
                key: "getBeforeZoomRange",
                value: function(t, e) {
                    var i = null;
                    return "function" == typeof this.ev.beforeZoom && (i = this.ev.beforeZoom(this, {
                        xaxis: t,
                        yaxis: e
                    })), i
                }
            }, {
                key: "toggleMenu",
                value: function() {
                    var t = this;
                    window.setTimeout((function() {
                        t.elMenu.classList.contains("apexcharts-menu-open") ? t.elMenu.classList.remove("apexcharts-menu-open") : t.elMenu.classList.add("apexcharts-menu-open")
                    }), 0)
                }
            }, {
                key: "handleDownload",
                value: function(t) {
                    var e = this.w,
                        i = new j(this.ctx);
                    switch (t) {
                        case "svg":
                            i.exportToSVG(this.ctx);
                            break;
                        case "png":
                            i.exportToPng(this.ctx);
                            break;
                        case "csv":
                            i.exportToCSV({
                                series: e.config.series,
                                columnDelimiter: e.config.chart.toolbar.export.csv.columnDelimiter
                            })
                    }
                }
            }, {
                key: "handleZoomReset",
                value: function(t) {
                    this.ctx.getSyncedCharts().forEach((function(t) {
                        var e = t.w;
                        if (e.globals.lastXAxis.min = void 0, e.globals.lastXAxis.max = void 0, t.updateHelpers.revertDefaultAxisMinMax(), "function" == typeof e.config.chart.events.beforeResetZoom) {
                            var i = e.config.chart.events.beforeResetZoom(t, e);
                            i && t.updateHelpers.revertDefaultAxisMinMax(i)
                        }
                        "function" == typeof e.config.chart.events.zoomed && t.ctx.toolbar.zoomCallback({
                            min: e.config.xaxis.min,
                            max: e.config.xaxis.max
                        }), e.globals.zoomed = !1;
                        var a = t.ctx.series.emptyCollapsedSeries(x.clone(e.globals.initialSeries));
                        t.updateHelpers._updateSeries(a, e.config.chart.animations.dynamicAnimation.enabled)
                    }))
                }
            }, {
                key: "destroy",
                value: function() {
                    this.elZoom = null, this.elZoomIn = null, this.elZoomOut = null, this.elPan = null, this.elSelection = null, this.elZoomReset = null, this.elMenuIcon = null
                }
            }]), t
        }(),
        gt = function(t) {
            n(i, t);
            var e = d(i);

            function i(t) {
                var s;
                return a(this, i), (s = e.call(this, t)).ctx = t, s.w = t.w, s.dragged = !1, s.graphics = new m(s.ctx), s.eventList = ["mousedown", "mouseleave", "mousemove", "touchstart", "touchmove", "mouseup", "touchend"], s.clientX = 0, s.clientY = 0, s.startX = 0, s.endX = 0, s.dragX = 0, s.startY = 0, s.endY = 0, s.dragY = 0, s.moveDirection = "none", s
            }
            return r(i, [{
                key: "init",
                value: function(t) {
                    var e = this,
                        i = t.xyRatios,
                        a = this.w,
                        s = this;
                    this.xyRatios = i, this.zoomRect = this.graphics.drawRect(0, 0, 0, 0), this.selectionRect = this.graphics.drawRect(0, 0, 0, 0), this.gridRect = a.globals.dom.baseEl.querySelector(".apexcharts-grid"), this.zoomRect.node.classList.add("apexcharts-zoom-rect"), this.selectionRect.node.classList.add("apexcharts-selection-rect"), a.globals.dom.elGraphical.add(this.zoomRect), a.globals.dom.elGraphical.add(this.selectionRect), "x" === a.config.chart.selection.type ? this.slDraggableRect = this.selectionRect.draggable({
                        minX: 0,
                        minY: 0,
                        maxX: a.globals.gridWidth,
                        maxY: a.globals.gridHeight
                    }).on("dragmove", this.selectionDragging.bind(this, "dragging")) : "y" === a.config.chart.selection.type ? this.slDraggableRect = this.selectionRect.draggable({
                        minX: 0,
                        maxX: a.globals.gridWidth
                    }).on("dragmove", this.selectionDragging.bind(this, "dragging")) : this.slDraggableRect = this.selectionRect.draggable().on("dragmove", this.selectionDragging.bind(this, "dragging")), this.preselectedSelection(), this.hoverArea = a.globals.dom.baseEl.querySelector("".concat(a.globals.chartClass, " .apexcharts-svg")), this.hoverArea.classList.add("apexcharts-zoomable"), this.eventList.forEach((function(t) {
                        e.hoverArea.addEventListener(t, s.svgMouseEvents.bind(s, i), {
                            capture: !1,
                            passive: !0
                        })
                    }))
                }
            }, {
                key: "destroy",
                value: function() {
                    this.slDraggableRect && (this.slDraggableRect.draggable(!1), this.slDraggableRect.off(), this.selectionRect.off()), this.selectionRect = null, this.zoomRect = null, this.gridRect = null
                }
            }, {
                key: "svgMouseEvents",
                value: function(t, e) {
                    var i = this.w,
                        a = this,
                        s = this.ctx.toolbar,
                        r = i.globals.zoomEnabled ? i.config.chart.zoom.type : i.config.chart.selection.type,
                        o = i.config.chart.toolbar.autoSelected;
                    if (e.shiftKey ? (this.shiftWasPressed = !0, s.enableZoomPanFromToolbar("pan" === o ? "zoom" : "pan")) : this.shiftWasPressed && (s.enableZoomPanFromToolbar(o), this.shiftWasPressed = !1), e.target) {
                        var n, l = e.target.classList;
                        if (e.target.parentNode && null !== e.target.parentNode && (n = e.target.parentNode.classList), !(l.contains("apexcharts-selection-rect") || l.contains("apexcharts-legend-marker") || l.contains("apexcharts-legend-text") || n && n.contains("apexcharts-toolbar"))) {
                            if (a.clientX = "touchmove" === e.type || "touchstart" === e.type ? e.touches[0].clientX : "touchend" === e.type ? e.changedTouches[0].clientX : e.clientX, a.clientY = "touchmove" === e.type || "touchstart" === e.type ? e.touches[0].clientY : "touchend" === e.type ? e.changedTouches[0].clientY : e.clientY, "mousedown" === e.type && 1 === e.which) {
                                var h = a.gridRect.getBoundingClientRect();
                                a.startX = a.clientX - h.left, a.startY = a.clientY - h.top, a.dragged = !1, a.w.globals.mousedown = !0
                            }
                            if (("mousemove" === e.type && 1 === e.which || "touchmove" === e.type) && (a.dragged = !0, i.globals.panEnabled ? (i.globals.selection = null, a.w.globals.mousedown && a.panDragging({
                                    context: a,
                                    zoomtype: r,
                                    xyRatios: t
                                })) : (a.w.globals.mousedown && i.globals.zoomEnabled || a.w.globals.mousedown && i.globals.selectionEnabled) && (a.selection = a.selectionDrawing({
                                    context: a,
                                    zoomtype: r
                                }))), "mouseup" === e.type || "touchend" === e.type || "mouseleave" === e.type) {
                                var c = a.gridRect.getBoundingClientRect();
                                a.w.globals.mousedown && (a.endX = a.clientX - c.left, a.endY = a.clientY - c.top, a.dragX = Math.abs(a.endX - a.startX), a.dragY = Math.abs(a.endY - a.startY), (i.globals.zoomEnabled || i.globals.selectionEnabled) && a.selectionDrawn({
                                    context: a,
                                    zoomtype: r
                                }), i.globals.panEnabled && i.config.xaxis.convertedCatToNumeric && a.delayedPanScrolled()), i.globals.zoomEnabled && a.hideSelectionRect(this.selectionRect), a.dragged = !1, a.w.globals.mousedown = !1
                            }
                            this.makeSelectionRectDraggable()
                        }
                    }
                }
            }, {
                key: "makeSelectionRectDraggable",
                value: function() {
                    var t = this.w;
                    if (this.selectionRect) {
                        var e = this.selectionRect.node.getBoundingClientRect();
                        e.width > 0 && e.height > 0 && this.slDraggableRect.selectize({
                            points: "l, r",
                            pointSize: 8,
                            pointType: "rect"
                        }).resize({
                            constraint: {
                                minX: 0,
                                minY: 0,
                                maxX: t.globals.gridWidth,
                                maxY: t.globals.gridHeight
                            }
                        }).on("resizing", this.selectionDragging.bind(this, "resizing"))
                    }
                }
            }, {
                key: "preselectedSelection",
                value: function() {
                    var t = this.w,
                        e = this.xyRatios;
                    if (!t.globals.zoomEnabled)
                        if (void 0 !== t.globals.selection && null !== t.globals.selection) this.drawSelectionRect(t.globals.selection);
                        else if (void 0 !== t.config.chart.selection.xaxis.min && void 0 !== t.config.chart.selection.xaxis.max) {
                        var i = (t.config.chart.selection.xaxis.min - t.globals.minX) / e.xRatio,
                            a = {
                                x: i,
                                y: 0,
                                width: t.globals.gridWidth - (t.globals.maxX - t.config.chart.selection.xaxis.max) / e.xRatio - i,
                                height: t.globals.gridHeight,
                                translateX: 0,
                                translateY: 0,
                                selectionEnabled: !0
                            };
                        this.drawSelectionRect(a), this.makeSelectionRectDraggable(), "function" == typeof t.config.chart.events.selection && t.config.chart.events.selection(this.ctx, {
                            xaxis: {
                                min: t.config.chart.selection.xaxis.min,
                                max: t.config.chart.selection.xaxis.max
                            },
                            yaxis: {}
                        })
                    }
                }
            }, {
                key: "drawSelectionRect",
                value: function(t) {
                    var e = t.x,
                        i = t.y,
                        a = t.width,
                        s = t.height,
                        r = t.translateX,
                        o = void 0 === r ? 0 : r,
                        n = t.translateY,
                        l = void 0 === n ? 0 : n,
                        h = this.w,
                        c = this.zoomRect,
                        d = this.selectionRect;
                    if (this.dragged || null !== h.globals.selection) {
                        var g = {
                            transform: "translate(" + o + ", " + l + ")"
                        };
                        h.globals.zoomEnabled && this.dragged && (a < 0 && (a = 1), c.attr({
                            x: e,
                            y: i,
                            width: a,
                            height: s,
                            fill: h.config.chart.zoom.zoomedArea.fill.color,
                            "fill-opacity": h.config.chart.zoom.zoomedArea.fill.opacity,
                            stroke: h.config.chart.zoom.zoomedArea.stroke.color,
                            "stroke-width": h.config.chart.zoom.zoomedArea.stroke.width,
                            "stroke-opacity": h.config.chart.zoom.zoomedArea.stroke.opacity
                        }), m.setAttrs(c.node, g)), h.globals.selectionEnabled && (d.attr({
                            x: e,
                            y: i,
                            width: a > 0 ? a : 0,
                            height: s > 0 ? s : 0,
                            fill: h.config.chart.selection.fill.color,
                            "fill-opacity": h.config.chart.selection.fill.opacity,
                            stroke: h.config.chart.selection.stroke.color,
                            "stroke-width": h.config.chart.selection.stroke.width,
                            "stroke-dasharray": h.config.chart.selection.stroke.dashArray,
                            "stroke-opacity": h.config.chart.selection.stroke.opacity
                        }), m.setAttrs(d.node, g))
                    }
                }
            }, {
                key: "hideSelectionRect",
                value: function(t) {
                    t && t.attr({
                        x: 0,
                        y: 0,
                        width: 0,
                        height: 0
                    })
                }
            }, {
                key: "selectionDrawing",
                value: function(t) {
                    var e = t.context,
                        i = t.zoomtype,
                        a = this.w,
                        s = e,
                        r = this.gridRect.getBoundingClientRect(),
                        o = s.startX - 1,
                        n = s.startY,
                        l = !1,
                        h = !1,
                        c = s.clientX - r.left - o,
                        d = s.clientY - r.top - n,
                        g = {};
                    return Math.abs(c + o) > a.globals.gridWidth ? c = a.globals.gridWidth - o : s.clientX - r.left < 0 && (c = o), o > s.clientX - r.left && (l = !0, c = Math.abs(c)), n > s.clientY - r.top && (h = !0, d = Math.abs(d)), g = "x" === i ? {
                        x: l ? o - c : o,
                        y: 0,
                        width: c,
                        height: a.globals.gridHeight
                    } : "y" === i ? {
                        x: 0,
                        y: h ? n - d : n,
                        width: a.globals.gridWidth,
                        height: d
                    } : {
                        x: l ? o - c : o,
                        y: h ? n - d : n,
                        width: c,
                        height: d
                    }, s.drawSelectionRect(g), s.selectionDragging("resizing"), g
                }
            }, {
                key: "selectionDragging",
                value: function(t, e) {
                    var i = this,
                        a = this.w,
                        s = this.xyRatios,
                        r = this.selectionRect,
                        o = 0;
                    "resizing" === t && (o = 30);
                    var n = function(t) {
                            return parseFloat(r.node.getAttribute(t))
                        },
                        l = {
                            x: n("x"),
                            y: n("y"),
                            width: n("width"),
                            height: n("height")
                        };
                    a.globals.selection = l, "function" == typeof a.config.chart.events.selection && a.globals.selectionEnabled && (clearTimeout(this.w.globals.selectionResizeTimer), this.w.globals.selectionResizeTimer = window.setTimeout((function() {
                        var t = i.gridRect.getBoundingClientRect(),
                            e = r.node.getBoundingClientRect(),
                            o = {
                                xaxis: {
                                    min: a.globals.xAxisScale.niceMin + (e.left - t.left) * s.xRatio,
                                    max: a.globals.xAxisScale.niceMin + (e.right - t.left) * s.xRatio
                                },
                                yaxis: {
                                    min: a.globals.yAxisScale[0].niceMin + (t.bottom - e.bottom) * s.yRatio[0],
                                    max: a.globals.yAxisScale[0].niceMax - (e.top - t.top) * s.yRatio[0]
                                }
                            };
                        a.config.chart.events.selection(i.ctx, o), a.config.chart.brush.enabled && void 0 !== a.config.chart.events.brushScrolled && a.config.chart.events.brushScrolled(i.ctx, o)
                    }), o))
                }
            }, {
                key: "selectionDrawn",
                value: function(t) {
                    var e = t.context,
                        i = t.zoomtype,
                        a = this.w,
                        s = e,
                        r = this.xyRatios,
                        o = this.ctx.toolbar;
                    if (s.startX > s.endX) {
                        var n = s.startX;
                        s.startX = s.endX, s.endX = n
                    }
                    if (s.startY > s.endY) {
                        var l = s.startY;
                        s.startY = s.endY, s.endY = l
                    }
                    var h = void 0,
                        c = void 0;
                    a.globals.isRangeBar ? (h = a.globals.yAxisScale[0].niceMin + s.startX * r.invertedYRatio, c = a.globals.yAxisScale[0].niceMin + s.endX * r.invertedYRatio) : (h = a.globals.xAxisScale.niceMin + s.startX * r.xRatio, c = a.globals.xAxisScale.niceMin + s.endX * r.xRatio);
                    var d = [],
                        g = [];
                    if (a.config.yaxis.forEach((function(t, e) {
                            d.push(a.globals.yAxisScale[e].niceMax - r.yRatio[e] * s.startY), g.push(a.globals.yAxisScale[e].niceMax - r.yRatio[e] * s.endY)
                        })), s.dragged && (s.dragX > 10 || s.dragY > 10) && h !== c)
                        if (a.globals.zoomEnabled) {
                            var u = x.clone(a.globals.initialConfig.yaxis),
                                f = x.clone(a.globals.initialConfig.xaxis);
                            if (a.globals.zoomed = !0, a.config.xaxis.convertedCatToNumeric && (h = Math.floor(h), c = Math.floor(c), h < 1 && (h = 1, c = a.globals.dataPoints), c - h < 2 && (c = h + 1)), "xy" !== i && "x" !== i || (f = {
                                    min: h,
                                    max: c
                                }), "xy" !== i && "y" !== i || u.forEach((function(t, e) {
                                    u[e].min = g[e], u[e].max = d[e]
                                })), a.config.chart.zoom.autoScaleYaxis) {
                                var p = new q(s.ctx);
                                u = p.autoScaleY(s.ctx, u, {
                                    xaxis: f
                                })
                            }
                            if (o) {
                                var b = o.getBeforeZoomRange(f, u);
                                b && (f = b.xaxis ? b.xaxis : f, u = b.yaxis ? b.yaxis : u)
                            }
                            var v = {
                                xaxis: f
                            };
                            a.config.chart.group || (v.yaxis = u), s.ctx.updateHelpers._updateOptions(v, !1, s.w.config.chart.animations.dynamicAnimation.enabled), "function" == typeof a.config.chart.events.zoomed && o.zoomCallback(f, u)
                        } else if (a.globals.selectionEnabled) {
                        var m, y = null;
                        m = {
                            min: h,
                            max: c
                        }, "xy" !== i && "y" !== i || (y = x.clone(a.config.yaxis)).forEach((function(t, e) {
                            y[e].min = g[e], y[e].max = d[e]
                        })), a.globals.selection = s.selection, "function" == typeof a.config.chart.events.selection && a.config.chart.events.selection(s.ctx, {
                            xaxis: m,
                            yaxis: y
                        })
                    }
                }
            }, {
                key: "panDragging",
                value: function(t) {
                    var e = t.context,
                        i = this.w,
                        a = e;
                    if (void 0 !== i.globals.lastClientPosition.x) {
                        var s = i.globals.lastClientPosition.x - a.clientX,
                            r = i.globals.lastClientPosition.y - a.clientY;
                        Math.abs(s) > Math.abs(r) && s > 0 ? this.moveDirection = "left" : Math.abs(s) > Math.abs(r) && s < 0 ? this.moveDirection = "right" : Math.abs(r) > Math.abs(s) && r > 0 ? this.moveDirection = "up" : Math.abs(r) > Math.abs(s) && r < 0 && (this.moveDirection = "down")
                    }
                    i.globals.lastClientPosition = {
                        x: a.clientX,
                        y: a.clientY
                    };
                    var o = i.globals.isRangeBar ? i.globals.minY : i.globals.minX,
                        n = i.globals.isRangeBar ? i.globals.maxY : i.globals.maxX;
                    i.config.xaxis.convertedCatToNumeric || a.panScrolled(o, n)
                }
            }, {
                key: "delayedPanScrolled",
                value: function() {
                    var t = this.w,
                        e = t.globals.minX,
                        i = t.globals.maxX,
                        a = (t.globals.maxX - t.globals.minX) / 2;
                    "left" === this.moveDirection ? (e = t.globals.minX + a, i = t.globals.maxX + a) : "right" === this.moveDirection && (e = t.globals.minX - a, i = t.globals.maxX - a), e = Math.floor(e), i = Math.floor(i), this.updateScrolledChart({
                        xaxis: {
                            min: e,
                            max: i
                        }
                    }, e, i)
                }
            }, {
                key: "panScrolled",
                value: function(t, e) {
                    var i = this.w,
                        a = this.xyRatios,
                        s = x.clone(i.globals.initialConfig.yaxis),
                        r = a.xRatio,
                        o = i.globals.minX,
                        n = i.globals.maxX;
                    i.globals.isRangeBar && (r = a.invertedYRatio, o = i.globals.minY, n = i.globals.maxY), "left" === this.moveDirection ? (t = o + i.globals.gridWidth / 15 * r, e = n + i.globals.gridWidth / 15 * r) : "right" === this.moveDirection && (t = o - i.globals.gridWidth / 15 * r, e = n - i.globals.gridWidth / 15 * r), i.globals.isRangeBar || (t < i.globals.initialMinX || e > i.globals.initialMaxX) && (t = o, e = n);
                    var l = {
                        min: t,
                        max: e
                    };
                    i.config.chart.zoom.autoScaleYaxis && (s = new q(this.ctx).autoScaleY(this.ctx, s, {
                        xaxis: l
                    }));
                    var h = {
                        xaxis: {
                            min: t,
                            max: e
                        }
                    };
                    i.config.chart.group || (h.yaxis = s), this.updateScrolledChart(h, t, e)
                }
            }, {
                key: "updateScrolledChart",
                value: function(t, e, i) {
                    var a = this.w;
                    this.ctx.updateHelpers._updateOptions(t, !1, !1), "function" == typeof a.config.chart.events.scrolled && a.config.chart.events.scrolled(this.ctx, {
                        xaxis: {
                            min: e,
                            max: i
                        }
                    })
                }
            }]), i
        }(dt),
        ut = function() {
            function t(e) {
                a(this, t), this.w = e.w, this.ttCtx = e, this.ctx = e.ctx
            }
            return r(t, [{
                key: "getNearestValues",
                value: function(t) {
                    var e = t.hoverArea,
                        i = t.elGrid,
                        a = t.clientX,
                        s = t.clientY,
                        r = this.w,
                        o = i.getBoundingClientRect(),
                        n = o.width,
                        l = o.height,
                        h = n / (r.globals.dataPoints - 1),
                        c = l / r.globals.dataPoints,
                        d = this.hasBars();
                    !r.globals.comboCharts && !d || r.config.xaxis.convertedCatToNumeric || (h = n / r.globals.dataPoints);
                    var g = a - o.left - r.globals.barPadForNumericAxis,
                        u = s - o.top;
                    g < 0 || u < 0 || g > n || u > l ? (e.classList.remove("hovering-zoom"), e.classList.remove("hovering-pan")) : r.globals.zoomEnabled ? (e.classList.remove("hovering-pan"), e.classList.add("hovering-zoom")) : r.globals.panEnabled && (e.classList.remove("hovering-zoom"), e.classList.add("hovering-pan"));
                    var f = Math.round(g / h),
                        p = Math.floor(u / c);
                    d && !r.config.xaxis.convertedCatToNumeric && (f = Math.ceil(g / h), f -= 1);
                    var b = null,
                        v = null,
                        m = [],
                        y = [];
                    if (r.globals.seriesXvalues.forEach((function(t) {
                            m.push([t[0] + 1e-6].concat(t))
                        })), r.globals.seriesYvalues.forEach((function(t) {
                            y.push([t[0] + 1e-6].concat(t))
                        })), m = m.map((function(t) {
                            return t.filter((function(t) {
                                return x.isNumber(t)
                            }))
                        })), y = y.map((function(t) {
                            return t.filter((function(t) {
                                return x.isNumber(t)
                            }))
                        })), r.globals.isXNumeric) {
                        var w = this.ttCtx.getElGrid().getBoundingClientRect(),
                            k = g * (w.width / n),
                            A = u * (w.height / l);
                        b = (v = this.closestInMultiArray(k, A, m, y)).index, f = v.j, null !== b && (m = r.globals.seriesXvalues[b], f = (v = this.closestInArray(k, m)).index)
                    }
                    return r.globals.capturedSeriesIndex = null === b ? -1 : b, (!f || f < 1) && (f = 0), r.globals.isBarHorizontal ? r.globals.capturedDataPointIndex = p : r.globals.capturedDataPointIndex = f, {
                        capturedSeries: b,
                        j: r.globals.isBarHorizontal ? p : f,
                        hoverX: g,
                        hoverY: u
                    }
                }
            }, {
                key: "closestInMultiArray",
                value: function(t, e, i, a) {
                    var s = this.w,
                        r = 0,
                        o = null,
                        n = -1;
                    s.globals.series.length > 1 ? r = this.getFirstActiveXArray(i) : o = 0;
                    var l = i[r][0],
                        h = Math.abs(t - l);
                    if (i.forEach((function(e) {
                            e.forEach((function(e, i) {
                                var a = Math.abs(t - e);
                                a < h && (h = a, n = i)
                            }))
                        })), -1 !== n) {
                        var c = a[r][n],
                            d = Math.abs(e - c);
                        o = r, a.forEach((function(t, i) {
                            var a = Math.abs(e - t[n]);
                            a < d && (d = a, o = i)
                        }))
                    }
                    return {
                        index: o,
                        j: n
                    }
                }
            }, {
                key: "getFirstActiveXArray",
                value: function(t) {
                    for (var e = this.w, i = 0, a = t.map((function(t, e) {
                            return t.length > 0 ? e : -1
                        })), s = 0; s < a.length; s++)
                        if (-1 !== a[s] && -1 === e.globals.collapsedSeriesIndices.indexOf(s) && -1 === e.globals.ancillaryCollapsedSeriesIndices.indexOf(s)) {
                            i = a[s];
                            break
                        }
                    return i
                }
            }, {
                key: "closestInArray",
                value: function(t, e) {
                    for (var i = e[0], a = null, s = Math.abs(t - i), r = 0; r < e.length; r++) {
                        var o = Math.abs(t - e[r]);
                        o < s && (s = o, a = r)
                    }
                    return {
                        index: a
                    }
                }
            }, {
                key: "isXoverlap",
                value: function(t) {
                    var e = [],
                        i = this.w.globals.seriesX.filter((function(t) {
                            return void 0 !== t[0]
                        }));
                    if (i.length > 0)
                        for (var a = 0; a < i.length - 1; a++) void 0 !== i[a][t] && void 0 !== i[a + 1][t] && i[a][t] !== i[a + 1][t] && e.push("unEqual");
                    return 0 === e.length
                }
            }, {
                key: "isInitialSeriesSameLen",
                value: function() {
                    for (var t = !0, e = this.w.globals.initialSeries, i = 0; i < e.length - 1; i++)
                        if (e[i].data.length !== e[i + 1].data.length) {
                            t = !1;
                            break
                        }
                    return t
                }
            }, {
                key: "getBarsHeight",
                value: function(t) {
                    return u(t).reduce((function(t, e) {
                        return t + e.getBBox().height
                    }), 0)
                }
            }, {
                key: "getElMarkers",
                value: function() {
                    return this.w.globals.dom.baseEl.querySelectorAll(" .apexcharts-series-markers")
                }
            }, {
                key: "getAllMarkers",
                value: function() {
                    var t = this.w.globals.dom.baseEl.querySelectorAll(".apexcharts-series-markers-wrap");
                    (t = u(t)).sort((function(t, e) {
                        var i = Number(t.getAttribute("data:realIndex")),
                            a = Number(e.getAttribute("data:realIndex"));
                        return a < i ? 1 : a > i ? -1 : 0
                    }));
                    var e = [];
                    return t.forEach((function(t) {
                        e.push(t.querySelector(".apexcharts-marker"))
                    })), e
                }
            }, {
                key: "hasMarkers",
                value: function() {
                    return this.getElMarkers().length > 0
                }
            }, {
                key: "getElBars",
                value: function() {
                    return this.w.globals.dom.baseEl.querySelectorAll(".apexcharts-bar-series,  .apexcharts-candlestick-series, .apexcharts-boxPlot-series, .apexcharts-rangebar-series")
                }
            }, {
                key: "hasBars",
                value: function() {
                    return this.getElBars().length > 0
                }
            }, {
                key: "getHoverMarkerSize",
                value: function(t) {
                    var e = this.w,
                        i = e.config.markers.hover.size;
                    return void 0 === i && (i = e.globals.markers.size[t] + e.config.markers.hover.sizeOffset), i
                }
            }, {
                key: "toggleAllTooltipSeriesGroups",
                value: function(t) {
                    var e = this.w,
                        i = this.ttCtx;
                    0 === i.allTooltipSeriesGroups.length && (i.allTooltipSeriesGroups = e.globals.dom.baseEl.querySelectorAll(".apexcharts-tooltip-series-group"));
                    for (var a = i.allTooltipSeriesGroups, s = 0; s < a.length; s++) "enable" === t ? (a[s].classList.add("apexcharts-active"), a[s].style.display = e.config.tooltip.items.display) : (a[s].classList.remove("apexcharts-active"), a[s].style.display = "none")
                }
            }]), t
        }(),
        ft = function() {
            function t(e) {
                a(this, t), this.w = e.w, this.ctx = e.ctx, this.ttCtx = e, this.tooltipUtil = new ut(e)
            }
            return r(t, [{
                key: "drawSeriesTexts",
                value: function(t) {
                    var e = t.shared,
                        i = void 0 === e || e,
                        a = t.ttItems,
                        s = t.i,
                        r = void 0 === s ? 0 : s,
                        o = t.j,
                        n = void 0 === o ? null : o,
                        l = t.y1,
                        h = t.y2,
                        c = t.e,
                        d = this.w;
                    void 0 !== d.config.tooltip.custom ? this.handleCustomTooltip({
                        i: r,
                        j: n,
                        y1: l,
                        y2: h,
                        w: d
                    }) : this.toggleActiveInactiveSeries(i);
                    var g = this.getValuesToPrint({
                        i: r,
                        j: n
                    });
                    this.printLabels({
                        i: r,
                        j: n,
                        values: g,
                        ttItems: a,
                        shared: i,
                        e: c
                    });
                    var u = this.ttCtx.getElTooltip();
                    this.ttCtx.tooltipRect.ttWidth = u.getBoundingClientRect().width, this.ttCtx.tooltipRect.ttHeight = u.getBoundingClientRect().height
                }
            }, {
                key: "printLabels",
                value: function(t) {
                    var i, a = this,
                        s = t.i,
                        r = t.j,
                        o = t.values,
                        n = t.ttItems,
                        l = t.shared,
                        h = t.e,
                        c = this.w,
                        d = [],
                        g = function(t) {
                            return c.globals.seriesGoals[t] && c.globals.seriesGoals[t][r] && Array.isArray(c.globals.seriesGoals[t][r])
                        },
                        u = o.xVal,
                        f = o.zVal,
                        p = o.xAxisTTVal,
                        x = "",
                        b = c.globals.colors[s];
                    null !== r && c.config.plotOptions.bar.distributed && (b = c.globals.colors[r]);
                    for (var v = function(t, o) {
                            var v = a.getFormatters(s);
                            x = a.getSeriesName({
                                fn: v.yLbTitleFormatter,
                                index: s,
                                seriesIndex: s,
                                j: r
                            }), "treemap" === c.config.chart.type && (x = v.yLbTitleFormatter(String(c.config.series[s].data[r].x), {
                                series: c.globals.series,
                                seriesIndex: s,
                                dataPointIndex: r,
                                w: c
                            }));
                            var m = c.config.tooltip.inverseOrder ? o : t;
                            if (c.globals.axisCharts) {
                                var y = function(t) {
                                    return v.yLbFormatter(c.globals.series[t][r], {
                                        series: c.globals.series,
                                        seriesIndex: t,
                                        dataPointIndex: r,
                                        w: c
                                    })
                                };
                                if (l) v = a.getFormatters(m), x = a.getSeriesName({
                                    fn: v.yLbTitleFormatter,
                                    index: m,
                                    seriesIndex: s,
                                    j: r
                                }), b = c.globals.colors[m], i = y(m), g(m) && (d = c.globals.seriesGoals[m][r].map((function(t) {
                                    return {
                                        attrs: t,
                                        val: v.yLbFormatter(t.value, {
                                            seriesIndex: m,
                                            dataPointIndex: r,
                                            w: c
                                        })
                                    }
                                })));
                                else {
                                    var w, k = null == h || null === (w = h.target) || void 0 === w ? void 0 : w.getAttribute("fill");
                                    k && (b = -1 !== k.indexOf("url") ? document.querySelector(k.substr(4).slice(0, -1)).childNodes[0].getAttribute("stroke") : k), i = y(s), g(s) && Array.isArray(c.globals.seriesGoals[s][r]) && (d = c.globals.seriesGoals[s][r].map((function(t) {
                                        return {
                                            attrs: t,
                                            val: v.yLbFormatter(t.value, {
                                                seriesIndex: s,
                                                dataPointIndex: r,
                                                w: c
                                            })
                                        }
                                    })))
                                }
                            }
                            null === r && (i = v.yLbFormatter(c.globals.series[s], e(e({}, c), {}, {
                                seriesIndex: s,
                                dataPointIndex: s
                            }))), a.DOMHandling({
                                i: s,
                                t: m,
                                j: r,
                                ttItems: n,
                                values: {
                                    val: i,
                                    goalVals: d,
                                    xVal: u,
                                    xAxisTTVal: p,
                                    zVal: f
                                },
                                seriesName: x,
                                shared: l,
                                pColor: b
                            })
                        }, m = 0, y = c.globals.series.length - 1; m < c.globals.series.length; m++, y--) v(m, y)
                }
            }, {
                key: "getFormatters",
                value: function(t) {
                    var e, i = this.w,
                        a = i.globals.yLabelFormatters[t];
                    return void 0 !== i.globals.ttVal ? Array.isArray(i.globals.ttVal) ? (a = i.globals.ttVal[t] && i.globals.ttVal[t].formatter, e = i.globals.ttVal[t] && i.globals.ttVal[t].title && i.globals.ttVal[t].title.formatter) : (a = i.globals.ttVal.formatter, "function" == typeof i.globals.ttVal.title.formatter && (e = i.globals.ttVal.title.formatter)) : e = i.config.tooltip.y.title.formatter, "function" != typeof a && (a = i.globals.yLabelFormatters[0] ? i.globals.yLabelFormatters[0] : function(t) {
                        return t
                    }), "function" != typeof e && (e = function(t) {
                        return t
                    }), {
                        yLbFormatter: a,
                        yLbTitleFormatter: e
                    }
                }
            }, {
                key: "getSeriesName",
                value: function(t) {
                    var e = t.fn,
                        i = t.index,
                        a = t.seriesIndex,
                        s = t.j,
                        r = this.w;
                    return e(String(r.globals.seriesNames[i]), {
                        series: r.globals.series,
                        seriesIndex: a,
                        dataPointIndex: s,
                        w: r
                    })
                }
            }, {
                key: "DOMHandling",
                value: function(t) {
                    t.i;
                    var e = t.t,
                        i = t.j,
                        a = t.ttItems,
                        s = t.values,
                        r = t.seriesName,
                        o = t.shared,
                        n = t.pColor,
                        l = this.w,
                        h = this.ttCtx,
                        c = s.val,
                        d = s.goalVals,
                        g = s.xVal,
                        u = s.xAxisTTVal,
                        f = s.zVal,
                        p = null;
                    p = a[e].children, l.config.tooltip.fillSeriesColor && (a[e].style.backgroundColor = n, p[0].style.display = "none"), h.showTooltipTitle && (null === h.tooltipTitle && (h.tooltipTitle = l.globals.dom.baseEl.querySelector(".apexcharts-tooltip-title")), h.tooltipTitle.innerHTML = g), h.isXAxisTooltipEnabled && (h.xaxisTooltipText.innerHTML = "" !== u ? u : g);
                    var x = a[e].querySelector(".apexcharts-tooltip-text-y-label");
                    x && (x.innerHTML = r || "");
                    var b = a[e].querySelector(".apexcharts-tooltip-text-y-value");
                    b && (b.innerHTML = void 0 !== c ? c : ""), p[0] && p[0].classList.contains("apexcharts-tooltip-marker") && (l.config.tooltip.marker.fillColors && Array.isArray(l.config.tooltip.marker.fillColors) && (n = l.config.tooltip.marker.fillColors[e]), p[0].style.backgroundColor = n), l.config.tooltip.marker.show || (p[0].style.display = "none");
                    var v = a[e].querySelector(".apexcharts-tooltip-text-goals-label"),
                        m = a[e].querySelector(".apexcharts-tooltip-text-goals-value");
                    if (d.length && l.globals.seriesGoals[e]) {
                        var y = function() {
                            var t = "<div >",
                                e = "<div>";
                            d.forEach((function(i, a) {
                                t += ' <div style="display: flex"><span class="apexcharts-tooltip-marker" style="background-color: '.concat(i.attrs.strokeColor, '; height: 3px; border-radius: 0; top: 5px;"></span> ').concat(i.attrs.name, "</div>"), e += "<div>".concat(i.val, "</div>")
                            })), v.innerHTML = t + "</div>", m.innerHTML = e + "</div>"
                        };
                        o ? l.globals.seriesGoals[e][i] && Array.isArray(l.globals.seriesGoals[e][i]) ? y() : (v.innerHTML = "", m.innerHTML = "") : y()
                    } else v.innerHTML = "", m.innerHTML = "";
                    null !== f && (a[e].querySelector(".apexcharts-tooltip-text-z-label").innerHTML = l.config.tooltip.z.title, a[e].querySelector(".apexcharts-tooltip-text-z-value").innerHTML = void 0 !== f ? f : "");
                    o && p[0] && (null == c || l.globals.ancillaryCollapsedSeriesIndices.indexOf(e) > -1 || l.globals.collapsedSeriesIndices.indexOf(e) > -1 ? p[0].parentNode.style.display = "none" : p[0].parentNode.style.display = l.config.tooltip.items.display)
                }
            }, {
                key: "toggleActiveInactiveSeries",
                value: function(t) {
                    var e = this.w;
                    if (t) this.tooltipUtil.toggleAllTooltipSeriesGroups("enable");
                    else {
                        this.tooltipUtil.toggleAllTooltipSeriesGroups("disable");
                        var i = e.globals.dom.baseEl.querySelector(".apexcharts-tooltip-series-group");
                        i && (i.classList.add("apexcharts-active"), i.style.display = e.config.tooltip.items.display)
                    }
                }
            }, {
                key: "getValuesToPrint",
                value: function(t) {
                    var e = t.i,
                        i = t.j,
                        a = this.w,
                        s = this.ctx.series.filteredSeriesX(),
                        r = "",
                        o = "",
                        n = null,
                        l = null,
                        h = {
                            series: a.globals.series,
                            seriesIndex: e,
                            dataPointIndex: i,
                            w: a
                        },
                        c = a.globals.ttZFormatter;
                    null === i ? l = a.globals.series[e] : a.globals.isXNumeric && "treemap" !== a.config.chart.type ? (r = s[e][i], 0 === s[e].length && (r = s[this.tooltipUtil.getFirstActiveXArray(s)][i])) : r = void 0 !== a.globals.labels[i] ? a.globals.labels[i] : "";
                    var d = r;
                    a.globals.isXNumeric && "datetime" === a.config.xaxis.type ? r = new V(this.ctx).xLabelFormat(a.globals.ttKeyFormatter, d, d, {
                        i: void 0,
                        dateFormatter: new R(this.ctx).formatDate,
                        w: this.w
                    }) : r = a.globals.isBarHorizontal ? a.globals.yLabelFormatters[0](d, h) : a.globals.xLabelFormatter(d, h);
                    return void 0 !== a.config.tooltip.x.formatter && (r = a.globals.ttKeyFormatter(d, h)), a.globals.seriesZ.length > 0 && a.globals.seriesZ[e].length > 0 && (n = c(a.globals.seriesZ[e][i], a)), o = "function" == typeof a.config.xaxis.tooltip.formatter ? a.globals.xaxisTooltipFormatter(d, h) : r, {
                        val: Array.isArray(l) ? l.join(" ") : l,
                        xVal: Array.isArray(r) ? r.join(" ") : r,
                        xAxisTTVal: Array.isArray(o) ? o.join(" ") : o,
                        zVal: n
                    }
                }
            }, {
                key: "handleCustomTooltip",
                value: function(t) {
                    var e = t.i,
                        i = t.j,
                        a = t.y1,
                        s = t.y2,
                        r = t.w,
                        o = this.ttCtx.getElTooltip(),
                        n = r.config.tooltip.custom;
                    Array.isArray(n) && n[e] && (n = n[e]), o.innerHTML = n({
                        ctx: this.ctx,
                        series: r.globals.series,
                        seriesIndex: e,
                        dataPointIndex: i,
                        y1: a,
                        y2: s,
                        w: r
                    })
                }
            }]), t
        }(),
        pt = function() {
            function t(e) {
                a(this, t), this.ttCtx = e, this.ctx = e.ctx, this.w = e.w
            }
            return r(t, [{
                key: "moveXCrosshairs",
                value: function(t) {
                    var e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : null,
                        i = this.ttCtx,
                        a = this.w,
                        s = i.getElXCrosshairs(),
                        r = t - i.xcrosshairsWidth / 2,
                        o = a.globals.labels.slice().length;
                    if (null !== e && (r = a.globals.gridWidth / o * e), null === s || a.globals.isBarHorizontal || (s.setAttribute("x", r), s.setAttribute("x1", r), s.setAttribute("x2", r), s.setAttribute("y2", a.globals.gridHeight), s.classList.add("apexcharts-active")), r < 0 && (r = 0), r > a.globals.gridWidth && (r = a.globals.gridWidth), i.isXAxisTooltipEnabled) {
                        var n = r;
                        "tickWidth" !== a.config.xaxis.crosshairs.width && "barWidth" !== a.config.xaxis.crosshairs.width || (n = r + i.xcrosshairsWidth / 2), this.moveXAxisTooltip(n)
                    }
                }
            }, {
                key: "moveYCrosshairs",
                value: function(t) {
                    var e = this.ttCtx;
                    null !== e.ycrosshairs && m.setAttrs(e.ycrosshairs, {
                        y1: t,
                        y2: t
                    }), null !== e.ycrosshairsHidden && m.setAttrs(e.ycrosshairsHidden, {
                        y1: t,
                        y2: t
                    })
                }
            }, {
                key: "moveXAxisTooltip",
                value: function(t) {
                    var e = this.w,
                        i = this.ttCtx;
                    if (null !== i.xaxisTooltip && 0 !== i.xcrosshairsWidth) {
                        i.xaxisTooltip.classList.add("apexcharts-active");
                        var a = i.xaxisOffY + e.config.xaxis.tooltip.offsetY + e.globals.translateY + 1 + e.config.xaxis.offsetY;
                        if (t -= i.xaxisTooltip.getBoundingClientRect().width / 2, !isNaN(t)) {
                            t += e.globals.translateX;
                            var s;
                            s = new m(this.ctx).getTextRects(i.xaxisTooltipText.innerHTML), i.xaxisTooltipText.style.minWidth = s.width + "px", i.xaxisTooltip.style.left = t + "px", i.xaxisTooltip.style.top = a + "px"
                        }
                    }
                }
            }, {
                key: "moveYAxisTooltip",
                value: function(t) {
                    var e = this.w,
                        i = this.ttCtx;
                    null === i.yaxisTTEls && (i.yaxisTTEls = e.globals.dom.baseEl.querySelectorAll(".apexcharts-yaxistooltip"));
                    var a = parseInt(i.ycrosshairsHidden.getAttribute("y1"), 10),
                        s = e.globals.translateY + a,
                        r = i.yaxisTTEls[t].getBoundingClientRect().height,
                        o = e.globals.translateYAxisX[t] - 2;
                    e.config.yaxis[t].opposite && (o -= 26), s -= r / 2, -1 === e.globals.ignoreYAxisIndexes.indexOf(t) ? (i.yaxisTTEls[t].classList.add("apexcharts-active"), i.yaxisTTEls[t].style.top = s + "px", i.yaxisTTEls[t].style.left = o + e.config.yaxis[t].tooltip.offsetX + "px") : i.yaxisTTEls[t].classList.remove("apexcharts-active")
                }
            }, {
                key: "moveTooltip",
                value: function(t, e) {
                    var i = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : null,
                        a = this.w,
                        s = this.ttCtx,
                        r = s.getElTooltip(),
                        o = s.tooltipRect,
                        n = null !== i ? parseFloat(i) : 1,
                        l = parseFloat(t) + n + 5,
                        h = parseFloat(e) + n / 2;
                    if (l > a.globals.gridWidth / 2 && (l = l - o.ttWidth - n - 10), l > a.globals.gridWidth - o.ttWidth - 10 && (l = a.globals.gridWidth - o.ttWidth), l < -20 && (l = -20), a.config.tooltip.followCursor) {
                        var c = s.getElGrid(),
                            d = c.getBoundingClientRect();
                        h = s.e.clientY + a.globals.translateY - d.top - o.ttHeight / 2
                    } else a.globals.isBarHorizontal || (o.ttHeight / 2 + h > a.globals.gridHeight && (h = a.globals.gridHeight - o.ttHeight + a.globals.translateY), h < 0 && (h = 0));
                    isNaN(l) || (l += a.globals.translateX, r.style.left = l + "px", r.style.top = h + "px")
                }
            }, {
                key: "moveMarkers",
                value: function(t, e) {
                    var i = this.w,
                        a = this.ttCtx;
                    if (i.globals.markers.size[t] > 0)
                        for (var s = i.globals.dom.baseEl.querySelectorAll(" .apexcharts-series[data\\:realIndex='".concat(t, "'] .apexcharts-marker")), r = 0; r < s.length; r++) parseInt(s[r].getAttribute("rel"), 10) === e && (a.marker.resetPointsSize(), a.marker.enlargeCurrentPoint(e, s[r]));
                    else a.marker.resetPointsSize(), this.moveDynamicPointOnHover(e, t)
                }
            }, {
                key: "moveDynamicPointOnHover",
                value: function(t, e) {
                    var i, a, s = this.w,
                        r = this.ttCtx,
                        o = s.globals.pointsArray,
                        n = r.tooltipUtil.getHoverMarkerSize(e),
                        l = s.config.series[e].type;
                    if (!l || "column" !== l && "candlestick" !== l && "boxPlot" !== l) {
                        i = o[e][t][0], a = o[e][t][1] ? o[e][t][1] : 0;
                        var h = s.globals.dom.baseEl.querySelector(".apexcharts-series[data\\:realIndex='".concat(e, "'] .apexcharts-series-markers circle"));
                        h && a < s.globals.gridHeight && a > 0 && (h.setAttribute("r", n), h.setAttribute("cx", i), h.setAttribute("cy", a)), this.moveXCrosshairs(i), r.fixedTooltip || this.moveTooltip(i, a, n)
                    }
                }
            }, {
                key: "moveDynamicPointsOnHover",
                value: function(t) {
                    var e, i = this.ttCtx,
                        a = i.w,
                        s = 0,
                        r = 0,
                        o = a.globals.pointsArray;
                    e = new E(this.ctx).getActiveConfigSeriesIndex(!0);
                    var n = i.tooltipUtil.getHoverMarkerSize(e);
                    o[e] && (s = o[e][t][0], r = o[e][t][1]);
                    var l = i.tooltipUtil.getAllMarkers();
                    if (null !== l)
                        for (var h = 0; h < a.globals.series.length; h++) {
                            var c = o[h];
                            if (a.globals.comboCharts && void 0 === c && l.splice(h, 0, null), c && c.length) {
                                var d = o[h][t][1];
                                l[h].setAttribute("cx", s), null !== d && !isNaN(d) && d < a.globals.gridHeight + n && d + n > 0 ? (l[h] && l[h].setAttribute("r", n), l[h] && l[h].setAttribute("cy", d)) : l[h] && l[h].setAttribute("r", 0)
                            }
                        }
                    if (this.moveXCrosshairs(s), !i.fixedTooltip) {
                        var g = r || a.globals.gridHeight;
                        this.moveTooltip(s, g, n)
                    }
                }
            }, {
                key: "moveStickyTooltipOverBars",
                value: function(t) {
                    var e = this.w,
                        i = this.ttCtx,
                        a = e.globals.columnSeries ? e.globals.columnSeries.length : e.globals.series.length,
                        s = a >= 2 && a % 2 == 0 ? Math.floor(a / 2) : Math.floor(a / 2) + 1;
                    e.globals.isBarHorizontal && (s = new E(this.ctx).getActiveConfigSeriesIndex(!1, "desc") + 1);
                    var r = e.globals.dom.baseEl.querySelector(".apexcharts-bar-series .apexcharts-series[rel='".concat(s, "'] path[j='").concat(t, "'], .apexcharts-candlestick-series .apexcharts-series[rel='").concat(s, "'] path[j='").concat(t, "'], .apexcharts-boxPlot-series .apexcharts-series[rel='").concat(s, "'] path[j='").concat(t, "'], .apexcharts-rangebar-series .apexcharts-series[rel='").concat(s, "'] path[j='").concat(t, "']")),
                        o = r ? parseFloat(r.getAttribute("cx")) : 0,
                        n = r ? parseFloat(r.getAttribute("cy")) : 0,
                        l = r ? parseFloat(r.getAttribute("barWidth")) : 0,
                        h = r ? parseFloat(r.getAttribute("barHeight")) : 0,
                        c = i.getElGrid().getBoundingClientRect(),
                        d = r.classList.contains("apexcharts-candlestick-area") || r.classList.contains("apexcharts-boxPlot-area");
                    if (e.globals.isXNumeric ? (r && !d && (o -= a % 2 != 0 ? l / 2 : 0), r && d && e.globals.comboCharts && (o -= l / 2)) : e.globals.isBarHorizontal || (o = i.xAxisTicksPositions[t - 1] + i.dataPointsDividedWidth / 2, isNaN(o) && (o = i.xAxisTicksPositions[t] - i.dataPointsDividedWidth / 2)), e.globals.isBarHorizontal ? (n > e.globals.gridHeight / 2 && (n -= i.tooltipRect.ttHeight), (n = n + e.config.grid.padding.top + h / 3) + h > e.globals.gridHeight && (n = e.globals.gridHeight - h)) : e.config.tooltip.followCursor ? n = i.e.clientY - c.top - i.tooltipRect.ttHeight / 2 : n + i.tooltipRect.ttHeight + 15 > e.globals.gridHeight && (n = e.globals.gridHeight), n < -10 && (n = -10), e.globals.isBarHorizontal || this.moveXCrosshairs(o), !i.fixedTooltip) {
                        var g = n || e.globals.gridHeight;
                        this.moveTooltip(o, g)
                    }
                }
            }]), t
        }(),
        xt = function() {
            function t(e) {
                a(this, t), this.w = e.w, this.ttCtx = e, this.ctx = e.ctx, this.tooltipPosition = new pt(e)
            }
            return r(t, [{
                key: "drawDynamicPoints",
                value: function() {
                    var t = this.w,
                        e = new m(this.ctx),
                        i = new T(this.ctx),
                        a = t.globals.dom.baseEl.querySelectorAll(".apexcharts-series");
                    a = u(a), t.config.chart.stacked && a.sort((function(t, e) {
                        return parseFloat(t.getAttribute("data:realIndex")) - parseFloat(e.getAttribute("data:realIndex"))
                    }));
                    for (var s = 0; s < a.length; s++) {
                        var r = a[s].querySelector(".apexcharts-series-markers-wrap");
                        if (null !== r) {
                            var o = void 0,
                                n = "apexcharts-marker w".concat((Math.random() + 1).toString(36).substring(4));
                            "line" !== t.config.chart.type && "area" !== t.config.chart.type || t.globals.comboCharts || t.config.tooltip.intersect || (n += " no-pointer-events");
                            var l = i.getMarkerConfig({
                                cssClass: n,
                                seriesIndex: Number(r.getAttribute("data:realIndex"))
                            });
                            (o = e.drawMarker(0, 0, l)).node.setAttribute("default-marker-size", 0);
                            var h = document.createElementNS(t.globals.SVGNS, "g");
                            h.classList.add("apexcharts-series-markers"), h.appendChild(o.node), r.appendChild(h)
                        }
                    }
                }
            }, {
                key: "enlargeCurrentPoint",
                value: function(t, e) {
                    var i = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : null,
                        a = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : null,
                        s = this.w;
                    "bubble" !== s.config.chart.type && this.newPointSize(t, e);
                    var r = e.getAttribute("cx"),
                        o = e.getAttribute("cy");
                    if (null !== i && null !== a && (r = i, o = a), this.tooltipPosition.moveXCrosshairs(r), !this.fixedTooltip) {
                        if ("radar" === s.config.chart.type) {
                            var n = this.ttCtx.getElGrid(),
                                l = n.getBoundingClientRect();
                            r = this.ttCtx.e.clientX - l.left
                        }
                        this.tooltipPosition.moveTooltip(r, o, s.config.markers.hover.size)
                    }
                }
            }, {
                key: "enlargePoints",
                value: function(t) {
                    for (var e = this.w, i = this, a = this.ttCtx, s = t, r = e.globals.dom.baseEl.querySelectorAll(".apexcharts-series:not(.apexcharts-series-collapsed) .apexcharts-marker"), o = e.config.markers.hover.size, n = 0; n < r.length; n++) {
                        var l = r[n].getAttribute("rel"),
                            h = r[n].getAttribute("index");
                        if (void 0 === o && (o = e.globals.markers.size[h] + e.config.markers.hover.sizeOffset), s === parseInt(l, 10)) {
                            i.newPointSize(s, r[n]);
                            var c = r[n].getAttribute("cx"),
                                d = r[n].getAttribute("cy");
                            i.tooltipPosition.moveXCrosshairs(c), a.fixedTooltip || i.tooltipPosition.moveTooltip(c, d, o)
                        } else i.oldPointSize(r[n])
                    }
                }
            }, {
                key: "newPointSize",
                value: function(t, e) {
                    var i = this.w,
                        a = i.config.markers.hover.size,
                        s = 0 === t ? e.parentNode.firstChild : e.parentNode.lastChild;
                    if ("0" !== s.getAttribute("default-marker-size")) {
                        var r = parseInt(s.getAttribute("index"), 10);
                        void 0 === a && (a = i.globals.markers.size[r] + i.config.markers.hover.sizeOffset), a < 0 && (a = 0), s.setAttribute("r", a)
                    }
                }
            }, {
                key: "oldPointSize",
                value: function(t) {
                    var e = parseFloat(t.getAttribute("default-marker-size"));
                    t.setAttribute("r", e)
                }
            }, {
                key: "resetPointsSize",
                value: function() {
                    for (var t = this.w.globals.dom.baseEl.querySelectorAll(".apexcharts-series:not(.apexcharts-series-collapsed) .apexcharts-marker"), e = 0; e < t.length; e++) {
                        var i = parseFloat(t[e].getAttribute("default-marker-size"));
                        x.isNumber(i) && i >= 0 ? t[e].setAttribute("r", i) : t[e].setAttribute("r", 0)
                    }
                }
            }]), t
        }(),
        bt = function() {
            function t(e) {
                a(this, t), this.w = e.w, this.ttCtx = e
            }
            return r(t, [{
                key: "getAttr",
                value: function(t, e) {
                    return parseFloat(t.target.getAttribute(e))
                }
            }, {
                key: "handleHeatTreeTooltip",
                value: function(t) {
                    var e = t.e,
                        i = t.opt,
                        a = t.x,
                        s = t.y,
                        r = t.type,
                        o = this.ttCtx,
                        n = this.w;
                    if (e.target.classList.contains("apexcharts-".concat(r, "-rect"))) {
                        var l = this.getAttr(e, "i"),
                            h = this.getAttr(e, "j"),
                            c = this.getAttr(e, "cx"),
                            d = this.getAttr(e, "cy"),
                            g = this.getAttr(e, "width"),
                            u = this.getAttr(e, "height");
                        if (o.tooltipLabels.drawSeriesTexts({
                                ttItems: i.ttItems,
                                i: l,
                                j: h,
                                shared: !1,
                                e: e
                            }), n.globals.capturedSeriesIndex = l, n.globals.capturedDataPointIndex = h, a = c + o.tooltipRect.ttWidth / 2 + g, s = d + o.tooltipRect.ttHeight / 2 - u / 2, o.tooltipPosition.moveXCrosshairs(c + g / 2), a > n.globals.gridWidth / 2 && (a = c - o.tooltipRect.ttWidth / 2 + g), o.w.config.tooltip.followCursor) {
                            var f = n.globals.dom.elWrap.getBoundingClientRect();
                            a = n.globals.clientX - f.left - (a > n.globals.gridWidth / 2 ? o.tooltipRect.ttWidth : 0), s = n.globals.clientY - f.top - (s > n.globals.gridHeight / 2 ? o.tooltipRect.ttHeight : 0)
                        }
                    }
                    return {
                        x: a,
                        y: s
                    }
                }
            }, {
                key: "handleMarkerTooltip",
                value: function(t) {
                    var e, i, a = t.e,
                        s = t.opt,
                        r = t.x,
                        o = t.y,
                        n = this.w,
                        l = this.ttCtx;
                    if (a.target.classList.contains("apexcharts-marker")) {
                        var h = parseInt(s.paths.getAttribute("cx"), 10),
                            c = parseInt(s.paths.getAttribute("cy"), 10),
                            d = parseFloat(s.paths.getAttribute("val"));
                        if (i = parseInt(s.paths.getAttribute("rel"), 10), e = parseInt(s.paths.parentNode.parentNode.parentNode.getAttribute("rel"), 10) - 1, l.intersect) {
                            var g = x.findAncestor(s.paths, "apexcharts-series");
                            g && (e = parseInt(g.getAttribute("data:realIndex"), 10))
                        }
                        if (l.tooltipLabels.drawSeriesTexts({
                                ttItems: s.ttItems,
                                i: e,
                                j: i,
                                shared: !l.showOnIntersect && n.config.tooltip.shared,
                                e: a
                            }), "mouseup" === a.type && l.markerClick(a, e, i), n.globals.capturedSeriesIndex = e, n.globals.capturedDataPointIndex = i, r = h, o = c + n.globals.translateY - 1.4 * l.tooltipRect.ttHeight, l.w.config.tooltip.followCursor) {
                            var u = l.getElGrid().getBoundingClientRect();
                            o = l.e.clientY + n.globals.translateY - u.top
                        }
                        d < 0 && (o = c), l.marker.enlargeCurrentPoint(i, s.paths, r, o)
                    }
                    return {
                        x: r,
                        y: o
                    }
                }
            }, {
                key: "handleBarTooltip",
                value: function(t) {
                    var e, i, a = t.e,
                        s = t.opt,
                        r = this.w,
                        o = this.ttCtx,
                        n = o.getElTooltip(),
                        l = 0,
                        h = 0,
                        c = 0,
                        d = this.getBarTooltipXY({
                            e: a,
                            opt: s
                        });
                    e = d.i;
                    var g = d.barHeight,
                        u = d.j;
                    r.globals.capturedSeriesIndex = e, r.globals.capturedDataPointIndex = u, r.globals.isBarHorizontal && o.tooltipUtil.hasBars() || !r.config.tooltip.shared ? (h = d.x, c = d.y, i = Array.isArray(r.config.stroke.width) ? r.config.stroke.width[e] : r.config.stroke.width, l = h) : r.globals.comboCharts || r.config.tooltip.shared || (l /= 2), isNaN(c) ? c = r.globals.svgHeight - o.tooltipRect.ttHeight : c < 0 && (c = 0);
                    var f = parseInt(s.paths.parentNode.getAttribute("data:realIndex"), 10),
                        p = r.globals.isMultipleYAxis ? r.config.yaxis[f] && r.config.yaxis[f].reversed : r.config.yaxis[0].reversed;
                    if (h + o.tooltipRect.ttWidth > r.globals.gridWidth && !p ? h -= o.tooltipRect.ttWidth : h < 0 && (h = 0), o.w.config.tooltip.followCursor) {
                        var x = o.getElGrid().getBoundingClientRect();
                        c = o.e.clientY - x.top
                    }
                    null === o.tooltip && (o.tooltip = r.globals.dom.baseEl.querySelector(".apexcharts-tooltip")), r.config.tooltip.shared || (r.globals.comboBarCount > 0 ? o.tooltipPosition.moveXCrosshairs(l + i / 2) : o.tooltipPosition.moveXCrosshairs(l)), !o.fixedTooltip && (!r.config.tooltip.shared || r.globals.isBarHorizontal && o.tooltipUtil.hasBars()) && (p && (h -= o.tooltipRect.ttWidth) < 0 && (h = 0), !p || r.globals.isBarHorizontal && o.tooltipUtil.hasBars() || (c = c + g - 2 * (r.globals.series[e][u] < 0 ? g : 0)), o.tooltipRect.ttHeight + c > r.globals.gridHeight ? c = r.globals.gridHeight - o.tooltipRect.ttHeight + r.globals.translateY : (c = c + r.globals.translateY - o.tooltipRect.ttHeight / 2) < 0 && (c = 0), n.style.left = h + r.globals.translateX + "px", n.style.top = c + "px")
                }
            }, {
                key: "getBarTooltipXY",
                value: function(t) {
                    var e = t.e,
                        i = t.opt,
                        a = this.w,
                        s = null,
                        r = this.ttCtx,
                        o = 0,
                        n = 0,
                        l = 0,
                        h = 0,
                        c = 0,
                        d = e.target.classList;
                    if (d.contains("apexcharts-bar-area") || d.contains("apexcharts-candlestick-area") || d.contains("apexcharts-boxPlot-area") || d.contains("apexcharts-rangebar-area")) {
                        var g = e.target,
                            u = g.getBoundingClientRect(),
                            f = i.elGrid.getBoundingClientRect(),
                            p = u.height;
                        c = u.height;
                        var x = u.width,
                            b = parseInt(g.getAttribute("cx"), 10),
                            v = parseInt(g.getAttribute("cy"), 10);
                        h = parseFloat(g.getAttribute("barWidth"));
                        var m = "touchmove" === e.type ? e.touches[0].clientX : e.clientX;
                        s = parseInt(g.getAttribute("j"), 10), o = parseInt(g.parentNode.getAttribute("rel"), 10) - 1;
                        var y = g.getAttribute("data-range-y1"),
                            w = g.getAttribute("data-range-y2");
                        a.globals.comboCharts && (o = parseInt(g.parentNode.getAttribute("data:realIndex"), 10)), r.tooltipLabels.drawSeriesTexts({
                            ttItems: i.ttItems,
                            i: o,
                            j: s,
                            y1: y ? parseInt(y, 10) : null,
                            y2: w ? parseInt(w, 10) : null,
                            shared: !r.showOnIntersect && a.config.tooltip.shared,
                            e: e
                        }), a.config.tooltip.followCursor ? a.globals.isBarHorizontal ? (n = m - f.left + 15, l = v - r.dataPointsDividedHeight + p / 2 - r.tooltipRect.ttHeight / 2) : (n = a.globals.isXNumeric ? b - x / 2 : b - r.dataPointsDividedWidth + x / 2, l = e.clientY - f.top - r.tooltipRect.ttHeight / 2 - 15) : a.globals.isBarHorizontal ? ((n = b) < r.xyRatios.baseLineInvertedY && (n = b - r.tooltipRect.ttWidth), l = v - r.dataPointsDividedHeight + p / 2 - r.tooltipRect.ttHeight / 2) : (n = a.globals.isXNumeric ? b - x / 2 : b - r.dataPointsDividedWidth + x / 2, l = v)
                    }
                    return {
                        x: n,
                        y: l,
                        barHeight: c,
                        barWidth: h,
                        i: o,
                        j: s
                    }
                }
            }]), t
        }(),
        vt = function() {
            function t(e) {
                a(this, t), this.w = e.w, this.ttCtx = e
            }
            return r(t, [{
                key: "drawXaxisTooltip",
                value: function() {
                    var t = this.w,
                        e = this.ttCtx,
                        i = "bottom" === t.config.xaxis.position;
                    e.xaxisOffY = i ? t.globals.gridHeight + 1 : -t.globals.xAxisHeight - t.config.xaxis.axisTicks.height + 3;
                    var a = i ? "apexcharts-xaxistooltip apexcharts-xaxistooltip-bottom" : "apexcharts-xaxistooltip apexcharts-xaxistooltip-top",
                        s = t.globals.dom.elWrap;
                    e.isXAxisTooltipEnabled && (null === t.globals.dom.baseEl.querySelector(".apexcharts-xaxistooltip") && (e.xaxisTooltip = document.createElement("div"), e.xaxisTooltip.setAttribute("class", a + " apexcharts-theme-" + t.config.tooltip.theme), s.appendChild(e.xaxisTooltip), e.xaxisTooltipText = document.createElement("div"), e.xaxisTooltipText.classList.add("apexcharts-xaxistooltip-text"), e.xaxisTooltipText.style.fontFamily = t.config.xaxis.tooltip.style.fontFamily || t.config.chart.fontFamily, e.xaxisTooltipText.style.fontSize = t.config.xaxis.tooltip.style.fontSize, e.xaxisTooltip.appendChild(e.xaxisTooltipText)))
                }
            }, {
                key: "drawYaxisTooltip",
                value: function() {
                    for (var t = this.w, e = this.ttCtx, i = function(i) {
                            var a = t.config.yaxis[i].opposite || t.config.yaxis[i].crosshairs.opposite;
                            e.yaxisOffX = a ? t.globals.gridWidth + 1 : 1;
                            var s = "apexcharts-yaxistooltip apexcharts-yaxistooltip-".concat(i, a ? " apexcharts-yaxistooltip-right" : " apexcharts-yaxistooltip-left");
                            t.globals.yAxisSameScaleIndices.map((function(e, a) {
                                e.map((function(e, a) {
                                    a === i && (s += t.config.yaxis[a].show ? " " : " apexcharts-yaxistooltip-hidden")
                                }))
                            }));
                            var r = t.globals.dom.elWrap;
                            null === t.globals.dom.baseEl.querySelector(".apexcharts-yaxistooltip apexcharts-yaxistooltip-".concat(i)) && (e.yaxisTooltip = document.createElement("div"), e.yaxisTooltip.setAttribute("class", s + " apexcharts-theme-" + t.config.tooltip.theme), r.appendChild(e.yaxisTooltip), 0 === i && (e.yaxisTooltipText = []), e.yaxisTooltipText[i] = document.createElement("div"), e.yaxisTooltipText[i].classList.add("apexcharts-yaxistooltip-text"), e.yaxisTooltip.appendChild(e.yaxisTooltipText[i]))
                        }, a = 0; a < t.config.yaxis.length; a++) i(a)
                }
            }, {
                key: "setXCrosshairWidth",
                value: function() {
                    var t = this.w,
                        e = this.ttCtx,
                        i = e.getElXCrosshairs();
                    if (e.xcrosshairsWidth = parseInt(t.config.xaxis.crosshairs.width, 10), t.globals.comboCharts) {
                        var a = t.globals.dom.baseEl.querySelector(".apexcharts-bar-area");
                        if (null !== a && "barWidth" === t.config.xaxis.crosshairs.width) {
                            var s = parseFloat(a.getAttribute("barWidth"));
                            e.xcrosshairsWidth = s
                        } else if ("tickWidth" === t.config.xaxis.crosshairs.width) {
                            var r = t.globals.labels.length;
                            e.xcrosshairsWidth = t.globals.gridWidth / r
                        }
                    } else if ("tickWidth" === t.config.xaxis.crosshairs.width) {
                        var o = t.globals.labels.length;
                        e.xcrosshairsWidth = t.globals.gridWidth / o
                    } else if ("barWidth" === t.config.xaxis.crosshairs.width) {
                        var n = t.globals.dom.baseEl.querySelector(".apexcharts-bar-area");
                        if (null !== n) {
                            var l = parseFloat(n.getAttribute("barWidth"));
                            e.xcrosshairsWidth = l
                        } else e.xcrosshairsWidth = 1
                    }
                    t.globals.isBarHorizontal && (e.xcrosshairsWidth = 0), null !== i && e.xcrosshairsWidth > 0 && i.setAttribute("width", e.xcrosshairsWidth)
                }
            }, {
                key: "handleYCrosshair",
                value: function() {
                    var t = this.w,
                        e = this.ttCtx;
                    e.ycrosshairs = t.globals.dom.baseEl.querySelector(".apexcharts-ycrosshairs"), e.ycrosshairsHidden = t.globals.dom.baseEl.querySelector(".apexcharts-ycrosshairs-hidden")
                }
            }, {
                key: "drawYaxisTooltipText",
                value: function(t, e, i) {
                    var a = this.ttCtx,
                        s = this.w,
                        r = s.globals.yLabelFormatters[t];
                    if (a.yaxisTooltips[t]) {
                        var o = a.getElGrid().getBoundingClientRect(),
                            n = (e - o.top) * i.yRatio[t],
                            l = s.globals.maxYArr[t] - s.globals.minYArr[t],
                            h = s.globals.minYArr[t] + (l - n);
                        a.tooltipPosition.moveYCrosshairs(e - o.top), a.yaxisTooltipText[t].innerHTML = r(h), a.tooltipPosition.moveYAxisTooltip(t)
                    }
                }
            }]), t
        }(),
        mt = function() {
            function t(e) {
                a(this, t), this.ctx = e, this.w = e.w;
                var i = this.w;
                this.tConfig = i.config.tooltip, this.tooltipUtil = new ut(this), this.tooltipLabels = new ft(this), this.tooltipPosition = new pt(this), this.marker = new xt(this), this.intersect = new bt(this), this.axesTooltip = new vt(this), this.showOnIntersect = this.tConfig.intersect, this.showTooltipTitle = this.tConfig.x.show, this.fixedTooltip = this.tConfig.fixed.enabled, this.xaxisTooltip = null, this.yaxisTTEls = null, this.isBarShared = !i.globals.isBarHorizontal && this.tConfig.shared, this.lastHoverTime = Date.now()
            }
            return r(t, [{
                key: "getElTooltip",
                value: function(t) {
                    return t || (t = this), t.w.globals.dom.baseEl ? t.w.globals.dom.baseEl.querySelector(".apexcharts-tooltip") : null
                }
            }, {
                key: "getElXCrosshairs",
                value: function() {
                    return this.w.globals.dom.baseEl.querySelector(".apexcharts-xcrosshairs")
                }
            }, {
                key: "getElGrid",
                value: function() {
                    return this.w.globals.dom.baseEl.querySelector(".apexcharts-grid")
                }
            }, {
                key: "drawTooltip",
                value: function(t) {
                    var e = this.w;
                    this.xyRatios = t, this.isXAxisTooltipEnabled = e.config.xaxis.tooltip.enabled && e.globals.axisCharts, this.yaxisTooltips = e.config.yaxis.map((function(t, i) {
                        return !!(t.show && t.tooltip.enabled && e.globals.axisCharts)
                    })), this.allTooltipSeriesGroups = [], e.globals.axisCharts || (this.showTooltipTitle = !1);
                    var i = document.createElement("div");
                    if (i.classList.add("apexcharts-tooltip"), e.config.tooltip.cssClass && i.classList.add(e.config.tooltip.cssClass), i.classList.add("apexcharts-theme-".concat(this.tConfig.theme)), e.globals.dom.elWrap.appendChild(i), e.globals.axisCharts) {
                        this.axesTooltip.drawXaxisTooltip(), this.axesTooltip.drawYaxisTooltip(), this.axesTooltip.setXCrosshairWidth(), this.axesTooltip.handleYCrosshair();
                        var a = new _(this.ctx);
                        this.xAxisTicksPositions = a.getXAxisTicksPositions()
                    }
                    if (!e.globals.comboCharts && !this.tConfig.intersect && "rangeBar" !== e.config.chart.type || this.tConfig.shared || (this.showOnIntersect = !0), 0 !== e.config.markers.size && 0 !== e.globals.markers.largestSize || this.marker.drawDynamicPoints(this), e.globals.collapsedSeries.length !== e.globals.series.length) {
                        this.dataPointsDividedHeight = e.globals.gridHeight / e.globals.dataPoints, this.dataPointsDividedWidth = e.globals.gridWidth / e.globals.dataPoints, this.showTooltipTitle && (this.tooltipTitle = document.createElement("div"), this.tooltipTitle.classList.add("apexcharts-tooltip-title"), this.tooltipTitle.style.fontFamily = this.tConfig.style.fontFamily || e.config.chart.fontFamily, this.tooltipTitle.style.fontSize = this.tConfig.style.fontSize, i.appendChild(this.tooltipTitle));
                        var s = e.globals.series.length;
                        (e.globals.xyCharts || e.globals.comboCharts) && this.tConfig.shared && (s = this.showOnIntersect ? 1 : e.globals.series.length), this.legendLabels = e.globals.dom.baseEl.querySelectorAll(".apexcharts-legend-text"), this.ttItems = this.createTTElements(s), this.addSVGEvents()
                    }
                }
            }, {
                key: "createTTElements",
                value: function(t) {
                    for (var e = this, i = this.w, a = [], s = this.getElTooltip(), r = function(r) {
                            var o = document.createElement("div");
                            o.classList.add("apexcharts-tooltip-series-group"), o.style.order = i.config.tooltip.inverseOrder ? t - r : r + 1, e.tConfig.shared && e.tConfig.enabledOnSeries && Array.isArray(e.tConfig.enabledOnSeries) && e.tConfig.enabledOnSeries.indexOf(r) < 0 && o.classList.add("apexcharts-tooltip-series-group-hidden");
                            var n = document.createElement("span");
                            n.classList.add("apexcharts-tooltip-marker"), n.style.backgroundColor = i.globals.colors[r], o.appendChild(n);
                            var l = document.createElement("div");
                            l.classList.add("apexcharts-tooltip-text"), l.style.fontFamily = e.tConfig.style.fontFamily || i.config.chart.fontFamily, l.style.fontSize = e.tConfig.style.fontSize, ["y", "goals", "z"].forEach((function(t) {
                                var e = document.createElement("div");
                                e.classList.add("apexcharts-tooltip-".concat(t, "-group"));
                                var i = document.createElement("span");
                                i.classList.add("apexcharts-tooltip-text-".concat(t, "-label")), e.appendChild(i);
                                var a = document.createElement("span");
                                a.classList.add("apexcharts-tooltip-text-".concat(t, "-value")), e.appendChild(a), l.appendChild(e)
                            })), o.appendChild(l), s.appendChild(o), a.push(o)
                        }, o = 0; o < t; o++) r(o);
                    return a
                }
            }, {
                key: "addSVGEvents",
                value: function() {
                    var t = this.w,
                        e = t.config.chart.type,
                        i = this.getElTooltip(),
                        a = !("bar" !== e && "candlestick" !== e && "boxPlot" !== e && "rangeBar" !== e),
                        s = "area" === e || "line" === e || "scatter" === e || "bubble" === e || "radar" === e,
                        r = t.globals.dom.Paper.node,
                        o = this.getElGrid();
                    o && (this.seriesBound = o.getBoundingClientRect());
                    var n, l = [],
                        h = [],
                        c = {
                            hoverArea: r,
                            elGrid: o,
                            tooltipEl: i,
                            tooltipY: l,
                            tooltipX: h,
                            ttItems: this.ttItems
                        };
                    if (t.globals.axisCharts && (s ? n = t.globals.dom.baseEl.querySelectorAll(".apexcharts-series[data\\:longestSeries='true'] .apexcharts-marker") : a ? n = t.globals.dom.baseEl.querySelectorAll(".apexcharts-series .apexcharts-bar-area, .apexcharts-series .apexcharts-candlestick-area, .apexcharts-series .apexcharts-boxPlot-area, .apexcharts-series .apexcharts-rangebar-area") : "heatmap" !== e && "treemap" !== e || (n = t.globals.dom.baseEl.querySelectorAll(".apexcharts-series .apexcharts-heatmap, .apexcharts-series .apexcharts-treemap")), n && n.length))
                        for (var d = 0; d < n.length; d++) l.push(n[d].getAttribute("cy")), h.push(n[d].getAttribute("cx"));
                    if (t.globals.xyCharts && !this.showOnIntersect || t.globals.comboCharts && !this.showOnIntersect || a && this.tooltipUtil.hasBars() && this.tConfig.shared) this.addPathsEventListeners([r], c);
                    else if (a && !t.globals.comboCharts || s && this.showOnIntersect) this.addDatapointEventsListeners(c);
                    else if (!t.globals.axisCharts || "heatmap" === e || "treemap" === e) {
                        var g = t.globals.dom.baseEl.querySelectorAll(".apexcharts-series");
                        this.addPathsEventListeners(g, c)
                    }
                    if (this.showOnIntersect) {
                        var u = t.globals.dom.baseEl.querySelectorAll(".apexcharts-line-series .apexcharts-marker, .apexcharts-area-series .apexcharts-marker");
                        u.length > 0 && this.addPathsEventListeners(u, c), this.tooltipUtil.hasBars() && !this.tConfig.shared && this.addDatapointEventsListeners(c)
                    }
                }
            }, {
                key: "drawFixedTooltipRect",
                value: function() {
                    var t = this.w,
                        e = this.getElTooltip(),
                        i = e.getBoundingClientRect(),
                        a = i.width + 10,
                        s = i.height + 10,
                        r = this.tConfig.fixed.offsetX,
                        o = this.tConfig.fixed.offsetY,
                        n = this.tConfig.fixed.position.toLowerCase();
                    return n.indexOf("right") > -1 && (r = r + t.globals.svgWidth - a + 10), n.indexOf("bottom") > -1 && (o = o + t.globals.svgHeight - s - 10), e.style.left = r + "px", e.style.top = o + "px", {
                        x: r,
                        y: o,
                        ttWidth: a,
                        ttHeight: s
                    }
                }
            }, {
                key: "addDatapointEventsListeners",
                value: function(t) {
                    var e = this.w.globals.dom.baseEl.querySelectorAll(".apexcharts-series-markers .apexcharts-marker, .apexcharts-bar-area, .apexcharts-candlestick-area, .apexcharts-boxPlot-area, .apexcharts-rangebar-area");
                    this.addPathsEventListeners(e, t)
                }
            }, {
                key: "addPathsEventListeners",
                value: function(t, e) {
                    for (var i = this, a = function(a) {
                            var s = {
                                paths: t[a],
                                tooltipEl: e.tooltipEl,
                                tooltipY: e.tooltipY,
                                tooltipX: e.tooltipX,
                                elGrid: e.elGrid,
                                hoverArea: e.hoverArea,
                                ttItems: e.ttItems
                            };
                            ["mousemove", "mouseup", "touchmove", "mouseout", "touchend"].map((function(e) {
                                return t[a].addEventListener(e, i.onSeriesHover.bind(i, s), {
                                    capture: !1,
                                    passive: !0
                                })
                            }))
                        }, s = 0; s < t.length; s++) a(s)
                }
            }, {
                key: "onSeriesHover",
                value: function(t, e) {
                    var i = this,
                        a = Date.now() - this.lastHoverTime;
                    a >= 100 ? this.seriesHover(t, e) : (clearTimeout(this.seriesHoverTimeout), this.seriesHoverTimeout = setTimeout((function() {
                        i.seriesHover(t, e)
                    }), 100 - a))
                }
            }, {
                key: "seriesHover",
                value: function(t, e) {
                    var i = this;
                    this.lastHoverTime = Date.now();
                    var a = [],
                        s = this.w;
                    s.config.chart.group && (a = this.ctx.getGroupedCharts()), s.globals.axisCharts && (s.globals.minX === -1 / 0 && s.globals.maxX === 1 / 0 || 0 === s.globals.dataPoints) || (a.length ? a.forEach((function(a) {
                        var s = i.getElTooltip(a),
                            r = {
                                paths: t.paths,
                                tooltipEl: s,
                                tooltipY: t.tooltipY,
                                tooltipX: t.tooltipX,
                                elGrid: t.elGrid,
                                hoverArea: t.hoverArea,
                                ttItems: a.w.globals.tooltip.ttItems
                            };
                        a.w.globals.minX === i.w.globals.minX && a.w.globals.maxX === i.w.globals.maxX && a.w.globals.tooltip.seriesHoverByContext({
                            chartCtx: a,
                            ttCtx: a.w.globals.tooltip,
                            opt: r,
                            e: e
                        })
                    })) : this.seriesHoverByContext({
                        chartCtx: this.ctx,
                        ttCtx: this.w.globals.tooltip,
                        opt: t,
                        e: e
                    }))
                }
            }, {
                key: "seriesHoverByContext",
                value: function(t) {
                    var e = t.chartCtx,
                        i = t.ttCtx,
                        a = t.opt,
                        s = t.e,
                        r = e.w,
                        o = this.getElTooltip();
                    if (o) {
                        if (i.tooltipRect = {
                                x: 0,
                                y: 0,
                                ttWidth: o.getBoundingClientRect().width,
                                ttHeight: o.getBoundingClientRect().height
                            }, i.e = s, i.tooltipUtil.hasBars() && !r.globals.comboCharts && !i.isBarShared)
                            if (this.tConfig.onDatasetHover.highlightDataSeries) new E(e).toggleSeriesOnHover(s, s.target.parentNode);
                        i.fixedTooltip && i.drawFixedTooltipRect(), r.globals.axisCharts ? i.axisChartsTooltips({
                            e: s,
                            opt: a,
                            tooltipRect: i.tooltipRect
                        }) : i.nonAxisChartsTooltips({
                            e: s,
                            opt: a,
                            tooltipRect: i.tooltipRect
                        })
                    }
                }
            }, {
                key: "axisChartsTooltips",
                value: function(t) {
                    var e, i, a = t.e,
                        s = t.opt,
                        r = this.w,
                        o = s.elGrid.getBoundingClientRect(),
                        n = "touchmove" === a.type ? a.touches[0].clientX : a.clientX,
                        l = "touchmove" === a.type ? a.touches[0].clientY : a.clientY;
                    if (this.clientY = l, this.clientX = n, r.globals.capturedSeriesIndex = -1, r.globals.capturedDataPointIndex = -1, l < o.top || l > o.top + o.height) this.handleMouseOut(s);
                    else {
                        if (Array.isArray(this.tConfig.enabledOnSeries) && !r.config.tooltip.shared) {
                            var h = parseInt(s.paths.getAttribute("index"), 10);
                            if (this.tConfig.enabledOnSeries.indexOf(h) < 0) return void this.handleMouseOut(s)
                        }
                        var c = this.getElTooltip(),
                            d = this.getElXCrosshairs(),
                            g = r.globals.xyCharts || "bar" === r.config.chart.type && !r.globals.isBarHorizontal && this.tooltipUtil.hasBars() && this.tConfig.shared || r.globals.comboCharts && this.tooltipUtil.hasBars();
                        if ("mousemove" === a.type || "touchmove" === a.type || "mouseup" === a.type) {
                            if (r.globals.collapsedSeries.length + r.globals.ancillaryCollapsedSeries.length === r.globals.series.length) return;
                            null !== d && d.classList.add("apexcharts-active");
                            var u = this.yaxisTooltips.filter((function(t) {
                                return !0 === t
                            }));
                            if (null !== this.ycrosshairs && u.length && this.ycrosshairs.classList.add("apexcharts-active"), g && !this.showOnIntersect) this.handleStickyTooltip(a, n, l, s);
                            else if ("heatmap" === r.config.chart.type || "treemap" === r.config.chart.type) {
                                var f = this.intersect.handleHeatTreeTooltip({
                                    e: a,
                                    opt: s,
                                    x: e,
                                    y: i,
                                    type: r.config.chart.type
                                });
                                e = f.x, i = f.y, c.style.left = e + "px", c.style.top = i + "px"
                            } else this.tooltipUtil.hasBars() && this.intersect.handleBarTooltip({
                                e: a,
                                opt: s
                            }), this.tooltipUtil.hasMarkers() && this.intersect.handleMarkerTooltip({
                                e: a,
                                opt: s,
                                x: e,
                                y: i
                            });
                            if (this.yaxisTooltips.length)
                                for (var p = 0; p < r.config.yaxis.length; p++) this.axesTooltip.drawYaxisTooltipText(p, l, this.xyRatios);
                            s.tooltipEl.classList.add("apexcharts-active")
                        } else "mouseout" !== a.type && "touchend" !== a.type || this.handleMouseOut(s)
                    }
                }
            }, {
                key: "nonAxisChartsTooltips",
                value: function(t) {
                    var e = t.e,
                        i = t.opt,
                        a = t.tooltipRect,
                        s = this.w,
                        r = i.paths.getAttribute("rel"),
                        o = this.getElTooltip(),
                        n = s.globals.dom.elWrap.getBoundingClientRect();
                    if ("mousemove" === e.type || "touchmove" === e.type) {
                        o.classList.add("apexcharts-active"), this.tooltipLabels.drawSeriesTexts({
                            ttItems: i.ttItems,
                            i: parseInt(r, 10) - 1,
                            shared: !1
                        });
                        var l = s.globals.clientX - n.left - a.ttWidth / 2,
                            h = s.globals.clientY - n.top - a.ttHeight - 10;
                        if (o.style.left = l + "px", o.style.top = h + "px", s.config.legend.tooltipHoverFormatter) {
                            var c = r - 1,
                                d = (0, s.config.legend.tooltipHoverFormatter)(this.legendLabels[c].getAttribute("data:default-text"), {
                                    seriesIndex: c,
                                    dataPointIndex: c,
                                    w: s
                                });
                            this.legendLabels[c].innerHTML = d
                        }
                    } else "mouseout" !== e.type && "touchend" !== e.type || (o.classList.remove("apexcharts-active"), s.config.legend.tooltipHoverFormatter && this.legendLabels.forEach((function(t) {
                        var e = t.getAttribute("data:default-text");
                        t.innerHTML = decodeURIComponent(e)
                    })))
                }
            }, {
                key: "handleStickyTooltip",
                value: function(t, e, i, a) {
                    var s = this.w,
                        r = this.tooltipUtil.getNearestValues({
                            context: this,
                            hoverArea: a.hoverArea,
                            elGrid: a.elGrid,
                            clientX: e,
                            clientY: i
                        }),
                        o = r.j,
                        n = r.capturedSeries,
                        l = a.elGrid.getBoundingClientRect();
                    r.hoverX < 0 || r.hoverX > l.width ? this.handleMouseOut(a) : null !== n ? this.handleStickyCapturedSeries(t, n, a, o) : (this.tooltipUtil.isXoverlap(o) || s.globals.isBarHorizontal) && this.create(t, this, 0, o, a.ttItems)
                }
            }, {
                key: "handleStickyCapturedSeries",
                value: function(t, e, i, a) {
                    var s = this.w;
                    if (!this.tConfig.shared && null === s.globals.series[e][a]) return void this.handleMouseOut(i);
                    void 0 !== s.globals.series[e][a] ? this.tConfig.shared && this.tooltipUtil.isXoverlap(a) && this.tooltipUtil.isInitialSeriesSameLen() ? this.create(t, this, e, a, i.ttItems) : this.create(t, this, e, a, i.ttItems, !1) : this.tooltipUtil.isXoverlap(a) && this.create(t, this, 0, a, i.ttItems)
                }
            }, {
                key: "deactivateHoverFilter",
                value: function() {
                    for (var t = this.w, e = new m(this.ctx), i = t.globals.dom.Paper.select(".apexcharts-bar-area"), a = 0; a < i.length; a++) e.pathMouseLeave(i[a])
                }
            }, {
                key: "handleMouseOut",
                value: function(t) {
                    var e = this.w,
                        i = this.getElXCrosshairs();
                    if (t.tooltipEl.classList.remove("apexcharts-active"), this.deactivateHoverFilter(), "bubble" !== e.config.chart.type && this.marker.resetPointsSize(), null !== i && i.classList.remove("apexcharts-active"), null !== this.ycrosshairs && this.ycrosshairs.classList.remove("apexcharts-active"), this.isXAxisTooltipEnabled && this.xaxisTooltip.classList.remove("apexcharts-active"), this.yaxisTooltips.length) {
                        null === this.yaxisTTEls && (this.yaxisTTEls = e.globals.dom.baseEl.querySelectorAll(".apexcharts-yaxistooltip"));
                        for (var a = 0; a < this.yaxisTTEls.length; a++) this.yaxisTTEls[a].classList.remove("apexcharts-active")
                    }
                    e.config.legend.tooltipHoverFormatter && this.legendLabels.forEach((function(t) {
                        var e = t.getAttribute("data:default-text");
                        t.innerHTML = decodeURIComponent(e)
                    }))
                }
            }, {
                key: "markerClick",
                value: function(t, e, i) {
                    var a = this.w;
                    "function" == typeof a.config.chart.events.markerClick && a.config.chart.events.markerClick(t, this.ctx, {
                        seriesIndex: e,
                        dataPointIndex: i,
                        w: a
                    }), this.ctx.events.fireEvent("markerClick", [t, this.ctx, {
                        seriesIndex: e,
                        dataPointIndex: i,
                        w: a
                    }])
                }
            }, {
                key: "create",
                value: function(t, e, i, a, s) {
                    var r = arguments.length > 5 && void 0 !== arguments[5] ? arguments[5] : null,
                        o = this.w,
                        n = e;
                    "mouseup" === t.type && this.markerClick(t, i, a), null === r && (r = this.tConfig.shared);
                    var l = this.tooltipUtil.hasMarkers(),
                        h = this.tooltipUtil.getElBars();
                    if (o.config.legend.tooltipHoverFormatter) {
                        var c = o.config.legend.tooltipHoverFormatter,
                            d = Array.from(this.legendLabels);
                        d.forEach((function(t) {
                            var e = t.getAttribute("data:default-text");
                            t.innerHTML = decodeURIComponent(e)
                        }));
                        for (var g = 0; g < d.length; g++) {
                            var u = d[g],
                                f = parseInt(u.getAttribute("i"), 10),
                                p = decodeURIComponent(u.getAttribute("data:default-text")),
                                x = c(p, {
                                    seriesIndex: r ? f : i,
                                    dataPointIndex: a,
                                    w: o
                                });
                            if (r) u.innerHTML = o.globals.collapsedSeriesIndices.indexOf(f) < 0 ? x : p;
                            else if (u.innerHTML = f === i ? x : p, i === f) break
                        }
                    }
                    if (r) {
                        if (n.tooltipLabels.drawSeriesTexts({
                                ttItems: s,
                                i: i,
                                j: a,
                                shared: !this.showOnIntersect && this.tConfig.shared
                            }), l && (o.globals.markers.largestSize > 0 ? n.marker.enlargePoints(a) : n.tooltipPosition.moveDynamicPointsOnHover(a)), this.tooltipUtil.hasBars() && (this.barSeriesHeight = this.tooltipUtil.getBarsHeight(h), this.barSeriesHeight > 0)) {
                            var b = new m(this.ctx),
                                v = o.globals.dom.Paper.select(".apexcharts-bar-area[j='".concat(a, "']"));
                            this.deactivateHoverFilter(), this.tooltipPosition.moveStickyTooltipOverBars(a);
                            for (var y = 0; y < v.length; y++) b.pathMouseEnter(v[y])
                        }
                    } else n.tooltipLabels.drawSeriesTexts({
                        shared: !1,
                        ttItems: s,
                        i: i,
                        j: a
                    }), this.tooltipUtil.hasBars() && n.tooltipPosition.moveStickyTooltipOverBars(a), l && n.tooltipPosition.moveMarkers(i, a)
                }
            }]), t
        }(),
        yt = function(t) {
            n(s, t);
            var i = d(s);

            function s() {
                return a(this, s), i.apply(this, arguments)
            }
            return r(s, [{
                key: "draw",
                value: function(t, i) {
                    var a = this,
                        s = this.w;
                    this.graphics = new m(this.ctx), this.bar = new F(this.ctx, this.xyRatios);
                    var r = new y(this.ctx, s);
                    t = r.getLogSeries(t), this.yRatio = r.getLogYRatios(this.yRatio), this.barHelpers.initVariables(t), "100%" === s.config.chart.stackType && (t = s.globals.seriesPercent.slice()), this.series = t, this.totalItems = 0, this.prevY = [], this.prevX = [], this.prevYF = [], this.prevXF = [], this.prevYVal = [], this.prevXVal = [], this.xArrj = [], this.xArrjF = [], this.xArrjVal = [], this.yArrj = [], this.yArrjF = [], this.yArrjVal = [];
                    for (var o = 0; o < t.length; o++) t[o].length > 0 && (this.totalItems += t[o].length);
                    for (var n = this.graphics.group({
                            class: "apexcharts-bar-series apexcharts-plot-series"
                        }), l = 0, h = 0, c = function(r, o) {
                            var c = void 0,
                                d = void 0,
                                g = void 0,
                                u = void 0,
                                f = [],
                                p = [],
                                b = s.globals.comboCharts ? i[r] : r;
                            a.yRatio.length > 1 && (a.yaxisIndex = b), a.isReversed = s.config.yaxis[a.yaxisIndex] && s.config.yaxis[a.yaxisIndex].reversed;
                            var v = a.graphics.group({
                                class: "apexcharts-series",
                                seriesName: x.escapeString(s.globals.seriesNames[b]),
                                rel: r + 1,
                                "data:realIndex": b
                            });
                            a.ctx.series.addCollapsedClassToSeries(v, b);
                            var m = a.graphics.group({
                                    class: "apexcharts-datalabels",
                                    "data:realIndex": b
                                }),
                                y = 0,
                                w = 0,
                                k = a.initialPositions(l, h, c, d, g, u);
                            h = k.y, y = k.barHeight, d = k.yDivision, u = k.zeroW, l = k.x, w = k.barWidth, c = k.xDivision, g = k.zeroH, a.yArrj = [], a.yArrjF = [], a.yArrjVal = [], a.xArrj = [], a.xArrjF = [], a.xArrjVal = [], 1 === a.prevY.length && a.prevY[0].every((function(t) {
                                return isNaN(t)
                            })) && (a.prevY[0] = a.prevY[0].map((function(t) {
                                return g
                            })), a.prevYF[0] = a.prevYF[0].map((function(t) {
                                return 0
                            })));
                            for (var A = 0; A < s.globals.dataPoints; A++) {
                                var S = a.barHelpers.getStrokeWidth(r, A, b),
                                    C = {
                                        indexes: {
                                            i: r,
                                            j: A,
                                            realIndex: b,
                                            bc: o
                                        },
                                        strokeWidth: S,
                                        x: l,
                                        y: h,
                                        elSeries: v
                                    },
                                    L = null;
                                a.isHorizontal ? (L = a.drawStackedBarPaths(e(e({}, C), {}, {
                                    zeroW: u,
                                    barHeight: y,
                                    yDivision: d
                                })), w = a.series[r][A] / a.invertedYRatio) : (L = a.drawStackedColumnPaths(e(e({}, C), {}, {
                                    xDivision: c,
                                    barWidth: w,
                                    zeroH: g
                                })), y = a.series[r][A] / a.yRatio[a.yaxisIndex]), h = L.y, l = L.x, f.push(l), p.push(h);
                                var P = a.barHelpers.getPathFillColor(t, r, A, b);
                                v = a.renderSeries({
                                    realIndex: b,
                                    pathFill: P,
                                    j: A,
                                    i: r,
                                    pathFrom: L.pathFrom,
                                    pathTo: L.pathTo,
                                    strokeWidth: S,
                                    elSeries: v,
                                    x: l,
                                    y: h,
                                    series: t,
                                    barHeight: y,
                                    barWidth: w,
                                    elDataLabelsWrap: m,
                                    type: "bar",
                                    visibleSeries: 0
                                })
                            }
                            s.globals.seriesXvalues[b] = f, s.globals.seriesYvalues[b] = p, a.prevY.push(a.yArrj), a.prevYF.push(a.yArrjF), a.prevYVal.push(a.yArrjVal), a.prevX.push(a.xArrj), a.prevXF.push(a.xArrjF), a.prevXVal.push(a.xArrjVal), n.add(v)
                        }, d = 0, g = 0; d < t.length; d++, g++) c(d, g);
                    return n
                }
            }, {
                key: "initialPositions",
                value: function(t, e, i, a, s, r) {
                    var o, n, l = this.w;
                    return this.isHorizontal ? (o = (o = a = l.globals.gridHeight / l.globals.dataPoints) * parseInt(l.config.plotOptions.bar.barHeight, 10) / 100, r = this.baseLineInvertedY + l.globals.padHorizontal + (this.isReversed ? l.globals.gridWidth : 0) - (this.isReversed ? 2 * this.baseLineInvertedY : 0), e = (a - o) / 2) : (n = i = l.globals.gridWidth / l.globals.dataPoints, n = l.globals.isXNumeric && l.globals.dataPoints > 1 ? (i = l.globals.minXDiff / this.xRatio) * parseInt(this.barOptions.columnWidth, 10) / 100 : n * parseInt(l.config.plotOptions.bar.columnWidth, 10) / 100, s = this.baseLineY[this.yaxisIndex] + (this.isReversed ? l.globals.gridHeight : 0) - (this.isReversed ? 2 * this.baseLineY[this.yaxisIndex] : 0), t = l.globals.padHorizontal + (i - n) / 2), {
                        x: t,
                        y: e,
                        yDivision: a,
                        xDivision: i,
                        barHeight: o,
                        barWidth: n,
                        zeroH: s,
                        zeroW: r
                    }
                }
            }, {
                key: "drawStackedBarPaths",
                value: function(t) {
                    for (var e, i = t.indexes, a = t.barHeight, s = t.strokeWidth, r = t.zeroW, o = t.x, n = t.y, l = t.yDivision, h = t.elSeries, c = this.w, d = n, g = i.i, u = i.j, f = 0, p = 0; p < this.prevXF.length; p++) f += this.prevXF[p][u];
                    if (g > 0) {
                        var x = r;
                        this.prevXVal[g - 1][u] < 0 ? x = this.series[g][u] >= 0 ? this.prevX[g - 1][u] + f - 2 * (this.isReversed ? f : 0) : this.prevX[g - 1][u] : this.prevXVal[g - 1][u] >= 0 && (x = this.series[g][u] >= 0 ? this.prevX[g - 1][u] : this.prevX[g - 1][u] - f + 2 * (this.isReversed ? f : 0)), e = x
                    } else e = r;
                    o = null === this.series[g][u] ? e : e + this.series[g][u] / this.invertedYRatio - 2 * (this.isReversed ? this.series[g][u] / this.invertedYRatio : 0);
                    var b = this.barHelpers.getBarpaths({
                        barYPosition: d,
                        barHeight: a,
                        x1: e,
                        x2: o,
                        strokeWidth: s,
                        series: this.series,
                        realIndex: i.realIndex,
                        i: g,
                        j: u,
                        w: c
                    });
                    return this.barHelpers.barBackground({
                        j: u,
                        i: g,
                        y1: d,
                        y2: a,
                        elSeries: h
                    }), n += l, {
                        pathTo: b.pathTo,
                        pathFrom: b.pathFrom,
                        x: o,
                        y: n
                    }
                }
            }, {
                key: "drawStackedColumnPaths",
                value: function(t) {
                    var e = t.indexes,
                        i = t.x,
                        a = t.y,
                        s = t.xDivision,
                        r = t.barWidth,
                        o = t.zeroH;
                    t.strokeWidth;
                    var n = t.elSeries,
                        l = this.w,
                        h = e.i,
                        c = e.j,
                        d = e.bc;
                    if (l.globals.isXNumeric) {
                        var g = l.globals.seriesX[h][c];
                        g || (g = 0), i = (g - l.globals.minX) / this.xRatio - r / 2
                    }
                    for (var u, f = i, p = 0, x = 0; x < this.prevYF.length; x++) p += isNaN(this.prevYF[x][c]) ? 0 : this.prevYF[x][c];
                    if (h > 0 && !l.globals.isXNumeric || h > 0 && l.globals.isXNumeric && l.globals.seriesX[h - 1][c] === l.globals.seriesX[h][c]) {
                        var b, v, m = Math.min(this.yRatio.length + 1, h + 1);
                        if (void 0 !== this.prevY[h - 1])
                            for (var y = 1; y < m; y++)
                                if (!isNaN(this.prevY[h - y][c])) {
                                    v = this.prevY[h - y][c];
                                    break
                                }
                        for (var w = 1; w < m; w++) {
                            if (this.prevYVal[h - w][c] < 0) {
                                b = this.series[h][c] >= 0 ? v - p + 2 * (this.isReversed ? p : 0) : v;
                                break
                            }
                            if (this.prevYVal[h - w][c] >= 0) {
                                b = this.series[h][c] >= 0 ? v : v + p - 2 * (this.isReversed ? p : 0);
                                break
                            }
                        }
                        void 0 === b && (b = l.globals.gridHeight), u = this.prevYF[0].every((function(t) {
                            return 0 === t
                        })) && this.prevYF.slice(1, h).every((function(t) {
                            return t.every((function(t) {
                                return isNaN(t)
                            }))
                        })) ? l.globals.gridHeight - o : b
                    } else u = l.globals.gridHeight - o;
                    a = u - this.series[h][c] / this.yRatio[this.yaxisIndex] + 2 * (this.isReversed ? this.series[h][c] / this.yRatio[this.yaxisIndex] : 0);
                    var k = this.barHelpers.getColumnPaths({
                        barXPosition: f,
                        barWidth: r,
                        y1: u,
                        y2: a,
                        yRatio: this.yRatio[this.yaxisIndex],
                        strokeWidth: this.strokeWidth,
                        series: this.series,
                        realIndex: e.realIndex,
                        i: h,
                        j: c,
                        w: l
                    });
                    return this.barHelpers.barBackground({
                        bc: d,
                        j: c,
                        i: h,
                        x1: f,
                        x2: r,
                        elSeries: n
                    }), i += s, {
                        pathTo: k.pathTo,
                        pathFrom: k.pathFrom,
                        x: l.globals.isXNumeric ? i - s : i,
                        y: a
                    }
                }
            }]), s
        }(F),
        wt = function(t) {
            n(s, t);
            var i = d(s);

            function s() {
                return a(this, s), i.apply(this, arguments)
            }
            return r(s, [{
                key: "draw",
                value: function(t, i) {
                    var a = this,
                        s = this.w,
                        r = new m(this.ctx),
                        o = new M(this.ctx);
                    this.candlestickOptions = this.w.config.plotOptions.candlestick, this.boxOptions = this.w.config.plotOptions.boxPlot, this.isHorizontal = s.config.plotOptions.bar.horizontal;
                    var n = new y(this.ctx, s);
                    t = n.getLogSeries(t), this.series = t, this.yRatio = n.getLogYRatios(this.yRatio), this.barHelpers.initVariables(t);
                    for (var l = r.group({
                            class: "apexcharts-".concat(s.config.chart.type, "-series apexcharts-plot-series")
                        }), h = function(n) {
                            a.isBoxPlot = "boxPlot" === s.config.chart.type || "boxPlot" === s.config.series[n].type;
                            var h, c, d, g, u = void 0,
                                f = void 0,
                                p = [],
                                b = [],
                                v = s.globals.comboCharts ? i[n] : n,
                                m = r.group({
                                    class: "apexcharts-series",
                                    seriesName: x.escapeString(s.globals.seriesNames[v]),
                                    rel: n + 1,
                                    "data:realIndex": v
                                });
                            a.ctx.series.addCollapsedClassToSeries(m, v), t[n].length > 0 && (a.visibleI = a.visibleI + 1);
                            var y, w;
                            a.yRatio.length > 1 && (a.yaxisIndex = v);
                            var k = a.barHelpers.initialPositions();
                            f = k.y, y = k.barHeight, c = k.yDivision, g = k.zeroW, u = k.x, w = k.barWidth, h = k.xDivision, d = k.zeroH, b.push(u + w / 2);
                            for (var A = r.group({
                                    class: "apexcharts-datalabels",
                                    "data:realIndex": v
                                }), S = function(i) {
                                    var r = a.barHelpers.getStrokeWidth(n, i, v),
                                        l = null,
                                        x = {
                                            indexes: {
                                                i: n,
                                                j: i,
                                                realIndex: v
                                            },
                                            x: u,
                                            y: f,
                                            strokeWidth: r,
                                            elSeries: m
                                        };
                                    l = a.isHorizontal ? a.drawHorizontalBoxPaths(e(e({}, x), {}, {
                                        yDivision: c,
                                        barHeight: y,
                                        zeroW: g
                                    })) : a.drawVerticalBoxPaths(e(e({}, x), {}, {
                                        xDivision: h,
                                        barWidth: w,
                                        zeroH: d
                                    })), f = l.y, u = l.x, i > 0 && b.push(u + w / 2), p.push(f), l.pathTo.forEach((function(e, h) {
                                        var c = !a.isBoxPlot && a.candlestickOptions.wick.useFillColor ? l.color[h] : s.globals.stroke.colors[n],
                                            d = o.fillPath({
                                                seriesNumber: v,
                                                dataPointIndex: i,
                                                color: l.color[h],
                                                value: t[n][i]
                                            });
                                        a.renderSeries({
                                            realIndex: v,
                                            pathFill: d,
                                            lineFill: c,
                                            j: i,
                                            i: n,
                                            pathFrom: l.pathFrom,
                                            pathTo: e,
                                            strokeWidth: r,
                                            elSeries: m,
                                            x: u,
                                            y: f,
                                            series: t,
                                            barHeight: y,
                                            barWidth: w,
                                            elDataLabelsWrap: A,
                                            visibleSeries: a.visibleI,
                                            type: s.config.chart.type
                                        })
                                    }))
                                }, C = 0; C < s.globals.dataPoints; C++) S(C);
                            s.globals.seriesXvalues[v] = b, s.globals.seriesYvalues[v] = p, l.add(m)
                        }, c = 0; c < t.length; c++) h(c);
                    return l
                }
            }, {
                key: "drawVerticalBoxPaths",
                value: function(t) {
                    var e = t.indexes,
                        i = t.x;
                    t.y;
                    var a = t.xDivision,
                        s = t.barWidth,
                        r = t.zeroH,
                        o = t.strokeWidth,
                        n = this.w,
                        l = new m(this.ctx),
                        h = e.i,
                        c = e.j,
                        d = !0,
                        g = n.config.plotOptions.candlestick.colors.upward,
                        u = n.config.plotOptions.candlestick.colors.downward,
                        f = "";
                    this.isBoxPlot && (f = [this.boxOptions.colors.lower, this.boxOptions.colors.upper]);
                    var p = this.yRatio[this.yaxisIndex],
                        x = e.realIndex,
                        b = this.getOHLCValue(x, c),
                        v = r,
                        y = r;
                    b.o > b.c && (d = !1);
                    var w = Math.min(b.o, b.c),
                        k = Math.max(b.o, b.c),
                        A = b.m;
                    n.globals.isXNumeric && (i = (n.globals.seriesX[x][c] - n.globals.minX) / this.xRatio - s / 2);
                    var S = i + s * this.visibleI;
                    void 0 === this.series[h][c] || null === this.series[h][c] ? (w = r, k = r) : (w = r - w / p, k = r - k / p, v = r - b.h / p, y = r - b.l / p, A = r - b.m / p);
                    var C = l.move(S, r),
                        L = l.move(S + s / 2, w);
                    return n.globals.previousPaths.length > 0 && (L = this.getPreviousPath(x, c, !0)), C = this.isBoxPlot ? [l.move(S, w) + l.line(S + s / 2, w) + l.line(S + s / 2, v) + l.line(S + s / 4, v) + l.line(S + s - s / 4, v) + l.line(S + s / 2, v) + l.line(S + s / 2, w) + l.line(S + s, w) + l.line(S + s, A) + l.line(S, A) + l.line(S, w + o / 2), l.move(S, A) + l.line(S + s, A) + l.line(S + s, k) + l.line(S + s / 2, k) + l.line(S + s / 2, y) + l.line(S + s - s / 4, y) + l.line(S + s / 4, y) + l.line(S + s / 2, y) + l.line(S + s / 2, k) + l.line(S, k) + l.line(S, A) + "z"] : [l.move(S, k) + l.line(S + s / 2, k) + l.line(S + s / 2, v) + l.line(S + s / 2, k) + l.line(S + s, k) + l.line(S + s, w) + l.line(S + s / 2, w) + l.line(S + s / 2, y) + l.line(S + s / 2, w) + l.line(S, w) + l.line(S, k - o / 2)], L += l.move(S, w), n.globals.isXNumeric || (i += a), {
                        pathTo: C,
                        pathFrom: L,
                        x: i,
                        y: k,
                        barXPosition: S,
                        color: this.isBoxPlot ? f : d ? [g] : [u]
                    }
                }
            }, {
                key: "drawHorizontalBoxPaths",
                value: function(t) {
                    var e = t.indexes;
                    t.x;
                    var i = t.y,
                        a = t.yDivision,
                        s = t.barHeight,
                        r = t.zeroW,
                        o = t.strokeWidth,
                        n = this.w,
                        l = new m(this.ctx),
                        h = e.i,
                        c = e.j,
                        d = this.boxOptions.colors.lower;
                    this.isBoxPlot && (d = [this.boxOptions.colors.lower, this.boxOptions.colors.upper]);
                    var g = this.invertedYRatio,
                        u = e.realIndex,
                        f = this.getOHLCValue(u, c),
                        p = r,
                        x = r,
                        b = Math.min(f.o, f.c),
                        v = Math.max(f.o, f.c),
                        y = f.m;
                    n.globals.isXNumeric && (i = (n.globals.seriesX[u][c] - n.globals.minX) / this.invertedXRatio - s / 2);
                    var w = i + s * this.visibleI;
                    void 0 === this.series[h][c] || null === this.series[h][c] ? (b = r, v = r) : (b = r + b / g, v = r + v / g, p = r + f.h / g, x = r + f.l / g, y = r + f.m / g);
                    var k = l.move(r, w),
                        A = l.move(b, w + s / 2);
                    return n.globals.previousPaths.length > 0 && (A = this.getPreviousPath(u, c, !0)), k = [l.move(b, w) + l.line(b, w + s / 2) + l.line(p, w + s / 2) + l.line(p, w + s / 2 - s / 4) + l.line(p, w + s / 2 + s / 4) + l.line(p, w + s / 2) + l.line(b, w + s / 2) + l.line(b, w + s) + l.line(y, w + s) + l.line(y, w) + l.line(b + o / 2, w), l.move(y, w) + l.line(y, w + s) + l.line(v, w + s) + l.line(v, w + s / 2) + l.line(x, w + s / 2) + l.line(x, w + s - s / 4) + l.line(x, w + s / 4) + l.line(x, w + s / 2) + l.line(v, w + s / 2) + l.line(v, w) + l.line(y, w) + "z"], A += l.move(b, w), n.globals.isXNumeric || (i += a), {
                        pathTo: k,
                        pathFrom: A,
                        x: v,
                        y: i,
                        barYPosition: w,
                        color: d
                    }
                }
            }, {
                key: "getOHLCValue",
                value: function(t, e) {
                    var i = this.w;
                    return {
                        o: this.isBoxPlot ? i.globals.seriesCandleH[t][e] : i.globals.seriesCandleO[t][e],
                        h: this.isBoxPlot ? i.globals.seriesCandleO[t][e] : i.globals.seriesCandleH[t][e],
                        m: i.globals.seriesCandleM[t][e],
                        l: this.isBoxPlot ? i.globals.seriesCandleC[t][e] : i.globals.seriesCandleL[t][e],
                        c: this.isBoxPlot ? i.globals.seriesCandleL[t][e] : i.globals.seriesCandleC[t][e]
                    }
                }
            }]), s
        }(F),
        kt = function() {
            function t(e) {
                a(this, t), this.ctx = e, this.w = e.w
            }
            return r(t, [{
                key: "checkColorRange",
                value: function() {
                    var t = this.w,
                        e = !1,
                        i = t.config.plotOptions[t.config.chart.type];
                    return i.colorScale.ranges.length > 0 && i.colorScale.ranges.map((function(t, i) {
                        t.from <= 0 && (e = !0)
                    })), e
                }
            }, {
                key: "getShadeColor",
                value: function(t, e, i, a) {
                    var s = this.w,
                        r = 1,
                        o = s.config.plotOptions[t].shadeIntensity,
                        n = this.determineColor(t, e, i);
                    s.globals.hasNegs || a ? r = s.config.plotOptions[t].reverseNegativeShade ? n.percent < 0 ? n.percent / 100 * (1.25 * o) : (1 - n.percent / 100) * (1.25 * o) : n.percent <= 0 ? 1 - (1 + n.percent / 100) * o : (1 - n.percent / 100) * o : (r = 1 - n.percent / 100, "treemap" === t && (r = (1 - n.percent / 100) * (1.25 * o)));
                    var l = n.color,
                        h = new x;
                    return s.config.plotOptions[t].enableShades && (l = "dark" === this.w.config.theme.mode ? x.hexToRgba(h.shadeColor(-1 * r, n.color), s.config.fill.opacity) : x.hexToRgba(h.shadeColor(r, n.color), s.config.fill.opacity)), {
                        color: l,
                        colorProps: n
                    }
                }
            }, {
                key: "determineColor",
                value: function(t, e, i) {
                    var a = this.w,
                        s = a.globals.series[e][i],
                        r = a.config.plotOptions[t],
                        o = r.colorScale.inverse ? i : e;
                    r.distributed && "treemap" === a.config.chart.type && (o = i);
                    var n = a.globals.colors[o],
                        l = null,
                        h = Math.min.apply(Math, u(a.globals.series[e])),
                        c = Math.max.apply(Math, u(a.globals.series[e]));
                    r.distributed || "heatmap" !== t || (h = a.globals.minY, c = a.globals.maxY), void 0 !== r.colorScale.min && (h = r.colorScale.min < a.globals.minY ? r.colorScale.min : a.globals.minY, c = r.colorScale.max > a.globals.maxY ? r.colorScale.max : a.globals.maxY);
                    var d = Math.abs(c) + Math.abs(h),
                        g = 100 * s / (0 === d ? d - 1e-6 : d);
                    r.colorScale.ranges.length > 0 && r.colorScale.ranges.map((function(t, e) {
                        if (s >= t.from && s <= t.to) {
                            n = t.color, l = t.foreColor ? t.foreColor : null, h = t.from, c = t.to;
                            var i = Math.abs(c) + Math.abs(h);
                            g = 100 * s / (0 === i ? i - 1e-6 : i)
                        }
                    }));
                    return {
                        color: n,
                        foreColor: l,
                        percent: g
                    }
                }
            }, {
                key: "calculateDataLabels",
                value: function(t) {
                    var e = t.text,
                        i = t.x,
                        a = t.y,
                        s = t.i,
                        r = t.j,
                        o = t.colorProps,
                        n = t.fontSize,
                        l = this.w.config.dataLabels,
                        h = new m(this.ctx),
                        c = new z(this.ctx),
                        d = null;
                    if (l.enabled) {
                        d = h.group({
                            class: "apexcharts-data-labels"
                        });
                        var g = l.offsetX,
                            u = l.offsetY,
                            f = i + g,
                            p = a + parseFloat(l.style.fontSize) / 3 + u;
                        c.plotDataLabelsText({
                            x: f,
                            y: p,
                            text: e,
                            i: s,
                            j: r,
                            color: o.foreColor,
                            parent: d,
                            fontSize: n,
                            dataLabelsConfig: l
                        })
                    }
                    return d
                }
            }, {
                key: "addListeners",
                value: function(t) {
                    var e = new m(this.ctx);
                    t.node.addEventListener("mouseenter", e.pathMouseEnter.bind(this, t)), t.node.addEventListener("mouseleave", e.pathMouseLeave.bind(this, t)), t.node.addEventListener("mousedown", e.pathMouseDown.bind(this, t))
                }
            }]), t
        }(),
        At = function() {
            function t(e, i) {
                a(this, t), this.ctx = e, this.w = e.w, this.xRatio = i.xRatio, this.yRatio = i.yRatio, this.dynamicAnim = this.w.config.chart.animations.dynamicAnimation, this.helpers = new kt(e), this.rectRadius = this.w.config.plotOptions.heatmap.radius, this.strokeWidth = this.w.config.stroke.show ? this.w.config.stroke.width : 0
            }
            return r(t, [{
                key: "draw",
                value: function(t) {
                    var e = this.w,
                        i = new m(this.ctx),
                        a = i.group({
                            class: "apexcharts-heatmap"
                        });
                    a.attr("clip-path", "url(#gridRectMask".concat(e.globals.cuid, ")"));
                    var s = e.globals.gridWidth / e.globals.dataPoints,
                        r = e.globals.gridHeight / e.globals.series.length,
                        o = 0,
                        n = !1;
                    this.negRange = this.helpers.checkColorRange();
                    var l = t.slice();
                    e.config.yaxis[0].reversed && (n = !0, l.reverse());
                    for (var h = n ? 0 : l.length - 1; n ? h < l.length : h >= 0; n ? h++ : h--) {
                        var c = i.group({
                            class: "apexcharts-series apexcharts-heatmap-series",
                            seriesName: x.escapeString(e.globals.seriesNames[h]),
                            rel: h + 1,
                            "data:realIndex": h
                        });
                        if (this.ctx.series.addCollapsedClassToSeries(c, h), e.config.chart.dropShadow.enabled) {
                            var d = e.config.chart.dropShadow;
                            new v(this.ctx).dropShadow(c, d, h)
                        }
                        for (var g = 0, u = e.config.plotOptions.heatmap.shadeIntensity, f = 0; f < l[h].length; f++) {
                            var p = this.helpers.getShadeColor(e.config.chart.type, h, f, this.negRange),
                                b = p.color,
                                y = p.colorProps;
                            if ("image" === e.config.fill.type) b = new M(this.ctx).fillPath({
                                seriesNumber: h,
                                dataPointIndex: f,
                                opacity: e.globals.hasNegs ? y.percent < 0 ? 1 - (1 + y.percent / 100) : u + y.percent / 100 : y.percent / 100,
                                patternID: x.randomId(),
                                width: e.config.fill.image.width ? e.config.fill.image.width : s,
                                height: e.config.fill.image.height ? e.config.fill.image.height : r
                            });
                            var w = this.rectRadius,
                                k = i.drawRect(g, o, s, r, w);
                            if (k.attr({
                                    cx: g,
                                    cy: o
                                }), k.node.classList.add("apexcharts-heatmap-rect"), c.add(k), k.attr({
                                    fill: b,
                                    i: h,
                                    index: h,
                                    j: f,
                                    val: l[h][f],
                                    "stroke-width": this.strokeWidth,
                                    stroke: e.config.plotOptions.heatmap.useFillColorAsStroke ? b : e.globals.stroke.colors[0],
                                    color: b
                                }), this.helpers.addListeners(k), e.config.chart.animations.enabled && !e.globals.dataChanged) {
                                var A = 1;
                                e.globals.resized || (A = e.config.chart.animations.speed), this.animateHeatMap(k, g, o, s, r, A)
                            }
                            if (e.globals.dataChanged) {
                                var S = 1;
                                if (this.dynamicAnim.enabled && e.globals.shouldAnimate) {
                                    S = this.dynamicAnim.speed;
                                    var C = e.globals.previousPaths[h] && e.globals.previousPaths[h][f] && e.globals.previousPaths[h][f].color;
                                    C || (C = "rgba(255, 255, 255, 0)"), this.animateHeatColor(k, x.isColorHex(C) ? C : x.rgb2hex(C), x.isColorHex(b) ? b : x.rgb2hex(b), S)
                                }
                            }
                            var L = (0, e.config.dataLabels.formatter)(e.globals.series[h][f], {
                                    value: e.globals.series[h][f],
                                    seriesIndex: h,
                                    dataPointIndex: f,
                                    w: e
                                }),
                                P = this.helpers.calculateDataLabels({
                                    text: L,
                                    x: g + s / 2,
                                    y: o + r / 2,
                                    i: h,
                                    j: f,
                                    colorProps: y,
                                    series: l
                                });
                            null !== P && c.add(P), g += s
                        }
                        o += r, a.add(c)
                    }
                    var T = e.globals.yAxisScale[0].result.slice();
                    e.config.yaxis[0].reversed ? T.unshift("") : T.push(""), e.globals.yAxisScale[0].result = T;
                    var I = e.globals.gridHeight / e.globals.series.length;
                    return e.config.yaxis[0].labels.offsetY = -I / 2, a
                }
            }, {
                key: "animateHeatMap",
                value: function(t, e, i, a, s, r) {
                    var o = new b(this.ctx);
                    o.animateRect(t, {
                        x: e + a / 2,
                        y: i + s / 2,
                        width: 0,
                        height: 0
                    }, {
                        x: e,
                        y: i,
                        width: a,
                        height: s
                    }, r, (function() {
                        o.animationCompleted(t)
                    }))
                }
            }, {
                key: "animateHeatColor",
                value: function(t, e, i, a) {
                    t.attr({
                        fill: e
                    }).animate(a).attr({
                        fill: i
                    })
                }
            }]), t
        }(),
        St = function() {
            function t(e) {
                a(this, t), this.ctx = e, this.w = e.w
            }
            return r(t, [{
                key: "drawYAxisTexts",
                value: function(t, e, i, a) {
                    var s = this.w,
                        r = s.config.yaxis[0],
                        o = s.globals.yLabelFormatters[0];
                    return new m(this.ctx).drawText({
                        x: t + r.labels.offsetX,
                        y: e + r.labels.offsetY,
                        text: o(a, i),
                        textAnchor: "middle",
                        fontSize: r.labels.style.fontSize,
                        fontFamily: r.labels.style.fontFamily,
                        foreColor: Array.isArray(r.labels.style.colors) ? r.labels.style.colors[i] : r.labels.style.colors
                    })
                }
            }]), t
        }(),
        Ct = function() {
            function t(e) {
                a(this, t), this.ctx = e, this.w = e.w;
                var i = this.w;
                this.chartType = this.w.config.chart.type, this.initialAnim = this.w.config.chart.animations.enabled, this.dynamicAnim = this.initialAnim && this.w.config.chart.animations.dynamicAnimation.enabled, this.animBeginArr = [0], this.animDur = 0, this.donutDataLabels = this.w.config.plotOptions.pie.donut.labels, this.lineColorArr = void 0 !== i.globals.stroke.colors ? i.globals.stroke.colors : i.globals.colors, this.defaultSize = Math.min(i.globals.gridWidth, i.globals.gridHeight), this.centerY = this.defaultSize / 2, this.centerX = i.globals.gridWidth / 2, "radialBar" === i.config.chart.type ? this.fullAngle = 360 : this.fullAngle = Math.abs(i.config.plotOptions.pie.endAngle - i.config.plotOptions.pie.startAngle), this.initialAngle = i.config.plotOptions.pie.startAngle % this.fullAngle, i.globals.radialSize = this.defaultSize / 2.05 - i.config.stroke.width - (i.config.chart.sparkline.enabled ? 0 : i.config.chart.dropShadow.blur), this.donutSize = i.globals.radialSize * parseInt(i.config.plotOptions.pie.donut.size, 10) / 100, this.maxY = 0, this.sliceLabels = [], this.sliceSizes = [], this.prevSectorAngleArr = []
            }
            return r(t, [{
                key: "draw",
                value: function(t) {
                    var e = this,
                        i = this.w,
                        a = new m(this.ctx);
                    if (this.ret = a.group({
                            class: "apexcharts-pie"
                        }), i.globals.noData) return this.ret;
                    for (var s = 0, r = 0; r < t.length; r++) s += x.negToZero(t[r]);
                    var o = [],
                        n = a.group();
                    0 === s && (s = 1e-5), t.forEach((function(t) {
                        e.maxY = Math.max(e.maxY, t)
                    })), i.config.yaxis[0].max && (this.maxY = i.config.yaxis[0].max), "back" === i.config.grid.position && "polarArea" === this.chartType && this.drawPolarElements(this.ret);
                    for (var l = 0; l < t.length; l++) {
                        var h = this.fullAngle * x.negToZero(t[l]) / s;
                        o.push(h), "polarArea" === this.chartType ? (o[l] = this.fullAngle / t.length, this.sliceSizes.push(i.globals.radialSize * t[l] / this.maxY)) : this.sliceSizes.push(i.globals.radialSize)
                    }
                    if (i.globals.dataChanged) {
                        for (var c, d = 0, g = 0; g < i.globals.previousPaths.length; g++) d += x.negToZero(i.globals.previousPaths[g]);
                        for (var u = 0; u < i.globals.previousPaths.length; u++) c = this.fullAngle * x.negToZero(i.globals.previousPaths[u]) / d, this.prevSectorAngleArr.push(c)
                    }
                    this.donutSize < 0 && (this.donutSize = 0);
                    var f = i.config.plotOptions.pie.customScale,
                        p = i.globals.gridWidth / 2,
                        b = i.globals.gridHeight / 2,
                        v = p - i.globals.gridWidth / 2 * f,
                        y = b - i.globals.gridHeight / 2 * f;
                    if ("donut" === this.chartType) {
                        var w = a.drawCircle(this.donutSize);
                        w.attr({
                            cx: this.centerX,
                            cy: this.centerY,
                            fill: i.config.plotOptions.pie.donut.background ? i.config.plotOptions.pie.donut.background : "transparent"
                        }), n.add(w)
                    }
                    var k = this.drawArcs(o, t);
                    if (this.sliceLabels.forEach((function(t) {
                            k.add(t)
                        })), n.attr({
                            transform: "translate(".concat(v, ", ").concat(y, ") scale(").concat(f, ")")
                        }), n.add(k), this.ret.add(n), this.donutDataLabels.show) {
                        var A = this.renderInnerDataLabels(this.donutDataLabels, {
                            hollowSize: this.donutSize,
                            centerX: this.centerX,
                            centerY: this.centerY,
                            opacity: this.donutDataLabels.show,
                            translateX: v,
                            translateY: y
                        });
                        this.ret.add(A)
                    }
                    return "front" === i.config.grid.position && "polarArea" === this.chartType && this.drawPolarElements(this.ret), this.ret
                }
            }, {
                key: "drawArcs",
                value: function(t, e) {
                    var i = this.w,
                        a = new v(this.ctx),
                        s = new m(this.ctx),
                        r = new M(this.ctx),
                        o = s.group({
                            class: "apexcharts-slices"
                        }),
                        n = this.initialAngle,
                        l = this.initialAngle,
                        h = this.initialAngle,
                        c = this.initialAngle;
                    this.strokeWidth = i.config.stroke.show ? i.config.stroke.width : 0;
                    for (var d = 0; d < t.length; d++) {
                        var g = s.group({
                            class: "apexcharts-series apexcharts-pie-series",
                            seriesName: x.escapeString(i.globals.seriesNames[d]),
                            rel: d + 1,
                            "data:realIndex": d
                        });
                        o.add(g), l = c, h = (n = h) + t[d], c = l + this.prevSectorAngleArr[d];
                        var u = h < n ? this.fullAngle + h - n : h - n,
                            f = r.fillPath({
                                seriesNumber: d,
                                size: this.sliceSizes[d],
                                value: e[d]
                            }),
                            p = this.getChangedPath(l, c),
                            b = s.drawPath({
                                d: p,
                                stroke: Array.isArray(this.lineColorArr) ? this.lineColorArr[d] : this.lineColorArr,
                                strokeWidth: 0,
                                fill: f,
                                fillOpacity: i.config.fill.opacity,
                                classes: "apexcharts-pie-area apexcharts-".concat(this.chartType.toLowerCase(), "-slice-").concat(d)
                            });
                        if (b.attr({
                                index: 0,
                                j: d
                            }), a.setSelectionFilter(b, 0, d), i.config.chart.dropShadow.enabled) {
                            var y = i.config.chart.dropShadow;
                            a.dropShadow(b, y, d)
                        }
                        this.addListeners(b, this.donutDataLabels), m.setAttrs(b.node, {
                            "data:angle": u,
                            "data:startAngle": n,
                            "data:strokeWidth": this.strokeWidth,
                            "data:value": e[d]
                        });
                        var w = {
                            x: 0,
                            y: 0
                        };
                        "pie" === this.chartType || "polarArea" === this.chartType ? w = x.polarToCartesian(this.centerX, this.centerY, i.globals.radialSize / 1.25 + i.config.plotOptions.pie.dataLabels.offset, (n + u / 2) % this.fullAngle) : "donut" === this.chartType && (w = x.polarToCartesian(this.centerX, this.centerY, (i.globals.radialSize + this.donutSize) / 2 + i.config.plotOptions.pie.dataLabels.offset, (n + u / 2) % this.fullAngle)), g.add(b);
                        var k = 0;
                        if (!this.initialAnim || i.globals.resized || i.globals.dataChanged ? this.animBeginArr.push(0) : (0 === (k = u / this.fullAngle * i.config.chart.animations.speed) && (k = 1), this.animDur = k + this.animDur, this.animBeginArr.push(this.animDur)), this.dynamicAnim && i.globals.dataChanged ? this.animatePaths(b, {
                                size: this.sliceSizes[d],
                                endAngle: h,
                                startAngle: n,
                                prevStartAngle: l,
                                prevEndAngle: c,
                                animateStartingPos: !0,
                                i: d,
                                animBeginArr: this.animBeginArr,
                                shouldSetPrevPaths: !0,
                                dur: i.config.chart.animations.dynamicAnimation.speed
                            }) : this.animatePaths(b, {
                                size: this.sliceSizes[d],
                                endAngle: h,
                                startAngle: n,
                                i: d,
                                totalItems: t.length - 1,
                                animBeginArr: this.animBeginArr,
                                dur: k
                            }), i.config.plotOptions.pie.expandOnClick && "polarArea" !== this.chartType && b.click(this.pieClicked.bind(this, d)), void 0 !== i.globals.selectedDataPoints[0] && i.globals.selectedDataPoints[0].indexOf(d) > -1 && this.pieClicked(d), i.config.dataLabels.enabled) {
                            var A = w.x,
                                S = w.y,
                                C = 100 * u / this.fullAngle + "%";
                            if (0 !== u && i.config.plotOptions.pie.dataLabels.minAngleToShowLabel < t[d]) {
                                var L = i.config.dataLabels.formatter;
                                void 0 !== L && (C = L(i.globals.seriesPercent[d][0], {
                                    seriesIndex: d,
                                    w: i
                                }));
                                var P = i.globals.dataLabels.style.colors[d],
                                    T = s.group({
                                        class: "apexcharts-datalabels"
                                    }),
                                    I = s.drawText({
                                        x: A,
                                        y: S,
                                        text: C,
                                        textAnchor: "middle",
                                        fontSize: i.config.dataLabels.style.fontSize,
                                        fontFamily: i.config.dataLabels.style.fontFamily,
                                        fontWeight: i.config.dataLabels.style.fontWeight,
                                        foreColor: P
                                    });
                                if (T.add(I), i.config.dataLabels.dropShadow.enabled) {
                                    var z = i.config.dataLabels.dropShadow;
                                    a.dropShadow(I, z)
                                }
                                I.node.classList.add("apexcharts-pie-label"), i.config.chart.animations.animate && !1 === i.globals.resized && (I.node.classList.add("apexcharts-pie-label-delay"), I.node.style.animationDelay = i.config.chart.animations.speed / 940 + "s"), this.sliceLabels.push(T)
                            }
                        }
                    }
                    return o
                }
            }, {
                key: "addListeners",
                value: function(t, e) {
                    var i = new m(this.ctx);
                    t.node.addEventListener("mouseenter", i.pathMouseEnter.bind(this, t)), t.node.addEventListener("mouseleave", i.pathMouseLeave.bind(this, t)), t.node.addEventListener("mouseleave", this.revertDataLabelsInner.bind(this, t.node, e)), t.node.addEventListener("mousedown", i.pathMouseDown.bind(this, t)), this.donutDataLabels.total.showAlways || (t.node.addEventListener("mouseenter", this.printDataLabelsInner.bind(this, t.node, e)), t.node.addEventListener("mousedown", this.printDataLabelsInner.bind(this, t.node, e)))
                }
            }, {
                key: "animatePaths",
                value: function(t, e) {
                    var i = this.w,
                        a = e.endAngle < e.startAngle ? this.fullAngle + e.endAngle - e.startAngle : e.endAngle - e.startAngle,
                        s = a,
                        r = e.startAngle,
                        o = e.startAngle;
                    void 0 !== e.prevStartAngle && void 0 !== e.prevEndAngle && (r = e.prevEndAngle, s = e.prevEndAngle < e.prevStartAngle ? this.fullAngle + e.prevEndAngle - e.prevStartAngle : e.prevEndAngle - e.prevStartAngle), e.i === i.config.series.length - 1 && (a + o > this.fullAngle ? e.endAngle = e.endAngle - (a + o) : a + o < this.fullAngle && (e.endAngle = e.endAngle + (this.fullAngle - (a + o)))), a === this.fullAngle && (a = this.fullAngle - .01), this.animateArc(t, r, o, a, s, e)
                }
            }, {
                key: "animateArc",
                value: function(t, e, i, a, s, r) {
                    var o, n = this,
                        l = this.w,
                        h = new b(this.ctx),
                        c = r.size;
                    (isNaN(e) || isNaN(s)) && (e = i, s = a, r.dur = 0);
                    var d = a,
                        g = i,
                        u = e < i ? this.fullAngle + e - i : e - i;
                    l.globals.dataChanged && r.shouldSetPrevPaths && r.prevEndAngle && (o = n.getPiePath({
                        me: n,
                        startAngle: r.prevStartAngle,
                        angle: r.prevEndAngle < r.prevStartAngle ? this.fullAngle + r.prevEndAngle - r.prevStartAngle : r.prevEndAngle - r.prevStartAngle,
                        size: c
                    }), t.attr({
                        d: o
                    })), 0 !== r.dur ? t.animate(r.dur, l.globals.easing, r.animBeginArr[r.i]).afterAll((function() {
                        "pie" !== n.chartType && "donut" !== n.chartType && "polarArea" !== n.chartType || this.animate(l.config.chart.animations.dynamicAnimation.speed).attr({
                            "stroke-width": n.strokeWidth
                        }), r.i === l.config.series.length - 1 && h.animationCompleted(t)
                    })).during((function(l) {
                        d = u + (a - u) * l, r.animateStartingPos && (d = s + (a - s) * l, g = e - s + (i - (e - s)) * l), o = n.getPiePath({
                            me: n,
                            startAngle: g,
                            angle: d,
                            size: c
                        }), t.node.setAttribute("data:pathOrig", o), t.attr({
                            d: o
                        })
                    })) : (o = n.getPiePath({
                        me: n,
                        startAngle: g,
                        angle: a,
                        size: c
                    }), r.isTrack || (l.globals.animationEnded = !0), t.node.setAttribute("data:pathOrig", o), t.attr({
                        d: o,
                        "stroke-width": n.strokeWidth
                    }))
                }
            }, {
                key: "pieClicked",
                value: function(t) {
                    var e, i = this.w,
                        a = this,
                        s = a.sliceSizes[t] + (i.config.plotOptions.pie.expandOnClick ? 4 : 0),
                        r = i.globals.dom.Paper.select(".apexcharts-".concat(a.chartType.toLowerCase(), "-slice-").concat(t)).members[0];
                    if ("true" !== r.attr("data:pieClicked")) {
                        var o = i.globals.dom.baseEl.getElementsByClassName("apexcharts-pie-area");
                        Array.prototype.forEach.call(o, (function(t) {
                            t.setAttribute("data:pieClicked", "false");
                            var e = t.getAttribute("data:pathOrig");
                            t.setAttribute("d", e)
                        })), r.attr("data:pieClicked", "true");
                        var n = parseInt(r.attr("data:startAngle"), 10),
                            l = parseInt(r.attr("data:angle"), 10);
                        e = a.getPiePath({
                            me: a,
                            startAngle: n,
                            angle: l,
                            size: s
                        }), 360 !== l && r.plot(e)
                    } else {
                        r.attr({
                            "data:pieClicked": "false"
                        }), this.revertDataLabelsInner(r.node, this.donutDataLabels);
                        var h = r.attr("data:pathOrig");
                        r.attr({
                            d: h
                        })
                    }
                }
            }, {
                key: "getChangedPath",
                value: function(t, e) {
                    var i = "";
                    return this.dynamicAnim && this.w.globals.dataChanged && (i = this.getPiePath({
                        me: this,
                        startAngle: t,
                        angle: e - t,
                        size: this.size
                    })), i
                }
            }, {
                key: "getPiePath",
                value: function(t) {
                    var e = t.me,
                        i = t.startAngle,
                        a = t.angle,
                        s = t.size,
                        r = i,
                        o = Math.PI * (r - 90) / 180,
                        n = a + i;
                    Math.ceil(n) >= this.fullAngle + this.w.config.plotOptions.pie.startAngle % this.fullAngle && (n = this.fullAngle + this.w.config.plotOptions.pie.startAngle % this.fullAngle - .01), Math.ceil(n) > this.fullAngle && (n -= this.fullAngle);
                    var l = Math.PI * (n - 90) / 180,
                        h = e.centerX + s * Math.cos(o),
                        c = e.centerY + s * Math.sin(o),
                        d = e.centerX + s * Math.cos(l),
                        g = e.centerY + s * Math.sin(l),
                        u = x.polarToCartesian(e.centerX, e.centerY, e.donutSize, n),
                        f = x.polarToCartesian(e.centerX, e.centerY, e.donutSize, r),
                        p = a > 180 ? 1 : 0,
                        b = ["M", h, c, "A", s, s, 0, p, 1, d, g];
                    return "donut" === e.chartType ? [].concat(b, ["L", u.x, u.y, "A", e.donutSize, e.donutSize, 0, p, 0, f.x, f.y, "L", h, c, "z"]).join(" ") : "pie" === e.chartType || "polarArea" === e.chartType ? [].concat(b, ["L", e.centerX, e.centerY, "L", h, c]).join(" ") : [].concat(b).join(" ")
                }
            }, {
                key: "drawPolarElements",
                value: function(t) {
                    var e = this.w,
                        i = new q(this.ctx),
                        a = new m(this.ctx),
                        s = new St(this.ctx),
                        r = a.group(),
                        o = a.group(),
                        n = i.niceScale(0, Math.ceil(this.maxY), e.config.yaxis[0].tickAmount, 0, !0),
                        l = n.result.reverse(),
                        h = n.result.length;
                    this.maxY = n.niceMax;
                    for (var c = e.globals.radialSize, d = c / (h - 1), g = 0; g < h - 1; g++) {
                        var u = a.drawCircle(c);
                        if (u.attr({
                                cx: this.centerX,
                                cy: this.centerY,
                                fill: "none",
                                "stroke-width": e.config.plotOptions.polarArea.rings.strokeWidth,
                                stroke: e.config.plotOptions.polarArea.rings.strokeColor
                            }), e.config.yaxis[0].show) {
                            var f = s.drawYAxisTexts(this.centerX, this.centerY - c + parseInt(e.config.yaxis[0].labels.style.fontSize, 10) / 2, g, l[g]);
                            o.add(f)
                        }
                        r.add(u), c -= d
                    }
                    this.drawSpokes(t), t.add(r), t.add(o)
                }
            }, {
                key: "renderInnerDataLabels",
                value: function(t, e) {
                    var i = this.w,
                        a = new m(this.ctx),
                        s = a.group({
                            class: "apexcharts-datalabels-group",
                            transform: "translate(".concat(e.translateX ? e.translateX : 0, ", ").concat(e.translateY ? e.translateY : 0, ") scale(").concat(i.config.plotOptions.pie.customScale, ")")
                        }),
                        r = t.total.show;
                    s.node.style.opacity = e.opacity;
                    var o, n, l = e.centerX,
                        h = e.centerY;
                    o = void 0 === t.name.color ? i.globals.colors[0] : t.name.color;
                    var c = t.name.fontSize,
                        d = t.name.fontFamily,
                        g = t.name.fontWeight;
                    n = void 0 === t.value.color ? i.config.chart.foreColor : t.value.color;
                    var u = t.value.formatter,
                        f = "",
                        p = "";
                    if (r ? (o = t.total.color, c = t.total.fontSize, d = t.total.fontFamily, g = t.total.fontWeight, p = t.total.label, f = t.total.formatter(i)) : 1 === i.globals.series.length && (f = u(i.globals.series[0], i), p = i.globals.seriesNames[0]), p && (p = t.name.formatter(p, t.total.show, i)), t.name.show) {
                        var x = a.drawText({
                            x: l,
                            y: h + parseFloat(t.name.offsetY),
                            text: p,
                            textAnchor: "middle",
                            foreColor: o,
                            fontSize: c,
                            fontWeight: g,
                            fontFamily: d
                        });
                        x.node.classList.add("apexcharts-datalabel-label"), s.add(x)
                    }
                    if (t.value.show) {
                        var b = t.name.show ? parseFloat(t.value.offsetY) + 16 : t.value.offsetY,
                            v = a.drawText({
                                x: l,
                                y: h + b,
                                text: f,
                                textAnchor: "middle",
                                foreColor: n,
                                fontWeight: t.value.fontWeight,
                                fontSize: t.value.fontSize,
                                fontFamily: t.value.fontFamily
                            });
                        v.node.classList.add("apexcharts-datalabel-value"), s.add(v)
                    }
                    return s
                }
            }, {
                key: "printInnerLabels",
                value: function(t, e, i, a) {
                    var s, r = this.w;
                    a ? s = void 0 === t.name.color ? r.globals.colors[parseInt(a.parentNode.getAttribute("rel"), 10) - 1] : t.name.color : r.globals.series.length > 1 && t.total.show && (s = t.total.color);
                    var o = r.globals.dom.baseEl.querySelector(".apexcharts-datalabel-label"),
                        n = r.globals.dom.baseEl.querySelector(".apexcharts-datalabel-value");
                    i = (0, t.value.formatter)(i, r), a || "function" != typeof t.total.formatter || (i = t.total.formatter(r));
                    var l = e === t.total.label;
                    e = t.name.formatter(e, l, r), null !== o && (o.textContent = e), null !== n && (n.textContent = i), null !== o && (o.style.fill = s)
                }
            }, {
                key: "printDataLabelsInner",
                value: function(t, e) {
                    var i = this.w,
                        a = t.getAttribute("data:value"),
                        s = i.globals.seriesNames[parseInt(t.parentNode.getAttribute("rel"), 10) - 1];
                    i.globals.series.length > 1 && this.printInnerLabels(e, s, a, t);
                    var r = i.globals.dom.baseEl.querySelector(".apexcharts-datalabels-group");
                    null !== r && (r.style.opacity = 1)
                }
            }, {
                key: "drawSpokes",
                value: function(t) {
                    var e = this,
                        i = this.w,
                        a = new m(this.ctx),
                        s = i.config.plotOptions.polarArea.spokes;
                    if (0 !== s.strokeWidth) {
                        for (var r = [], o = 360 / i.globals.series.length, n = 0; n < i.globals.series.length; n++) r.push(x.polarToCartesian(this.centerX, this.centerY, i.globals.radialSize, i.config.plotOptions.pie.startAngle + o * n));
                        r.forEach((function(i, r) {
                            var o = a.drawLine(i.x, i.y, e.centerX, e.centerY, Array.isArray(s.connectorColors) ? s.connectorColors[r] : s.connectorColors);
                            t.add(o)
                        }))
                    }
                }
            }, {
                key: "revertDataLabelsInner",
                value: function(t, e, i) {
                    var a = this,
                        s = this.w,
                        r = s.globals.dom.baseEl.querySelector(".apexcharts-datalabels-group"),
                        o = !1,
                        n = s.globals.dom.baseEl.getElementsByClassName("apexcharts-pie-area"),
                        l = function(t) {
                            var i = t.makeSliceOut,
                                s = t.printLabel;
                            Array.prototype.forEach.call(n, (function(t) {
                                "true" === t.getAttribute("data:pieClicked") && (i && (o = !0), s && a.printDataLabelsInner(t, e))
                            }))
                        };
                    if (l({
                            makeSliceOut: !0,
                            printLabel: !1
                        }), e.total.show && s.globals.series.length > 1) o && !e.total.showAlways ? l({
                        makeSliceOut: !1,
                        printLabel: !0
                    }) : this.printInnerLabels(e, e.total.label, e.total.formatter(s));
                    else if (l({
                            makeSliceOut: !1,
                            printLabel: !0
                        }), !o)
                        if (s.globals.selectedDataPoints.length && s.globals.series.length > 1)
                            if (s.globals.selectedDataPoints[0].length > 0) {
                                var h = s.globals.selectedDataPoints[0],
                                    c = s.globals.dom.baseEl.querySelector(".apexcharts-".concat(this.chartType.toLowerCase(), "-slice-").concat(h));
                                this.printDataLabelsInner(c, e)
                            } else r && s.globals.selectedDataPoints.length && 0 === s.globals.selectedDataPoints[0].length && (r.style.opacity = 0);
                    else r && s.globals.series.length > 1 && (r.style.opacity = 0)
                }
            }]), t
        }(),
        Lt = function() {
            function t(e) {
                a(this, t), this.ctx = e, this.w = e.w, this.chartType = this.w.config.chart.type, this.initialAnim = this.w.config.chart.animations.enabled, this.dynamicAnim = this.initialAnim && this.w.config.chart.animations.dynamicAnimation.enabled, this.animDur = 0;
                var i = this.w;
                this.graphics = new m(this.ctx), this.lineColorArr = void 0 !== i.globals.stroke.colors ? i.globals.stroke.colors : i.globals.colors, this.defaultSize = i.globals.svgHeight < i.globals.svgWidth ? i.globals.gridHeight + 1.5 * i.globals.goldenPadding : i.globals.gridWidth, this.isLog = i.config.yaxis[0].logarithmic, this.coreUtils = new y(this.ctx), this.maxValue = this.isLog ? this.coreUtils.getLogVal(i.globals.maxY, 0) : i.globals.maxY, this.minValue = this.isLog ? this.coreUtils.getLogVal(this.w.globals.minY, 0) : i.globals.minY, this.polygons = i.config.plotOptions.radar.polygons, this.strokeWidth = i.config.stroke.show ? i.config.stroke.width : 0, this.size = this.defaultSize / 2.1 - this.strokeWidth - i.config.chart.dropShadow.blur, i.config.xaxis.labels.show && (this.size = this.size - i.globals.xAxisLabelsWidth / 1.75), void 0 !== i.config.plotOptions.radar.size && (this.size = i.config.plotOptions.radar.size), this.dataRadiusOfPercent = [], this.dataRadius = [], this.angleArr = [], this.yaxisLabelsTextsPos = []
            }
            return r(t, [{
                key: "draw",
                value: function(t) {
                    var i = this,
                        a = this.w,
                        s = new M(this.ctx),
                        r = [],
                        o = new z(this.ctx);
                    t.length && (this.dataPointsLen = t[a.globals.maxValsInArrayIndex].length), this.disAngle = 2 * Math.PI / this.dataPointsLen;
                    var n = a.globals.gridWidth / 2,
                        l = a.globals.gridHeight / 2,
                        h = n + a.config.plotOptions.radar.offsetX,
                        c = l + a.config.plotOptions.radar.offsetY,
                        d = this.graphics.group({
                            class: "apexcharts-radar-series apexcharts-plot-series",
                            transform: "translate(".concat(h || 0, ", ").concat(c || 0, ")")
                        }),
                        g = [],
                        u = null,
                        f = null;
                    if (this.yaxisLabels = this.graphics.group({
                            class: "apexcharts-yaxis"
                        }), t.forEach((function(t, n) {
                            var l = t.length === a.globals.dataPoints,
                                h = i.graphics.group().attr({
                                    class: "apexcharts-series",
                                    "data:longestSeries": l,
                                    seriesName: x.escapeString(a.globals.seriesNames[n]),
                                    rel: n + 1,
                                    "data:realIndex": n
                                });
                            i.dataRadiusOfPercent[n] = [], i.dataRadius[n] = [], i.angleArr[n] = [], t.forEach((function(t, e) {
                                var a = Math.abs(i.maxValue - i.minValue);
                                t += Math.abs(i.minValue), i.isLog && (t = i.coreUtils.getLogVal(t, 0)), i.dataRadiusOfPercent[n][e] = t / a, i.dataRadius[n][e] = i.dataRadiusOfPercent[n][e] * i.size, i.angleArr[n][e] = e * i.disAngle
                            })), g = i.getDataPointsPos(i.dataRadius[n], i.angleArr[n]);
                            var c = i.createPaths(g, {
                                x: 0,
                                y: 0
                            });
                            u = i.graphics.group({
                                class: "apexcharts-series-markers-wrap apexcharts-element-hidden"
                            }), f = i.graphics.group({
                                class: "apexcharts-datalabels",
                                "data:realIndex": n
                            }), a.globals.delayedElements.push({
                                el: u.node,
                                index: n
                            });
                            var d = {
                                    i: n,
                                    realIndex: n,
                                    animationDelay: n,
                                    initialSpeed: a.config.chart.animations.speed,
                                    dataChangeSpeed: a.config.chart.animations.dynamicAnimation.speed,
                                    className: "apexcharts-radar",
                                    shouldClipToGrid: !1,
                                    bindEventsOnPaths: !1,
                                    stroke: a.globals.stroke.colors[n],
                                    strokeLineCap: a.config.stroke.lineCap
                                },
                                p = null;
                            a.globals.previousPaths.length > 0 && (p = i.getPreviousPath(n));
                            for (var b = 0; b < c.linePathsTo.length; b++) {
                                var m = i.graphics.renderPaths(e(e({}, d), {}, {
                                    pathFrom: null === p ? c.linePathsFrom[b] : p,
                                    pathTo: c.linePathsTo[b],
                                    strokeWidth: Array.isArray(i.strokeWidth) ? i.strokeWidth[n] : i.strokeWidth,
                                    fill: "none",
                                    drawShadow: !1
                                }));
                                h.add(m);
                                var y = s.fillPath({
                                        seriesNumber: n
                                    }),
                                    w = i.graphics.renderPaths(e(e({}, d), {}, {
                                        pathFrom: null === p ? c.areaPathsFrom[b] : p,
                                        pathTo: c.areaPathsTo[b],
                                        strokeWidth: 0,
                                        fill: y,
                                        drawShadow: !1
                                    }));
                                if (a.config.chart.dropShadow.enabled) {
                                    var k = new v(i.ctx),
                                        A = a.config.chart.dropShadow;
                                    k.dropShadow(w, Object.assign({}, A, {
                                        noUserSpaceOnUse: !0
                                    }), n)
                                }
                                h.add(w)
                            }
                            t.forEach((function(t, s) {
                                var r = new T(i.ctx).getMarkerConfig({
                                        cssClass: "apexcharts-marker",
                                        seriesIndex: n,
                                        dataPointIndex: s
                                    }),
                                    l = i.graphics.drawMarker(g[s].x, g[s].y, r);
                                l.attr("rel", s), l.attr("j", s), l.attr("index", n), l.node.setAttribute("default-marker-size", r.pSize);
                                var c = i.graphics.group({
                                    class: "apexcharts-series-markers"
                                });
                                c && c.add(l), u.add(c), h.add(u);
                                var d = a.config.dataLabels;
                                if (d.enabled) {
                                    var p = d.formatter(a.globals.series[n][s], {
                                        seriesIndex: n,
                                        dataPointIndex: s,
                                        w: a
                                    });
                                    o.plotDataLabelsText({
                                        x: g[s].x,
                                        y: g[s].y,
                                        text: p,
                                        textAnchor: "middle",
                                        i: n,
                                        j: n,
                                        parent: f,
                                        offsetCorrection: !1,
                                        dataLabelsConfig: e({}, d)
                                    })
                                }
                                h.add(f)
                            })), r.push(h)
                        })), this.drawPolygons({
                            parent: d
                        }), a.config.xaxis.labels.show) {
                        var p = this.drawXAxisTexts();
                        d.add(p)
                    }
                    return r.forEach((function(t) {
                        d.add(t)
                    })), d.add(this.yaxisLabels), d
                }
            }, {
                key: "drawPolygons",
                value: function(t) {
                    for (var e = this, i = this.w, a = t.parent, s = new St(this.ctx), r = i.globals.yAxisScale[0].result.reverse(), o = r.length, n = [], l = this.size / (o - 1), h = 0; h < o; h++) n[h] = l * h;
                    n.reverse();
                    var c = [],
                        d = [];
                    n.forEach((function(t, i) {
                        var a = x.getPolygonPos(t, e.dataPointsLen),
                            s = "";
                        a.forEach((function(t, a) {
                            if (0 === i) {
                                var r = e.graphics.drawLine(t.x, t.y, 0, 0, Array.isArray(e.polygons.connectorColors) ? e.polygons.connectorColors[a] : e.polygons.connectorColors);
                                d.push(r)
                            }
                            0 === a && e.yaxisLabelsTextsPos.push({
                                x: t.x,
                                y: t.y
                            }), s += t.x + "," + t.y + " "
                        })), c.push(s)
                    })), c.forEach((function(t, s) {
                        var r = e.polygons.strokeColors,
                            o = e.polygons.strokeWidth,
                            n = e.graphics.drawPolygon(t, Array.isArray(r) ? r[s] : r, Array.isArray(o) ? o[s] : o, i.globals.radarPolygons.fill.colors[s]);
                        a.add(n)
                    })), d.forEach((function(t) {
                        a.add(t)
                    })), i.config.yaxis[0].show && this.yaxisLabelsTextsPos.forEach((function(t, i) {
                        var a = s.drawYAxisTexts(t.x, t.y, i, r[i]);
                        e.yaxisLabels.add(a)
                    }))
                }
            }, {
                key: "drawXAxisTexts",
                value: function() {
                    var t = this,
                        i = this.w,
                        a = i.config.xaxis.labels,
                        s = this.graphics.group({
                            class: "apexcharts-xaxis"
                        }),
                        r = x.getPolygonPos(this.size, this.dataPointsLen);
                    return i.globals.labels.forEach((function(o, n) {
                        var l = i.config.xaxis.labels.formatter,
                            h = new z(t.ctx);
                        if (r[n]) {
                            var c = t.getTextPos(r[n], t.size),
                                d = l(o, {
                                    seriesIndex: -1,
                                    dataPointIndex: n,
                                    w: i
                                });
                            h.plotDataLabelsText({
                                x: c.newX,
                                y: c.newY,
                                text: d,
                                textAnchor: c.textAnchor,
                                i: n,
                                j: n,
                                parent: s,
                                color: Array.isArray(a.style.colors) && a.style.colors[n] ? a.style.colors[n] : "#a8a8a8",
                                dataLabelsConfig: e({
                                    textAnchor: c.textAnchor,
                                    dropShadow: {
                                        enabled: !1
                                    }
                                }, a),
                                offsetCorrection: !1
                            })
                        }
                    })), s
                }
            }, {
                key: "createPaths",
                value: function(t, e) {
                    var i = this,
                        a = [],
                        s = [],
                        r = [],
                        o = [];
                    if (t.length) {
                        s = [this.graphics.move(e.x, e.y)], o = [this.graphics.move(e.x, e.y)];
                        var n = this.graphics.move(t[0].x, t[0].y),
                            l = this.graphics.move(t[0].x, t[0].y);
                        t.forEach((function(e, a) {
                            n += i.graphics.line(e.x, e.y), l += i.graphics.line(e.x, e.y), a === t.length - 1 && (n += "Z", l += "Z")
                        })), a.push(n), r.push(l)
                    }
                    return {
                        linePathsFrom: s,
                        linePathsTo: a,
                        areaPathsFrom: o,
                        areaPathsTo: r
                    }
                }
            }, {
                key: "getTextPos",
                value: function(t, e) {
                    var i = "middle",
                        a = t.x,
                        s = t.y;
                    return Math.abs(t.x) >= 10 ? t.x > 0 ? (i = "start", a += 10) : t.x < 0 && (i = "end", a -= 10) : i = "middle", Math.abs(t.y) >= e - 10 && (t.y < 0 ? s -= 10 : t.y > 0 && (s += 10)), {
                        textAnchor: i,
                        newX: a,
                        newY: s
                    }
                }
            }, {
                key: "getPreviousPath",
                value: function(t) {
                    for (var e = this.w, i = null, a = 0; a < e.globals.previousPaths.length; a++) {
                        var s = e.globals.previousPaths[a];
                        s.paths.length > 0 && parseInt(s.realIndex, 10) === parseInt(t, 10) && void 0 !== e.globals.previousPaths[a].paths[0] && (i = e.globals.previousPaths[a].paths[0].d)
                    }
                    return i
                }
            }, {
                key: "getDataPointsPos",
                value: function(t, e) {
                    var i = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : this.dataPointsLen;
                    t = t || [], e = e || [];
                    for (var a = [], s = 0; s < i; s++) {
                        var r = {};
                        r.x = t[s] * Math.sin(e[s]), r.y = -t[s] * Math.cos(e[s]), a.push(r)
                    }
                    return a
                }
            }]), t
        }(),
        Pt = function(t) {
            n(i, t);
            var e = d(i);

            function i(t) {
                var s;
                a(this, i), (s = e.call(this, t)).ctx = t, s.w = t.w, s.animBeginArr = [0], s.animDur = 0;
                var r = s.w;
                return s.startAngle = r.config.plotOptions.radialBar.startAngle, s.endAngle = r.config.plotOptions.radialBar.endAngle, s.totalAngle = Math.abs(r.config.plotOptions.radialBar.endAngle - r.config.plotOptions.radialBar.startAngle), s.trackStartAngle = r.config.plotOptions.radialBar.track.startAngle, s.trackEndAngle = r.config.plotOptions.radialBar.track.endAngle, s.donutDataLabels = s.w.config.plotOptions.radialBar.dataLabels, s.radialDataLabels = s.donutDataLabels, s.trackStartAngle || (s.trackStartAngle = s.startAngle), s.trackEndAngle || (s.trackEndAngle = s.endAngle), 360 === s.endAngle && (s.endAngle = 359.99), s.margin = parseInt(r.config.plotOptions.radialBar.track.margin, 10), s
            }
            return r(i, [{
                key: "draw",
                value: function(t) {
                    var e = this.w,
                        i = new m(this.ctx),
                        a = i.group({
                            class: "apexcharts-radialbar"
                        });
                    if (e.globals.noData) return a;
                    var s = i.group(),
                        r = this.defaultSize / 2,
                        o = e.globals.gridWidth / 2,
                        n = this.defaultSize / 2.05;
                    e.config.chart.sparkline.enabled || (n = n - e.config.stroke.width - e.config.chart.dropShadow.blur);
                    var l = e.globals.fill.colors;
                    if (e.config.plotOptions.radialBar.track.show) {
                        var h = this.drawTracks({
                            size: n,
                            centerX: o,
                            centerY: r,
                            colorArr: l,
                            series: t
                        });
                        s.add(h)
                    }
                    var c = this.drawArcs({
                            size: n,
                            centerX: o,
                            centerY: r,
                            colorArr: l,
                            series: t
                        }),
                        d = 360;
                    e.config.plotOptions.radialBar.startAngle < 0 && (d = this.totalAngle);
                    var g = (360 - d) / 360;
                    if (e.globals.radialSize = n - n * g, this.radialDataLabels.value.show) {
                        var u = Math.max(this.radialDataLabels.value.offsetY, this.radialDataLabels.name.offsetY);
                        e.globals.radialSize += u * g
                    }
                    return s.add(c.g), "front" === e.config.plotOptions.radialBar.hollow.position && (c.g.add(c.elHollow), c.dataLabels && c.g.add(c.dataLabels)), a.add(s), a
                }
            }, {
                key: "drawTracks",
                value: function(t) {
                    var e = this.w,
                        i = new m(this.ctx),
                        a = i.group({
                            class: "apexcharts-tracks"
                        }),
                        s = new v(this.ctx),
                        r = new M(this.ctx),
                        o = this.getStrokeWidth(t);
                    t.size = t.size - o / 2;
                    for (var n = 0; n < t.series.length; n++) {
                        var l = i.group({
                            class: "apexcharts-radialbar-track apexcharts-track"
                        });
                        a.add(l), l.attr({
                            rel: n + 1
                        }), t.size = t.size - o - this.margin;
                        var h = e.config.plotOptions.radialBar.track,
                            c = r.fillPath({
                                seriesNumber: 0,
                                size: t.size,
                                fillColors: Array.isArray(h.background) ? h.background[n] : h.background,
                                solid: !0
                            }),
                            d = this.trackStartAngle,
                            g = this.trackEndAngle;
                        Math.abs(g) + Math.abs(d) >= 360 && (g = 360 - Math.abs(this.startAngle) - .1);
                        var u = i.drawPath({
                            d: "",
                            stroke: c,
                            strokeWidth: o * parseInt(h.strokeWidth, 10) / 100,
                            fill: "none",
                            strokeOpacity: h.opacity,
                            classes: "apexcharts-radialbar-area"
                        });
                        if (h.dropShadow.enabled) {
                            var f = h.dropShadow;
                            s.dropShadow(u, f)
                        }
                        l.add(u), u.attr("id", "apexcharts-radialbarTrack-" + n), this.animatePaths(u, {
                            centerX: t.centerX,
                            centerY: t.centerY,
                            endAngle: g,
                            startAngle: d,
                            size: t.size,
                            i: n,
                            totalItems: 2,
                            animBeginArr: 0,
                            dur: 0,
                            isTrack: !0,
                            easing: e.globals.easing
                        })
                    }
                    return a
                }
            }, {
                key: "drawArcs",
                value: function(t) {
                    var e = this.w,
                        i = new m(this.ctx),
                        a = new M(this.ctx),
                        s = new v(this.ctx),
                        r = i.group(),
                        o = this.getStrokeWidth(t);
                    t.size = t.size - o / 2;
                    var n = e.config.plotOptions.radialBar.hollow.background,
                        l = t.size - o * t.series.length - this.margin * t.series.length - o * parseInt(e.config.plotOptions.radialBar.track.strokeWidth, 10) / 100 / 2,
                        h = l - e.config.plotOptions.radialBar.hollow.margin;
                    void 0 !== e.config.plotOptions.radialBar.hollow.image && (n = this.drawHollowImage(t, r, l, n));
                    var c = this.drawHollow({
                        size: h,
                        centerX: t.centerX,
                        centerY: t.centerY,
                        fill: n || "transparent"
                    });
                    if (e.config.plotOptions.radialBar.hollow.dropShadow.enabled) {
                        var d = e.config.plotOptions.radialBar.hollow.dropShadow;
                        s.dropShadow(c, d)
                    }
                    var g = 1;
                    !this.radialDataLabels.total.show && e.globals.series.length > 1 && (g = 0);
                    var u = null;
                    this.radialDataLabels.show && (u = this.renderInnerDataLabels(this.radialDataLabels, {
                        hollowSize: l,
                        centerX: t.centerX,
                        centerY: t.centerY,
                        opacity: g
                    })), "back" === e.config.plotOptions.radialBar.hollow.position && (r.add(c), u && r.add(u));
                    var f = !1;
                    e.config.plotOptions.radialBar.inverseOrder && (f = !0);
                    for (var p = f ? t.series.length - 1 : 0; f ? p >= 0 : p < t.series.length; f ? p-- : p++) {
                        var b = i.group({
                            class: "apexcharts-series apexcharts-radial-series",
                            seriesName: x.escapeString(e.globals.seriesNames[p])
                        });
                        r.add(b), b.attr({
                            rel: p + 1,
                            "data:realIndex": p
                        }), this.ctx.series.addCollapsedClassToSeries(b, p), t.size = t.size - o - this.margin;
                        var y = a.fillPath({
                                seriesNumber: p,
                                size: t.size,
                                value: t.series[p]
                            }),
                            w = this.startAngle,
                            k = void 0,
                            A = x.negToZero(t.series[p] > 100 ? 100 : t.series[p]) / 100,
                            S = Math.round(this.totalAngle * A) + this.startAngle,
                            C = void 0;
                        e.globals.dataChanged && (k = this.startAngle, C = Math.round(this.totalAngle * x.negToZero(e.globals.previousPaths[p]) / 100) + k), Math.abs(S) + Math.abs(w) >= 360 && (S -= .01), Math.abs(C) + Math.abs(k) >= 360 && (C -= .01);
                        var L = S - w,
                            P = Array.isArray(e.config.stroke.dashArray) ? e.config.stroke.dashArray[p] : e.config.stroke.dashArray,
                            T = i.drawPath({
                                d: "",
                                stroke: y,
                                strokeWidth: o,
                                fill: "none",
                                fillOpacity: e.config.fill.opacity,
                                classes: "apexcharts-radialbar-area apexcharts-radialbar-slice-" + p,
                                strokeDashArray: P
                            });
                        if (m.setAttrs(T.node, {
                                "data:angle": L,
                                "data:value": t.series[p]
                            }), e.config.chart.dropShadow.enabled) {
                            var I = e.config.chart.dropShadow;
                            s.dropShadow(T, I, p)
                        }
                        s.setSelectionFilter(T, 0, p), this.addListeners(T, this.radialDataLabels), b.add(T), T.attr({
                            index: 0,
                            j: p
                        });
                        var z = 0;
                        !this.initialAnim || e.globals.resized || e.globals.dataChanged || (z = e.config.chart.animations.speed), e.globals.dataChanged && (z = e.config.chart.animations.dynamicAnimation.speed), this.animDur = z / (1.2 * t.series.length) + this.animDur, this.animBeginArr.push(this.animDur), this.animatePaths(T, {
                            centerX: t.centerX,
                            centerY: t.centerY,
                            endAngle: S,
                            startAngle: w,
                            prevEndAngle: C,
                            prevStartAngle: k,
                            size: t.size,
                            i: p,
                            totalItems: 2,
                            animBeginArr: this.animBeginArr,
                            dur: z,
                            shouldSetPrevPaths: !0,
                            easing: e.globals.easing
                        })
                    }
                    return {
                        g: r,
                        elHollow: c,
                        dataLabels: u
                    }
                }
            }, {
                key: "drawHollow",
                value: function(t) {
                    var e = new m(this.ctx).drawCircle(2 * t.size);
                    return e.attr({
                        class: "apexcharts-radialbar-hollow",
                        cx: t.centerX,
                        cy: t.centerY,
                        r: t.size,
                        fill: t.fill
                    }), e
                }
            }, {
                key: "drawHollowImage",
                value: function(t, e, i, a) {
                    var s = this.w,
                        r = new M(this.ctx),
                        o = x.randomId(),
                        n = s.config.plotOptions.radialBar.hollow.image;
                    if (s.config.plotOptions.radialBar.hollow.imageClipped) r.clippedImgArea({
                        width: i,
                        height: i,
                        image: n,
                        patternID: "pattern".concat(s.globals.cuid).concat(o)
                    }), a = "url(#pattern".concat(s.globals.cuid).concat(o, ")");
                    else {
                        var l = s.config.plotOptions.radialBar.hollow.imageWidth,
                            h = s.config.plotOptions.radialBar.hollow.imageHeight;
                        if (void 0 === l && void 0 === h) {
                            var c = s.globals.dom.Paper.image(n).loaded((function(e) {
                                this.move(t.centerX - e.width / 2 + s.config.plotOptions.radialBar.hollow.imageOffsetX, t.centerY - e.height / 2 + s.config.plotOptions.radialBar.hollow.imageOffsetY)
                            }));
                            e.add(c)
                        } else {
                            var d = s.globals.dom.Paper.image(n).loaded((function(e) {
                                this.move(t.centerX - l / 2 + s.config.plotOptions.radialBar.hollow.imageOffsetX, t.centerY - h / 2 + s.config.plotOptions.radialBar.hollow.imageOffsetY), this.size(l, h)
                            }));
                            e.add(d)
                        }
                    }
                    return a
                }
            }, {
                key: "getStrokeWidth",
                value: function(t) {
                    var e = this.w;
                    return t.size * (100 - parseInt(e.config.plotOptions.radialBar.hollow.size, 10)) / 100 / (t.series.length + 1) - this.margin
                }
            }]), i
        }(Ct),
        Mt = function() {
            function t(e) {
                a(this, t), this.w = e.w, this.lineCtx = e
            }
            return r(t, [{
                key: "sameValueSeriesFix",
                value: function(t, e) {
                    var i = this.w;
                    if ("line" === i.config.chart.type && ("gradient" === i.config.fill.type || "gradient" === i.config.fill.type[t]) && new y(this.lineCtx.ctx, i).seriesHaveSameValues(t)) {
                        var a = e[t].slice();
                        a[a.length - 1] = a[a.length - 1] + 1e-6, e[t] = a
                    }
                    return e
                }
            }, {
                key: "calculatePoints",
                value: function(t) {
                    var e = t.series,
                        i = t.realIndex,
                        a = t.x,
                        s = t.y,
                        r = t.i,
                        o = t.j,
                        n = t.prevY,
                        l = this.w,
                        h = [],
                        c = [];
                    if (0 === o) {
                        var d = this.lineCtx.categoryAxisCorrection + l.config.markers.offsetX;
                        l.globals.isXNumeric && (d = (l.globals.seriesX[i][0] - l.globals.minX) / this.lineCtx.xRatio + l.config.markers.offsetX), h.push(d), c.push(x.isNumber(e[r][0]) ? n + l.config.markers.offsetY : null), h.push(a + l.config.markers.offsetX), c.push(x.isNumber(e[r][o + 1]) ? s + l.config.markers.offsetY : null)
                    } else h.push(a + l.config.markers.offsetX), c.push(x.isNumber(e[r][o + 1]) ? s + l.config.markers.offsetY : null);
                    return {
                        x: h,
                        y: c
                    }
                }
            }, {
                key: "checkPreviousPaths",
                value: function(t) {
                    for (var e = t.pathFromLine, i = t.pathFromArea, a = t.realIndex, s = this.w, r = 0; r < s.globals.previousPaths.length; r++) {
                        var o = s.globals.previousPaths[r];
                        ("line" === o.type || "area" === o.type) && o.paths.length > 0 && parseInt(o.realIndex, 10) === parseInt(a, 10) && ("line" === o.type ? (this.lineCtx.appendPathFrom = !1, e = s.globals.previousPaths[r].paths[0].d) : "area" === o.type && (this.lineCtx.appendPathFrom = !1, i = s.globals.previousPaths[r].paths[0].d, s.config.stroke.show && s.globals.previousPaths[r].paths[1] && (e = s.globals.previousPaths[r].paths[1].d)))
                    }
                    return {
                        pathFromLine: e,
                        pathFromArea: i
                    }
                }
            }, {
                key: "determineFirstPrevY",
                value: function(t) {
                    var e = t.i,
                        i = t.series,
                        a = t.prevY,
                        s = t.lineYPosition,
                        r = this.w;
                    if (void 0 !== i[e][0]) a = (s = r.config.chart.stacked && e > 0 ? this.lineCtx.prevSeriesY[e - 1][0] : this.lineCtx.zeroY) - i[e][0] / this.lineCtx.yRatio[this.lineCtx.yaxisIndex] + 2 * (this.lineCtx.isReversed ? i[e][0] / this.lineCtx.yRatio[this.lineCtx.yaxisIndex] : 0);
                    else if (r.config.chart.stacked && e > 0 && void 0 === i[e][0])
                        for (var o = e - 1; o >= 0; o--)
                            if (null !== i[o][0] && void 0 !== i[o][0]) {
                                a = s = this.lineCtx.prevSeriesY[o][0];
                                break
                            }
                    return {
                        prevY: a,
                        lineYPosition: s
                    }
                }
            }]), t
        }(),
        Tt = function() {
            function t(e, i, s) {
                a(this, t), this.ctx = e, this.w = e.w, this.xyRatios = i, this.pointsChart = !("bubble" !== this.w.config.chart.type && "scatter" !== this.w.config.chart.type) || s, this.scatter = new I(this.ctx), this.noNegatives = this.w.globals.minX === Number.MAX_VALUE, this.lineHelpers = new Mt(this), this.markers = new T(this.ctx), this.prevSeriesY = [], this.categoryAxisCorrection = 0, this.yaxisIndex = 0
            }
            return r(t, [{
                key: "draw",
                value: function(t, e, i) {
                    var a = this.w,
                        s = new m(this.ctx),
                        r = a.globals.comboCharts ? e : a.config.chart.type,
                        o = s.group({
                            class: "apexcharts-".concat(r, "-series apexcharts-plot-series")
                        }),
                        n = new y(this.ctx, a);
                    this.yRatio = this.xyRatios.yRatio, this.zRatio = this.xyRatios.zRatio, this.xRatio = this.xyRatios.xRatio, this.baseLineY = this.xyRatios.baseLineY, t = n.getLogSeries(t), this.yRatio = n.getLogYRatios(this.yRatio);
                    for (var l = [], h = 0; h < t.length; h++) {
                        t = this.lineHelpers.sameValueSeriesFix(h, t);
                        var c = a.globals.comboCharts ? i[h] : h;
                        this._initSerieVariables(t, h, c);
                        var d = [],
                            g = [],
                            u = a.globals.padHorizontal + this.categoryAxisCorrection;
                        this.ctx.series.addCollapsedClassToSeries(this.elSeries, c), a.globals.isXNumeric && a.globals.seriesX.length > 0 && (u = (a.globals.seriesX[c][0] - a.globals.minX) / this.xRatio), g.push(u);
                        var f, p = u,
                            x = p,
                            b = this.zeroY;
                        b = this.lineHelpers.determineFirstPrevY({
                            i: h,
                            series: t,
                            prevY: b,
                            lineYPosition: 0
                        }).prevY, d.push(b), f = b;
                        var v = this._calculatePathsFrom({
                                series: t,
                                i: h,
                                realIndex: c,
                                prevX: x,
                                prevY: b
                            }),
                            w = this._iterateOverDataPoints({
                                series: t,
                                realIndex: c,
                                i: h,
                                x: u,
                                y: 1,
                                pX: p,
                                pY: f,
                                pathsFrom: v,
                                linePaths: [],
                                areaPaths: [],
                                seriesIndex: i,
                                lineYPosition: 0,
                                xArrj: g,
                                yArrj: d
                            });
                        this._handlePaths({
                            type: r,
                            realIndex: c,
                            i: h,
                            paths: w
                        }), this.elSeries.add(this.elPointsMain), this.elSeries.add(this.elDataLabelsWrap), l.push(this.elSeries)
                    }
                    if (a.config.chart.stacked)
                        for (var k = l.length; k > 0; k--) o.add(l[k - 1]);
                    else
                        for (var A = 0; A < l.length; A++) o.add(l[A]);
                    return o
                }
            }, {
                key: "_initSerieVariables",
                value: function(t, e, i) {
                    var a = this.w,
                        s = new m(this.ctx);
                    this.xDivision = a.globals.gridWidth / (a.globals.dataPoints - ("on" === a.config.xaxis.tickPlacement ? 1 : 0)), this.strokeWidth = Array.isArray(a.config.stroke.width) ? a.config.stroke.width[i] : a.config.stroke.width, this.yRatio.length > 1 && (this.yaxisIndex = i), this.isReversed = a.config.yaxis[this.yaxisIndex] && a.config.yaxis[this.yaxisIndex].reversed, this.zeroY = a.globals.gridHeight - this.baseLineY[this.yaxisIndex] - (this.isReversed ? a.globals.gridHeight : 0) + (this.isReversed ? 2 * this.baseLineY[this.yaxisIndex] : 0), this.areaBottomY = this.zeroY, (this.zeroY > a.globals.gridHeight || "end" === a.config.plotOptions.area.fillTo) && (this.areaBottomY = a.globals.gridHeight), this.categoryAxisCorrection = this.xDivision / 2, this.elSeries = s.group({
                        class: "apexcharts-series",
                        seriesName: x.escapeString(a.globals.seriesNames[i])
                    }), this.elPointsMain = s.group({
                        class: "apexcharts-series-markers-wrap",
                        "data:realIndex": i
                    }), this.elDataLabelsWrap = s.group({
                        class: "apexcharts-datalabels",
                        "data:realIndex": i
                    });
                    var r = t[e].length === a.globals.dataPoints;
                    this.elSeries.attr({
                        "data:longestSeries": r,
                        rel: e + 1,
                        "data:realIndex": i
                    }), this.appendPathFrom = !0
                }
            }, {
                key: "_calculatePathsFrom",
                value: function(t) {
                    var e, i, a, s, r = t.series,
                        o = t.i,
                        n = t.realIndex,
                        l = t.prevX,
                        h = t.prevY,
                        c = this.w,
                        d = new m(this.ctx);
                    if (null === r[o][0]) {
                        for (var g = 0; g < r[o].length; g++)
                            if (null !== r[o][g]) {
                                l = this.xDivision * g, h = this.zeroY - r[o][g] / this.yRatio[this.yaxisIndex], e = d.move(l, h), i = d.move(l, this.areaBottomY);
                                break
                            }
                    } else e = d.move(l, h), i = d.move(l, this.areaBottomY) + d.line(l, h);
                    if (a = d.move(-1, this.zeroY) + d.line(-1, this.zeroY), s = d.move(-1, this.zeroY) + d.line(-1, this.zeroY), c.globals.previousPaths.length > 0) {
                        var u = this.lineHelpers.checkPreviousPaths({
                            pathFromLine: a,
                            pathFromArea: s,
                            realIndex: n
                        });
                        a = u.pathFromLine, s = u.pathFromArea
                    }
                    return {
                        prevX: l,
                        prevY: h,
                        linePath: e,
                        areaPath: i,
                        pathFromLine: a,
                        pathFromArea: s
                    }
                }
            }, {
                key: "_handlePaths",
                value: function(t) {
                    var i = t.type,
                        a = t.realIndex,
                        s = t.i,
                        r = t.paths,
                        o = this.w,
                        n = new m(this.ctx),
                        l = new M(this.ctx);
                    this.prevSeriesY.push(r.yArrj), o.globals.seriesXvalues[a] = r.xArrj, o.globals.seriesYvalues[a] = r.yArrj;
                    var h = o.config.forecastDataPoints;
                    if (h.count > 0) {
                        var c = o.globals.seriesXvalues[a][o.globals.seriesXvalues[a].length - h.count - 1],
                            d = n.drawRect(c, 0, o.globals.gridWidth, o.globals.gridHeight, 0);
                        o.globals.dom.elForecastMask.appendChild(d.node);
                        var g = n.drawRect(0, 0, c, o.globals.gridHeight, 0);
                        o.globals.dom.elNonForecastMask.appendChild(g.node)
                    }
                    this.pointsChart || o.globals.delayedElements.push({
                        el: this.elPointsMain.node,
                        index: a
                    });
                    var u = {
                        i: s,
                        realIndex: a,
                        animationDelay: s,
                        initialSpeed: o.config.chart.animations.speed,
                        dataChangeSpeed: o.config.chart.animations.dynamicAnimation.speed,
                        className: "apexcharts-".concat(i)
                    };
                    if ("area" === i)
                        for (var f = l.fillPath({
                                seriesNumber: a
                            }), p = 0; p < r.areaPaths.length; p++) {
                            var x = n.renderPaths(e(e({}, u), {}, {
                                pathFrom: r.pathFromArea,
                                pathTo: r.areaPaths[p],
                                stroke: "none",
                                strokeWidth: 0,
                                strokeLineCap: null,
                                fill: f
                            }));
                            this.elSeries.add(x)
                        }
                    if (o.config.stroke.show && !this.pointsChart) {
                        var b = null;
                        if ("line" === i) b = l.fillPath({
                            seriesNumber: a,
                            i: s
                        });
                        else if ("solid" === o.config.stroke.fill.type) b = o.globals.stroke.colors[a];
                        else {
                            var v = o.config.fill;
                            o.config.fill = o.config.stroke.fill, b = l.fillPath({
                                seriesNumber: a,
                                i: s
                            }), o.config.fill = v
                        }
                        for (var y = 0; y < r.linePaths.length; y++) {
                            var w = e(e({}, u), {}, {
                                    pathFrom: r.pathFromLine,
                                    pathTo: r.linePaths[y],
                                    stroke: b,
                                    strokeWidth: this.strokeWidth,
                                    strokeLineCap: o.config.stroke.lineCap,
                                    fill: "none"
                                }),
                                k = n.renderPaths(w);
                            if (this.elSeries.add(k), h.count > 0) {
                                var A = n.renderPaths(w);
                                A.node.setAttribute("stroke-dasharray", h.dashArray), h.strokeWidth && A.node.setAttribute("stroke-width", h.strokeWidth), this.elSeries.add(A), A.attr("clip-path", "url(#forecastMask".concat(o.globals.cuid, ")")), k.attr("clip-path", "url(#nonForecastMask".concat(o.globals.cuid, ")"))
                            }
                        }
                    }
                }
            }, {
                key: "_iterateOverDataPoints",
                value: function(t) {
                    for (var e = t.series, i = t.realIndex, a = t.i, s = t.x, r = t.y, o = t.pX, n = t.pY, l = t.pathsFrom, h = t.linePaths, c = t.areaPaths, d = t.seriesIndex, g = t.lineYPosition, u = t.xArrj, f = t.yArrj, p = this.w, b = new m(this.ctx), v = this.yRatio, y = l.prevY, w = l.linePath, k = l.areaPath, A = l.pathFromLine, S = l.pathFromArea, C = x.isNumber(p.globals.minYArr[i]) ? p.globals.minYArr[i] : p.globals.minY, L = p.globals.dataPoints > 1 ? p.globals.dataPoints - 1 : p.globals.dataPoints, P = 0; P < L; P++) {
                        var M = void 0 === e[a][P + 1] || null === e[a][P + 1];
                        if (p.globals.isXNumeric) {
                            var T = p.globals.seriesX[i][P + 1];
                            void 0 === p.globals.seriesX[i][P + 1] && (T = p.globals.seriesX[i][L - 1]), s = (T - p.globals.minX) / this.xRatio
                        } else s += this.xDivision;
                        if (p.config.chart.stacked)
                            if (a > 0 && p.globals.collapsedSeries.length < p.config.series.length - 1) {
                                g = this.prevSeriesY[function(t) {
                                    for (var e = t, i = 0; i < p.globals.series.length; i++)
                                        if (p.globals.collapsedSeriesIndices.indexOf(t) > -1) {
                                            e--;
                                            break
                                        }
                                    return e >= 0 ? e : 0
                                }(a - 1)][P + 1]
                            } else g = this.zeroY;
                        else g = this.zeroY;
                        r = M ? g - C / v[this.yaxisIndex] + 2 * (this.isReversed ? C / v[this.yaxisIndex] : 0) : g - e[a][P + 1] / v[this.yaxisIndex] + 2 * (this.isReversed ? e[a][P + 1] / v[this.yaxisIndex] : 0), u.push(s), f.push(r);
                        var I = this.lineHelpers.calculatePoints({
                                series: e,
                                x: s,
                                y: r,
                                realIndex: i,
                                i: a,
                                j: P,
                                prevY: y
                            }),
                            z = this._createPaths({
                                series: e,
                                i: a,
                                realIndex: i,
                                j: P,
                                x: s,
                                y: r,
                                pX: o,
                                pY: n,
                                linePath: w,
                                areaPath: k,
                                linePaths: h,
                                areaPaths: c,
                                seriesIndex: d
                            });
                        c = z.areaPaths, h = z.linePaths, o = z.pX, n = z.pY, k = z.areaPath, w = z.linePath, this.appendPathFrom && (A += b.line(s, this.zeroY), S += b.line(s, this.zeroY)), this.handleNullDataPoints(e, I, a, P, i), this._handleMarkersAndLabels({
                            pointsPos: I,
                            series: e,
                            x: s,
                            y: r,
                            prevY: y,
                            i: a,
                            j: P,
                            realIndex: i
                        })
                    }
                    return {
                        yArrj: f,
                        xArrj: u,
                        pathFromArea: S,
                        areaPaths: c,
                        pathFromLine: A,
                        linePaths: h
                    }
                }
            }, {
                key: "_handleMarkersAndLabels",
                value: function(t) {
                    var e = t.pointsPos;
                    t.series, t.x, t.y, t.prevY;
                    var i = t.i,
                        a = t.j,
                        s = t.realIndex,
                        r = this.w,
                        o = new z(this.ctx);
                    if (this.pointsChart) this.scatter.draw(this.elSeries, a, {
                        realIndex: s,
                        pointsPos: e,
                        zRatio: this.zRatio,
                        elParent: this.elPointsMain
                    });
                    else {
                        r.globals.series[i].length > 1 && this.elPointsMain.node.classList.add("apexcharts-element-hidden");
                        var n = this.markers.plotChartMarkers(e, s, a + 1);
                        null !== n && this.elPointsMain.add(n)
                    }
                    var l = o.drawDataLabel(e, s, a + 1, null);
                    null !== l && this.elDataLabelsWrap.add(l)
                }
            }, {
                key: "_createPaths",
                value: function(t) {
                    var e = t.series,
                        i = t.i,
                        a = t.realIndex,
                        s = t.j,
                        r = t.x,
                        o = t.y,
                        n = t.pX,
                        l = t.pY,
                        h = t.linePath,
                        c = t.areaPath,
                        d = t.linePaths,
                        g = t.areaPaths,
                        u = t.seriesIndex,
                        f = this.w,
                        p = new m(this.ctx),
                        x = f.config.stroke.curve,
                        b = this.areaBottomY;
                    if (Array.isArray(f.config.stroke.curve) && (x = Array.isArray(u) ? f.config.stroke.curve[u[i]] : f.config.stroke.curve[i]), "smooth" === x) {
                        var v = .35 * (r - n);
                        f.globals.hasNullValues ? (null !== e[i][s] && (null !== e[i][s + 1] ? (h = p.move(n, l) + p.curve(n + v, l, r - v, o, r + 1, o), c = p.move(n + 1, l) + p.curve(n + v, l, r - v, o, r + 1, o) + p.line(r, b) + p.line(n, b) + "z") : (h = p.move(n, l), c = p.move(n, l) + "z")), d.push(h), g.push(c)) : (h += p.curve(n + v, l, r - v, o, r, o), c += p.curve(n + v, l, r - v, o, r, o)), n = r, l = o, s === e[i].length - 2 && (c = c + p.curve(n, l, r, o, r, b) + p.move(r, o) + "z", f.globals.hasNullValues || (d.push(h), g.push(c)))
                    } else {
                        if (null === e[i][s + 1]) {
                            h += p.move(r, o);
                            var y = f.globals.isXNumeric ? (f.globals.seriesX[a][s] - f.globals.minX) / this.xRatio : r - this.xDivision;
                            c = c + p.line(y, b) + p.move(r, o) + "z"
                        }
                        null === e[i][s] && (h += p.move(r, o), c += p.move(r, b)), "stepline" === x ? (h = h + p.line(r, null, "H") + p.line(null, o, "V"), c = c + p.line(r, null, "H") + p.line(null, o, "V")) : "straight" === x && (h += p.line(r, o), c += p.line(r, o)), s === e[i].length - 2 && (c = c + p.line(r, b) + p.move(r, o) + "z", d.push(h), g.push(c))
                    }
                    return {
                        linePaths: d,
                        areaPaths: g,
                        pX: n,
                        pY: l,
                        linePath: h,
                        areaPath: c
                    }
                }
            }, {
                key: "handleNullDataPoints",
                value: function(t, e, i, a, s) {
                    var r = this.w;
                    if (null === t[i][a] && r.config.markers.showNullDataPoints || 1 === t[i].length) {
                        var o = this.markers.plotChartMarkers(e, s, a + 1, this.strokeWidth - r.config.markers.strokeWidth / 2, !0);
                        null !== o && this.elPointsMain.add(o)
                    }
                }
            }]), t
        }();
    window.TreemapSquared = {}, window.TreemapSquared.generate = function() {
        function t(e, i, a, s) {
            this.xoffset = e, this.yoffset = i, this.height = s, this.width = a, this.shortestEdge = function() {
                return Math.min(this.height, this.width)
            }, this.getCoordinates = function(t) {
                var e, i = [],
                    a = this.xoffset,
                    s = this.yoffset,
                    o = r(t) / this.height,
                    n = r(t) / this.width;
                if (this.width >= this.height)
                    for (e = 0; e < t.length; e++) i.push([a, s, a + o, s + t[e] / o]), s += t[e] / o;
                else
                    for (e = 0; e < t.length; e++) i.push([a, s, a + t[e] / n, s + n]), a += t[e] / n;
                return i
            }, this.cutArea = function(e) {
                var i;
                if (this.width >= this.height) {
                    var a = e / this.height,
                        s = this.width - a;
                    i = new t(this.xoffset + a, this.yoffset, s, this.height)
                } else {
                    var r = e / this.width,
                        o = this.height - r;
                    i = new t(this.xoffset, this.yoffset + r, this.width, o)
                }
                return i
            }
        }

        function e(e, a, s, o, n) {
            return o = void 0 === o ? 0 : o, n = void 0 === n ? 0 : n,
                function(t) {
                    var e, i, a = [];
                    for (e = 0; e < t.length; e++)
                        for (i = 0; i < t[e].length; i++) a.push(t[e][i]);
                    return a
                }(i(function(t, e) {
                    var i, a = [],
                        s = e / r(t);
                    for (i = 0; i < t.length; i++) a[i] = t[i] * s;
                    return a
                }(e, a * s), [], new t(o, n, a, s), []))
        }

        function i(t, e, s, o) {
            var n, l, h;
            if (0 !== t.length) return n = s.shortestEdge(),
                function(t, e, i) {
                    var s;
                    if (0 === t.length) return !0;
                    (s = t.slice()).push(e);
                    var r = a(t, i),
                        o = a(s, i);
                    return r >= o
                }(e, l = t[0], n) ? (e.push(l), i(t.slice(1), e, s, o)) : (h = s.cutArea(r(e), o), o.push(s.getCoordinates(e)), i(t, [], h, o)), o;
            o.push(s.getCoordinates(e))
        }

        function a(t, e) {
            var i = Math.min.apply(Math, t),
                a = Math.max.apply(Math, t),
                s = r(t);
            return Math.max(Math.pow(e, 2) * a / Math.pow(s, 2), Math.pow(s, 2) / (Math.pow(e, 2) * i))
        }

        function s(t) {
            return t && t.constructor === Array
        }

        function r(t) {
            var e, i = 0;
            for (e = 0; e < t.length; e++) i += t[e];
            return i
        }

        function o(t) {
            var e, i = 0;
            if (s(t[0]))
                for (e = 0; e < t.length; e++) i += o(t[e]);
            else i = r(t);
            return i
        }
        return function t(i, a, r, n, l) {
            n = void 0 === n ? 0 : n, l = void 0 === l ? 0 : l;
            var h, c, d = [],
                g = [];
            if (s(i[0])) {
                for (c = 0; c < i.length; c++) d[c] = o(i[c]);
                for (h = e(d, a, r, n, l), c = 0; c < i.length; c++) g.push(t(i[c], h[c][2] - h[c][0], h[c][3] - h[c][1], h[c][0], h[c][1]))
            } else g = e(i, a, r, n, l);
            return g
        }
    }();
    var It, zt, Xt = function() {
            function t(e, i) {
                a(this, t), this.ctx = e, this.w = e.w, this.strokeWidth = this.w.config.stroke.width, this.helpers = new kt(e), this.dynamicAnim = this.w.config.chart.animations.dynamicAnimation, this.labels = []
            }
            return r(t, [{
                key: "draw",
                value: function(t) {
                    var e = this,
                        i = this.w,
                        a = new m(this.ctx),
                        s = new M(this.ctx),
                        r = a.group({
                            class: "apexcharts-treemap"
                        });
                    if (i.globals.noData) return r;
                    var o = [];
                    return t.forEach((function(t) {
                        var e = t.map((function(t) {
                            return Math.abs(t)
                        }));
                        o.push(e)
                    })), this.negRange = this.helpers.checkColorRange(), i.config.series.forEach((function(t, i) {
                        t.data.forEach((function(t) {
                            Array.isArray(e.labels[i]) || (e.labels[i] = []), e.labels[i].push(t.x)
                        }))
                    })), window.TreemapSquared.generate(o, i.globals.gridWidth, i.globals.gridHeight).forEach((function(o, n) {
                        var l = a.group({
                            class: "apexcharts-series apexcharts-treemap-series",
                            seriesName: x.escapeString(i.globals.seriesNames[n]),
                            rel: n + 1,
                            "data:realIndex": n
                        });
                        if (i.config.chart.dropShadow.enabled) {
                            var h = i.config.chart.dropShadow;
                            new v(e.ctx).dropShadow(r, h, n)
                        }
                        var c = a.group({
                            class: "apexcharts-data-labels"
                        });
                        o.forEach((function(r, o) {
                            var h = r[0],
                                c = r[1],
                                d = r[2],
                                g = r[3],
                                u = a.drawRect(h, c, d - h, g - c, 0, "#fff", 1, e.strokeWidth, i.config.plotOptions.treemap.useFillColorAsStroke ? p : i.globals.stroke.colors[n]);
                            u.attr({
                                cx: h,
                                cy: c,
                                index: n,
                                i: n,
                                j: o,
                                width: d - h,
                                height: g - c
                            });
                            var f = e.helpers.getShadeColor(i.config.chart.type, n, o, e.negRange),
                                p = f.color;
                            void 0 !== i.config.series[n].data[o] && i.config.series[n].data[o].fillColor && (p = i.config.series[n].data[o].fillColor);
                            var x = s.fillPath({
                                color: p,
                                seriesNumber: n,
                                dataPointIndex: o
                            });
                            u.node.classList.add("apexcharts-treemap-rect"), u.attr({
                                fill: x
                            }), e.helpers.addListeners(u);
                            var b = {
                                    x: h + (d - h) / 2,
                                    y: c + (g - c) / 2,
                                    width: 0,
                                    height: 0
                                },
                                v = {
                                    x: h,
                                    y: c,
                                    width: d - h,
                                    height: g - c
                                };
                            if (i.config.chart.animations.enabled && !i.globals.dataChanged) {
                                var m = 1;
                                i.globals.resized || (m = i.config.chart.animations.speed), e.animateTreemap(u, b, v, m)
                            }
                            if (i.globals.dataChanged) {
                                var y = 1;
                                e.dynamicAnim.enabled && i.globals.shouldAnimate && (y = e.dynamicAnim.speed, i.globals.previousPaths[n] && i.globals.previousPaths[n][o] && i.globals.previousPaths[n][o].rect && (b = i.globals.previousPaths[n][o].rect), e.animateTreemap(u, b, v, y))
                            }
                            var w = e.getFontSize(r),
                                k = i.config.dataLabels.formatter(e.labels[n][o], {
                                    value: i.globals.series[n][o],
                                    seriesIndex: n,
                                    dataPointIndex: o,
                                    w: i
                                }),
                                A = e.helpers.calculateDataLabels({
                                    text: k,
                                    x: (h + d) / 2,
                                    y: (c + g) / 2 + e.strokeWidth / 2 + w / 3,
                                    i: n,
                                    j: o,
                                    colorProps: f,
                                    fontSize: w,
                                    series: t
                                });
                            i.config.dataLabels.enabled && A && e.rotateToFitLabel(A, w, k, h, c, d, g), l.add(u), null !== A && l.add(A)
                        })), l.add(c), r.add(l)
                    })), r
                }
            }, {
                key: "getFontSize",
                value: function(t) {
                    var e = this.w;
                    var i, a, s, r, o = function t(e) {
                        var i, a = 0;
                        if (Array.isArray(e[0]))
                            for (i = 0; i < e.length; i++) a += t(e[i]);
                        else
                            for (i = 0; i < e.length; i++) a += e[i].length;
                        return a
                    }(this.labels) / function t(e) {
                        var i, a = 0;
                        if (Array.isArray(e[0]))
                            for (i = 0; i < e.length; i++) a += t(e[i]);
                        else
                            for (i = 0; i < e.length; i++) a += 1;
                        return a
                    }(this.labels);
                    return i = t[2] - t[0], a = t[3] - t[1], s = i * a, r = Math.pow(s, .5), Math.min(r / o, parseInt(e.config.dataLabels.style.fontSize, 10))
                }
            }, {
                key: "rotateToFitLabel",
                value: function(t, e, i, a, s, r, o) {
                    var n = new m(this.ctx),
                        l = n.getTextRects(i, e);
                    if (l.width + this.w.config.stroke.width + 5 > r - a && l.width <= o - s) {
                        var h = n.rotateAroundCenter(t.node);
                        t.node.setAttribute("transform", "rotate(-90 ".concat(h.x, " ").concat(h.y, ")"))
                    }
                }
            }, {
                key: "animateTreemap",
                value: function(t, e, i, a) {
                    var s = new b(this.ctx);
                    s.animateRect(t, {
                        x: e.x,
                        y: e.y,
                        width: e.width,
                        height: e.height
                    }, {
                        x: i.x,
                        y: i.y,
                        width: i.width,
                        height: i.height
                    }, a, (function() {
                        s.animationCompleted(t)
                    }))
                }
            }]), t
        }(),
        Et = 86400,
        Yt = function() {
            function t(e) {
                a(this, t), this.ctx = e, this.w = e.w, this.timeScaleArray = [], this.utc = this.w.config.xaxis.labels.datetimeUTC
            }
            return r(t, [{
                key: "calculateTimeScaleTicks",
                value: function(t, i) {
                    var a = this,
                        s = this.w;
                    if (s.globals.allSeriesCollapsed) return s.globals.labels = [], s.globals.timescaleLabels = [], [];
                    var r = new R(this.ctx),
                        o = (i - t) / 864e5;
                    this.determineInterval(o), s.globals.disableZoomIn = !1, s.globals.disableZoomOut = !1, o < .00011574074074074075 ? s.globals.disableZoomIn = !0 : o > 5e4 && (s.globals.disableZoomOut = !0);
                    var n = r.getTimeUnitsfromTimestamp(t, i, this.utc),
                        l = s.globals.gridWidth / o,
                        h = l / 24,
                        c = h / 60,
                        d = c / 60,
                        g = Math.floor(24 * o),
                        u = Math.floor(1440 * o),
                        f = Math.floor(o * Et),
                        p = Math.floor(o),
                        x = Math.floor(o / 30),
                        b = Math.floor(o / 365),
                        v = {
                            minMillisecond: n.minMillisecond,
                            minSecond: n.minSecond,
                            minMinute: n.minMinute,
                            minHour: n.minHour,
                            minDate: n.minDate,
                            minMonth: n.minMonth,
                            minYear: n.minYear
                        },
                        m = {
                            firstVal: v,
                            currentMillisecond: v.minMillisecond,
                            currentSecond: v.minSecond,
                            currentMinute: v.minMinute,
                            currentHour: v.minHour,
                            currentMonthDate: v.minDate,
                            currentDate: v.minDate,
                            currentMonth: v.minMonth,
                            currentYear: v.minYear,
                            daysWidthOnXAxis: l,
                            hoursWidthOnXAxis: h,
                            minutesWidthOnXAxis: c,
                            secondsWidthOnXAxis: d,
                            numberOfSeconds: f,
                            numberOfMinutes: u,
                            numberOfHours: g,
                            numberOfDays: p,
                            numberOfMonths: x,
                            numberOfYears: b
                        };
                    switch (this.tickInterval) {
                        case "years":
                            this.generateYearScale(m);
                            break;
                        case "months":
                        case "half_year":
                            this.generateMonthScale(m);
                            break;
                        case "months_days":
                        case "months_fortnight":
                        case "days":
                        case "week_days":
                            this.generateDayScale(m);
                            break;
                        case "hours":
                            this.generateHourScale(m);
                            break;
                        case "minutes_fives":
                        case "minutes":
                            this.generateMinuteScale(m);
                            break;
                        case "seconds_tens":
                        case "seconds_fives":
                        case "seconds":
                            this.generateSecondScale(m)
                    }
                    var y = this.timeScaleArray.map((function(t) {
                        var i = {
                            position: t.position,
                            unit: t.unit,
                            year: t.year,
                            day: t.day ? t.day : 1,
                            hour: t.hour ? t.hour : 0,
                            month: t.month + 1
                        };
                        return "month" === t.unit ? e(e({}, i), {}, {
                            day: 1,
                            value: t.value + 1
                        }) : "day" === t.unit || "hour" === t.unit ? e(e({}, i), {}, {
                            value: t.value
                        }) : "minute" === t.unit ? e(e({}, i), {}, {
                            value: t.value,
                            minute: t.value
                        }) : "second" === t.unit ? e(e({}, i), {}, {
                            value: t.value,
                            minute: t.minute,
                            second: t.second
                        }) : t
                    }));
                    return y.filter((function(t) {
                        var e = 1,
                            i = Math.ceil(s.globals.gridWidth / 120),
                            r = t.value;
                        void 0 !== s.config.xaxis.tickAmount && (i = s.config.xaxis.tickAmount), y.length > i && (e = Math.floor(y.length / i));
                        var o = !1,
                            n = !1;
                        switch (a.tickInterval) {
                            case "years":
                                "year" === t.unit && (o = !0);
                                break;
                            case "half_year":
                                e = 7, "year" === t.unit && (o = !0);
                                break;
                            case "months":
                                e = 1, "year" === t.unit && (o = !0);
                                break;
                            case "months_fortnight":
                                e = 15, "year" !== t.unit && "month" !== t.unit || (o = !0), 30 === r && (n = !0);
                                break;
                            case "months_days":
                                e = 10, "month" === t.unit && (o = !0), 30 === r && (n = !0);
                                break;
                            case "week_days":
                                e = 8, "month" === t.unit && (o = !0);
                                break;
                            case "days":
                                e = 1, "month" === t.unit && (o = !0);
                                break;
                            case "hours":
                                "day" === t.unit && (o = !0);
                                break;
                            case "minutes_fives":
                                r % 5 != 0 && (n = !0);
                                break;
                            case "seconds_tens":
                                r % 10 != 0 && (n = !0);
                                break;
                            case "seconds_fives":
                                r % 5 != 0 && (n = !0)
                        }
                        if ("hours" === a.tickInterval || "minutes_fives" === a.tickInterval || "seconds_tens" === a.tickInterval || "seconds_fives" === a.tickInterval) {
                            if (!n) return !0
                        } else if ((r % e == 0 || o) && !n) return !0
                    }))
                }
            }, {
                key: "recalcDimensionsBasedOnFormat",
                value: function(t, e) {
                    var i = this.w,
                        a = this.formatDates(t),
                        s = this.removeOverlappingTS(a);
                    i.globals.timescaleLabels = s.slice(), new lt(this.ctx).plotCoords()
                }
            }, {
                key: "determineInterval",
                value: function(t) {
                    var e = 24 * t,
                        i = 60 * e;
                    switch (!0) {
                        case t / 365 > 5:
                            this.tickInterval = "years";
                            break;
                        case t > 800:
                            this.tickInterval = "half_year";
                            break;
                        case t > 180:
                            this.tickInterval = "months";
                            break;
                        case t > 90:
                            this.tickInterval = "months_fortnight";
                            break;
                        case t > 60:
                            this.tickInterval = "months_days";
                            break;
                        case t > 30:
                            this.tickInterval = "week_days";
                            break;
                        case t > 2:
                            this.tickInterval = "days";
                            break;
                        case e > 2.4:
                            this.tickInterval = "hours";
                            break;
                        case i > 15:
                            this.tickInterval = "minutes_fives";
                            break;
                        case i > 5:
                            this.tickInterval = "minutes";
                            break;
                        case i > 1:
                            this.tickInterval = "seconds_tens";
                            break;
                        case 60 * i > 20:
                            this.tickInterval = "seconds_fives";
                            break;
                        default:
                            this.tickInterval = "seconds"
                    }
                }
            }, {
                key: "generateYearScale",
                value: function(t) {
                    var e = t.firstVal,
                        i = t.currentMonth,
                        a = t.currentYear,
                        s = t.daysWidthOnXAxis,
                        r = t.numberOfYears,
                        o = e.minYear,
                        n = 0,
                        l = new R(this.ctx),
                        h = "year";
                    if (e.minDate > 1 || e.minMonth > 0) {
                        var c = l.determineRemainingDaysOfYear(e.minYear, e.minMonth, e.minDate);
                        n = (l.determineDaysOfYear(e.minYear) - c + 1) * s, o = e.minYear + 1, this.timeScaleArray.push({
                            position: n,
                            value: o,
                            unit: h,
                            year: o,
                            month: x.monthMod(i + 1)
                        })
                    } else 1 === e.minDate && 0 === e.minMonth && this.timeScaleArray.push({
                        position: n,
                        value: o,
                        unit: h,
                        year: a,
                        month: x.monthMod(i + 1)
                    });
                    for (var d = o, g = n, u = 0; u < r; u++) d++, g = l.determineDaysOfYear(d - 1) * s + g, this.timeScaleArray.push({
                        position: g,
                        value: d,
                        unit: h,
                        year: d,
                        month: 1
                    })
                }
            }, {
                key: "generateMonthScale",
                value: function(t) {
                    var e = t.firstVal,
                        i = t.currentMonthDate,
                        a = t.currentMonth,
                        s = t.currentYear,
                        r = t.daysWidthOnXAxis,
                        o = t.numberOfMonths,
                        n = a,
                        l = 0,
                        h = new R(this.ctx),
                        c = "month",
                        d = 0;
                    if (e.minDate > 1) {
                        l = (h.determineDaysOfMonths(a + 1, e.minYear) - i + 1) * r, n = x.monthMod(a + 1);
                        var g = s + d,
                            u = x.monthMod(n),
                            f = n;
                        0 === n && (c = "year", f = g, u = 1, g += d += 1), this.timeScaleArray.push({
                            position: l,
                            value: f,
                            unit: c,
                            year: g,
                            month: u
                        })
                    } else this.timeScaleArray.push({
                        position: l,
                        value: n,
                        unit: c,
                        year: s,
                        month: x.monthMod(a)
                    });
                    for (var p = n + 1, b = l, v = 0, m = 1; v < o; v++, m++) {
                        0 === (p = x.monthMod(p)) ? (c = "year", d += 1) : c = "month";
                        var y = this._getYear(s, p, d);
                        b = h.determineDaysOfMonths(p, y) * r + b;
                        var w = 0 === p ? y : p;
                        this.timeScaleArray.push({
                            position: b,
                            value: w,
                            unit: c,
                            year: y,
                            month: 0 === p ? 1 : p
                        }), p++
                    }
                }
            }, {
                key: "generateDayScale",
                value: function(t) {
                    var e = t.firstVal,
                        i = t.currentMonth,
                        a = t.currentYear,
                        s = t.hoursWidthOnXAxis,
                        r = t.numberOfDays,
                        o = new R(this.ctx),
                        n = "day",
                        l = e.minDate + 1,
                        h = l,
                        c = function(t, e, i) {
                            return t > o.determineDaysOfMonths(e + 1, i) ? (h = 1, n = "month", g = e += 1, e) : e
                        },
                        d = (24 - e.minHour) * s,
                        g = l,
                        u = c(h, i, a);
                    0 === e.minHour && 1 === e.minDate ? (d = 0, g = x.monthMod(e.minMonth), n = "month", h = e.minDate, r++) : 1 !== e.minDate && 0 === e.minHour && 0 === e.minMinute && (d = 0, l = e.minDate, g = l, u = c(h = l, i, a)), this.timeScaleArray.push({
                        position: d,
                        value: g,
                        unit: n,
                        year: this._getYear(a, u, 0),
                        month: x.monthMod(u),
                        day: h
                    });
                    for (var f = d, p = 0; p < r; p++) {
                        n = "day", u = c(h += 1, u, this._getYear(a, u, 0));
                        var b = this._getYear(a, u, 0);
                        f = 24 * s + f;
                        var v = 1 === h ? x.monthMod(u) : h;
                        this.timeScaleArray.push({
                            position: f,
                            value: v,
                            unit: n,
                            year: b,
                            month: x.monthMod(u),
                            day: v
                        })
                    }
                }
            }, {
                key: "generateHourScale",
                value: function(t) {
                    var e = t.firstVal,
                        i = t.currentDate,
                        a = t.currentMonth,
                        s = t.currentYear,
                        r = t.minutesWidthOnXAxis,
                        o = t.numberOfHours,
                        n = new R(this.ctx),
                        l = "hour",
                        h = function(t, e) {
                            return t > n.determineDaysOfMonths(e + 1, s) && (p = 1, e += 1), {
                                month: e,
                                date: p
                            }
                        },
                        c = function(t, e) {
                            return t > n.determineDaysOfMonths(e + 1, s) ? e += 1 : e
                        },
                        d = 60 - (e.minMinute + e.minSecond / 60),
                        g = d * r,
                        u = e.minHour + 1,
                        f = u + 1;
                    60 === d && (g = 0, f = (u = e.minHour) + 1);
                    var p = i,
                        b = c(p, a);
                    this.timeScaleArray.push({
                        position: g,
                        value: u,
                        unit: l,
                        day: p,
                        hour: f,
                        year: s,
                        month: x.monthMod(b)
                    });
                    for (var v = g, m = 0; m < o; m++) {
                        if (l = "hour", f >= 24) f = 0, l = "day", b = h(p += 1, b).month, b = c(p, b);
                        var y = this._getYear(s, b, 0);
                        v = 0 === f && 0 === m ? d * r : 60 * r + v;
                        var w = 0 === f ? p : f;
                        this.timeScaleArray.push({
                            position: v,
                            value: w,
                            unit: l,
                            hour: f,
                            day: p,
                            year: y,
                            month: x.monthMod(b)
                        }), f++
                    }
                }
            }, {
                key: "generateMinuteScale",
                value: function(t) {
                    for (var e = t.currentMillisecond, i = t.currentSecond, a = t.currentMinute, s = t.currentHour, r = t.currentDate, o = t.currentMonth, n = t.currentYear, l = t.minutesWidthOnXAxis, h = t.secondsWidthOnXAxis, c = t.numberOfMinutes, d = a + 1, g = r, u = o, f = n, p = s, b = (60 - i - e / 1e3) * h, v = 0; v < c; v++) d >= 60 && (d = 0, 24 === (p += 1) && (p = 0)), this.timeScaleArray.push({
                        position: b,
                        value: d,
                        unit: "minute",
                        hour: p,
                        minute: d,
                        day: g,
                        year: this._getYear(f, u, 0),
                        month: x.monthMod(u)
                    }), b += l, d++
                }
            }, {
                key: "generateSecondScale",
                value: function(t) {
                    for (var e = t.currentMillisecond, i = t.currentSecond, a = t.currentMinute, s = t.currentHour, r = t.currentDate, o = t.currentMonth, n = t.currentYear, l = t.secondsWidthOnXAxis, h = t.numberOfSeconds, c = i + 1, d = a, g = r, u = o, f = n, p = s, b = (1e3 - e) / 1e3 * l, v = 0; v < h; v++) c >= 60 && (c = 0, ++d >= 60 && (d = 0, 24 === ++p && (p = 0))), this.timeScaleArray.push({
                        position: b,
                        value: c,
                        unit: "second",
                        hour: p,
                        minute: d,
                        second: c,
                        day: g,
                        year: this._getYear(f, u, 0),
                        month: x.monthMod(u)
                    }), b += l, c++
                }
            }, {
                key: "createRawDateString",
                value: function(t, e) {
                    var i = t.year;
                    return 0 === t.month && (t.month = 1), i += "-" + ("0" + t.month.toString()).slice(-2), "day" === t.unit ? i += "day" === t.unit ? "-" + ("0" + e).slice(-2) : "-01" : i += "-" + ("0" + (t.day ? t.day : "1")).slice(-2), "hour" === t.unit ? i += "hour" === t.unit ? "T" + ("0" + e).slice(-2) : "T00" : i += "T" + ("0" + (t.hour ? t.hour : "0")).slice(-2), "minute" === t.unit ? i += ":" + ("0" + e).slice(-2) : i += ":" + (t.minute ? ("0" + t.minute).slice(-2) : "00"), "second" === t.unit ? i += ":" + ("0" + e).slice(-2) : i += ":00", this.utc && (i += ".000Z"), i
                }
            }, {
                key: "formatDates",
                value: function(t) {
                    var e = this,
                        i = this.w;
                    return t.map((function(t) {
                        var a = t.value.toString(),
                            s = new R(e.ctx),
                            r = e.createRawDateString(t, a),
                            o = s.getDate(s.parseDate(r));
                        if (e.utc || (o = s.getDate(s.parseDateWithTimezone(r))), void 0 === i.config.xaxis.labels.format) {
                            var n = "dd MMM",
                                l = i.config.xaxis.labels.datetimeFormatter;
                            "year" === t.unit && (n = l.year), "month" === t.unit && (n = l.month), "day" === t.unit && (n = l.day), "hour" === t.unit && (n = l.hour), "minute" === t.unit && (n = l.minute), "second" === t.unit && (n = l.second), a = s.formatDate(o, n)
                        } else a = s.formatDate(o, i.config.xaxis.labels.format);
                        return {
                            dateString: r,
                            position: t.position,
                            value: a,
                            unit: t.unit,
                            year: t.year,
                            month: t.month
                        }
                    }))
                }
            }, {
                key: "removeOverlappingTS",
                value: function(t) {
                    var e, i = this,
                        a = new m(this.ctx),
                        s = !1;
                    t.length > 0 && t[0].value && t.every((function(e) {
                        return e.value.length === t[0].value.length
                    })) && (s = !0, e = a.getTextRects(t[0].value).width);
                    var r = 0,
                        o = t.map((function(o, n) {
                            if (n > 0 && i.w.config.xaxis.labels.hideOverlappingLabels) {
                                var l = s ? e : a.getTextRects(t[r].value).width,
                                    h = t[r].position;
                                return o.position > h + l + 10 ? (r = n, o) : null
                            }
                            return o
                        }));
                    return o = o.filter((function(t) {
                        return null !== t
                    }))
                }
            }, {
                key: "_getYear",
                value: function(t, e, i) {
                    return t + Math.floor(e / 12) + i
                }
            }]), t
        }(),
        Ft = function() {
            function t(e, i) {
                a(this, t), this.ctx = i, this.w = i.w, this.el = e
            }
            return r(t, [{
                key: "setupElements",
                value: function() {
                    var t = this.w.globals,
                        e = this.w.config,
                        i = e.chart.type;
                    t.axisCharts = ["line", "area", "bar", "rangeBar", "candlestick", "boxPlot", "scatter", "bubble", "radar", "heatmap", "treemap"].indexOf(i) > -1, t.xyCharts = ["line", "area", "bar", "rangeBar", "candlestick", "boxPlot", "scatter", "bubble"].indexOf(i) > -1, t.isBarHorizontal = ("bar" === e.chart.type || "rangeBar" === e.chart.type || "boxPlot" === e.chart.type) && e.plotOptions.bar.horizontal, t.chartClass = ".apexcharts" + t.chartID, t.dom.baseEl = this.el, t.dom.elWrap = document.createElement("div"), m.setAttrs(t.dom.elWrap, {
                        id: t.chartClass.substring(1),
                        class: "apexcharts-canvas " + t.chartClass.substring(1)
                    }), this.el.appendChild(t.dom.elWrap), t.dom.Paper = new window.SVG.Doc(t.dom.elWrap), t.dom.Paper.attr({
                        class: "apexcharts-svg",
                        "xmlns:data": "ApexChartsNS",
                        transform: "translate(".concat(e.chart.offsetX, ", ").concat(e.chart.offsetY, ")")
                    }), t.dom.Paper.node.style.background = e.chart.background, this.setSVGDimensions(), t.dom.elGraphical = t.dom.Paper.group().attr({
                        class: "apexcharts-inner apexcharts-graphical"
                    }), t.dom.elAnnotations = t.dom.Paper.group().attr({
                        class: "apexcharts-annotations"
                    }), t.dom.elDefs = t.dom.Paper.defs(), t.dom.elLegendWrap = document.createElement("div"), t.dom.elLegendWrap.classList.add("apexcharts-legend"), t.dom.elWrap.appendChild(t.dom.elLegendWrap), t.dom.Paper.add(t.dom.elGraphical), t.dom.elGraphical.add(t.dom.elDefs)
                }
            }, {
                key: "plotChartType",
                value: function(t, e) {
                    var i = this.w,
                        a = i.config,
                        s = i.globals,
                        r = {
                            series: [],
                            i: []
                        },
                        o = {
                            series: [],
                            i: []
                        },
                        n = {
                            series: [],
                            i: []
                        },
                        l = {
                            series: [],
                            i: []
                        },
                        h = {
                            series: [],
                            i: []
                        },
                        c = {
                            series: [],
                            i: []
                        },
                        d = {
                            series: [],
                            i: []
                        };
                    s.series.map((function(e, g) {
                        var u = 0;
                        void 0 !== t[g].type ? ("column" === t[g].type || "bar" === t[g].type ? (s.series.length > 1 && a.plotOptions.bar.horizontal && console.warn("Horizontal bars are not supported in a mixed/combo chart. Please turn off `plotOptions.bar.horizontal`"), h.series.push(e), h.i.push(g), u++, i.globals.columnSeries = h.series) : "area" === t[g].type ? (o.series.push(e), o.i.push(g), u++) : "line" === t[g].type ? (r.series.push(e), r.i.push(g), u++) : "scatter" === t[g].type ? (n.series.push(e), n.i.push(g)) : "bubble" === t[g].type ? (l.series.push(e), l.i.push(g), u++) : "candlestick" === t[g].type ? (c.series.push(e), c.i.push(g), u++) : "boxPlot" === t[g].type ? (d.series.push(e), d.i.push(g), u++) : console.warn("You have specified an unrecognized chart type. Available types for this property are line/area/column/bar/scatter/bubble"), u > 1 && (s.comboCharts = !0)) : (r.series.push(e), r.i.push(g))
                    }));
                    var g = new Tt(this.ctx, e),
                        u = new wt(this.ctx, e);
                    this.ctx.pie = new Ct(this.ctx);
                    var f = new Pt(this.ctx);
                    this.ctx.rangeBar = new H(this.ctx, e);
                    var p = new Lt(this.ctx),
                        x = [];
                    if (s.comboCharts) {
                        if (o.series.length > 0 && x.push(g.draw(o.series, "area", o.i)), h.series.length > 0)
                            if (i.config.chart.stacked) {
                                var b = new yt(this.ctx, e);
                                x.push(b.draw(h.series, h.i))
                            } else this.ctx.bar = new F(this.ctx, e), x.push(this.ctx.bar.draw(h.series, h.i));
                        if (r.series.length > 0 && x.push(g.draw(r.series, "line", r.i)), c.series.length > 0 && x.push(u.draw(c.series, c.i)), d.series.length > 0 && x.push(u.draw(d.series, d.i)), n.series.length > 0) {
                            var v = new Tt(this.ctx, e, !0);
                            x.push(v.draw(n.series, "scatter", n.i))
                        }
                        if (l.series.length > 0) {
                            var m = new Tt(this.ctx, e, !0);
                            x.push(m.draw(l.series, "bubble", l.i))
                        }
                    } else switch (a.chart.type) {
                        case "line":
                            x = g.draw(s.series, "line");
                            break;
                        case "area":
                            x = g.draw(s.series, "area");
                            break;
                        case "bar":
                            if (a.chart.stacked) x = new yt(this.ctx, e).draw(s.series);
                            else this.ctx.bar = new F(this.ctx, e), x = this.ctx.bar.draw(s.series);
                            break;
                        case "candlestick":
                            x = new wt(this.ctx, e).draw(s.series);
                            break;
                        case "boxPlot":
                            x = new wt(this.ctx, e).draw(s.series);
                            break;
                        case "rangeBar":
                            x = this.ctx.rangeBar.draw(s.series);
                            break;
                        case "heatmap":
                            x = new At(this.ctx, e).draw(s.series);
                            break;
                        case "treemap":
                            x = new Xt(this.ctx, e).draw(s.series);
                            break;
                        case "pie":
                        case "donut":
                        case "polarArea":
                            x = this.ctx.pie.draw(s.series);
                            break;
                        case "radialBar":
                            x = f.draw(s.series);
                            break;
                        case "radar":
                            x = p.draw(s.series);
                            break;
                        default:
                            x = g.draw(s.series)
                    }
                    return x
                }
            }, {
                key: "setSVGDimensions",
                value: function() {
                    var t = this.w.globals,
                        e = this.w.config;
                    t.svgWidth = e.chart.width, t.svgHeight = e.chart.height;
                    var i = x.getDimensions(this.el),
                        a = e.chart.width.toString().split(/[0-9]+/g).pop();
                    "%" === a ? x.isNumber(i[0]) && (0 === i[0].width && (i = x.getDimensions(this.el.parentNode)), t.svgWidth = i[0] * parseInt(e.chart.width, 10) / 100) : "px" !== a && "" !== a || (t.svgWidth = parseInt(e.chart.width, 10));
                    var s = e.chart.height.toString().split(/[0-9]+/g).pop();
                    if ("auto" !== t.svgHeight && "" !== t.svgHeight)
                        if ("%" === s) {
                            var r = x.getDimensions(this.el.parentNode);
                            t.svgHeight = r[1] * parseInt(e.chart.height, 10) / 100
                        } else t.svgHeight = parseInt(e.chart.height, 10);
                    else t.axisCharts ? t.svgHeight = t.svgWidth / 1.61 : t.svgHeight = t.svgWidth / 1.2;
                    if (t.svgWidth < 0 && (t.svgWidth = 0), t.svgHeight < 0 && (t.svgHeight = 0), m.setAttrs(t.dom.Paper.node, {
                            width: t.svgWidth,
                            height: t.svgHeight
                        }), "%" !== s) {
                        var o = e.chart.sparkline.enabled ? 0 : t.axisCharts ? e.chart.parentHeightOffset : 0;
                        t.dom.Paper.node.parentNode.parentNode.style.minHeight = t.svgHeight + o + "px"
                    }
                    t.dom.elWrap.style.width = t.svgWidth + "px", t.dom.elWrap.style.height = t.svgHeight + "px"
                }
            }, {
                key: "shiftGraphPosition",
                value: function() {
                    var t = this.w.globals,
                        e = t.translateY,
                        i = {
                            transform: "translate(" + t.translateX + ", " + e + ")"
                        };
                    m.setAttrs(t.dom.elGraphical.node, i)
                }
            }, {
                key: "resizeNonAxisCharts",
                value: function() {
                    var t = this.w,
                        e = t.globals,
                        i = 0,
                        a = t.config.chart.sparkline.enabled ? 1 : 15;
                    a += t.config.grid.padding.bottom, "top" !== t.config.legend.position && "bottom" !== t.config.legend.position || !t.config.legend.show || t.config.legend.floating || (i = new ct(this.ctx).legendHelpers.getLegendBBox().clwh + 10);
                    var s = t.globals.dom.baseEl.querySelector(".apexcharts-radialbar, .apexcharts-pie"),
                        r = 2.05 * t.globals.radialSize;
                    if (s && !t.config.chart.sparkline.enabled && 0 !== t.config.plotOptions.radialBar.startAngle) {
                        var o = x.getBoundingClientRect(s);
                        r = o.bottom;
                        var n = o.bottom - o.top;
                        r = Math.max(2.05 * t.globals.radialSize, n)
                    }
                    var l = r + e.translateY + i + a;
                    e.dom.elLegendForeign && e.dom.elLegendForeign.setAttribute("height", l), t.config.chart.height && String(t.config.chart.height).indexOf("%") > 0 || (e.dom.elWrap.style.height = l + "px", m.setAttrs(e.dom.Paper.node, {
                        height: l
                    }), e.dom.Paper.node.parentNode.parentNode.style.minHeight = l + "px")
                }
            }, {
                key: "coreCalculations",
                value: function() {
                    new Z(this.ctx).init()
                }
            }, {
                key: "resetGlobals",
                value: function() {
                    var t = this,
                        e = function() {
                            return t.w.config.series.map((function(t) {
                                return []
                            }))
                        },
                        i = new O,
                        a = this.w.globals;
                    i.initGlobalVars(a), a.seriesXvalues = e(), a.seriesYvalues = e()
                }
            }, {
                key: "isMultipleY",
                value: function() {
                    if (this.w.config.yaxis.constructor === Array && this.w.config.yaxis.length > 1) return this.w.globals.isMultipleYAxis = !0, !0
                }
            }, {
                key: "xySettings",
                value: function() {
                    var t = null,
                        e = this.w;
                    if (e.globals.axisCharts) {
                        if ("back" === e.config.xaxis.crosshairs.position) new tt(this.ctx).drawXCrosshairs();
                        if ("back" === e.config.yaxis[0].crosshairs.position) new tt(this.ctx).drawYCrosshairs();
                        if ("datetime" === e.config.xaxis.type && void 0 === e.config.xaxis.labels.formatter) {
                            this.ctx.timeScale = new Yt(this.ctx);
                            var i = [];
                            isFinite(e.globals.minX) && isFinite(e.globals.maxX) && !e.globals.isBarHorizontal ? i = this.ctx.timeScale.calculateTimeScaleTicks(e.globals.minX, e.globals.maxX) : e.globals.isBarHorizontal && (i = this.ctx.timeScale.calculateTimeScaleTicks(e.globals.minY, e.globals.maxY)), this.ctx.timeScale.recalcDimensionsBasedOnFormat(i)
                        }
                        t = new y(this.ctx).getCalculatedRatios()
                    }
                    return t
                }
            }, {
                key: "updateSourceChart",
                value: function(t) {
                    this.ctx.w.globals.selection = void 0, this.ctx.updateHelpers._updateOptions({
                        chart: {
                            selection: {
                                xaxis: {
                                    min: t.w.globals.minX,
                                    max: t.w.globals.maxX
                                }
                            }
                        }
                    }, !1, !1)
                }
            }, {
                key: "setupBrushHandler",
                value: function() {
                    var t = this,
                        i = this.w;
                    if (i.config.chart.brush.enabled && "function" != typeof i.config.chart.events.selection) {
                        var a = i.config.chart.brush.targets || [i.config.chart.brush.target];
                        a.forEach((function(e) {
                            var i = ApexCharts.getChartByID(e);
                            i.w.globals.brushSource = t.ctx, "function" != typeof i.w.config.chart.events.zoomed && (i.w.config.chart.events.zoomed = function() {
                                t.updateSourceChart(i)
                            }), "function" != typeof i.w.config.chart.events.scrolled && (i.w.config.chart.events.scrolled = function() {
                                t.updateSourceChart(i)
                            })
                        })), i.config.chart.events.selection = function(t, s) {
                            a.forEach((function(t) {
                                var a = ApexCharts.getChartByID(t),
                                    r = x.clone(i.config.yaxis);
                                if (i.config.chart.brush.autoScaleYaxis && 1 === a.w.globals.series.length) {
                                    var o = new q(a);
                                    r = o.autoScaleY(a, r, s)
                                }
                                var n = a.w.config.yaxis.reduce((function(t, i, s) {
                                    return [].concat(u(t), [e(e({}, a.w.config.yaxis[s]), {}, {
                                        min: r[0].min,
                                        max: r[0].max
                                    })])
                                }), []);
                                a.ctx.updateHelpers._updateOptions({
                                    xaxis: {
                                        min: s.xaxis.min,
                                        max: s.xaxis.max
                                    },
                                    yaxis: n
                                }, !1, !1, !1, !1)
                            }))
                        }
                    }
                }
            }]), t
        }(),
        Rt = function() {
            function t(e) {
                a(this, t), this.ctx = e, this.w = e.w
            }
            return r(t, [{
                key: "_updateOptions",
                value: function(t) {
                    var e = this,
                        a = arguments.length > 1 && void 0 !== arguments[1] && arguments[1],
                        s = !(arguments.length > 2 && void 0 !== arguments[2]) || arguments[2],
                        r = !(arguments.length > 3 && void 0 !== arguments[3]) || arguments[3],
                        o = arguments.length > 4 && void 0 !== arguments[4] && arguments[4];
                    return new Promise((function(n) {
                        var l = [e.ctx];
                        r && (l = e.ctx.getSyncedCharts()), e.ctx.w.globals.isExecCalled && (l = [e.ctx], e.ctx.w.globals.isExecCalled = !1), l.forEach((function(r, h) {
                            var c = r.w;
                            if (c.globals.shouldAnimate = s, a || (c.globals.resized = !0, c.globals.dataChanged = !0, s && r.series.getPreviousPaths()), t && "object" === i(t) && (r.config = new N(t), t = y.extendArrayProps(r.config, t, c), r.w.globals.chartID !== e.ctx.w.globals.chartID && delete t.series, c.config = x.extend(c.config, t), o && (c.globals.lastXAxis = t.xaxis ? x.clone(t.xaxis) : [], c.globals.lastYAxis = t.yaxis ? x.clone(t.yaxis) : [], c.globals.initialConfig = x.extend({}, c.config), c.globals.initialSeries = x.clone(c.config.series), t.series))) {
                                for (var d = 0; d < c.globals.collapsedSeriesIndices.length; d++) {
                                    var g = c.config.series[c.globals.collapsedSeriesIndices[d]];
                                    c.globals.collapsedSeries[d].data = c.globals.axisCharts ? g.data.slice() : g
                                }
                                for (var u = 0; u < c.globals.ancillaryCollapsedSeriesIndices.length; u++) {
                                    var f = c.config.series[c.globals.ancillaryCollapsedSeriesIndices[u]];
                                    c.globals.ancillaryCollapsedSeries[u].data = c.globals.axisCharts ? f.data.slice() : f
                                }
                                r.series.emptyCollapsedSeries(c.config.series)
                            }
                            return r.update(t).then((function() {
                                h === l.length - 1 && n(r)
                            }))
                        }))
                    }))
                }
            }, {
                key: "_updateSeries",
                value: function(t, e) {
                    var i = this,
                        a = arguments.length > 2 && void 0 !== arguments[2] && arguments[2];
                    return new Promise((function(s) {
                        var r, o = i.w;
                        return o.globals.shouldAnimate = e, o.globals.dataChanged = !0, e && i.ctx.series.getPreviousPaths(), o.globals.axisCharts ? (0 === (r = t.map((function(t, e) {
                            return i._extendSeries(t, e)
                        }))).length && (r = [{
                            data: []
                        }]), o.config.series = r) : o.config.series = t.slice(), a && (o.globals.initialSeries = x.clone(o.config.series)), i.ctx.update().then((function() {
                            s(i.ctx)
                        }))
                    }))
                }
            }, {
                key: "_extendSeries",
                value: function(t, i) {
                    var a = this.w,
                        s = a.config.series[i];
                    return e(e({}, a.config.series[i]), {}, {
                        name: t.name ? t.name : s && s.name,
                        color: t.color ? t.color : s && s.color,
                        type: t.type ? t.type : s && s.type,
                        data: t.data ? t.data : s && s.data
                    })
                }
            }, {
                key: "toggleDataPointSelection",
                value: function(t, e) {
                    var i = this.w,
                        a = null,
                        s = ".apexcharts-series[data\\:realIndex='".concat(t, "']");
                    return i.globals.axisCharts ? a = i.globals.dom.Paper.select("".concat(s, " path[j='").concat(e, "'], ").concat(s, " circle[j='").concat(e, "'], ").concat(s, " rect[j='").concat(e, "']")).members[0] : void 0 === e && (a = i.globals.dom.Paper.select("".concat(s, " path[j='").concat(t, "']")).members[0], "pie" !== i.config.chart.type && "polarArea" !== i.config.chart.type && "donut" !== i.config.chart.type || this.ctx.pie.pieClicked(t)), a ? (new m(this.ctx).pathMouseDown(a, null), a.node ? a.node : null) : (console.warn("toggleDataPointSelection: Element not found"), null)
                }
            }, {
                key: "forceXAxisUpdate",
                value: function(t) {
                    var e = this.w;
                    if (["min", "max"].forEach((function(i) {
                            void 0 !== t.xaxis[i] && (e.config.xaxis[i] = t.xaxis[i], e.globals.lastXAxis[i] = t.xaxis[i])
                        })), t.xaxis.categories && t.xaxis.categories.length && (e.config.xaxis.categories = t.xaxis.categories), e.config.xaxis.convertedCatToNumeric) {
                        var i = new D(t);
                        t = i.convertCatToNumericXaxis(t, this.ctx)
                    }
                    return t
                }
            }, {
                key: "forceYAxisUpdate",
                value: function(t) {
                    return t.chart && t.chart.stacked && "100%" === t.chart.stackType && (Array.isArray(t.yaxis) ? t.yaxis.forEach((function(e, i) {
                        t.yaxis[i].min = 0, t.yaxis[i].max = 100
                    })) : (t.yaxis.min = 0, t.yaxis.max = 100)), t
                }
            }, {
                key: "revertDefaultAxisMinMax",
                value: function(t) {
                    var e = this,
                        i = this.w,
                        a = i.globals.lastXAxis,
                        s = i.globals.lastYAxis;
                    t && t.xaxis && (a = t.xaxis), t && t.yaxis && (s = t.yaxis), i.config.xaxis.min = a.min, i.config.xaxis.max = a.max;
                    var r = function(t) {
                        void 0 !== s[t] && (i.config.yaxis[t].min = s[t].min, i.config.yaxis[t].max = s[t].max)
                    };
                    i.config.yaxis.map((function(t, a) {
                        i.globals.zoomed || void 0 !== s[a] ? r(a) : void 0 !== e.ctx.opts.yaxis[a] && (t.min = e.ctx.opts.yaxis[a].min, t.max = e.ctx.opts.yaxis[a].max)
                    }))
                }
            }]), t
        }();
    It = "undefined" != typeof window ? window : void 0, zt = function(t, e) {
            var a = (void 0 !== this ? this : t).SVG = function(t) {
                if (a.supported) return t = new a.Doc(t), a.parser.draw || a.prepare(), t
            };
            if (a.ns = "http://www.w3.org/2000/svg", a.xmlns = "http://www.w3.org/2000/xmlns/", a.xlink = "http://www.w3.org/1999/xlink", a.svgjs = "http://svgjs.dev", a.supported = !0, !a.supported) return !1;
            a.did = 1e3, a.eid = function(t) {
                return "Svgjs" + d(t) + a.did++
            }, a.create = function(t) {
                var i = e.createElementNS(this.ns, t);
                return i.setAttribute("id", this.eid(t)), i
            }, a.extend = function() {
                var t, e;
                e = (t = [].slice.call(arguments)).pop();
                for (var i = t.length - 1; i >= 0; i--)
                    if (t[i])
                        for (var s in e) t[i].prototype[s] = e[s];
                a.Set && a.Set.inherit && a.Set.inherit()
            }, a.invent = function(t) {
                var e = "function" == typeof t.create ? t.create : function() {
                    this.constructor.call(this, a.create(t.create))
                };
                return t.inherit && (e.prototype = new t.inherit), t.extend && a.extend(e, t.extend), t.construct && a.extend(t.parent || a.Container, t.construct), e
            }, a.adopt = function(e) {
                return e ? e.instance ? e.instance : ((i = "svg" == e.nodeName ? e.parentNode instanceof t.SVGElement ? new a.Nested : new a.Doc : "linearGradient" == e.nodeName ? new a.Gradient("linear") : "radialGradient" == e.nodeName ? new a.Gradient("radial") : a[d(e.nodeName)] ? new(a[d(e.nodeName)]) : new a.Element(e)).type = e.nodeName, i.node = e, e.instance = i, i instanceof a.Doc && i.namespace().defs(), i.setData(JSON.parse(e.getAttribute("svgjs:data")) || {}), i) : null;
                var i
            }, a.prepare = function() {
                var t = e.getElementsByTagName("body")[0],
                    i = (t ? new a.Doc(t) : a.adopt(e.documentElement).nested()).size(2, 0);
                a.parser = {
                    body: t || e.documentElement,
                    draw: i.style("opacity:0;position:absolute;left:-100%;top:-100%;overflow:hidden").node,
                    poly: i.polyline().node,
                    path: i.path().node,
                    native: a.create("svg")
                }
            }, a.parser = {
                native: a.create("svg")
            }, e.addEventListener("DOMContentLoaded", (function() {
                a.parser.draw || a.prepare()
            }), !1), a.regex = {
                numberAndUnit: /^([+-]?(\d+(\.\d*)?|\.\d+)(e[+-]?\d+)?)([a-z%]*)$/i,
                hex: /^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i,
                rgb: /rgb\((\d+),(\d+),(\d+)\)/,
                reference: /#([a-z0-9\-_]+)/i,
                transforms: /\)\s*,?\s*/,
                whitespace: /\s/g,
                isHex: /^#[a-f0-9]{3,6}$/i,
                isRgb: /^rgb\(/,
                isCss: /[^:]+:[^;]+;?/,
                isBlank: /^(\s+)?$/,
                isNumber: /^[+-]?(\d+(\.\d*)?|\.\d+)(e[+-]?\d+)?$/i,
                isPercent: /^-?[\d\.]+%$/,
                isImage: /\.(jpg|jpeg|png|gif|svg)(\?[^=]+.*)?/i,
                delimiter: /[\s,]+/,
                hyphen: /([^e])\-/gi,
                pathLetters: /[MLHVCSQTAZ]/gi,
                isPathLetter: /[MLHVCSQTAZ]/i,
                numbersWithDots: /((\d?\.\d+(?:e[+-]?\d+)?)((?:\.\d+(?:e[+-]?\d+)?)+))+/gi,
                dots: /\./g
            }, a.utils = {
                map: function(t, e) {
                    for (var i = t.length, a = [], s = 0; s < i; s++) a.push(e(t[s]));
                    return a
                },
                filter: function(t, e) {
                    for (var i = t.length, a = [], s = 0; s < i; s++) e(t[s]) && a.push(t[s]);
                    return a
                },
                filterSVGElements: function(e) {
                    return this.filter(e, (function(e) {
                        return e instanceof t.SVGElement
                    }))
                }
            }, a.defaults = {
                attrs: {
                    "fill-opacity": 1,
                    "stroke-opacity": 1,
                    "stroke-width": 0,
                    "stroke-linejoin": "miter",
                    "stroke-linecap": "butt",
                    fill: "#000000",
                    stroke: "#000000",
                    opacity: 1,
                    x: 0,
                    y: 0,
                    cx: 0,
                    cy: 0,
                    width: 0,
                    height: 0,
                    r: 0,
                    rx: 0,
                    ry: 0,
                    offset: 0,
                    "stop-opacity": 1,
                    "stop-color": "#000000",
                    "font-size": 16,
                    "font-family": "Helvetica, Arial, sans-serif",
                    "text-anchor": "start"
                }
            }, a.Color = function(t) {
                var e, s;
                this.r = 0, this.g = 0, this.b = 0, t && ("string" == typeof t ? a.regex.isRgb.test(t) ? (e = a.regex.rgb.exec(t.replace(a.regex.whitespace, "")), this.r = parseInt(e[1]), this.g = parseInt(e[2]), this.b = parseInt(e[3])) : a.regex.isHex.test(t) && (e = a.regex.hex.exec(4 == (s = t).length ? ["#", s.substring(1, 2), s.substring(1, 2), s.substring(2, 3), s.substring(2, 3), s.substring(3, 4), s.substring(3, 4)].join("") : s), this.r = parseInt(e[1], 16), this.g = parseInt(e[2], 16), this.b = parseInt(e[3], 16)) : "object" === i(t) && (this.r = t.r, this.g = t.g, this.b = t.b))
            }, a.extend(a.Color, {
                toString: function() {
                    return this.toHex()
                },
                toHex: function() {
                    return "#" + g(this.r) + g(this.g) + g(this.b)
                },
                toRgb: function() {
                    return "rgb(" + [this.r, this.g, this.b].join() + ")"
                },
                brightness: function() {
                    return this.r / 255 * .3 + this.g / 255 * .59 + this.b / 255 * .11
                },
                morph: function(t) {
                    return this.destination = new a.Color(t), this
                },
                at: function(t) {
                    return this.destination ? (t = t < 0 ? 0 : t > 1 ? 1 : t, new a.Color({
                        r: ~~(this.r + (this.destination.r - this.r) * t),
                        g: ~~(this.g + (this.destination.g - this.g) * t),
                        b: ~~(this.b + (this.destination.b - this.b) * t)
                    })) : this
                }
            }), a.Color.test = function(t) {
                return t += "", a.regex.isHex.test(t) || a.regex.isRgb.test(t)
            }, a.Color.isRgb = function(t) {
                return t && "number" == typeof t.r && "number" == typeof t.g && "number" == typeof t.b
            }, a.Color.isColor = function(t) {
                return a.Color.isRgb(t) || a.Color.test(t)
            }, a.Array = function(t, e) {
                0 == (t = (t || []).valueOf()).length && e && (t = e.valueOf()), this.value = this.parse(t)
            }, a.extend(a.Array, {
                toString: function() {
                    return this.value.join(" ")
                },
                valueOf: function() {
                    return this.value
                },
                parse: function(t) {
                    return t = t.valueOf(), Array.isArray(t) ? t : this.split(t)
                }
            }), a.PointArray = function(t, e) {
                a.Array.call(this, t, e || [
                    [0, 0]
                ])
            }, a.PointArray.prototype = new a.Array, a.PointArray.prototype.constructor = a.PointArray;
            for (var s = {
                    M: function(t, e, i) {
                        return e.x = i.x = t[0], e.y = i.y = t[1], ["M", e.x, e.y]
                    },
                    L: function(t, e) {
                        return e.x = t[0], e.y = t[1], ["L", t[0], t[1]]
                    },
                    H: function(t, e) {
                        return e.x = t[0], ["H", t[0]]
                    },
                    V: function(t, e) {
                        return e.y = t[0], ["V", t[0]]
                    },
                    C: function(t, e) {
                        return e.x = t[4], e.y = t[5], ["C", t[0], t[1], t[2], t[3], t[4], t[5]]
                    },
                    Q: function(t, e) {
                        return e.x = t[2], e.y = t[3], ["Q", t[0], t[1], t[2], t[3]]
                    },
                    Z: function(t, e, i) {
                        return e.x = i.x, e.y = i.y, ["Z"]
                    }
                }, r = "mlhvqtcsaz".split(""), o = 0, n = r.length; o < n; ++o) s[r[o]] = function(t) {
                return function(e, i, a) {
                    if ("H" == t) e[0] = e[0] + i.x;
                    else if ("V" == t) e[0] = e[0] + i.y;
                    else if ("A" == t) e[5] = e[5] + i.x, e[6] = e[6] + i.y;
                    else
                        for (var r = 0, o = e.length; r < o; ++r) e[r] = e[r] + (r % 2 ? i.y : i.x);
                    if (s && "function" == typeof s[t]) return s[t](e, i, a)
                }
            }(r[o].toUpperCase());
            a.PathArray = function(t, e) {
                a.Array.call(this, t, e || [
                    ["M", 0, 0]
                ])
            }, a.PathArray.prototype = new a.Array, a.PathArray.prototype.constructor = a.PathArray, a.extend(a.PathArray, {
                toString: function() {
                    return function(t) {
                        for (var e = 0, i = t.length, a = ""; e < i; e++) a += t[e][0], null != t[e][1] && (a += t[e][1], null != t[e][2] && (a += " ", a += t[e][2], null != t[e][3] && (a += " ", a += t[e][3], a += " ", a += t[e][4], null != t[e][5] && (a += " ", a += t[e][5], a += " ", a += t[e][6], null != t[e][7] && (a += " ", a += t[e][7])))));
                        return a + " "
                    }(this.value)
                },
                move: function(t, e) {
                    var i = this.bbox();
                    return i.x, i.y, this
                },
                at: function(t) {
                    if (!this.destination) return this;
                    for (var e = this.value, i = this.destination.value, s = [], r = new a.PathArray, o = 0, n = e.length; o < n; o++) {
                        s[o] = [e[o][0]];
                        for (var l = 1, h = e[o].length; l < h; l++) s[o][l] = e[o][l] + (i[o][l] - e[o][l]) * t;
                        "A" === s[o][0] && (s[o][4] = +(0 != s[o][4]), s[o][5] = +(0 != s[o][5]))
                    }
                    return r.value = s, r
                },
                parse: function(t) {
                    if (t instanceof a.PathArray) return t.valueOf();
                    var e, i = {
                        M: 2,
                        L: 2,
                        H: 1,
                        V: 1,
                        C: 6,
                        S: 4,
                        Q: 4,
                        T: 2,
                        A: 7,
                        Z: 0
                    };
                    t = "string" == typeof t ? t.replace(a.regex.numbersWithDots, h).replace(a.regex.pathLetters, " $& ").replace(a.regex.hyphen, "$1 -").trim().split(a.regex.delimiter) : t.reduce((function(t, e) {
                        return [].concat.call(t, e)
                    }), []);
                    var r = [],
                        o = new a.Point,
                        n = new a.Point,
                        l = 0,
                        c = t.length;
                    do {
                        a.regex.isPathLetter.test(t[l]) ? (e = t[l], ++l) : "M" == e ? e = "L" : "m" == e && (e = "l"), r.push(s[e].call(null, t.slice(l, l += i[e.toUpperCase()]).map(parseFloat), o, n))
                    } while (c > l);
                    return r
                },
                bbox: function() {
                    return a.parser.draw || a.prepare(), a.parser.path.setAttribute("d", this.toString()), a.parser.path.getBBox()
                }
            }), a.Number = a.invent({
                create: function(t, e) {
                    this.value = 0, this.unit = e || "", "number" == typeof t ? this.value = isNaN(t) ? 0 : isFinite(t) ? t : t < 0 ? -34e37 : 34e37 : "string" == typeof t ? (e = t.match(a.regex.numberAndUnit)) && (this.value = parseFloat(e[1]), "%" == e[5] ? this.value /= 100 : "s" == e[5] && (this.value *= 1e3), this.unit = e[5]) : t instanceof a.Number && (this.value = t.valueOf(), this.unit = t.unit)
                },
                extend: {
                    toString: function() {
                        return ("%" == this.unit ? ~~(1e8 * this.value) / 1e6 : "s" == this.unit ? this.value / 1e3 : this.value) + this.unit
                    },
                    toJSON: function() {
                        return this.toString()
                    },
                    valueOf: function() {
                        return this.value
                    },
                    plus: function(t) {
                        return t = new a.Number(t), new a.Number(this + t, this.unit || t.unit)
                    },
                    minus: function(t) {
                        return t = new a.Number(t), new a.Number(this - t, this.unit || t.unit)
                    },
                    times: function(t) {
                        return t = new a.Number(t), new a.Number(this * t, this.unit || t.unit)
                    },
                    divide: function(t) {
                        return t = new a.Number(t), new a.Number(this / t, this.unit || t.unit)
                    },
                    to: function(t) {
                        var e = new a.Number(this);
                        return "string" == typeof t && (e.unit = t), e
                    },
                    morph: function(t) {
                        return this.destination = new a.Number(t), t.relative && (this.destination.value += this.value), this
                    },
                    at: function(t) {
                        return this.destination ? new a.Number(this.destination).minus(this).times(t).plus(this) : this
                    }
                }
            }), a.Element = a.invent({
                create: function(t) {
                    this._stroke = a.defaults.attrs.stroke, this._event = null, this.dom = {}, (this.node = t) && (this.type = t.nodeName, this.node.instance = this, this._stroke = t.getAttribute("stroke") || this._stroke)
                },
                extend: {
                    x: function(t) {
                        return this.attr("x", t)
                    },
                    y: function(t) {
                        return this.attr("y", t)
                    },
                    cx: function(t) {
                        return null == t ? this.x() + this.width() / 2 : this.x(t - this.width() / 2)
                    },
                    cy: function(t) {
                        return null == t ? this.y() + this.height() / 2 : this.y(t - this.height() / 2)
                    },
                    move: function(t, e) {
                        return this.x(t).y(e)
                    },
                    center: function(t, e) {
                        return this.cx(t).cy(e)
                    },
                    width: function(t) {
                        return this.attr("width", t)
                    },
                    height: function(t) {
                        return this.attr("height", t)
                    },
                    size: function(t, e) {
                        var i = u(this, t, e);
                        return this.width(new a.Number(i.width)).height(new a.Number(i.height))
                    },
                    clone: function(t) {
                        this.writeDataToDom();
                        var e = x(this.node.cloneNode(!0));
                        return t ? t.add(e) : this.after(e), e
                    },
                    remove: function() {
                        return this.parent() && this.parent().removeElement(this), this
                    },
                    replace: function(t) {
                        return this.after(t).remove(), t
                    },
                    addTo: function(t) {
                        return t.put(this)
                    },
                    putIn: function(t) {
                        return t.add(this)
                    },
                    id: function(t) {
                        return this.attr("id", t)
                    },
                    show: function() {
                        return this.style("display", "")
                    },
                    hide: function() {
                        return this.style("display", "none")
                    },
                    visible: function() {
                        return "none" != this.style("display")
                    },
                    toString: function() {
                        return this.attr("id")
                    },
                    classes: function() {
                        var t = this.attr("class");
                        return null == t ? [] : t.trim().split(a.regex.delimiter)
                    },
                    hasClass: function(t) {
                        return -1 != this.classes().indexOf(t)
                    },
                    addClass: function(t) {
                        if (!this.hasClass(t)) {
                            var e = this.classes();
                            e.push(t), this.attr("class", e.join(" "))
                        }
                        return this
                    },
                    removeClass: function(t) {
                        return this.hasClass(t) && this.attr("class", this.classes().filter((function(e) {
                            return e != t
                        })).join(" ")), this
                    },
                    toggleClass: function(t) {
                        return this.hasClass(t) ? this.removeClass(t) : this.addClass(t)
                    },
                    reference: function(t) {
                        return a.get(this.attr(t))
                    },
                    parent: function(e) {
                        var i = this;
                        if (!i.node.parentNode) return null;
                        if (i = a.adopt(i.node.parentNode), !e) return i;
                        for (; i && i.node instanceof t.SVGElement;) {
                            if ("string" == typeof e ? i.matches(e) : i instanceof e) return i;
                            if (!i.node.parentNode || "#document" == i.node.parentNode.nodeName) return null;
                            i = a.adopt(i.node.parentNode)
                        }
                    },
                    doc: function() {
                        return this instanceof a.Doc ? this : this.parent(a.Doc)
                    },
                    parents: function(t) {
                        var e = [],
                            i = this;
                        do {
                            if (!(i = i.parent(t)) || !i.node) break;
                            e.push(i)
                        } while (i.parent);
                        return e
                    },
                    matches: function(t) {
                        return function(t, e) {
                            return (t.matches || t.matchesSelector || t.msMatchesSelector || t.mozMatchesSelector || t.webkitMatchesSelector || t.oMatchesSelector).call(t, e)
                        }(this.node, t)
                    },
                    native: function() {
                        return this.node
                    },
                    svg: function(t) {
                        var i = e.createElement("svg");
                        if (!(t && this instanceof a.Parent)) return i.appendChild(t = e.createElement("svg")), this.writeDataToDom(), t.appendChild(this.node.cloneNode(!0)), i.innerHTML.replace(/^<svg>/, "").replace(/<\/svg>$/, "");
                        i.innerHTML = "<svg>" + t.replace(/\n/, "").replace(/<([\w:-]+)([^<]+?)\/>/g, "<$1$2></$1>") + "</svg>";
                        for (var s = 0, r = i.firstChild.childNodes.length; s < r; s++) this.node.appendChild(i.firstChild.firstChild);
                        return this
                    },
                    writeDataToDom: function() {
                        return (this.each || this.lines) && (this.each ? this : this.lines()).each((function() {
                            this.writeDataToDom()
                        })), this.node.removeAttribute("svgjs:data"), Object.keys(this.dom).length && this.node.setAttribute("svgjs:data", JSON.stringify(this.dom)), this
                    },
                    setData: function(t) {
                        return this.dom = t, this
                    },
                    is: function(t) {
                        return function(t, e) {
                            return t instanceof e
                        }(this, t)
                    }
                }
            }), a.easing = {
                "-": function(t) {
                    return t
                },
                "<>": function(t) {
                    return -Math.cos(t * Math.PI) / 2 + .5
                },
                ">": function(t) {
                    return Math.sin(t * Math.PI / 2)
                },
                "<": function(t) {
                    return 1 - Math.cos(t * Math.PI / 2)
                }
            }, a.morph = function(t) {
                return function(e, i) {
                    return new a.MorphObj(e, i).at(t)
                }
            }, a.Situation = a.invent({
                create: function(t) {
                    this.init = !1, this.reversed = !1, this.reversing = !1, this.duration = new a.Number(t.duration).valueOf(), this.delay = new a.Number(t.delay).valueOf(), this.start = +new Date + this.delay, this.finish = this.start + this.duration, this.ease = t.ease, this.loop = 0, this.loops = !1, this.animations = {}, this.attrs = {}, this.styles = {}, this.transforms = [], this.once = {}
                }
            }), a.FX = a.invent({
                create: function(t) {
                    this._target = t, this.situations = [], this.active = !1, this.situation = null, this.paused = !1, this.lastPos = 0, this.pos = 0, this.absPos = 0, this._speed = 1
                },
                extend: {
                    animate: function(t, e, s) {
                        "object" === i(t) && (e = t.ease, s = t.delay, t = t.duration);
                        var r = new a.Situation({
                            duration: t || 1e3,
                            delay: s || 0,
                            ease: a.easing[e || "-"] || e
                        });
                        return this.queue(r), this
                    },
                    target: function(t) {
                        return t && t instanceof a.Element ? (this._target = t, this) : this._target
                    },
                    timeToAbsPos: function(t) {
                        return (t - this.situation.start) / (this.situation.duration / this._speed)
                    },
                    absPosToTime: function(t) {
                        return this.situation.duration / this._speed * t + this.situation.start
                    },
                    startAnimFrame: function() {
                        this.stopAnimFrame(), this.animationFrame = t.requestAnimationFrame(function() {
                            this.step()
                        }.bind(this))
                    },
                    stopAnimFrame: function() {
                        t.cancelAnimationFrame(this.animationFrame)
                    },
                    start: function() {
                        return !this.active && this.situation && (this.active = !0, this.startCurrent()), this
                    },
                    startCurrent: function() {
                        return this.situation.start = +new Date + this.situation.delay / this._speed, this.situation.finish = this.situation.start + this.situation.duration / this._speed, this.initAnimations().step()
                    },
                    queue: function(t) {
                        return ("function" == typeof t || t instanceof a.Situation) && this.situations.push(t), this.situation || (this.situation = this.situations.shift()), this
                    },
                    dequeue: function() {
                        return this.stop(), this.situation = this.situations.shift(), this.situation && (this.situation instanceof a.Situation ? this.start() : this.situation.call(this)), this
                    },
                    initAnimations: function() {
                        var t, e = this.situation;
                        if (e.init) return this;
                        for (var i in e.animations) {
                            t = this.target()[i](), Array.isArray(t) || (t = [t]), Array.isArray(e.animations[i]) || (e.animations[i] = [e.animations[i]]);
                            for (var s = t.length; s--;) e.animations[i][s] instanceof a.Number && (t[s] = new a.Number(t[s])), e.animations[i][s] = t[s].morph(e.animations[i][s])
                        }
                        for (var i in e.attrs) e.attrs[i] = new a.MorphObj(this.target().attr(i), e.attrs[i]);
                        for (var i in e.styles) e.styles[i] = new a.MorphObj(this.target().style(i), e.styles[i]);
                        return e.initialTransformation = this.target().matrixify(), e.init = !0, this
                    },
                    clearQueue: function() {
                        return this.situations = [], this
                    },
                    clearCurrent: function() {
                        return this.situation = null, this
                    },
                    stop: function(t, e) {
                        var i = this.active;
                        return this.active = !1, e && this.clearQueue(), t && this.situation && (!i && this.startCurrent(), this.atEnd()), this.stopAnimFrame(), this.clearCurrent()
                    },
                    after: function(t) {
                        var e = this.last();
                        return this.target().on("finished.fx", (function i(a) {
                            a.detail.situation == e && (t.call(this, e), this.off("finished.fx", i))
                        })), this._callStart()
                    },
                    during: function(t) {
                        var e = this.last(),
                            i = function(i) {
                                i.detail.situation == e && t.call(this, i.detail.pos, a.morph(i.detail.pos), i.detail.eased, e)
                            };
                        return this.target().off("during.fx", i).on("during.fx", i), this.after((function() {
                            this.off("during.fx", i)
                        })), this._callStart()
                    },
                    afterAll: function(t) {
                        var e = function e(i) {
                            t.call(this), this.off("allfinished.fx", e)
                        };
                        return this.target().off("allfinished.fx", e).on("allfinished.fx", e), this._callStart()
                    },
                    last: function() {
                        return this.situations.length ? this.situations[this.situations.length - 1] : this.situation
                    },
                    add: function(t, e, i) {
                        return this.last()[i || "animations"][t] = e, this._callStart()
                    },
                    step: function(t) {
                        var e, i, a;
                        t || (this.absPos = this.timeToAbsPos(+new Date)), !1 !== this.situation.loops ? (e = Math.max(this.absPos, 0), i = Math.floor(e), !0 === this.situation.loops || i < this.situation.loops ? (this.pos = e - i, a = this.situation.loop, this.situation.loop = i) : (this.absPos = this.situation.loops, this.pos = 1, a = this.situation.loop - 1, this.situation.loop = this.situation.loops), this.situation.reversing && (this.situation.reversed = this.situation.reversed != Boolean((this.situation.loop - a) % 2))) : (this.absPos = Math.min(this.absPos, 1), this.pos = this.absPos), this.pos < 0 && (this.pos = 0), this.situation.reversed && (this.pos = 1 - this.pos);
                        var s = this.situation.ease(this.pos);
                        for (var r in this.situation.once) r > this.lastPos && r <= s && (this.situation.once[r].call(this.target(), this.pos, s), delete this.situation.once[r]);
                        return this.active && this.target().fire("during", {
                            pos: this.pos,
                            eased: s,
                            fx: this,
                            situation: this.situation
                        }), this.situation ? (this.eachAt(), 1 == this.pos && !this.situation.reversed || this.situation.reversed && 0 == this.pos ? (this.stopAnimFrame(), this.target().fire("finished", {
                            fx: this,
                            situation: this.situation
                        }), this.situations.length || (this.target().fire("allfinished"), this.situations.length || (this.target().off(".fx"), this.active = !1)), this.active ? this.dequeue() : this.clearCurrent()) : !this.paused && this.active && this.startAnimFrame(), this.lastPos = s, this) : this
                    },
                    eachAt: function() {
                        var t, e = this,
                            i = this.target(),
                            s = this.situation;
                        for (var r in s.animations) t = [].concat(s.animations[r]).map((function(t) {
                            return "string" != typeof t && t.at ? t.at(s.ease(e.pos), e.pos) : t
                        })), i[r].apply(i, t);
                        for (var r in s.attrs) t = [r].concat(s.attrs[r]).map((function(t) {
                            return "string" != typeof t && t.at ? t.at(s.ease(e.pos), e.pos) : t
                        })), i.attr.apply(i, t);
                        for (var r in s.styles) t = [r].concat(s.styles[r]).map((function(t) {
                            return "string" != typeof t && t.at ? t.at(s.ease(e.pos), e.pos) : t
                        })), i.style.apply(i, t);
                        if (s.transforms.length) {
                            t = s.initialTransformation, r = 0;
                            for (var o = s.transforms.length; r < o; r++) {
                                var n = s.transforms[r];
                                n instanceof a.Matrix ? t = n.relative ? t.multiply((new a.Matrix).morph(n).at(s.ease(this.pos))) : t.morph(n).at(s.ease(this.pos)) : (n.relative || n.undo(t.extract()), t = t.multiply(n.at(s.ease(this.pos))))
                            }
                            i.matrix(t)
                        }
                        return this
                    },
                    once: function(t, e, i) {
                        var a = this.last();
                        return i || (t = a.ease(t)), a.once[t] = e, this
                    },
                    _callStart: function() {
                        return setTimeout(function() {
                            this.start()
                        }.bind(this), 0), this
                    }
                },
                parent: a.Element,
                construct: {
                    animate: function(t, e, i) {
                        return (this.fx || (this.fx = new a.FX(this))).animate(t, e, i)
                    },
                    delay: function(t) {
                        return (this.fx || (this.fx = new a.FX(this))).delay(t)
                    },
                    stop: function(t, e) {
                        return this.fx && this.fx.stop(t, e), this
                    },
                    finish: function() {
                        return this.fx && this.fx.finish(), this
                    }
                }
            }), a.MorphObj = a.invent({
                create: function(t, e) {
                    return a.Color.isColor(e) ? new a.Color(t).morph(e) : a.regex.delimiter.test(t) ? a.regex.pathLetters.test(t) ? new a.PathArray(t).morph(e) : new a.Array(t).morph(e) : a.regex.numberAndUnit.test(e) ? new a.Number(t).morph(e) : (this.value = t, void(this.destination = e))
                },
                extend: {
                    at: function(t, e) {
                        return e < 1 ? this.value : this.destination
                    },
                    valueOf: function() {
                        return this.value
                    }
                }
            }), a.extend(a.FX, {
                attr: function(t, e, a) {
                    if ("object" === i(t))
                        for (var s in t) this.attr(s, t[s]);
                    else this.add(t, e, "attrs");
                    return this
                },
                plot: function(t, e, i, a) {
                    return 4 == arguments.length ? this.plot([t, e, i, a]) : this.add("plot", new(this.target().morphArray)(t))
                }
            }), a.Box = a.invent({
                create: function(t, e, s, r) {
                    if (!("object" !== i(t) || t instanceof a.Element)) return a.Box.call(this, null != t.left ? t.left : t.x, null != t.top ? t.top : t.y, t.width, t.height);
                    4 == arguments.length && (this.x = t, this.y = e, this.width = s, this.height = r), b(this)
                }
            }), a.BBox = a.invent({
                create: function(t) {
                    if (a.Box.apply(this, [].slice.call(arguments)), t instanceof a.Element) {
                        var i;
                        try {
                            if (!e.documentElement.contains) {
                                for (var s = t.node; s.parentNode;) s = s.parentNode;
                                if (s != e) throw new Error("Element not in the dom")
                            }
                            i = t.node.getBBox()
                        } catch (e) {
                            if (t instanceof a.Shape) {
                                a.parser.draw || a.prepare();
                                var r = t.clone(a.parser.draw.instance).show();
                                r && r.node && "function" == typeof r.node.getBBox && (i = r.node.getBBox()), r && "function" == typeof r.remove && r.remove()
                            } else i = {
                                x: t.node.clientLeft,
                                y: t.node.clientTop,
                                width: t.node.clientWidth,
                                height: t.node.clientHeight
                            }
                        }
                        a.Box.call(this, i)
                    }
                },
                inherit: a.Box,
                parent: a.Element,
                construct: {
                    bbox: function() {
                        return new a.BBox(this)
                    }
                }
            }), a.BBox.prototype.constructor = a.BBox, a.Matrix = a.invent({
                create: function(t) {
                    var e = p([1, 0, 0, 1, 0, 0]);
                    t = null === t ? e : t instanceof a.Element ? t.matrixify() : "string" == typeof t ? p(t.split(a.regex.delimiter).map(parseFloat)) : 6 == arguments.length ? p([].slice.call(arguments)) : Array.isArray(t) ? p(t) : t && "object" === i(t) ? t : e;
                    for (var s = m.length - 1; s >= 0; --s) this[m[s]] = null != t[m[s]] ? t[m[s]] : e[m[s]]
                },
                extend: {
                    extract: function() {
                        var t = f(this, 0, 1);
                        f(this, 1, 0);
                        var e = 180 / Math.PI * Math.atan2(t.y, t.x) - 90;
                        return {
                            x: this.e,
                            y: this.f,
                            transformedX: (this.e * Math.cos(e * Math.PI / 180) + this.f * Math.sin(e * Math.PI / 180)) / Math.sqrt(this.a * this.a + this.b * this.b),
                            transformedY: (this.f * Math.cos(e * Math.PI / 180) + this.e * Math.sin(-e * Math.PI / 180)) / Math.sqrt(this.c * this.c + this.d * this.d),
                            rotation: e,
                            a: this.a,
                            b: this.b,
                            c: this.c,
                            d: this.d,
                            e: this.e,
                            f: this.f,
                            matrix: new a.Matrix(this)
                        }
                    },
                    clone: function() {
                        return new a.Matrix(this)
                    },
                    morph: function(t) {
                        return this.destination = new a.Matrix(t), this
                    },
                    multiply: function(t) {
                        return new a.Matrix(this.native().multiply(function(t) {
                            return t instanceof a.Matrix || (t = new a.Matrix(t)), t
                        }(t).native()))
                    },
                    inverse: function() {
                        return new a.Matrix(this.native().inverse())
                    },
                    translate: function(t, e) {
                        return new a.Matrix(this.native().translate(t || 0, e || 0))
                    },
                    native: function() {
                        for (var t = a.parser.native.createSVGMatrix(), e = m.length - 1; e >= 0; e--) t[m[e]] = this[m[e]];
                        return t
                    },
                    toString: function() {
                        return "matrix(" + v(this.a) + "," + v(this.b) + "," + v(this.c) + "," + v(this.d) + "," + v(this.e) + "," + v(this.f) + ")"
                    }
                },
                parent: a.Element,
                construct: {
                    ctm: function() {
                        return new a.Matrix(this.node.getCTM())
                    },
                    screenCTM: function() {
                        if (this instanceof a.Nested) {
                            var t = this.rect(1, 1),
                                e = t.node.getScreenCTM();
                            return t.remove(), new a.Matrix(e)
                        }
                        return new a.Matrix(this.node.getScreenCTM())
                    }
                }
            }), a.Point = a.invent({
                create: function(t, e) {
                    var a;
                    a = Array.isArray(t) ? {
                        x: t[0],
                        y: t[1]
                    } : "object" === i(t) ? {
                        x: t.x,
                        y: t.y
                    } : null != t ? {
                        x: t,
                        y: null != e ? e : t
                    } : {
                        x: 0,
                        y: 0
                    }, this.x = a.x, this.y = a.y
                },
                extend: {
                    clone: function() {
                        return new a.Point(this)
                    },
                    morph: function(t, e) {
                        return this.destination = new a.Point(t, e), this
                    }
                }
            }), a.extend(a.Element, {
                point: function(t, e) {
                    return new a.Point(t, e).transform(this.screenCTM().inverse())
                }
            }), a.extend(a.Element, {
                attr: function(t, e, s) {
                    if (null == t) {
                        for (t = {}, s = (e = this.node.attributes).length - 1; s >= 0; s--) t[e[s].nodeName] = a.regex.isNumber.test(e[s].nodeValue) ? parseFloat(e[s].nodeValue) : e[s].nodeValue;
                        return t
                    }
                    if ("object" === i(t))
                        for (var r in t) this.attr(r, t[r]);
                    else if (null === e) this.node.removeAttribute(t);
                    else {
                        if (null == e) return null == (e = this.node.getAttribute(t)) ? a.defaults.attrs[t] : a.regex.isNumber.test(e) ? parseFloat(e) : e;
                        "stroke-width" == t ? this.attr("stroke", parseFloat(e) > 0 ? this._stroke : null) : "stroke" == t && (this._stroke = e), "fill" != t && "stroke" != t || (a.regex.isImage.test(e) && (e = this.doc().defs().image(e, 0, 0)), e instanceof a.Image && (e = this.doc().defs().pattern(0, 0, (function() {
                            this.add(e)
                        })))), "number" == typeof e ? e = new a.Number(e) : a.Color.isColor(e) ? e = new a.Color(e) : Array.isArray(e) && (e = new a.Array(e)), "leading" == t ? this.leading && this.leading(e) : "string" == typeof s ? this.node.setAttributeNS(s, t, e.toString()) : this.node.setAttribute(t, e.toString()), !this.rebuild || "font-size" != t && "x" != t || this.rebuild(t, e)
                    }
                    return this
                }
            }), a.extend(a.Element, {
                transform: function(t, e) {
                    var s;
                    return "object" !== i(t) ? (s = new a.Matrix(this).extract(), "string" == typeof t ? s[t] : s) : (s = new a.Matrix(this), e = !!e || !!t.relative, null != t.a && (s = e ? s.multiply(new a.Matrix(t)) : new a.Matrix(t)), this.attr("transform", s))
                }
            }), a.extend(a.Element, {
                untransform: function() {
                    return this.attr("transform", null)
                },
                matrixify: function() {
                    return (this.attr("transform") || "").split(a.regex.transforms).slice(0, -1).map((function(t) {
                        var e = t.trim().split("(");
                        return [e[0], e[1].split(a.regex.delimiter).map((function(t) {
                            return parseFloat(t)
                        }))]
                    })).reduce((function(t, e) {
                        return "matrix" == e[0] ? t.multiply(p(e[1])) : t[e[0]].apply(t, e[1])
                    }), new a.Matrix)
                },
                toParent: function(t) {
                    if (this == t) return this;
                    var e = this.screenCTM(),
                        i = t.screenCTM().inverse();
                    return this.addTo(t).untransform().transform(i.multiply(e)), this
                },
                toDoc: function() {
                    return this.toParent(this.doc())
                }
            }), a.Transformation = a.invent({
                create: function(t, e) {
                    if (arguments.length > 1 && "boolean" != typeof e) return this.constructor.call(this, [].slice.call(arguments));
                    if (Array.isArray(t))
                        for (var a = 0, s = this.arguments.length; a < s; ++a) this[this.arguments[a]] = t[a];
                    else if (t && "object" === i(t))
                        for (a = 0, s = this.arguments.length; a < s; ++a) this[this.arguments[a]] = t[this.arguments[a]];
                    this.inversed = !1, !0 === e && (this.inversed = !0)
                }
            }), a.Translate = a.invent({
                parent: a.Matrix,
                inherit: a.Transformation,
                create: function(t, e) {
                    this.constructor.apply(this, [].slice.call(arguments))
                },
                extend: {
                    arguments: ["transformedX", "transformedY"],
                    method: "translate"
                }
            }), a.extend(a.Element, {
                style: function(t, e) {
                    if (0 == arguments.length) return this.node.style.cssText || "";
                    if (arguments.length < 2)
                        if ("object" === i(t))
                            for (var s in t) this.style(s, t[s]);
                        else {
                            if (!a.regex.isCss.test(t)) return this.node.style[c(t)];
                            for (t = t.split(/\s*;\s*/).filter((function(t) {
                                    return !!t
                                })).map((function(t) {
                                    return t.split(/\s*:\s*/)
                                })); e = t.pop();) this.style(e[0], e[1])
                        }
                    else this.node.style[c(t)] = null === e || a.regex.isBlank.test(e) ? "" : e;
                    return this
                }
            }), a.Parent = a.invent({
                create: function(t) {
                    this.constructor.call(this, t)
                },
                inherit: a.Element,
                extend: {
                    children: function() {
                        return a.utils.map(a.utils.filterSVGElements(this.node.childNodes), (function(t) {
                            return a.adopt(t)
                        }))
                    },
                    add: function(t, e) {
                        return null == e ? this.node.appendChild(t.node) : t.node != this.node.childNodes[e] && this.node.insertBefore(t.node, this.node.childNodes[e]), this
                    },
                    put: function(t, e) {
                        return this.add(t, e), t
                    },
                    has: function(t) {
                        return this.index(t) >= 0
                    },
                    index: function(t) {
                        return [].slice.call(this.node.childNodes).indexOf(t.node)
                    },
                    get: function(t) {
                        return a.adopt(this.node.childNodes[t])
                    },
                    first: function() {
                        return this.get(0)
                    },
                    last: function() {
                        return this.get(this.node.childNodes.length - 1)
                    },
                    each: function(t, e) {
                        for (var i = this.children(), s = 0, r = i.length; s < r; s++) i[s] instanceof a.Element && t.apply(i[s], [s, i]), e && i[s] instanceof a.Container && i[s].each(t, e);
                        return this
                    },
                    removeElement: function(t) {
                        return this.node.removeChild(t.node), this
                    },
                    clear: function() {
                        for (; this.node.hasChildNodes();) this.node.removeChild(this.node.lastChild);
                        return delete this._defs, this
                    },
                    defs: function() {
                        return this.doc().defs()
                    }
                }
            }), a.extend(a.Parent, {
                ungroup: function(t, e) {
                    return 0 === e || this instanceof a.Defs || this.node == a.parser.draw || (t = t || (this instanceof a.Doc ? this : this.parent(a.Parent)), e = e || 1 / 0, this.each((function() {
                        return this instanceof a.Defs ? this : this instanceof a.Parent ? this.ungroup(t, e - 1) : this.toParent(t)
                    })), this.node.firstChild || this.remove()), this
                },
                flatten: function(t, e) {
                    return this.ungroup(t, e)
                }
            }), a.Container = a.invent({
                create: function(t) {
                    this.constructor.call(this, t)
                },
                inherit: a.Parent
            }), a.ViewBox = a.invent({
                parent: a.Container,
                construct: {}
            }), ["click", "dblclick", "mousedown", "mouseup", "mouseover", "mouseout", "mousemove", "touchstart", "touchmove", "touchleave", "touchend", "touchcancel"].forEach((function(t) {
                a.Element.prototype[t] = function(e) {
                    return a.on(this.node, t, e), this
                }
            })), a.listeners = [], a.handlerMap = [], a.listenerId = 0, a.on = function(t, e, i, s, r) {
                var o = i.bind(s || t.instance || t),
                    n = (a.handlerMap.indexOf(t) + 1 || a.handlerMap.push(t)) - 1,
                    l = e.split(".")[0],
                    h = e.split(".")[1] || "*";
                a.listeners[n] = a.listeners[n] || {}, a.listeners[n][l] = a.listeners[n][l] || {}, a.listeners[n][l][h] = a.listeners[n][l][h] || {}, i._svgjsListenerId || (i._svgjsListenerId = ++a.listenerId), a.listeners[n][l][h][i._svgjsListenerId] = o, t.addEventListener(l, o, r || {
                    passive: !0
                })
            }, a.off = function(t, e, i) {
                var s = a.handlerMap.indexOf(t),
                    r = e && e.split(".")[0],
                    o = e && e.split(".")[1],
                    n = "";
                if (-1 != s)
                    if (i) {
                        if ("function" == typeof i && (i = i._svgjsListenerId), !i) return;
                        a.listeners[s][r] && a.listeners[s][r][o || "*"] && (t.removeEventListener(r, a.listeners[s][r][o || "*"][i], !1), delete a.listeners[s][r][o || "*"][i])
                    } else if (o && r) {
                    if (a.listeners[s][r] && a.listeners[s][r][o]) {
                        for (var l in a.listeners[s][r][o]) a.off(t, [r, o].join("."), l);
                        delete a.listeners[s][r][o]
                    }
                } else if (o)
                    for (var h in a.listeners[s])
                        for (var n in a.listeners[s][h]) o === n && a.off(t, [h, o].join("."));
                else if (r) {
                    if (a.listeners[s][r]) {
                        for (var n in a.listeners[s][r]) a.off(t, [r, n].join("."));
                        delete a.listeners[s][r]
                    }
                } else {
                    for (var h in a.listeners[s]) a.off(t, h);
                    delete a.listeners[s], delete a.handlerMap[s]
                }
            }, a.extend(a.Element, {
                on: function(t, e, i, s) {
                    return a.on(this.node, t, e, i, s), this
                },
                off: function(t, e) {
                    return a.off(this.node, t, e), this
                },
                fire: function(e, i) {
                    return e instanceof t.Event ? this.node.dispatchEvent(e) : this.node.dispatchEvent(e = new a.CustomEvent(e, {
                        detail: i,
                        cancelable: !0
                    })), this._event = e, this
                },
                event: function() {
                    return this._event
                }
            }), a.Defs = a.invent({
                create: "defs",
                inherit: a.Container
            }), a.G = a.invent({
                create: "g",
                inherit: a.Container,
                extend: {
                    x: function(t) {
                        return null == t ? this.transform("x") : this.transform({
                            x: t - this.x()
                        }, !0)
                    }
                },
                construct: {
                    group: function() {
                        return this.put(new a.G)
                    }
                }
            }), a.Doc = a.invent({
                create: function(t) {
                    t && ("svg" == (t = "string" == typeof t ? e.getElementById(t) : t).nodeName ? this.constructor.call(this, t) : (this.constructor.call(this, a.create("svg")), t.appendChild(this.node), this.size("100%", "100%")), this.namespace().defs())
                },
                inherit: a.Container,
                extend: {
                    namespace: function() {
                        return this.attr({
                            xmlns: a.ns,
                            version: "1.1"
                        }).attr("xmlns:xlink", a.xlink, a.xmlns).attr("xmlns:svgjs", a.svgjs, a.xmlns)
                    },
                    defs: function() {
                        var t;
                        return this._defs || ((t = this.node.getElementsByTagName("defs")[0]) ? this._defs = a.adopt(t) : this._defs = new a.Defs, this.node.appendChild(this._defs.node)), this._defs
                    },
                    parent: function() {
                        return this.node.parentNode && "#document" != this.node.parentNode.nodeName ? this.node.parentNode : null
                    },
                    remove: function() {
                        return this.parent() && this.parent().removeChild(this.node), this
                    },
                    clear: function() {
                        for (; this.node.hasChildNodes();) this.node.removeChild(this.node.lastChild);
                        return delete this._defs, a.parser.draw && !a.parser.draw.parentNode && this.node.appendChild(a.parser.draw), this
                    },
                    clone: function(t) {
                        this.writeDataToDom();
                        var e = this.node,
                            i = x(e.cloneNode(!0));
                        return t ? (t.node || t).appendChild(i.node) : e.parentNode.insertBefore(i.node, e.nextSibling), i
                    }
                }
            }), a.extend(a.Element, {}), a.Gradient = a.invent({
                create: function(t) {
                    this.constructor.call(this, a.create(t + "Gradient")), this.type = t
                },
                inherit: a.Container,
                extend: {
                    at: function(t, e, i) {
                        return this.put(new a.Stop).update(t, e, i)
                    },
                    update: function(t) {
                        return this.clear(), "function" == typeof t && t.call(this, this), this
                    },
                    fill: function() {
                        return "url(#" + this.id() + ")"
                    },
                    toString: function() {
                        return this.fill()
                    },
                    attr: function(t, e, i) {
                        return "transform" == t && (t = "gradientTransform"), a.Container.prototype.attr.call(this, t, e, i)
                    }
                },
                construct: {
                    gradient: function(t, e) {
                        return this.defs().gradient(t, e)
                    }
                }
            }), a.extend(a.Gradient, a.FX, {
                from: function(t, e) {
                    return "radial" == (this._target || this).type ? this.attr({
                        fx: new a.Number(t),
                        fy: new a.Number(e)
                    }) : this.attr({
                        x1: new a.Number(t),
                        y1: new a.Number(e)
                    })
                },
                to: function(t, e) {
                    return "radial" == (this._target || this).type ? this.attr({
                        cx: new a.Number(t),
                        cy: new a.Number(e)
                    }) : this.attr({
                        x2: new a.Number(t),
                        y2: new a.Number(e)
                    })
                }
            }), a.extend(a.Defs, {
                gradient: function(t, e) {
                    return this.put(new a.Gradient(t)).update(e)
                }
            }), a.Stop = a.invent({
                create: "stop",
                inherit: a.Element,
                extend: {
                    update: function(t) {
                        return ("number" == typeof t || t instanceof a.Number) && (t = {
                            offset: arguments[0],
                            color: arguments[1],
                            opacity: arguments[2]
                        }), null != t.opacity && this.attr("stop-opacity", t.opacity), null != t.color && this.attr("stop-color", t.color), null != t.offset && this.attr("offset", new a.Number(t.offset)), this
                    }
                }
            }), a.Pattern = a.invent({
                create: "pattern",
                inherit: a.Container,
                extend: {
                    fill: function() {
                        return "url(#" + this.id() + ")"
                    },
                    update: function(t) {
                        return this.clear(), "function" == typeof t && t.call(this, this), this
                    },
                    toString: function() {
                        return this.fill()
                    },
                    attr: function(t, e, i) {
                        return "transform" == t && (t = "patternTransform"), a.Container.prototype.attr.call(this, t, e, i)
                    }
                },
                construct: {
                    pattern: function(t, e, i) {
                        return this.defs().pattern(t, e, i)
                    }
                }
            }), a.extend(a.Defs, {
                pattern: function(t, e, i) {
                    return this.put(new a.Pattern).update(i).attr({
                        x: 0,
                        y: 0,
                        width: t,
                        height: e,
                        patternUnits: "userSpaceOnUse"
                    })
                }
            }), a.Shape = a.invent({
                create: function(t) {
                    this.constructor.call(this, t)
                },
                inherit: a.Element
            }), a.Symbol = a.invent({
                create: "symbol",
                inherit: a.Container,
                construct: {
                    symbol: function() {
                        return this.put(new a.Symbol)
                    }
                }
            }), a.Use = a.invent({
                create: "use",
                inherit: a.Shape,
                extend: {
                    element: function(t, e) {
                        return this.attr("href", (e || "") + "#" + t, a.xlink)
                    }
                },
                construct: {
                    use: function(t, e) {
                        return this.put(new a.Use).element(t, e)
                    }
                }
            }), a.Rect = a.invent({
                create: "rect",
                inherit: a.Shape,
                construct: {
                    rect: function(t, e) {
                        return this.put(new a.Rect).size(t, e)
                    }
                }
            }), a.Circle = a.invent({
                create: "circle",
                inherit: a.Shape,
                construct: {
                    circle: function(t) {
                        return this.put(new a.Circle).rx(new a.Number(t).divide(2)).move(0, 0)
                    }
                }
            }), a.extend(a.Circle, a.FX, {
                rx: function(t) {
                    return this.attr("r", t)
                },
                ry: function(t) {
                    return this.rx(t)
                }
            }), a.Ellipse = a.invent({
                create: "ellipse",
                inherit: a.Shape,
                construct: {
                    ellipse: function(t, e) {
                        return this.put(new a.Ellipse).size(t, e).move(0, 0)
                    }
                }
            }), a.extend(a.Ellipse, a.Rect, a.FX, {
                rx: function(t) {
                    return this.attr("rx", t)
                },
                ry: function(t) {
                    return this.attr("ry", t)
                }
            }), a.extend(a.Circle, a.Ellipse, {
                x: function(t) {
                    return null == t ? this.cx() - this.rx() : this.cx(t + this.rx())
                },
                y: function(t) {
                    return null == t ? this.cy() - this.ry() : this.cy(t + this.ry())
                },
                cx: function(t) {
                    return null == t ? this.attr("cx") : this.attr("cx", t)
                },
                cy: function(t) {
                    return null == t ? this.attr("cy") : this.attr("cy", t)
                },
                width: function(t) {
                    return null == t ? 2 * this.rx() : this.rx(new a.Number(t).divide(2))
                },
                height: function(t) {
                    return null == t ? 2 * this.ry() : this.ry(new a.Number(t).divide(2))
                },
                size: function(t, e) {
                    var i = u(this, t, e);
                    return this.rx(new a.Number(i.width).divide(2)).ry(new a.Number(i.height).divide(2))
                }
            }), a.Line = a.invent({
                create: "line",
                inherit: a.Shape,
                extend: {
                    array: function() {
                        return new a.PointArray([
                            [this.attr("x1"), this.attr("y1")],
                            [this.attr("x2"), this.attr("y2")]
                        ])
                    },
                    plot: function(t, e, i, s) {
                        return null == t ? this.array() : (t = void 0 !== e ? {
                            x1: t,
                            y1: e,
                            x2: i,
                            y2: s
                        } : new a.PointArray(t).toLine(), this.attr(t))
                    },
                    move: function(t, e) {
                        return this.attr(this.array().move(t, e).toLine())
                    },
                    size: function(t, e) {
                        var i = u(this, t, e);
                        return this.attr(this.array().size(i.width, i.height).toLine())
                    }
                },
                construct: {
                    line: function(t, e, i, s) {
                        return a.Line.prototype.plot.apply(this.put(new a.Line), null != t ? [t, e, i, s] : [0, 0, 0, 0])
                    }
                }
            }), a.Polyline = a.invent({
                create: "polyline",
                inherit: a.Shape,
                construct: {
                    polyline: function(t) {
                        return this.put(new a.Polyline).plot(t || new a.PointArray)
                    }
                }
            }), a.Polygon = a.invent({
                create: "polygon",
                inherit: a.Shape,
                construct: {
                    polygon: function(t) {
                        return this.put(new a.Polygon).plot(t || new a.PointArray)
                    }
                }
            }), a.extend(a.Polyline, a.Polygon, {
                array: function() {
                    return this._array || (this._array = new a.PointArray(this.attr("points")))
                },
                plot: function(t) {
                    return null == t ? this.array() : this.clear().attr("points", "string" == typeof t ? t : this._array = new a.PointArray(t))
                },
                clear: function() {
                    return delete this._array, this
                },
                move: function(t, e) {
                    return this.attr("points", this.array().move(t, e))
                },
                size: function(t, e) {
                    var i = u(this, t, e);
                    return this.attr("points", this.array().size(i.width, i.height))
                }
            }), a.extend(a.Line, a.Polyline, a.Polygon, {
                morphArray: a.PointArray,
                x: function(t) {
                    return null == t ? this.bbox().x : this.move(t, this.bbox().y)
                },
                y: function(t) {
                    return null == t ? this.bbox().y : this.move(this.bbox().x, t)
                },
                width: function(t) {
                    var e = this.bbox();
                    return null == t ? e.width : this.size(t, e.height)
                },
                height: function(t) {
                    var e = this.bbox();
                    return null == t ? e.height : this.size(e.width, t)
                }
            }), a.Path = a.invent({
                create: "path",
                inherit: a.Shape,
                extend: {
                    morphArray: a.PathArray,
                    array: function() {
                        return this._array || (this._array = new a.PathArray(this.attr("d")))
                    },
                    plot: function(t) {
                        return null == t ? this.array() : this.clear().attr("d", "string" == typeof t ? t : this._array = new a.PathArray(t))
                    },
                    clear: function() {
                        return delete this._array, this
                    }
                },
                construct: {
                    path: function(t) {
                        return this.put(new a.Path).plot(t || new a.PathArray)
                    }
                }
            }), a.Image = a.invent({
                create: "image",
                inherit: a.Shape,
                extend: {
                    load: function(e) {
                        if (!e) return this;
                        var i = this,
                            s = new t.Image;
                        return a.on(s, "load", (function() {
                            a.off(s);
                            var t = i.parent(a.Pattern);
                            null !== t && (0 == i.width() && 0 == i.height() && i.size(s.width, s.height), t && 0 == t.width() && 0 == t.height() && t.size(i.width(), i.height()), "function" == typeof i._loaded && i._loaded.call(i, {
                                width: s.width,
                                height: s.height,
                                ratio: s.width / s.height,
                                url: e
                            }))
                        })), a.on(s, "error", (function(t) {
                            a.off(s), "function" == typeof i._error && i._error.call(i, t)
                        })), this.attr("href", s.src = this.src = e, a.xlink)
                    },
                    loaded: function(t) {
                        return this._loaded = t, this
                    },
                    error: function(t) {
                        return this._error = t, this
                    }
                },
                construct: {
                    image: function(t, e, i) {
                        return this.put(new a.Image).load(t).size(e || 0, i || e || 0)
                    }
                }
            }), a.Text = a.invent({
                create: function() {
                    this.constructor.call(this, a.create("text")), this.dom.leading = new a.Number(1.3), this._rebuild = !0, this._build = !1, this.attr("font-family", a.defaults.attrs["font-family"])
                },
                inherit: a.Shape,
                extend: {
                    x: function(t) {
                        return null == t ? this.attr("x") : this.attr("x", t)
                    },
                    text: function(t) {
                        if (void 0 === t) {
                            t = "";
                            for (var e = this.node.childNodes, i = 0, s = e.length; i < s; ++i) 0 != i && 3 != e[i].nodeType && 1 == a.adopt(e[i]).dom.newLined && (t += "\n"), t += e[i].textContent;
                            return t
                        }
                        if (this.clear().build(!0), "function" == typeof t) t.call(this, this);
                        else {
                            i = 0;
                            for (var r = (t = t.split("\n")).length; i < r; i++) this.tspan(t[i]).newLine()
                        }
                        return this.build(!1).rebuild()
                    },
                    size: function(t) {
                        return this.attr("font-size", t).rebuild()
                    },
                    leading: function(t) {
                        return null == t ? this.dom.leading : (this.dom.leading = new a.Number(t), this.rebuild())
                    },
                    lines: function() {
                        var t = (this.textPath && this.textPath() || this).node,
                            e = a.utils.map(a.utils.filterSVGElements(t.childNodes), (function(t) {
                                return a.adopt(t)
                            }));
                        return new a.Set(e)
                    },
                    rebuild: function(t) {
                        if ("boolean" == typeof t && (this._rebuild = t), this._rebuild) {
                            var e = this,
                                i = 0,
                                s = this.dom.leading * new a.Number(this.attr("font-size"));
                            this.lines().each((function() {
                                this.dom.newLined && (e.textPath() || this.attr("x", e.attr("x")), "\n" == this.text() ? i += s : (this.attr("dy", s + i), i = 0))
                            })), this.fire("rebuild")
                        }
                        return this
                    },
                    build: function(t) {
                        return this._build = !!t, this
                    },
                    setData: function(t) {
                        return this.dom = t, this.dom.leading = new a.Number(t.leading || 1.3), this
                    }
                },
                construct: {
                    text: function(t) {
                        return this.put(new a.Text).text(t)
                    },
                    plain: function(t) {
                        return this.put(new a.Text).plain(t)
                    }
                }
            }), a.Tspan = a.invent({
                create: "tspan",
                inherit: a.Shape,
                extend: {
                    text: function(t) {
                        return null == t ? this.node.textContent + (this.dom.newLined ? "\n" : "") : ("function" == typeof t ? t.call(this, this) : this.plain(t), this)
                    },
                    dx: function(t) {
                        return this.attr("dx", t)
                    },
                    dy: function(t) {
                        return this.attr("dy", t)
                    },
                    newLine: function() {
                        var t = this.parent(a.Text);
                        return this.dom.newLined = !0, this.dy(t.dom.leading * t.attr("font-size")).attr("x", t.x())
                    }
                }
            }), a.extend(a.Text, a.Tspan, {
                plain: function(t) {
                    return !1 === this._build && this.clear(), this.node.appendChild(e.createTextNode(t)), this
                },
                tspan: function(t) {
                    var e = (this.textPath && this.textPath() || this).node,
                        i = new a.Tspan;
                    return !1 === this._build && this.clear(), e.appendChild(i.node), i.text(t)
                },
                clear: function() {
                    for (var t = (this.textPath && this.textPath() || this).node; t.hasChildNodes();) t.removeChild(t.lastChild);
                    return this
                },
                length: function() {
                    return this.node.getComputedTextLength()
                }
            }), a.TextPath = a.invent({
                create: "textPath",
                inherit: a.Parent,
                parent: a.Text,
                construct: {
                    morphArray: a.PathArray,
                    array: function() {
                        var t = this.track();
                        return t ? t.array() : null
                    },
                    plot: function(t) {
                        var e = this.track(),
                            i = null;
                        return e && (i = e.plot(t)), null == t ? i : this
                    },
                    track: function() {
                        var t = this.textPath();
                        if (t) return t.reference("href")
                    },
                    textPath: function() {
                        if (this.node.firstChild && "textPath" == this.node.firstChild.nodeName) return a.adopt(this.node.firstChild)
                    }
                }
            }), a.Nested = a.invent({
                create: function() {
                    this.constructor.call(this, a.create("svg")), this.style("overflow", "visible")
                },
                inherit: a.Container,
                construct: {
                    nested: function() {
                        return this.put(new a.Nested)
                    }
                }
            });
            var l = {
                stroke: ["color", "width", "opacity", "linecap", "linejoin", "miterlimit", "dasharray", "dashoffset"],
                fill: ["color", "opacity", "rule"],
                prefix: function(t, e) {
                    return "color" == e ? t : t + "-" + e
                }
            };

            function h(t, e, i, s) {
                return i + s.replace(a.regex.dots, " .")
            }

            function c(t) {
                return t.toLowerCase().replace(/-(.)/g, (function(t, e) {
                    return e.toUpperCase()
                }))
            }

            function d(t) {
                return t.charAt(0).toUpperCase() + t.slice(1)
            }

            function g(t) {
                var e = t.toString(16);
                return 1 == e.length ? "0" + e : e
            }

            function u(t, e, i) {
                if (null == e || null == i) {
                    var a = t.bbox();
                    null == e ? e = a.width / a.height * i : null == i && (i = a.height / a.width * e)
                }
                return {
                    width: e,
                    height: i
                }
            }

            function f(t, e, i) {
                return {
                    x: e * t.a + i * t.c + 0,
                    y: e * t.b + i * t.d + 0
                }
            }

            function p(t) {
                return {
                    a: t[0],
                    b: t[1],
                    c: t[2],
                    d: t[3],
                    e: t[4],
                    f: t[5]
                }
            }

            function x(e) {
                for (var i = e.childNodes.length - 1; i >= 0; i--) e.childNodes[i] instanceof t.SVGElement && x(e.childNodes[i]);
                return a.adopt(e).id(a.eid(e.nodeName))
            }

            function b(t) {
                return null == t.x && (t.x = 0, t.y = 0, t.width = 0, t.height = 0), t.w = t.width, t.h = t.height, t.x2 = t.x + t.width, t.y2 = t.y + t.height, t.cx = t.x + t.width / 2, t.cy = t.y + t.height / 2, t
            }

            function v(t) {
                return Math.abs(t) > 1e-37 ? t : 0
            }["fill", "stroke"].forEach((function(t) {
                var e = {};
                e[t] = function(e) {
                    if (void 0 === e) return this;
                    if ("string" == typeof e || a.Color.isRgb(e) || e && "function" == typeof e.fill) this.attr(t, e);
                    else
                        for (var i = l[t].length - 1; i >= 0; i--) null != e[l[t][i]] && this.attr(l.prefix(t, l[t][i]), e[l[t][i]]);
                    return this
                }, a.extend(a.Element, a.FX, e)
            })), a.extend(a.Element, a.FX, {
                translate: function(t, e) {
                    return this.transform({
                        x: t,
                        y: e
                    })
                },
                matrix: function(t) {
                    return this.attr("transform", new a.Matrix(6 == arguments.length ? [].slice.call(arguments) : t))
                },
                opacity: function(t) {
                    return this.attr("opacity", t)
                },
                dx: function(t) {
                    return this.x(new a.Number(t).plus(this instanceof a.FX ? 0 : this.x()), !0)
                },
                dy: function(t) {
                    return this.y(new a.Number(t).plus(this instanceof a.FX ? 0 : this.y()), !0)
                }
            }), a.extend(a.Path, {
                length: function() {
                    return this.node.getTotalLength()
                },
                pointAt: function(t) {
                    return this.node.getPointAtLength(t)
                }
            }), a.Set = a.invent({
                create: function(t) {
                    Array.isArray(t) ? this.members = t : this.clear()
                },
                extend: {
                    add: function() {
                        for (var t = [].slice.call(arguments), e = 0, i = t.length; e < i; e++) this.members.push(t[e]);
                        return this
                    },
                    remove: function(t) {
                        var e = this.index(t);
                        return e > -1 && this.members.splice(e, 1), this
                    },
                    each: function(t) {
                        for (var e = 0, i = this.members.length; e < i; e++) t.apply(this.members[e], [e, this.members]);
                        return this
                    },
                    clear: function() {
                        return this.members = [], this
                    },
                    length: function() {
                        return this.members.length
                    },
                    has: function(t) {
                        return this.index(t) >= 0
                    },
                    index: function(t) {
                        return this.members.indexOf(t)
                    },
                    get: function(t) {
                        return this.members[t]
                    },
                    first: function() {
                        return this.get(0)
                    },
                    last: function() {
                        return this.get(this.members.length - 1)
                    },
                    valueOf: function() {
                        return this.members
                    }
                },
                construct: {
                    set: function(t) {
                        return new a.Set(t)
                    }
                }
            }), a.FX.Set = a.invent({
                create: function(t) {
                    this.set = t
                }
            }), a.Set.inherit = function() {
                var t = [];
                for (var e in a.Shape.prototype) "function" == typeof a.Shape.prototype[e] && "function" != typeof a.Set.prototype[e] && t.push(e);
                for (var e in t.forEach((function(t) {
                        a.Set.prototype[t] = function() {
                            for (var e = 0, i = this.members.length; e < i; e++) this.members[e] && "function" == typeof this.members[e][t] && this.members[e][t].apply(this.members[e], arguments);
                            return "animate" == t ? this.fx || (this.fx = new a.FX.Set(this)) : this
                        }
                    })), t = [], a.FX.prototype) "function" == typeof a.FX.prototype[e] && "function" != typeof a.FX.Set.prototype[e] && t.push(e);
                t.forEach((function(t) {
                    a.FX.Set.prototype[t] = function() {
                        for (var e = 0, i = this.set.members.length; e < i; e++) this.set.members[e].fx[t].apply(this.set.members[e].fx, arguments);
                        return this
                    }
                }))
            }, a.extend(a.Element, {}), a.extend(a.Element, {
                remember: function(t, e) {
                    if ("object" === i(arguments[0]))
                        for (var a in t) this.remember(a, t[a]);
                    else {
                        if (1 == arguments.length) return this.memory()[t];
                        this.memory()[t] = e
                    }
                    return this
                },
                forget: function() {
                    if (0 == arguments.length) this._memory = {};
                    else
                        for (var t = arguments.length - 1; t >= 0; t--) delete this.memory()[arguments[t]];
                    return this
                },
                memory: function() {
                    return this._memory || (this._memory = {})
                }
            }), a.get = function(t) {
                var i = e.getElementById(function(t) {
                    var e = (t || "").toString().match(a.regex.reference);
                    if (e) return e[1]
                }(t) || t);
                return a.adopt(i)
            }, a.select = function(t, i) {
                return new a.Set(a.utils.map((i || e).querySelectorAll(t), (function(t) {
                    return a.adopt(t)
                })))
            }, a.extend(a.Parent, {
                select: function(t) {
                    return a.select(t, this.node)
                }
            });
            var m = "abcdef".split("");
            if ("function" != typeof t.CustomEvent) {
                var y = function(t, i) {
                    i = i || {
                        bubbles: !1,
                        cancelable: !1,
                        detail: void 0
                    };
                    var a = e.createEvent("CustomEvent");
                    return a.initCustomEvent(t, i.bubbles, i.cancelable, i.detail), a
                };
                y.prototype = t.Event.prototype, a.CustomEvent = y
            } else a.CustomEvent = t.CustomEvent;
            return a
        }, "function" == typeof define && define.amd ? define((function() {
            return zt(It, It.document)
        })) : "object" === ("undefined" == typeof exports ? "undefined" : i(exports)) && "undefined" != typeof module ? module.exports = It.document ? zt(It, It.document) : function(t) {
            return zt(t, t.document)
        } : It.SVG = zt(It, It.document),
        /*! svg.filter.js - v2.0.2 - 2016-02-24
         * https://github.com/wout/svg.filter.js
         * Copyright (c) 2016 Wout Fierens; Licensed MIT */
        function() {
            SVG.Filter = SVG.invent({
                create: "filter",
                inherit: SVG.Parent,
                extend: {
                    source: "SourceGraphic",
                    sourceAlpha: "SourceAlpha",
                    background: "BackgroundImage",
                    backgroundAlpha: "BackgroundAlpha",
                    fill: "FillPaint",
                    stroke: "StrokePaint",
                    autoSetIn: !0,
                    put: function(t, e) {
                        return this.add(t, e), !t.attr("in") && this.autoSetIn && t.attr("in", this.source), t.attr("result") || t.attr("result", t), t
                    },
                    blend: function(t, e, i) {
                        return this.put(new SVG.BlendEffect(t, e, i))
                    },
                    colorMatrix: function(t, e) {
                        return this.put(new SVG.ColorMatrixEffect(t, e))
                    },
                    convolveMatrix: function(t) {
                        return this.put(new SVG.ConvolveMatrixEffect(t))
                    },
                    componentTransfer: function(t) {
                        return this.put(new SVG.ComponentTransferEffect(t))
                    },
                    composite: function(t, e, i) {
                        return this.put(new SVG.CompositeEffect(t, e, i))
                    },
                    flood: function(t, e) {
                        return this.put(new SVG.FloodEffect(t, e))
                    },
                    offset: function(t, e) {
                        return this.put(new SVG.OffsetEffect(t, e))
                    },
                    image: function(t) {
                        return this.put(new SVG.ImageEffect(t))
                    },
                    merge: function() {
                        var t = [void 0];
                        for (var e in arguments) t.push(arguments[e]);
                        return this.put(new(SVG.MergeEffect.bind.apply(SVG.MergeEffect, t)))
                    },
                    gaussianBlur: function(t, e) {
                        return this.put(new SVG.GaussianBlurEffect(t, e))
                    },
                    morphology: function(t, e) {
                        return this.put(new SVG.MorphologyEffect(t, e))
                    },
                    diffuseLighting: function(t, e, i) {
                        return this.put(new SVG.DiffuseLightingEffect(t, e, i))
                    },
                    displacementMap: function(t, e, i, a, s) {
                        return this.put(new SVG.DisplacementMapEffect(t, e, i, a, s))
                    },
                    specularLighting: function(t, e, i, a) {
                        return this.put(new SVG.SpecularLightingEffect(t, e, i, a))
                    },
                    tile: function() {
                        return this.put(new SVG.TileEffect)
                    },
                    turbulence: function(t, e, i, a, s) {
                        return this.put(new SVG.TurbulenceEffect(t, e, i, a, s))
                    },
                    toString: function() {
                        return "url(#" + this.attr("id") + ")"
                    }
                }
            }), SVG.extend(SVG.Defs, {
                filter: function(t) {
                    var e = this.put(new SVG.Filter);
                    return "function" == typeof t && t.call(e, e), e
                }
            }), SVG.extend(SVG.Container, {
                filter: function(t) {
                    return this.defs().filter(t)
                }
            }), SVG.extend(SVG.Element, SVG.G, SVG.Nested, {
                filter: function(t) {
                    return this.filterer = t instanceof SVG.Element ? t : this.doc().filter(t), this.doc() && this.filterer.doc() !== this.doc() && this.doc().defs().add(this.filterer), this.attr("filter", this.filterer), this.filterer
                },
                unfilter: function(t) {
                    return this.filterer && !0 === t && this.filterer.remove(), delete this.filterer, this.attr("filter", null)
                }
            }), SVG.Effect = SVG.invent({
                create: function() {
                    this.constructor.call(this)
                },
                inherit: SVG.Element,
                extend: { in: function(t) {
                        return null == t ? this.parent() && this.parent().select('[result="' + this.attr("in") + '"]').get(0) || this.attr("in") : this.attr("in", t)
                    },
                    result: function(t) {
                        return null == t ? this.attr("result") : this.attr("result", t)
                    },
                    toString: function() {
                        return this.result()
                    }
                }
            }), SVG.ParentEffect = SVG.invent({
                create: function() {
                    this.constructor.call(this)
                },
                inherit: SVG.Parent,
                extend: { in: function(t) {
                        return null == t ? this.parent() && this.parent().select('[result="' + this.attr("in") + '"]').get(0) || this.attr("in") : this.attr("in", t)
                    },
                    result: function(t) {
                        return null == t ? this.attr("result") : this.attr("result", t)
                    },
                    toString: function() {
                        return this.result()
                    }
                }
            });
            var t = {
                blend: function(t, e) {
                    return this.parent() && this.parent().blend(this, t, e)
                },
                colorMatrix: function(t, e) {
                    return this.parent() && this.parent().colorMatrix(t, e).in(this)
                },
                convolveMatrix: function(t) {
                    return this.parent() && this.parent().convolveMatrix(t).in(this)
                },
                componentTransfer: function(t) {
                    return this.parent() && this.parent().componentTransfer(t).in(this)
                },
                composite: function(t, e) {
                    return this.parent() && this.parent().composite(this, t, e)
                },
                flood: function(t, e) {
                    return this.parent() && this.parent().flood(t, e)
                },
                offset: function(t, e) {
                    return this.parent() && this.parent().offset(t, e).in(this)
                },
                image: function(t) {
                    return this.parent() && this.parent().image(t)
                },
                merge: function() {
                    return this.parent() && this.parent().merge.apply(this.parent(), [this].concat(arguments))
                },
                gaussianBlur: function(t, e) {
                    return this.parent() && this.parent().gaussianBlur(t, e).in(this)
                },
                morphology: function(t, e) {
                    return this.parent() && this.parent().morphology(t, e).in(this)
                },
                diffuseLighting: function(t, e, i) {
                    return this.parent() && this.parent().diffuseLighting(t, e, i).in(this)
                },
                displacementMap: function(t, e, i, a) {
                    return this.parent() && this.parent().displacementMap(this, t, e, i, a)
                },
                specularLighting: function(t, e, i, a) {
                    return this.parent() && this.parent().specularLighting(t, e, i, a).in(this)
                },
                tile: function() {
                    return this.parent() && this.parent().tile().in(this)
                },
                turbulence: function(t, e, i, a, s) {
                    return this.parent() && this.parent().turbulence(t, e, i, a, s).in(this)
                }
            };
            SVG.extend(SVG.Effect, t), SVG.extend(SVG.ParentEffect, t), SVG.ChildEffect = SVG.invent({
                create: function() {
                    this.constructor.call(this)
                },
                inherit: SVG.Element,
                extend: { in: function(t) {
                        this.attr("in", t)
                    }
                }
            });
            var e = {
                    blend: function(t, e, i) {
                        this.attr({ in: t,
                            in2: e,
                            mode: i || "normal"
                        })
                    },
                    colorMatrix: function(t, e) {
                        "matrix" == t && (e = s(e)), this.attr({
                            type: t,
                            values: void 0 === e ? null : e
                        })
                    },
                    convolveMatrix: function(t) {
                        t = s(t), this.attr({
                            order: Math.sqrt(t.split(" ").length),
                            kernelMatrix: t
                        })
                    },
                    composite: function(t, e, i) {
                        this.attr({ in: t,
                            in2: e,
                            operator: i
                        })
                    },
                    flood: function(t, e) {
                        this.attr("flood-color", t), null != e && this.attr("flood-opacity", e)
                    },
                    offset: function(t, e) {
                        this.attr({
                            dx: t,
                            dy: e
                        })
                    },
                    image: function(t) {
                        this.attr("href", t, SVG.xlink)
                    },
                    displacementMap: function(t, e, i, a, s) {
                        this.attr({ in: t,
                            in2: e,
                            scale: i,
                            xChannelSelector: a,
                            yChannelSelector: s
                        })
                    },
                    gaussianBlur: function(t, e) {
                        null != t || null != e ? this.attr("stdDeviation", r(Array.prototype.slice.call(arguments))) : this.attr("stdDeviation", "0 0")
                    },
                    morphology: function(t, e) {
                        this.attr({
                            operator: t,
                            radius: e
                        })
                    },
                    tile: function() {},
                    turbulence: function(t, e, i, a, s) {
                        this.attr({
                            numOctaves: e,
                            seed: i,
                            stitchTiles: a,
                            baseFrequency: t,
                            type: s
                        })
                    }
                },
                i = {
                    merge: function() {
                        var t;
                        if (arguments[0] instanceof SVG.Set) {
                            var e = this;
                            arguments[0].each((function(t) {
                                this instanceof SVG.MergeNode ? e.put(this) : (this instanceof SVG.Effect || this instanceof SVG.ParentEffect) && e.put(new SVG.MergeNode(this))
                            }))
                        } else {
                            t = Array.isArray(arguments[0]) ? arguments[0] : arguments;
                            for (var i = 0; i < t.length; i++) t[i] instanceof SVG.MergeNode ? this.put(t[i]) : this.put(new SVG.MergeNode(t[i]))
                        }
                    },
                    componentTransfer: function(t) {
                        if (this.rgb = new SVG.Set, ["r", "g", "b", "a"].forEach(function(t) {
                                this[t] = new(SVG["Func" + t.toUpperCase()])("identity"), this.rgb.add(this[t]), this.node.appendChild(this[t].node)
                            }.bind(this)), t)
                            for (var e in t.rgb && (["r", "g", "b"].forEach(function(e) {
                                    this[e].attr(t.rgb)
                                }.bind(this)), delete t.rgb), t) this[e].attr(t[e])
                    },
                    diffuseLighting: function(t, e, i) {
                        this.attr({
                            surfaceScale: t,
                            diffuseConstant: e,
                            kernelUnitLength: i
                        })
                    },
                    specularLighting: function(t, e, i, a) {
                        this.attr({
                            surfaceScale: t,
                            diffuseConstant: e,
                            specularExponent: i,
                            kernelUnitLength: a
                        })
                    }
                },
                a = {
                    distantLight: function(t, e) {
                        this.attr({
                            azimuth: t,
                            elevation: e
                        })
                    },
                    pointLight: function(t, e, i) {
                        this.attr({
                            x: t,
                            y: e,
                            z: i
                        })
                    },
                    spotLight: function(t, e, i, a, s, r) {
                        this.attr({
                            x: t,
                            y: e,
                            z: i,
                            pointsAtX: a,
                            pointsAtY: s,
                            pointsAtZ: r
                        })
                    },
                    mergeNode: function(t) {
                        this.attr("in", t)
                    }
                };

            function s(t) {
                return Array.isArray(t) && (t = new SVG.Array(t)), t.toString().replace(/^\s+/, "").replace(/\s+$/, "").replace(/\s+/g, " ")
            }

            function r(t) {
                if (!Array.isArray(t)) return t;
                for (var e = 0, i = t.length, a = []; e < i; e++) a.push(t[e]);
                return a.join(" ")
            }

            function o() {
                var t = function() {};
                for (var e in "function" == typeof arguments[arguments.length - 1] && (t = arguments[arguments.length - 1], Array.prototype.splice.call(arguments, arguments.length - 1, 1)), arguments)
                    for (var i in arguments[e]) t(arguments[e][i], i, arguments[e])
            }["r", "g", "b", "a"].forEach((function(t) {
                a["Func" + t.toUpperCase()] = function(t) {
                    switch (this.attr("type", t), t) {
                        case "table":
                            this.attr("tableValues", arguments[1]);
                            break;
                        case "linear":
                            this.attr("slope", arguments[1]), this.attr("intercept", arguments[2]);
                            break;
                        case "gamma":
                            this.attr("amplitude", arguments[1]), this.attr("exponent", arguments[2]), this.attr("offset", arguments[2])
                    }
                }
            })), o(e, (function(t, e) {
                var i = e.charAt(0).toUpperCase() + e.slice(1);
                SVG[i + "Effect"] = SVG.invent({
                    create: function() {
                        this.constructor.call(this, SVG.create("fe" + i)), t.apply(this, arguments), this.result(this.attr("id") + "Out")
                    },
                    inherit: SVG.Effect,
                    extend: {}
                })
            })), o(i, (function(t, e) {
                var i = e.charAt(0).toUpperCase() + e.slice(1);
                SVG[i + "Effect"] = SVG.invent({
                    create: function() {
                        this.constructor.call(this, SVG.create("fe" + i)), t.apply(this, arguments), this.result(this.attr("id") + "Out")
                    },
                    inherit: SVG.ParentEffect,
                    extend: {}
                })
            })), o(a, (function(t, e) {
                var i = e.charAt(0).toUpperCase() + e.slice(1);
                SVG[i] = SVG.invent({
                    create: function() {
                        this.constructor.call(this, SVG.create("fe" + i)), t.apply(this, arguments)
                    },
                    inherit: SVG.ChildEffect,
                    extend: {}
                })
            })), SVG.extend(SVG.MergeEffect, { in: function(t) {
                    return t instanceof SVG.MergeNode ? this.add(t, 0) : this.add(new SVG.MergeNode(t), 0), this
                }
            }), SVG.extend(SVG.CompositeEffect, SVG.BlendEffect, SVG.DisplacementMapEffect, {
                in2: function(t) {
                    return null == t ? this.parent() && this.parent().select('[result="' + this.attr("in2") + '"]').get(0) || this.attr("in2") : this.attr("in2", t)
                }
            }), SVG.filter = {
                sepiatone: [.343, .669, .119, 0, 0, .249, .626, .13, 0, 0, .172, .334, .111, 0, 0, 0, 0, 0, 1, 0]
            }
        }.call(void 0),
        function() {
            function t(t, s, r, o, n, l, h) {
                for (var c = t.slice(s, r || h), d = o.slice(n, l || h), g = 0, u = {
                        pos: [0, 0],
                        start: [0, 0]
                    }, f = {
                        pos: [0, 0],
                        start: [0, 0]
                    };;) {
                    if (c[g] = e.call(u, c[g]), d[g] = e.call(f, d[g]), c[g][0] != d[g][0] || "M" == c[g][0] || "A" == c[g][0] && (c[g][4] != d[g][4] || c[g][5] != d[g][5]) ? (Array.prototype.splice.apply(c, [g, 1].concat(a.call(u, c[g]))), Array.prototype.splice.apply(d, [g, 1].concat(a.call(f, d[g])))) : (c[g] = i.call(u, c[g]), d[g] = i.call(f, d[g])), ++g == c.length && g == d.length) break;
                    g == c.length && c.push(["C", u.pos[0], u.pos[1], u.pos[0], u.pos[1], u.pos[0], u.pos[1]]), g == d.length && d.push(["C", f.pos[0], f.pos[1], f.pos[0], f.pos[1], f.pos[0], f.pos[1]])
                }
                return {
                    start: c,
                    dest: d
                }
            }

            function e(t) {
                switch (t[0]) {
                    case "z":
                    case "Z":
                        t[0] = "L", t[1] = this.start[0], t[2] = this.start[1];
                        break;
                    case "H":
                        t[0] = "L", t[2] = this.pos[1];
                        break;
                    case "V":
                        t[0] = "L", t[2] = t[1], t[1] = this.pos[0];
                        break;
                    case "T":
                        t[0] = "Q", t[3] = t[1], t[4] = t[2], t[1] = this.reflection[1], t[2] = this.reflection[0];
                        break;
                    case "S":
                        t[0] = "C", t[6] = t[4], t[5] = t[3], t[4] = t[2], t[3] = t[1], t[2] = this.reflection[1], t[1] = this.reflection[0]
                }
                return t
            }

            function i(t) {
                var e = t.length;
                return this.pos = [t[e - 2], t[e - 1]], -1 != "SCQT".indexOf(t[0]) && (this.reflection = [2 * this.pos[0] - t[e - 4], 2 * this.pos[1] - t[e - 3]]), t
            }

            function a(t) {
                var e = [t];
                switch (t[0]) {
                    case "M":
                        return this.pos = this.start = [t[1], t[2]], e;
                    case "L":
                        t[5] = t[3] = t[1], t[6] = t[4] = t[2], t[1] = this.pos[0], t[2] = this.pos[1];
                        break;
                    case "Q":
                        t[6] = t[4], t[5] = t[3], t[4] = 1 * t[4] / 3 + 2 * t[2] / 3, t[3] = 1 * t[3] / 3 + 2 * t[1] / 3, t[2] = 1 * this.pos[1] / 3 + 2 * t[2] / 3, t[1] = 1 * this.pos[0] / 3 + 2 * t[1] / 3;
                        break;
                    case "A":
                        t = (e = function(t, e) {
                            var i, a, s, r, o, n, l, h, c, d, g, u, f, p, x, b, v, m, y, w, k, A, S, C, L, P, M = Math.abs(e[1]),
                                T = Math.abs(e[2]),
                                I = e[3] % 360,
                                z = e[4],
                                X = e[5],
                                E = e[6],
                                Y = e[7],
                                F = new SVG.Point(t),
                                R = new SVG.Point(E, Y),
                                H = [];
                            if (0 === M || 0 === T || F.x === R.x && F.y === R.y) return [
                                ["C", F.x, F.y, R.x, R.y, R.x, R.y]
                            ];
                            i = new SVG.Point((F.x - R.x) / 2, (F.y - R.y) / 2).transform((new SVG.Matrix).rotate(I)), (a = i.x * i.x / (M * M) + i.y * i.y / (T * T)) > 1 && (M *= a = Math.sqrt(a), T *= a);
                            s = (new SVG.Matrix).rotate(I).scale(1 / M, 1 / T).rotate(-I), F = F.transform(s), R = R.transform(s), r = [R.x - F.x, R.y - F.y], n = r[0] * r[0] + r[1] * r[1], o = Math.sqrt(n), r[0] /= o, r[1] /= o, l = n < 4 ? Math.sqrt(1 - n / 4) : 0, z === X && (l *= -1);
                            h = new SVG.Point((R.x + F.x) / 2 + l * -r[1], (R.y + F.y) / 2 + l * r[0]), c = new SVG.Point(F.x - h.x, F.y - h.y), d = new SVG.Point(R.x - h.x, R.y - h.y), g = Math.acos(c.x / Math.sqrt(c.x * c.x + c.y * c.y)), c.y < 0 && (g *= -1);
                            u = Math.acos(d.x / Math.sqrt(d.x * d.x + d.y * d.y)), d.y < 0 && (u *= -1);
                            X && g > u && (u += 2 * Math.PI);
                            !X && g < u && (u -= 2 * Math.PI);
                            for (p = Math.ceil(2 * Math.abs(g - u) / Math.PI), b = [], v = g, f = (u - g) / p, x = 4 * Math.tan(f / 4) / 3, k = 0; k <= p; k++) y = Math.cos(v), m = Math.sin(v), w = new SVG.Point(h.x + y, h.y + m), b[k] = [new SVG.Point(w.x + x * m, w.y - x * y), w, new SVG.Point(w.x - x * m, w.y + x * y)], v += f;
                            for (b[0][0] = b[0][1].clone(), b[b.length - 1][2] = b[b.length - 1][1].clone(), s = (new SVG.Matrix).rotate(I).scale(M, T).rotate(-I), k = 0, A = b.length; k < A; k++) b[k][0] = b[k][0].transform(s), b[k][1] = b[k][1].transform(s), b[k][2] = b[k][2].transform(s);
                            for (k = 1, A = b.length; k < A; k++) S = (w = b[k - 1][2]).x, C = w.y, L = (w = b[k][0]).x, P = w.y, E = (w = b[k][1]).x, Y = w.y, H.push(["C", S, C, L, P, E, Y]);
                            return H
                        }(this.pos, t))[0]
                }
                return t[0] = "C", this.pos = [t[5], t[6]], this.reflection = [2 * t[5] - t[3], 2 * t[6] - t[4]], e
            }

            function s(t, e) {
                if (!1 === e) return !1;
                for (var i = e, a = t.length; i < a; ++i)
                    if ("M" == t[i][0]) return i;
                return !1
            }
            SVG.extend(SVG.PathArray, {
                morph: function(e) {
                    for (var i = this.value, a = this.parse(e), r = 0, o = 0, n = !1, l = !1; !1 !== r || !1 !== o;) {
                        var h;
                        n = s(i, !1 !== r && r + 1), l = s(a, !1 !== o && o + 1), !1 === r && (r = 0 == (h = new SVG.PathArray(c.start).bbox()).height || 0 == h.width ? i.push(i[0]) - 1 : i.push(["M", h.x + h.width / 2, h.y + h.height / 2]) - 1), !1 === o && (o = 0 == (h = new SVG.PathArray(c.dest).bbox()).height || 0 == h.width ? a.push(a[0]) - 1 : a.push(["M", h.x + h.width / 2, h.y + h.height / 2]) - 1);
                        var c = t(i, r, n, a, o, l);
                        i = i.slice(0, r).concat(c.start, !1 === n ? [] : i.slice(n)), a = a.slice(0, o).concat(c.dest, !1 === l ? [] : a.slice(l)), r = !1 !== n && r + c.start.length, o = !1 !== l && o + c.dest.length
                    }
                    return this.value = i, this.destination = new SVG.PathArray, this.destination.value = a, this
                }
            })
        }(),
        /*! svg.draggable.js - v2.2.2 - 2019-01-08
         * https://github.com/svgdotjs/svg.draggable.js
         * Copyright (c) 2019 Wout Fierens; Licensed MIT */
        function() {
            function t(t) {
                t.remember("_draggable", this), this.el = t
            }
            t.prototype.init = function(t, e) {
                var i = this;
                this.constraint = t, this.value = e, this.el.on("mousedown.drag", (function(t) {
                    i.start(t)
                })), this.el.on("touchstart.drag", (function(t) {
                    i.start(t)
                }))
            }, t.prototype.transformPoint = function(t, e) {
                var i = (t = t || window.event).changedTouches && t.changedTouches[0] || t;
                return this.p.x = i.clientX - (e || 0), this.p.y = i.clientY, this.p.matrixTransform(this.m)
            }, t.prototype.getBBox = function() {
                var t = this.el.bbox();
                return this.el instanceof SVG.Nested && (t = this.el.rbox()), (this.el instanceof SVG.G || this.el instanceof SVG.Use || this.el instanceof SVG.Nested) && (t.x = this.el.x(), t.y = this.el.y()), t
            }, t.prototype.start = function(t) {
                if ("click" != t.type && "mousedown" != t.type && "mousemove" != t.type || 1 == (t.which || t.buttons)) {
                    var e = this;
                    if (this.el.fire("beforedrag", {
                            event: t,
                            handler: this
                        }), !this.el.event().defaultPrevented) {
                        t.preventDefault(), t.stopPropagation(), this.parent = this.parent || this.el.parent(SVG.Nested) || this.el.parent(SVG.Doc), this.p = this.parent.node.createSVGPoint(), this.m = this.el.node.getScreenCTM().inverse();
                        var i, a = this.getBBox();
                        if (this.el instanceof SVG.Text) switch (i = this.el.node.getComputedTextLength(), this.el.attr("text-anchor")) {
                            case "middle":
                                i /= 2;
                                break;
                            case "start":
                                i = 0
                        }
                        this.startPoints = {
                            point: this.transformPoint(t, i),
                            box: a,
                            transform: this.el.transform()
                        }, SVG.on(window, "mousemove.drag", (function(t) {
                            e.drag(t)
                        })), SVG.on(window, "touchmove.drag", (function(t) {
                            e.drag(t)
                        })), SVG.on(window, "mouseup.drag", (function(t) {
                            e.end(t)
                        })), SVG.on(window, "touchend.drag", (function(t) {
                            e.end(t)
                        })), this.el.fire("dragstart", {
                            event: t,
                            p: this.startPoints.point,
                            m: this.m,
                            handler: this
                        })
                    }
                }
            }, t.prototype.drag = function(t) {
                var e = this.getBBox(),
                    i = this.transformPoint(t),
                    a = this.startPoints.box.x + i.x - this.startPoints.point.x,
                    s = this.startPoints.box.y + i.y - this.startPoints.point.y,
                    r = this.constraint,
                    o = i.x - this.startPoints.point.x,
                    n = i.y - this.startPoints.point.y;
                if (this.el.fire("dragmove", {
                        event: t,
                        p: i,
                        m: this.m,
                        handler: this
                    }), this.el.event().defaultPrevented) return i;
                if ("function" == typeof r) {
                    var l = r.call(this.el, a, s, this.m);
                    "boolean" == typeof l && (l = {
                        x: l,
                        y: l
                    }), !0 === l.x ? this.el.x(a) : !1 !== l.x && this.el.x(l.x), !0 === l.y ? this.el.y(s) : !1 !== l.y && this.el.y(l.y)
                } else "object" == typeof r && (null != r.minX && a < r.minX ? o = (a = r.minX) - this.startPoints.box.x : null != r.maxX && a > r.maxX - e.width && (o = (a = r.maxX - e.width) - this.startPoints.box.x), null != r.minY && s < r.minY ? n = (s = r.minY) - this.startPoints.box.y : null != r.maxY && s > r.maxY - e.height && (n = (s = r.maxY - e.height) - this.startPoints.box.y), null != r.snapToGrid && (a -= a % r.snapToGrid, s -= s % r.snapToGrid, o -= o % r.snapToGrid, n -= n % r.snapToGrid), this.el instanceof SVG.G ? this.el.matrix(this.startPoints.transform).transform({
                    x: o,
                    y: n
                }, !0) : this.el.move(a, s));
                return i
            }, t.prototype.end = function(t) {
                var e = this.drag(t);
                this.el.fire("dragend", {
                    event: t,
                    p: e,
                    m: this.m,
                    handler: this
                }), SVG.off(window, "mousemove.drag"), SVG.off(window, "touchmove.drag"), SVG.off(window, "mouseup.drag"), SVG.off(window, "touchend.drag")
            }, SVG.extend(SVG.Element, {
                draggable: function(e, i) {
                    "function" != typeof e && "object" != typeof e || (i = e, e = !0);
                    var a = this.remember("_draggable") || new t(this);
                    return (e = void 0 === e || e) ? a.init(i || {}, e) : (this.off("mousedown.drag"), this.off("touchstart.drag")), this
                }
            })
        }.call(void 0),
        function() {
            function t(t) {
                this.el = t, t.remember("_selectHandler", this), this.pointSelection = {
                    isSelected: !1
                }, this.rectSelection = {
                    isSelected: !1
                }, this.pointsList = {
                    lt: [0, 0],
                    rt: ["width", 0],
                    rb: ["width", "height"],
                    lb: [0, "height"],
                    t: ["width", 0],
                    r: ["width", "height"],
                    b: ["width", "height"],
                    l: [0, "height"]
                }, this.pointCoord = function(t, e, i) {
                    var a = "string" != typeof t ? t : e[t];
                    return i ? a / 2 : a
                }, this.pointCoords = function(t, e) {
                    var i = this.pointsList[t];
                    return {
                        x: this.pointCoord(i[0], e, "t" === t || "b" === t),
                        y: this.pointCoord(i[1], e, "r" === t || "l" === t)
                    }
                }
            }
            t.prototype.init = function(t, e) {
                var i = this.el.bbox();
                this.options = {};
                var a = this.el.selectize.defaults.points;
                for (var s in this.el.selectize.defaults) this.options[s] = this.el.selectize.defaults[s], void 0 !== e[s] && (this.options[s] = e[s]);
                var r = ["points", "pointsExclude"];
                for (var s in r) {
                    var o = this.options[r[s]];
                    "string" == typeof o ? o = o.length > 0 ? o.split(/\s*,\s*/i) : [] : "boolean" == typeof o && "points" === r[s] && (o = o ? a : []), this.options[r[s]] = o
                }
                this.options.points = [a, this.options.points].reduce((function(t, e) {
                    return t.filter((function(t) {
                        return e.indexOf(t) > -1
                    }))
                })), this.options.points = [this.options.points, this.options.pointsExclude].reduce((function(t, e) {
                    return t.filter((function(t) {
                        return e.indexOf(t) < 0
                    }))
                })), this.parent = this.el.parent(), this.nested = this.nested || this.parent.group(), this.nested.matrix(new SVG.Matrix(this.el).translate(i.x, i.y)), this.options.deepSelect && -1 !== ["line", "polyline", "polygon"].indexOf(this.el.type) ? this.selectPoints(t) : this.selectRect(t), this.observe(), this.cleanup()
            }, t.prototype.selectPoints = function(t) {
                return this.pointSelection.isSelected = t, this.pointSelection.set || (this.pointSelection.set = this.parent.set(), this.drawPoints()), this
            }, t.prototype.getPointArray = function() {
                var t = this.el.bbox();
                return this.el.array().valueOf().map((function(e) {
                    return [e[0] - t.x, e[1] - t.y]
                }))
            }, t.prototype.drawPoints = function() {
                for (var t = this, e = this.getPointArray(), i = 0, a = e.length; i < a; ++i) {
                    var s = function(e) {
                            return function(i) {
                                (i = i || window.event).preventDefault ? i.preventDefault() : i.returnValue = !1, i.stopPropagation();
                                var a = i.pageX || i.touches[0].pageX,
                                    s = i.pageY || i.touches[0].pageY;
                                t.el.fire("point", {
                                    x: a,
                                    y: s,
                                    i: e,
                                    event: i
                                })
                            }
                        }(i),
                        r = this.drawPoint(e[i][0], e[i][1]).addClass(this.options.classPoints).addClass(this.options.classPoints + "_point").on("touchstart", s).on("mousedown", s);
                    this.pointSelection.set.add(r)
                }
            }, t.prototype.drawPoint = function(t, e) {
                var i = this.options.pointType;
                switch (i) {
                    case "circle":
                        return this.drawCircle(t, e);
                    case "rect":
                        return this.drawRect(t, e);
                    default:
                        if ("function" == typeof i) return i.call(this, t, e);
                        throw new Error("Unknown " + i + " point type!")
                }
            }, t.prototype.drawCircle = function(t, e) {
                return this.nested.circle(this.options.pointSize).center(t, e)
            }, t.prototype.drawRect = function(t, e) {
                return this.nested.rect(this.options.pointSize, this.options.pointSize).center(t, e)
            }, t.prototype.updatePointSelection = function() {
                var t = this.getPointArray();
                this.pointSelection.set.each((function(e) {
                    this.cx() === t[e][0] && this.cy() === t[e][1] || this.center(t[e][0], t[e][1])
                }))
            }, t.prototype.updateRectSelection = function() {
                var t = this,
                    e = this.el.bbox();
                if (this.rectSelection.set.get(0).attr({
                        width: e.width,
                        height: e.height
                    }), this.options.points.length && this.options.points.map((function(i, a) {
                        var s = t.pointCoords(i, e);
                        t.rectSelection.set.get(a + 1).center(s.x, s.y)
                    })), this.options.rotationPoint) {
                    var i = this.rectSelection.set.length();
                    this.rectSelection.set.get(i - 1).center(e.width / 2, 20)
                }
            }, t.prototype.selectRect = function(t) {
                var e = this,
                    i = this.el.bbox();

                function a(t) {
                    return function(i) {
                        (i = i || window.event).preventDefault ? i.preventDefault() : i.returnValue = !1, i.stopPropagation();
                        var a = i.pageX || i.touches[0].pageX,
                            s = i.pageY || i.touches[0].pageY;
                        e.el.fire(t, {
                            x: a,
                            y: s,
                            event: i
                        })
                    }
                }
                if (this.rectSelection.isSelected = t, this.rectSelection.set = this.rectSelection.set || this.parent.set(), this.rectSelection.set.get(0) || this.rectSelection.set.add(this.nested.rect(i.width, i.height).addClass(this.options.classRect)), this.options.points.length && this.rectSelection.set.length() < 2) {
                    this.options.points.map((function(t, s) {
                        var r = e.pointCoords(t, i),
                            o = e.drawPoint(r.x, r.y).attr("class", e.options.classPoints + "_" + t).on("mousedown", a(t)).on("touchstart", a(t));
                        e.rectSelection.set.add(o)
                    })), this.rectSelection.set.each((function() {
                        this.addClass(e.options.classPoints)
                    }))
                }
                if (this.options.rotationPoint && (this.options.points && !this.rectSelection.set.get(9) || !this.options.points && !this.rectSelection.set.get(1))) {
                    var s = function(t) {
                            (t = t || window.event).preventDefault ? t.preventDefault() : t.returnValue = !1, t.stopPropagation();
                            var i = t.pageX || t.touches[0].pageX,
                                a = t.pageY || t.touches[0].pageY;
                            e.el.fire("rot", {
                                x: i,
                                y: a,
                                event: t
                            })
                        },
                        r = this.drawPoint(i.width / 2, 20).attr("class", this.options.classPoints + "_rot").on("touchstart", s).on("mousedown", s);
                    this.rectSelection.set.add(r)
                }
            }, t.prototype.handler = function() {
                var t = this.el.bbox();
                this.nested.matrix(new SVG.Matrix(this.el).translate(t.x, t.y)), this.rectSelection.isSelected && this.updateRectSelection(), this.pointSelection.isSelected && this.updatePointSelection()
            }, t.prototype.observe = function() {
                var t = this;
                if (MutationObserver)
                    if (this.rectSelection.isSelected || this.pointSelection.isSelected) this.observerInst = this.observerInst || new MutationObserver((function() {
                        t.handler()
                    })), this.observerInst.observe(this.el.node, {
                        attributes: !0
                    });
                    else try {
                        this.observerInst.disconnect(), delete this.observerInst
                    } catch (t) {} else this.el.off("DOMAttrModified.select"), (this.rectSelection.isSelected || this.pointSelection.isSelected) && this.el.on("DOMAttrModified.select", (function() {
                        t.handler()
                    }))
            }, t.prototype.cleanup = function() {
                !this.rectSelection.isSelected && this.rectSelection.set && (this.rectSelection.set.each((function() {
                    this.remove()
                })), this.rectSelection.set.clear(), delete this.rectSelection.set), !this.pointSelection.isSelected && this.pointSelection.set && (this.pointSelection.set.each((function() {
                    this.remove()
                })), this.pointSelection.set.clear(), delete this.pointSelection.set), this.pointSelection.isSelected || this.rectSelection.isSelected || (this.nested.remove(), delete this.nested)
            }, SVG.extend(SVG.Element, {
                selectize: function(e, i) {
                    return "object" == typeof e && (i = e, e = !0), (this.remember("_selectHandler") || new t(this)).init(void 0 === e || e, i || {}), this
                }
            }), SVG.Element.prototype.selectize.defaults = {
                points: ["lt", "rt", "rb", "lb", "t", "r", "b", "l"],
                pointsExclude: [],
                classRect: "svg_select_boundingRect",
                classPoints: "svg_select_points",
                pointSize: 7,
                rotationPoint: !0,
                deepSelect: !1,
                pointType: "circle"
            }
        }(),
        function() {
            (function() {
                function t(t) {
                    t.remember("_resizeHandler", this), this.el = t, this.parameters = {}, this.lastUpdateCall = null, this.p = t.doc().node.createSVGPoint()
                }
                t.prototype.transformPoint = function(t, e, i) {
                    return this.p.x = t - (this.offset.x - window.pageXOffset), this.p.y = e - (this.offset.y - window.pageYOffset), this.p.matrixTransform(i || this.m)
                }, t.prototype._extractPosition = function(t) {
                    return {
                        x: null != t.clientX ? t.clientX : t.touches[0].clientX,
                        y: null != t.clientY ? t.clientY : t.touches[0].clientY
                    }
                }, t.prototype.init = function(t) {
                    var e = this;
                    if (this.stop(), "stop" !== t) {
                        for (var i in this.options = {}, this.el.resize.defaults) this.options[i] = this.el.resize.defaults[i], void 0 !== t[i] && (this.options[i] = t[i]);
                        this.el.on("lt.resize", (function(t) {
                            e.resize(t || window.event)
                        })), this.el.on("rt.resize", (function(t) {
                            e.resize(t || window.event)
                        })), this.el.on("rb.resize", (function(t) {
                            e.resize(t || window.event)
                        })), this.el.on("lb.resize", (function(t) {
                            e.resize(t || window.event)
                        })), this.el.on("t.resize", (function(t) {
                            e.resize(t || window.event)
                        })), this.el.on("r.resize", (function(t) {
                            e.resize(t || window.event)
                        })), this.el.on("b.resize", (function(t) {
                            e.resize(t || window.event)
                        })), this.el.on("l.resize", (function(t) {
                            e.resize(t || window.event)
                        })), this.el.on("rot.resize", (function(t) {
                            e.resize(t || window.event)
                        })), this.el.on("point.resize", (function(t) {
                            e.resize(t || window.event)
                        })), this.update()
                    }
                }, t.prototype.stop = function() {
                    return this.el.off("lt.resize"), this.el.off("rt.resize"), this.el.off("rb.resize"), this.el.off("lb.resize"), this.el.off("t.resize"), this.el.off("r.resize"), this.el.off("b.resize"), this.el.off("l.resize"), this.el.off("rot.resize"), this.el.off("point.resize"), this
                }, t.prototype.resize = function(t) {
                    var e = this;
                    this.m = this.el.node.getScreenCTM().inverse(), this.offset = {
                        x: window.pageXOffset,
                        y: window.pageYOffset
                    };
                    var i = this._extractPosition(t.detail.event);
                    if (this.parameters = {
                            type: this.el.type,
                            p: this.transformPoint(i.x, i.y),
                            x: t.detail.x,
                            y: t.detail.y,
                            box: this.el.bbox(),
                            rotation: this.el.transform().rotation
                        }, "text" === this.el.type && (this.parameters.fontSize = this.el.attr()["font-size"]), void 0 !== t.detail.i) {
                        var a = this.el.array().valueOf();
                        this.parameters.i = t.detail.i, this.parameters.pointCoords = [a[t.detail.i][0], a[t.detail.i][1]]
                    }
                    switch (t.type) {
                        case "lt":
                            this.calc = function(t, e) {
                                var i = this.snapToGrid(t, e);
                                if (this.parameters.box.width - i[0] > 0 && this.parameters.box.height - i[1] > 0) {
                                    if ("text" === this.parameters.type) return this.el.move(this.parameters.box.x + i[0], this.parameters.box.y), void this.el.attr("font-size", this.parameters.fontSize - i[0]);
                                    i = this.checkAspectRatio(i), this.el.move(this.parameters.box.x + i[0], this.parameters.box.y + i[1]).size(this.parameters.box.width - i[0], this.parameters.box.height - i[1])
                                }
                            };
                            break;
                        case "rt":
                            this.calc = function(t, e) {
                                var i = this.snapToGrid(t, e, 2);
                                if (this.parameters.box.width + i[0] > 0 && this.parameters.box.height - i[1] > 0) {
                                    if ("text" === this.parameters.type) return this.el.move(this.parameters.box.x - i[0], this.parameters.box.y), void this.el.attr("font-size", this.parameters.fontSize + i[0]);
                                    i = this.checkAspectRatio(i, !0), this.el.move(this.parameters.box.x, this.parameters.box.y + i[1]).size(this.parameters.box.width + i[0], this.parameters.box.height - i[1])
                                }
                            };
                            break;
                        case "rb":
                            this.calc = function(t, e) {
                                var i = this.snapToGrid(t, e, 0);
                                if (this.parameters.box.width + i[0] > 0 && this.parameters.box.height + i[1] > 0) {
                                    if ("text" === this.parameters.type) return this.el.move(this.parameters.box.x - i[0], this.parameters.box.y), void this.el.attr("font-size", this.parameters.fontSize + i[0]);
                                    i = this.checkAspectRatio(i), this.el.move(this.parameters.box.x, this.parameters.box.y).size(this.parameters.box.width + i[0], this.parameters.box.height + i[1])
                                }
                            };
                            break;
                        case "lb":
                            this.calc = function(t, e) {
                                var i = this.snapToGrid(t, e, 1);
                                if (this.parameters.box.width - i[0] > 0 && this.parameters.box.height + i[1] > 0) {
                                    if ("text" === this.parameters.type) return this.el.move(this.parameters.box.x + i[0], this.parameters.box.y), void this.el.attr("font-size", this.parameters.fontSize - i[0]);
                                    i = this.checkAspectRatio(i, !0), this.el.move(this.parameters.box.x + i[0], this.parameters.box.y).size(this.parameters.box.width - i[0], this.parameters.box.height + i[1])
                                }
                            };
                            break;
                        case "t":
                            this.calc = function(t, e) {
                                var i = this.snapToGrid(t, e, 2);
                                if (this.parameters.box.height - i[1] > 0) {
                                    if ("text" === this.parameters.type) return;
                                    this.el.move(this.parameters.box.x, this.parameters.box.y + i[1]).height(this.parameters.box.height - i[1])
                                }
                            };
                            break;
                        case "r":
                            this.calc = function(t, e) {
                                var i = this.snapToGrid(t, e, 0);
                                if (this.parameters.box.width + i[0] > 0) {
                                    if ("text" === this.parameters.type) return;
                                    this.el.move(this.parameters.box.x, this.parameters.box.y).width(this.parameters.box.width + i[0])
                                }
                            };
                            break;
                        case "b":
                            this.calc = function(t, e) {
                                var i = this.snapToGrid(t, e, 0);
                                if (this.parameters.box.height + i[1] > 0) {
                                    if ("text" === this.parameters.type) return;
                                    this.el.move(this.parameters.box.x, this.parameters.box.y).height(this.parameters.box.height + i[1])
                                }
                            };
                            break;
                        case "l":
                            this.calc = function(t, e) {
                                var i = this.snapToGrid(t, e, 1);
                                if (this.parameters.box.width - i[0] > 0) {
                                    if ("text" === this.parameters.type) return;
                                    this.el.move(this.parameters.box.x + i[0], this.parameters.box.y).width(this.parameters.box.width - i[0])
                                }
                            };
                            break;
                        case "rot":
                            this.calc = function(t, e) {
                                var i = t + this.parameters.p.x,
                                    a = e + this.parameters.p.y,
                                    s = Math.atan2(this.parameters.p.y - this.parameters.box.y - this.parameters.box.height / 2, this.parameters.p.x - this.parameters.box.x - this.parameters.box.width / 2),
                                    r = Math.atan2(a - this.parameters.box.y - this.parameters.box.height / 2, i - this.parameters.box.x - this.parameters.box.width / 2),
                                    o = this.parameters.rotation + 180 * (r - s) / Math.PI + this.options.snapToAngle / 2;
                                this.el.center(this.parameters.box.cx, this.parameters.box.cy).rotate(o - o % this.options.snapToAngle, this.parameters.box.cx, this.parameters.box.cy)
                            };
                            break;
                        case "point":
                            this.calc = function(t, e) {
                                var i = this.snapToGrid(t, e, this.parameters.pointCoords[0], this.parameters.pointCoords[1]),
                                    a = this.el.array().valueOf();
                                a[this.parameters.i][0] = this.parameters.pointCoords[0] + i[0], a[this.parameters.i][1] = this.parameters.pointCoords[1] + i[1], this.el.plot(a)
                            }
                    }
                    this.el.fire("resizestart", {
                        dx: this.parameters.x,
                        dy: this.parameters.y,
                        event: t
                    }), SVG.on(window, "touchmove.resize", (function(t) {
                        e.update(t || window.event)
                    })), SVG.on(window, "touchend.resize", (function() {
                        e.done()
                    })), SVG.on(window, "mousemove.resize", (function(t) {
                        e.update(t || window.event)
                    })), SVG.on(window, "mouseup.resize", (function() {
                        e.done()
                    }))
                }, t.prototype.update = function(t) {
                    if (t) {
                        var e = this._extractPosition(t),
                            i = this.transformPoint(e.x, e.y),
                            a = i.x - this.parameters.p.x,
                            s = i.y - this.parameters.p.y;
                        this.lastUpdateCall = [a, s], this.calc(a, s), this.el.fire("resizing", {
                            dx: a,
                            dy: s,
                            event: t
                        })
                    } else this.lastUpdateCall && this.calc(this.lastUpdateCall[0], this.lastUpdateCall[1])
                }, t.prototype.done = function() {
                    this.lastUpdateCall = null, SVG.off(window, "mousemove.resize"), SVG.off(window, "mouseup.resize"), SVG.off(window, "touchmove.resize"), SVG.off(window, "touchend.resize"), this.el.fire("resizedone")
                }, t.prototype.snapToGrid = function(t, e, i, a) {
                    var s;
                    return void 0 !== a ? s = [(i + t) % this.options.snapToGrid, (a + e) % this.options.snapToGrid] : (i = null == i ? 3 : i, s = [(this.parameters.box.x + t + (1 & i ? 0 : this.parameters.box.width)) % this.options.snapToGrid, (this.parameters.box.y + e + (2 & i ? 0 : this.parameters.box.height)) % this.options.snapToGrid]), t < 0 && (s[0] -= this.options.snapToGrid), e < 0 && (s[1] -= this.options.snapToGrid), t -= Math.abs(s[0]) < this.options.snapToGrid / 2 ? s[0] : s[0] - (t < 0 ? -this.options.snapToGrid : this.options.snapToGrid), e -= Math.abs(s[1]) < this.options.snapToGrid / 2 ? s[1] : s[1] - (e < 0 ? -this.options.snapToGrid : this.options.snapToGrid), this.constraintToBox(t, e, i, a)
                }, t.prototype.constraintToBox = function(t, e, i, a) {
                    var s, r, o = this.options.constraint || {};
                    return void 0 !== a ? (s = i, r = a) : (s = this.parameters.box.x + (1 & i ? 0 : this.parameters.box.width), r = this.parameters.box.y + (2 & i ? 0 : this.parameters.box.height)), void 0 !== o.minX && s + t < o.minX && (t = o.minX - s), void 0 !== o.maxX && s + t > o.maxX && (t = o.maxX - s), void 0 !== o.minY && r + e < o.minY && (e = o.minY - r), void 0 !== o.maxY && r + e > o.maxY && (e = o.maxY - r), [t, e]
                }, t.prototype.checkAspectRatio = function(t, e) {
                    if (!this.options.saveAspectRatio) return t;
                    var i = t.slice(),
                        a = this.parameters.box.width / this.parameters.box.height,
                        s = this.parameters.box.width + t[0],
                        r = this.parameters.box.height - t[1],
                        o = s / r;
                    return o < a ? (i[1] = s / a - this.parameters.box.height, e && (i[1] = -i[1])) : o > a && (i[0] = this.parameters.box.width - r * a, e && (i[0] = -i[0])), i
                }, SVG.extend(SVG.Element, {
                    resize: function(e) {
                        return (this.remember("_resizeHandler") || new t(this)).init(e || {}), this
                    }
                }), SVG.Element.prototype.resize.defaults = {
                    snapToAngle: .1,
                    snapToGrid: 1,
                    constraint: {},
                    saveAspectRatio: !1
                }
            }).call(this)
        }(), void 0 === window.Apex && (window.Apex = {});
    var Ht = function() {
            function t(e) {
                a(this, t), this.ctx = e, this.w = e.w
            }
            return r(t, [{
                key: "initModules",
                value: function() {
                    this.ctx.publicMethods = ["updateOptions", "updateSeries", "appendData", "appendSeries", "toggleSeries", "showSeries", "hideSeries", "setLocale", "resetSeries", "zoomX", "toggleDataPointSelection", "dataURI", "exportToCSV", "addXaxisAnnotation", "addYaxisAnnotation", "addPointAnnotation", "clearAnnotations", "removeAnnotation", "paper", "destroy"], this.ctx.eventList = ["click", "mousedown", "mousemove", "mouseleave", "touchstart", "touchmove", "touchleave", "mouseup", "touchend"], this.ctx.animations = new b(this.ctx), this.ctx.axes = new K(this.ctx), this.ctx.core = new Ft(this.ctx.el, this.ctx), this.ctx.config = new N({}), this.ctx.data = new B(this.ctx), this.ctx.grid = new U(this.ctx), this.ctx.graphics = new m(this.ctx), this.ctx.coreUtils = new y(this.ctx), this.ctx.crosshairs = new tt(this.ctx), this.ctx.events = new J(this.ctx), this.ctx.exports = new j(this.ctx), this.ctx.localization = new Q(this.ctx), this.ctx.options = new L, this.ctx.responsive = new et(this.ctx), this.ctx.series = new E(this.ctx), this.ctx.theme = new it(this.ctx), this.ctx.formatters = new V(this.ctx), this.ctx.titleSubtitle = new at(this.ctx), this.ctx.legend = new ct(this.ctx), this.ctx.toolbar = new dt(this.ctx), this.ctx.dimensions = new lt(this.ctx), this.ctx.updateHelpers = new Rt(this.ctx), this.ctx.zoomPanSelection = new gt(this.ctx), this.ctx.w.globals.tooltip = new mt(this.ctx)
                }
            }]), t
        }(),
        Dt = function() {
            function t(e) {
                a(this, t), this.ctx = e, this.w = e.w
            }
            return r(t, [{
                key: "clear",
                value: function(t) {
                    var e = t.isUpdating;
                    this.ctx.zoomPanSelection && this.ctx.zoomPanSelection.destroy(), this.ctx.toolbar && this.ctx.toolbar.destroy(), this.ctx.animations = null, this.ctx.axes = null, this.ctx.annotations = null, this.ctx.core = null, this.ctx.data = null, this.ctx.grid = null, this.ctx.series = null, this.ctx.responsive = null, this.ctx.theme = null, this.ctx.formatters = null, this.ctx.titleSubtitle = null, this.ctx.legend = null, this.ctx.dimensions = null, this.ctx.options = null, this.ctx.crosshairs = null, this.ctx.zoomPanSelection = null, this.ctx.updateHelpers = null, this.ctx.toolbar = null, this.ctx.localization = null, this.ctx.w.globals.tooltip = null, this.clearDomElements({
                        isUpdating: e
                    })
                }
            }, {
                key: "killSVG",
                value: function(t) {
                    t.each((function(t, e) {
                        this.removeClass("*"), this.off(), this.stop()
                    }), !0), t.ungroup(), t.clear()
                }
            }, {
                key: "clearDomElements",
                value: function(t) {
                    var e = this,
                        i = t.isUpdating,
                        a = this.w.globals.dom.Paper.node;
                    a.parentNode && a.parentNode.parentNode && !i && (a.parentNode.parentNode.style.minHeight = "unset");
                    var s = this.w.globals.dom.baseEl;
                    s && this.ctx.eventList.forEach((function(t) {
                        s.removeEventListener(t, e.ctx.events.documentEvent)
                    }));
                    var r = this.w.globals.dom;
                    if (null !== this.ctx.el)
                        for (; this.ctx.el.firstChild;) this.ctx.el.removeChild(this.ctx.el.firstChild);
                    this.killSVG(r.Paper), r.Paper.remove(), r.elWrap = null, r.elGraphical = null, r.elAnnotations = null, r.elLegendWrap = null, r.baseEl = null, r.elGridRect = null, r.elGridRectMask = null, r.elGridRectMarkerMask = null, r.elForecastMask = null, r.elNonForecastMask = null, r.elDefs = null
                }
            }]), t
        }(),
        Nt = new WeakMap;
    return function() {
        function t(e, i) {
            a(this, t), this.opts = i, this.ctx = this, this.w = new W(i).init(), this.el = e, this.w.globals.cuid = x.randomId(), this.w.globals.chartID = this.w.config.chart.id ? x.escapeString(this.w.config.chart.id) : this.w.globals.cuid, new Ht(this).initModules(), this.create = x.bind(this.create, this), this.windowResizeHandler = this._windowResizeHandler.bind(this), this.parentResizeHandler = this._parentResizeCallback.bind(this)
        }
        return r(t, [{
            key: "render",
            value: function() {
                var t = this;
                return new Promise((function(e, i) {
                    if (null !== t.el) {
                        void 0 === Apex._chartInstances && (Apex._chartInstances = []), t.w.config.chart.id && Apex._chartInstances.push({
                            id: t.w.globals.chartID,
                            group: t.w.config.chart.group,
                            chart: t
                        }), t.setLocale(t.w.config.chart.defaultLocale);
                        var a = t.w.config.chart.events.beforeMount;
                        if ("function" == typeof a && a(t, t.w), t.events.fireEvent("beforeMount", [t, t.w]), window.addEventListener("resize", t.windowResizeHandler), function(t, e) {
                                var i = !1;
                                if (t.nodeType !== Node.DOCUMENT_FRAGMENT_NODE) {
                                    var a = t.getBoundingClientRect();
                                    "none" !== t.style.display && 0 !== a.width || (i = !0)
                                }
                                var s = new ResizeObserver((function(a) {
                                    i && e.call(t, a), i = !0
                                }));
                                t.nodeType === Node.DOCUMENT_FRAGMENT_NODE ? Array.from(t.children).forEach((function(t) {
                                    return s.observe(t)
                                })) : s.observe(t), Nt.set(e, s)
                            }(t.el.parentNode, t.parentResizeHandler), !t.css) {
                            var s = t.el.getRootNode && t.el.getRootNode(),
                                r = x.is("ShadowRoot", s),
                                o = t.el.ownerDocument,
                                n = o.getElementById("apexcharts-css");
                            !r && n || (t.css = document.createElement("style"), t.css.id = "apexcharts-css", t.css.textContent = '.apexcharts-canvas {\n  position: relative;\n  user-select: none;\n  /* cannot give overflow: hidden as it will crop tooltips which overflow outside chart area */\n}\n\n\n/* scrollbar is not visible by default for legend, hence forcing the visibility */\n.apexcharts-canvas ::-webkit-scrollbar {\n  -webkit-appearance: none;\n  width: 6px;\n}\n\n.apexcharts-canvas ::-webkit-scrollbar-thumb {\n  border-radius: 4px;\n  background-color: rgba(0, 0, 0, .5);\n  box-shadow: 0 0 1px rgba(255, 255, 255, .5);\n  -webkit-box-shadow: 0 0 1px rgba(255, 255, 255, .5);\n}\n\n\n.apexcharts-inner {\n  position: relative;\n}\n\n.apexcharts-text tspan {\n  font-family: inherit;\n}\n\n.legend-mouseover-inactive {\n  transition: 0.15s ease all;\n  opacity: 0.20;\n}\n\n.apexcharts-series-collapsed {\n  opacity: 0;\n}\n\n.apexcharts-tooltip {\n  border-radius: 5px;\n  box-shadow: 2px 2px 6px -4px #999;\n  cursor: default;\n  font-size: 14px;\n  left: 62px;\n  opacity: 0;\n  pointer-events: none;\n  position: absolute;\n  top: 20px;\n  display: flex;\n  flex-direction: column;\n  overflow: hidden;\n  white-space: nowrap;\n  z-index: 12;\n  transition: 0.15s ease all;\n}\n\n.apexcharts-tooltip.apexcharts-active {\n  opacity: 1;\n  transition: 0.15s ease all;\n}\n\n.apexcharts-tooltip.apexcharts-theme-light {\n  border: 1px solid #e3e3e3;\n  background: rgba(255, 255, 255, 0.96);\n}\n\n.apexcharts-tooltip.apexcharts-theme-dark {\n  color: #fff;\n  background: rgba(30, 30, 30, 0.8);\n}\n\n.apexcharts-tooltip * {\n  font-family: inherit;\n}\n\n\n.apexcharts-tooltip-title {\n  padding: 6px;\n  font-size: 15px;\n  margin-bottom: 4px;\n}\n\n.apexcharts-tooltip.apexcharts-theme-light .apexcharts-tooltip-title {\n  background: #ECEFF1;\n  border-bottom: 1px solid #ddd;\n}\n\n.apexcharts-tooltip.apexcharts-theme-dark .apexcharts-tooltip-title {\n  background: rgba(0, 0, 0, 0.7);\n  border-bottom: 1px solid #333;\n}\n\n.apexcharts-tooltip-text-y-value,\n.apexcharts-tooltip-text-goals-value,\n.apexcharts-tooltip-text-z-value {\n  display: inline-block;\n  font-weight: 600;\n  margin-left: 5px;\n}\n\n.apexcharts-tooltip-title:empty,\n.apexcharts-tooltip-text-y-label:empty,\n.apexcharts-tooltip-text-y-value:empty,\n.apexcharts-tooltip-text-goals-label:empty,\n.apexcharts-tooltip-text-goals-value:empty,\n.apexcharts-tooltip-text-z-value:empty {\n  display: none;\n}\n\n.apexcharts-tooltip-text-y-value,\n.apexcharts-tooltip-text-goals-value,\n.apexcharts-tooltip-text-z-value {\n  font-weight: 600;\n}\n\n.apexcharts-tooltip-text-goals-label, \n.apexcharts-tooltip-text-goals-value {\n  padding: 6px 0 5px;\n}\n\n.apexcharts-tooltip-goals-group, \n.apexcharts-tooltip-text-goals-label, \n.apexcharts-tooltip-text-goals-value {\n  display: flex;\n}\n.apexcharts-tooltip-text-goals-label:not(:empty),\n.apexcharts-tooltip-text-goals-value:not(:empty) {\n  margin-top: -6px;\n}\n\n.apexcharts-tooltip-marker {\n  width: 12px;\n  height: 12px;\n  position: relative;\n  top: 0px;\n  margin-right: 10px;\n  border-radius: 50%;\n}\n\n.apexcharts-tooltip-series-group {\n  padding: 0 10px;\n  display: none;\n  text-align: left;\n  justify-content: left;\n  align-items: center;\n}\n\n.apexcharts-tooltip-series-group.apexcharts-active .apexcharts-tooltip-marker {\n  opacity: 1;\n}\n\n.apexcharts-tooltip-series-group.apexcharts-active,\n.apexcharts-tooltip-series-group:last-child {\n  padding-bottom: 4px;\n}\n\n.apexcharts-tooltip-series-group-hidden {\n  opacity: 0;\n  height: 0;\n  line-height: 0;\n  padding: 0 !important;\n}\n\n.apexcharts-tooltip-y-group {\n  padding: 6px 0 5px;\n}\n\n.apexcharts-tooltip-box, .apexcharts-custom-tooltip {\n  padding: 4px 8px;\n}\n\n.apexcharts-tooltip-boxPlot {\n  display: flex;\n  flex-direction: column-reverse;\n}\n\n.apexcharts-tooltip-box>div {\n  margin: 4px 0;\n}\n\n.apexcharts-tooltip-box span.value {\n  font-weight: bold;\n}\n\n.apexcharts-tooltip-rangebar {\n  padding: 5px 8px;\n}\n\n.apexcharts-tooltip-rangebar .category {\n  font-weight: 600;\n  color: #777;\n}\n\n.apexcharts-tooltip-rangebar .series-name {\n  font-weight: bold;\n  display: block;\n  margin-bottom: 5px;\n}\n\n.apexcharts-xaxistooltip {\n  opacity: 0;\n  padding: 9px 10px;\n  pointer-events: none;\n  color: #373d3f;\n  font-size: 13px;\n  text-align: center;\n  border-radius: 2px;\n  position: absolute;\n  z-index: 10;\n  background: #ECEFF1;\n  border: 1px solid #90A4AE;\n  transition: 0.15s ease all;\n}\n\n.apexcharts-xaxistooltip.apexcharts-theme-dark {\n  background: rgba(0, 0, 0, 0.7);\n  border: 1px solid rgba(0, 0, 0, 0.5);\n  color: #fff;\n}\n\n.apexcharts-xaxistooltip:after,\n.apexcharts-xaxistooltip:before {\n  left: 50%;\n  border: solid transparent;\n  content: " ";\n  height: 0;\n  width: 0;\n  position: absolute;\n  pointer-events: none;\n}\n\n.apexcharts-xaxistooltip:after {\n  border-color: rgba(236, 239, 241, 0);\n  border-width: 6px;\n  margin-left: -6px;\n}\n\n.apexcharts-xaxistooltip:before {\n  border-color: rgba(144, 164, 174, 0);\n  border-width: 7px;\n  margin-left: -7px;\n}\n\n.apexcharts-xaxistooltip-bottom:after,\n.apexcharts-xaxistooltip-bottom:before {\n  bottom: 100%;\n}\n\n.apexcharts-xaxistooltip-top:after,\n.apexcharts-xaxistooltip-top:before {\n  top: 100%;\n}\n\n.apexcharts-xaxistooltip-bottom:after {\n  border-bottom-color: #ECEFF1;\n}\n\n.apexcharts-xaxistooltip-bottom:before {\n  border-bottom-color: #90A4AE;\n}\n\n.apexcharts-xaxistooltip-bottom.apexcharts-theme-dark:after {\n  border-bottom-color: rgba(0, 0, 0, 0.5);\n}\n\n.apexcharts-xaxistooltip-bottom.apexcharts-theme-dark:before {\n  border-bottom-color: rgba(0, 0, 0, 0.5);\n}\n\n.apexcharts-xaxistooltip-top:after {\n  border-top-color: #ECEFF1\n}\n\n.apexcharts-xaxistooltip-top:before {\n  border-top-color: #90A4AE;\n}\n\n.apexcharts-xaxistooltip-top.apexcharts-theme-dark:after {\n  border-top-color: rgba(0, 0, 0, 0.5);\n}\n\n.apexcharts-xaxistooltip-top.apexcharts-theme-dark:before {\n  border-top-color: rgba(0, 0, 0, 0.5);\n}\n\n.apexcharts-xaxistooltip.apexcharts-active {\n  opacity: 1;\n  transition: 0.15s ease all;\n}\n\n.apexcharts-yaxistooltip {\n  opacity: 0;\n  padding: 4px 10px;\n  pointer-events: none;\n  color: #373d3f;\n  font-size: 13px;\n  text-align: center;\n  border-radius: 2px;\n  position: absolute;\n  z-index: 10;\n  background: #ECEFF1;\n  border: 1px solid #90A4AE;\n}\n\n.apexcharts-yaxistooltip.apexcharts-theme-dark {\n  background: rgba(0, 0, 0, 0.7);\n  border: 1px solid rgba(0, 0, 0, 0.5);\n  color: #fff;\n}\n\n.apexcharts-yaxistooltip:after,\n.apexcharts-yaxistooltip:before {\n  top: 50%;\n  border: solid transparent;\n  content: " ";\n  height: 0;\n  width: 0;\n  position: absolute;\n  pointer-events: none;\n}\n\n.apexcharts-yaxistooltip:after {\n  border-color: rgba(236, 239, 241, 0);\n  border-width: 6px;\n  margin-top: -6px;\n}\n\n.apexcharts-yaxistooltip:before {\n  border-color: rgba(144, 164, 174, 0);\n  border-width: 7px;\n  margin-top: -7px;\n}\n\n.apexcharts-yaxistooltip-left:after,\n.apexcharts-yaxistooltip-left:before {\n  left: 100%;\n}\n\n.apexcharts-yaxistooltip-right:after,\n.apexcharts-yaxistooltip-right:before {\n  right: 100%;\n}\n\n.apexcharts-yaxistooltip-left:after {\n  border-left-color: #ECEFF1;\n}\n\n.apexcharts-yaxistooltip-left:before {\n  border-left-color: #90A4AE;\n}\n\n.apexcharts-yaxistooltip-left.apexcharts-theme-dark:after {\n  border-left-color: rgba(0, 0, 0, 0.5);\n}\n\n.apexcharts-yaxistooltip-left.apexcharts-theme-dark:before {\n  border-left-color: rgba(0, 0, 0, 0.5);\n}\n\n.apexcharts-yaxistooltip-right:after {\n  border-right-color: #ECEFF1;\n}\n\n.apexcharts-yaxistooltip-right:before {\n  border-right-color: #90A4AE;\n}\n\n.apexcharts-yaxistooltip-right.apexcharts-theme-dark:after {\n  border-right-color: rgba(0, 0, 0, 0.5);\n}\n\n.apexcharts-yaxistooltip-right.apexcharts-theme-dark:before {\n  border-right-color: rgba(0, 0, 0, 0.5);\n}\n\n.apexcharts-yaxistooltip.apexcharts-active {\n  opacity: 1;\n}\n\n.apexcharts-yaxistooltip-hidden {\n  display: none;\n}\n\n.apexcharts-xcrosshairs,\n.apexcharts-ycrosshairs {\n  pointer-events: none;\n  opacity: 0;\n  transition: 0.15s ease all;\n}\n\n.apexcharts-xcrosshairs.apexcharts-active,\n.apexcharts-ycrosshairs.apexcharts-active {\n  opacity: 1;\n  transition: 0.15s ease all;\n}\n\n.apexcharts-ycrosshairs-hidden {\n  opacity: 0;\n}\n\n.apexcharts-selection-rect {\n  cursor: move;\n}\n\n.svg_select_boundingRect, .svg_select_points_rot {\n  pointer-events: none;\n  opacity: 0;\n  visibility: hidden;\n}\n.apexcharts-selection-rect + g .svg_select_boundingRect,\n.apexcharts-selection-rect + g .svg_select_points_rot {\n  opacity: 0;\n  visibility: hidden;\n}\n\n.apexcharts-selection-rect + g .svg_select_points_l,\n.apexcharts-selection-rect + g .svg_select_points_r {\n  cursor: ew-resize;\n  opacity: 1;\n  visibility: visible;\n}\n\n.svg_select_points {\n  fill: #efefef;\n  stroke: #333;\n  rx: 2;\n}\n\n.apexcharts-svg.apexcharts-zoomable.hovering-zoom {\n  cursor: crosshair\n}\n\n.apexcharts-svg.apexcharts-zoomable.hovering-pan {\n  cursor: move\n}\n\n.apexcharts-zoom-icon,\n.apexcharts-zoomin-icon,\n.apexcharts-zoomout-icon,\n.apexcharts-reset-icon,\n.apexcharts-pan-icon,\n.apexcharts-selection-icon,\n.apexcharts-menu-icon,\n.apexcharts-toolbar-custom-icon {\n  cursor: pointer;\n  width: 20px;\n  height: 20px;\n  line-height: 24px;\n  color: #6E8192;\n  text-align: center;\n}\n\n.apexcharts-zoom-icon svg,\n.apexcharts-zoomin-icon svg,\n.apexcharts-zoomout-icon svg,\n.apexcharts-reset-icon svg,\n.apexcharts-menu-icon svg {\n  fill: #6E8192;\n}\n\n.apexcharts-selection-icon svg {\n  fill: #444;\n  transform: scale(0.76)\n}\n\n.apexcharts-theme-dark .apexcharts-zoom-icon svg,\n.apexcharts-theme-dark .apexcharts-zoomin-icon svg,\n.apexcharts-theme-dark .apexcharts-zoomout-icon svg,\n.apexcharts-theme-dark .apexcharts-reset-icon svg,\n.apexcharts-theme-dark .apexcharts-pan-icon svg,\n.apexcharts-theme-dark .apexcharts-selection-icon svg,\n.apexcharts-theme-dark .apexcharts-menu-icon svg,\n.apexcharts-theme-dark .apexcharts-toolbar-custom-icon svg {\n  fill: #f3f4f5;\n}\n\n.apexcharts-canvas .apexcharts-zoom-icon.apexcharts-selected svg,\n.apexcharts-canvas .apexcharts-selection-icon.apexcharts-selected svg,\n.apexcharts-canvas .apexcharts-reset-zoom-icon.apexcharts-selected svg {\n  fill: #008FFB;\n}\n\n.apexcharts-theme-light .apexcharts-selection-icon:not(.apexcharts-selected):hover svg,\n.apexcharts-theme-light .apexcharts-zoom-icon:not(.apexcharts-selected):hover svg,\n.apexcharts-theme-light .apexcharts-zoomin-icon:hover svg,\n.apexcharts-theme-light .apexcharts-zoomout-icon:hover svg,\n.apexcharts-theme-light .apexcharts-reset-icon:hover svg,\n.apexcharts-theme-light .apexcharts-menu-icon:hover svg {\n  fill: #333;\n}\n\n.apexcharts-selection-icon,\n.apexcharts-menu-icon {\n  position: relative;\n}\n\n.apexcharts-reset-icon {\n  margin-left: 5px;\n}\n\n.apexcharts-zoom-icon,\n.apexcharts-reset-icon,\n.apexcharts-menu-icon {\n  transform: scale(0.85);\n}\n\n.apexcharts-zoomin-icon,\n.apexcharts-zoomout-icon {\n  transform: scale(0.7)\n}\n\n.apexcharts-zoomout-icon {\n  margin-right: 3px;\n}\n\n.apexcharts-pan-icon {\n  transform: scale(0.62);\n  position: relative;\n  left: 1px;\n  top: 0px;\n}\n\n.apexcharts-pan-icon svg {\n  fill: #fff;\n  stroke: #6E8192;\n  stroke-width: 2;\n}\n\n.apexcharts-pan-icon.apexcharts-selected svg {\n  stroke: #008FFB;\n}\n\n.apexcharts-pan-icon:not(.apexcharts-selected):hover svg {\n  stroke: #333;\n}\n\n.apexcharts-toolbar {\n  position: absolute;\n  z-index: 11;\n  max-width: 176px;\n  text-align: right;\n  border-radius: 3px;\n  padding: 0px 6px 2px 6px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.apexcharts-menu {\n  background: #fff;\n  position: absolute;\n  top: 100%;\n  border: 1px solid #ddd;\n  border-radius: 3px;\n  padding: 3px;\n  right: 10px;\n  opacity: 0;\n  min-width: 110px;\n  transition: 0.15s ease all;\n  pointer-events: none;\n}\n\n.apexcharts-menu.apexcharts-menu-open {\n  opacity: 1;\n  pointer-events: all;\n  transition: 0.15s ease all;\n}\n\n.apexcharts-menu-item {\n  padding: 6px 7px;\n  font-size: 12px;\n  cursor: pointer;\n}\n\n.apexcharts-theme-light .apexcharts-menu-item:hover {\n  background: #eee;\n}\n\n.apexcharts-theme-dark .apexcharts-menu {\n  background: rgba(0, 0, 0, 0.7);\n  color: #fff;\n}\n\n@media screen and (min-width: 768px) {\n  .apexcharts-canvas:hover .apexcharts-toolbar {\n    opacity: 1;\n  }\n}\n\n.apexcharts-datalabel.apexcharts-element-hidden {\n  opacity: 0;\n}\n\n.apexcharts-pie-label,\n.apexcharts-datalabels,\n.apexcharts-datalabel,\n.apexcharts-datalabel-label,\n.apexcharts-datalabel-value {\n  cursor: default;\n  pointer-events: none;\n}\n\n.apexcharts-pie-label-delay {\n  opacity: 0;\n  animation-name: opaque;\n  animation-duration: 0.3s;\n  animation-fill-mode: forwards;\n  animation-timing-function: ease;\n}\n\n.apexcharts-canvas .apexcharts-element-hidden {\n  opacity: 0;\n}\n\n.apexcharts-hide .apexcharts-series-points {\n  opacity: 0;\n}\n\n.apexcharts-gridline,\n.apexcharts-annotation-rect,\n.apexcharts-xaxis-annotation-label,\n.apexcharts-yaxis-annotation-label,\n.apexcharts-point-annotation-label,\n.apexcharts-tooltip .apexcharts-marker,\n.apexcharts-area-series .apexcharts-area,\n.apexcharts-line,\n.apexcharts-zoom-rect,\n.apexcharts-toolbar svg,\n.apexcharts-area-series .apexcharts-series-markers .apexcharts-marker.no-pointer-events,\n.apexcharts-line-series .apexcharts-series-markers .apexcharts-marker.no-pointer-events,\n.apexcharts-radar-series path,\n.apexcharts-radar-series polygon {\n  pointer-events: none;\n}\n\n\n/* markers */\n\n.apexcharts-marker {\n  transition: 0.15s ease all;\n}\n\n@keyframes opaque {\n  0% {\n    opacity: 0;\n  }\n  100% {\n    opacity: 1;\n  }\n}\n\n\n/* Resize generated styles */\n\n@keyframes resizeanim {\n  from {\n    opacity: 0;\n  }\n  to {\n    opacity: 0;\n  }\n}\n\n.resize-triggers {\n  animation: 1ms resizeanim;\n  visibility: hidden;\n  opacity: 0;\n}\n\n.resize-triggers,\n.resize-triggers>div,\n.contract-trigger:before {\n  content: " ";\n  display: block;\n  position: absolute;\n  top: 0;\n  left: 0;\n  height: 100%;\n  width: 100%;\n  overflow: hidden;\n}\n\n.resize-triggers>div {\n  background: #eee;\n  overflow: auto;\n}\n\n.contract-trigger:before {\n  width: 200%;\n  height: 200%;\n}', r ? s.prepend(t.css) : o.head.appendChild(t.css))
                        }
                        var l = t.create(t.w.config.series, {});
                        if (!l) return e(t);
                        t.mount(l).then((function() {
                            "function" == typeof t.w.config.chart.events.mounted && t.w.config.chart.events.mounted(t, t.w), t.events.fireEvent("mounted", [t, t.w]), e(l)
                        })).catch((function(t) {
                            i(t)
                        }))
                    } else i(new Error("Element not found"))
                }))
            }
        }, {
            key: "create",
            value: function(t, e) {
                var i = this.w;
                new Ht(this).initModules();
                var a = this.w.globals;
                (a.noData = !1, a.animationEnded = !1, this.responsive.checkResponsiveConfig(e), i.config.xaxis.convertedCatToNumeric) && new D(i.config).convertCatToNumericXaxis(i.config, this.ctx);
                if (null === this.el) return a.animationEnded = !0, null;
                if (this.core.setupElements(), "treemap" === i.config.chart.type && (i.config.grid.show = !1, i.config.yaxis[0].show = !1), 0 === a.svgWidth) return a.animationEnded = !0, null;
                var s = y.checkComboSeries(t);
                a.comboCharts = s.comboCharts, a.comboBarCount = s.comboBarCount;
                var r = t.every((function(t) {
                    return t.data && 0 === t.data.length
                }));
                (0 === t.length || r) && this.series.handleNoData(), this.events.setupEventHandlers(), this.data.parseData(t), this.theme.init(), new T(this).setGlobalMarkerSize(), this.formatters.setLabelFormatters(), this.titleSubtitle.draw(), a.noData && a.collapsedSeries.length !== a.series.length && !i.config.legend.showForSingleSeries || this.legend.init(), this.series.hasAllSeriesEqualX(), a.axisCharts && (this.core.coreCalculations(), "category" !== i.config.xaxis.type && this.formatters.setLabelFormatters(), this.ctx.toolbar.minX = i.globals.minX, this.ctx.toolbar.maxX = i.globals.maxX), this.formatters.heatmapLabelFormatters(), new y(this).getLargestMarkerSize(), this.dimensions.plotCoords();
                var o = this.core.xySettings();
                this.grid.createGridMask();
                var n = this.core.plotChartType(t, o),
                    l = new z(this);
                l.bringForward(), i.config.dataLabels.background.enabled && l.dataLabelsBackground(), this.core.shiftGraphPosition();
                var h = {
                    plot: {
                        left: i.globals.translateX,
                        top: i.globals.translateY,
                        width: i.globals.gridWidth,
                        height: i.globals.gridHeight
                    }
                };
                return {
                    elGraph: n,
                    xyRatios: o,
                    elInner: i.globals.dom.elGraphical,
                    dimensions: h
                }
            }
        }, {
            key: "mount",
            value: function() {
                var t = this,
                    e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : null,
                    i = this,
                    a = i.w;
                return new Promise((function(s, r) {
                    if (null === i.el) return r(new Error("Not enough data to display or target element not found"));
                    (null === e || a.globals.allSeriesCollapsed) && i.series.handleNoData(), "treemap" !== a.config.chart.type && i.axes.drawAxis(a.config.chart.type, e.xyRatios), i.grid = new U(i);
                    var o = i.grid.drawGrid();
                    i.annotations = new P(i), i.annotations.drawImageAnnos(), i.annotations.drawTextAnnos(), "back" === a.config.grid.position && o && a.globals.dom.elGraphical.add(o.el);
                    var n = new _(t.ctx),
                        l = new $(t.ctx);
                    if (null !== o && (n.xAxisLabelCorrections(o.xAxisTickWidth), l.setYAxisTextAlignments(), a.config.yaxis.map((function(t, e) {
                            -1 === a.globals.ignoreYAxisIndexes.indexOf(e) && l.yAxisTitleRotate(e, t.opposite)
                        }))), "back" === a.config.annotations.position && (a.globals.dom.Paper.add(a.globals.dom.elAnnotations), i.annotations.drawAxesAnnotations()), Array.isArray(e.elGraph))
                        for (var h = 0; h < e.elGraph.length; h++) a.globals.dom.elGraphical.add(e.elGraph[h]);
                    else a.globals.dom.elGraphical.add(e.elGraph);
                    if ("front" === a.config.grid.position && o && a.globals.dom.elGraphical.add(o.el), "front" === a.config.xaxis.crosshairs.position && i.crosshairs.drawXCrosshairs(), "front" === a.config.yaxis[0].crosshairs.position && i.crosshairs.drawYCrosshairs(), "front" === a.config.annotations.position && (a.globals.dom.Paper.add(a.globals.dom.elAnnotations), i.annotations.drawAxesAnnotations()), !a.globals.noData) {
                        if (a.config.tooltip.enabled && !a.globals.noData && i.w.globals.tooltip.drawTooltip(e.xyRatios), a.globals.axisCharts && (a.globals.isXNumeric || a.config.xaxis.convertedCatToNumeric || a.globals.isRangeBar))(a.config.chart.zoom.enabled || a.config.chart.selection && a.config.chart.selection.enabled || a.config.chart.pan && a.config.chart.pan.enabled) && i.zoomPanSelection.init({
                            xyRatios: e.xyRatios
                        });
                        else {
                            var c = a.config.chart.toolbar.tools;
                            ["zoom", "zoomin", "zoomout", "selection", "pan", "reset"].forEach((function(t) {
                                c[t] = !1
                            }))
                        }
                        a.config.chart.toolbar.show && !a.globals.allSeriesCollapsed && i.toolbar.createToolbar()
                    }
                    a.globals.memory.methodsToExec.length > 0 && a.globals.memory.methodsToExec.forEach((function(t) {
                        t.method(t.params, !1, t.context)
                    })), a.globals.axisCharts || a.globals.noData || i.core.resizeNonAxisCharts(), s(i)
                }))
            }
        }, {
            key: "destroy",
            value: function() {
                var t, e;
                window.removeEventListener("resize", this.windowResizeHandler), this.el.parentNode, t = this.parentResizeHandler, (e = Nt.get(t)) && (e.disconnect(), Nt.delete(t));
                var i = this.w.config.chart.id;
                i && Apex._chartInstances.forEach((function(t, e) {
                    t.id === x.escapeString(i) && Apex._chartInstances.splice(e, 1)
                })), new Dt(this.ctx).clear({
                    isUpdating: !1
                })
            }
        }, {
            key: "updateOptions",
            value: function(t) {
                var e = this,
                    i = arguments.length > 1 && void 0 !== arguments[1] && arguments[1],
                    a = !(arguments.length > 2 && void 0 !== arguments[2]) || arguments[2],
                    s = !(arguments.length > 3 && void 0 !== arguments[3]) || arguments[3],
                    r = !(arguments.length > 4 && void 0 !== arguments[4]) || arguments[4],
                    o = this.w;
                return o.globals.selection = void 0, t.series && (this.series.resetSeries(!1, !0, !1), t.series.length && t.series[0].data && (t.series = t.series.map((function(t, i) {
                    return e.updateHelpers._extendSeries(t, i)
                }))), this.updateHelpers.revertDefaultAxisMinMax()), t.xaxis && (t = this.updateHelpers.forceXAxisUpdate(t)), t.yaxis && (t = this.updateHelpers.forceYAxisUpdate(t)), o.globals.collapsedSeriesIndices.length > 0 && this.series.clearPreviousPaths(), t.theme && (t = this.theme.updateThemeOptions(t)), this.updateHelpers._updateOptions(t, i, a, s, r)
            }
        }, {
            key: "updateSeries",
            value: function() {
                var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : [],
                    e = !(arguments.length > 1 && void 0 !== arguments[1]) || arguments[1],
                    i = !(arguments.length > 2 && void 0 !== arguments[2]) || arguments[2];
                return this.series.resetSeries(!1), this.updateHelpers.revertDefaultAxisMinMax(), this.updateHelpers._updateSeries(t, e, i)
            }
        }, {
            key: "appendSeries",
            value: function(t) {
                var e = !(arguments.length > 1 && void 0 !== arguments[1]) || arguments[1],
                    i = !(arguments.length > 2 && void 0 !== arguments[2]) || arguments[2],
                    a = this.w.config.series.slice();
                return a.push(t), this.series.resetSeries(!1), this.updateHelpers.revertDefaultAxisMinMax(), this.updateHelpers._updateSeries(a, e, i)
            }
        }, {
            key: "appendData",
            value: function(t) {
                var e = !(arguments.length > 1 && void 0 !== arguments[1]) || arguments[1],
                    i = this;
                i.w.globals.dataChanged = !0, i.series.getPreviousPaths();
                for (var a = i.w.config.series.slice(), s = 0; s < a.length; s++)
                    if (null !== t[s] && void 0 !== t[s])
                        for (var r = 0; r < t[s].data.length; r++) a[s].data.push(t[s].data[r]);
                return i.w.config.series = a, e && (i.w.globals.initialSeries = x.clone(i.w.config.series)), this.update()
            }
        }, {
            key: "update",
            value: function(t) {
                var e = this;
                return new Promise((function(i, a) {
                    new Dt(e.ctx).clear({
                        isUpdating: !0
                    });
                    var s = e.create(e.w.config.series, t);
                    if (!s) return i(e);
                    e.mount(s).then((function() {
                        "function" == typeof e.w.config.chart.events.updated && e.w.config.chart.events.updated(e, e.w), e.events.fireEvent("updated", [e, e.w]), e.w.globals.isDirty = !0, i(e)
                    })).catch((function(t) {
                        a(t)
                    }))
                }))
            }
        }, {
            key: "getSyncedCharts",
            value: function() {
                var t = this.getGroupedCharts(),
                    e = [this];
                return t.length && (e = [], t.forEach((function(t) {
                    e.push(t)
                }))), e
            }
        }, {
            key: "getGroupedCharts",
            value: function() {
                var t = this;
                return Apex._chartInstances.filter((function(t) {
                    if (t.group) return !0
                })).map((function(e) {
                    return t.w.config.chart.group === e.group ? e.chart : t
                }))
            }
        }, {
            key: "toggleSeries",
            value: function(t) {
                return this.series.toggleSeries(t)
            }
        }, {
            key: "highlightSeriesOnLegendHover",
            value: function(t, e) {
                return this.series.toggleSeriesOnHover(t, e)
            }
        }, {
            key: "showSeries",
            value: function(t) {
                this.series.showSeries(t)
            }
        }, {
            key: "hideSeries",
            value: function(t) {
                this.series.hideSeries(t)
            }
        }, {
            key: "resetSeries",
            value: function() {
                var t = !(arguments.length > 0 && void 0 !== arguments[0]) || arguments[0],
                    e = !(arguments.length > 1 && void 0 !== arguments[1]) || arguments[1];
                this.series.resetSeries(t, e)
            }
        }, {
            key: "addEventListener",
            value: function(t, e) {
                this.events.addEventListener(t, e)
            }
        }, {
            key: "removeEventListener",
            value: function(t, e) {
                this.events.removeEventListener(t, e)
            }
        }, {
            key: "addXaxisAnnotation",
            value: function(t) {
                var e = !(arguments.length > 1 && void 0 !== arguments[1]) || arguments[1],
                    i = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : void 0,
                    a = this;
                i && (a = i), a.annotations.addXaxisAnnotationExternal(t, e, a)
            }
        }, {
            key: "addYaxisAnnotation",
            value: function(t) {
                var e = !(arguments.length > 1 && void 0 !== arguments[1]) || arguments[1],
                    i = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : void 0,
                    a = this;
                i && (a = i), a.annotations.addYaxisAnnotationExternal(t, e, a)
            }
        }, {
            key: "addPointAnnotation",
            value: function(t) {
                var e = !(arguments.length > 1 && void 0 !== arguments[1]) || arguments[1],
                    i = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : void 0,
                    a = this;
                i && (a = i), a.annotations.addPointAnnotationExternal(t, e, a)
            }
        }, {
            key: "clearAnnotations",
            value: function() {
                var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : void 0,
                    e = this;
                t && (e = t), e.annotations.clearAnnotations(e)
            }
        }, {
            key: "removeAnnotation",
            value: function(t) {
                var e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : void 0,
                    i = this;
                e && (i = e), i.annotations.removeAnnotation(i, t)
            }
        }, {
            key: "getChartArea",
            value: function() {
                return this.w.globals.dom.baseEl.querySelector(".apexcharts-inner")
            }
        }, {
            key: "getSeriesTotalXRange",
            value: function(t, e) {
                return this.coreUtils.getSeriesTotalsXRange(t, e)
            }
        }, {
            key: "getHighestValueInSeries",
            value: function() {
                var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 0,
                    e = new Z(this.ctx);
                return e.getMinYMaxY(t).highestY
            }
        }, {
            key: "getLowestValueInSeries",
            value: function() {
                var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 0,
                    e = new Z(this.ctx);
                return e.getMinYMaxY(t).lowestY
            }
        }, {
            key: "getSeriesTotal",
            value: function() {
                return this.w.globals.seriesTotals
            }
        }, {
            key: "toggleDataPointSelection",
            value: function(t, e) {
                return this.updateHelpers.toggleDataPointSelection(t, e)
            }
        }, {
            key: "zoomX",
            value: function(t, e) {
                this.ctx.toolbar.zoomUpdateOptions(t, e)
            }
        }, {
            key: "setLocale",
            value: function(t) {
                this.localization.setCurrentLocaleValues(t)
            }
        }, {
            key: "dataURI",
            value: function(t) {
                return new j(this.ctx).dataURI(t)
            }
        }, {
            key: "exportToCSV",
            value: function() {
                var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},
                    e = new j(this.ctx);
                return e.exportToCSV(t)
            }
        }, {
            key: "paper",
            value: function() {
                return this.w.globals.dom.Paper
            }
        }, {
            key: "_parentResizeCallback",
            value: function() {
                this.w.globals.animationEnded && this.w.config.chart.redrawOnParentResize && this._windowResize()
            }
        }, {
            key: "_windowResize",
            value: function() {
                var t = this;
                clearTimeout(this.w.globals.resizeTimer), this.w.globals.resizeTimer = window.setTimeout((function() {
                    t.w.globals.resized = !0, t.w.globals.dataChanged = !1, t.ctx.update()
                }), 150)
            }
        }, {
            key: "_windowResizeHandler",
            value: function() {
                var t = this.w.config.chart.redrawOnWindowResize;
                "function" == typeof t && (t = t()), t && this._windowResize()
            }
        }], [{
            key: "getChartByID",
            value: function(t) {
                var e = x.escapeString(t),
                    i = Apex._chartInstances.filter((function(t) {
                        return t.id === e
                    }))[0];
                return i && i.chart
            }
        }, {
            key: "initOnLoad",
            value: function() {
                for (var e = document.querySelectorAll("[data-apexcharts]"), i = 0; i < e.length; i++) {
                    new t(e[i], JSON.parse(e[i].getAttribute("data-options"))).render()
                }
            }
        }, {
            key: "exec",
            value: function(t, e) {
                var i = this.getChartByID(t);
                if (i) {
                    i.w.globals.isExecCalled = !0;
                    var a = null;
                    if (-1 !== i.publicMethods.indexOf(e)) {
                        for (var s = arguments.length, r = new Array(s > 2 ? s - 2 : 0), o = 2; o < s; o++) r[o - 2] = arguments[o];
                        a = i[e].apply(i, r)
                    }
                    return a
                }
            }
        }, {
            key: "merge",
            value: function(t, e) {
                return x.extend(t, e)
            }
        }]), t
    }()
}));
$(function() {
    'use strict'



    var colors = {
        primary: "#6571ff",
        secondary: "#7987a1",
        success: "#05a34a",
        info: "#66d1d1",
        warning: "#fbbc06",
        danger: "#ff3366",
        light: "#e9ecef",
        dark: "#060c17",
        muted: "#7987a1",
        gridBorder: "rgba(77, 138, 240, .15)",
        bodyColor: "#000",
        cardBg: "#fff"
    }

    var fontFamily = "'iransans', Helvetica, sans-serif"

    var revenueChartData = [
        49.33,
        48.79,
        50.61,
        53.31,
        54.78,
        53.84,
        54.68,
        56.74,
        56.99,
        56.14,
        56.56,
        60.35,
        58.74,
        61.44,
        61.11,
        58.57,
        54.72,
        52.07,
        51.09,
        47.48,
        48.57,
        48.99,
        53.58,
        50.28,
        46.24,
        48.61,
        51.75,
        51.34,
        50.21,
        54.65,
        52.44,
        53.06,
        57.07,
        52.97,
        48.72,
        52.69,
        53.59,
        58.52,
        55.10,
        58.05,
        61.35,
        57.74,
        60.27,
        61.00,
        57.78,
        56.80,
        58.90,
        62.45,
        58.75,
        58.40,
        56.74,
        52.76,
        52.30,
        50.56,
        55.40,
        50.49,
        52.49,
        48.79,
        47.46,
        43.31,
        38.96,
        34.73,
        31.03,
        32.63,
        36.89,
        35.89,
        32.74,
        33.20,
        30.82,
        28.64,
        28.44,
        27.73,
        27.75,
        25.96,
        24.38,
        21.95,
        22.08,
        23.54,
        27.30,
        30.27,
        27.25,
        29.92,
        25.14,
        23.09,
        23.79,
        23.46,
        27.99,
        23.21,
        23.91,
        19.21,
        15.13,
        15.08,
        11.00,
        9.20,
        7.47,
        11.64,
        15.76,
        13.99,
        12.59,
        13.53,
        15.01,
        13.95,
        13.23,
        18.10,
        20.63,
        21.06,
        25.37,
        25.32,
        20.94,
        18.75,
        15.38,
        14.56,
        17.94,
        15.96,
        16.35,
        14.16,
        12.10,
        14.84,
        17.24,
        17.79,
        14.03,
        18.65,
        18.46,
        22.68,
        25.08,
        28.18,
        28.03,
        24.11,
        24.28,
        28.23,
        26.24,
        29.33,
        26.07,
        23.92,
        28.82,
        25.14,
        21.79,
        23.05,
        20.71,
        29.72,
        30.21,
        32.56,
        31.46,
        33.69,
        30.05,
        34.20,
        36.93,
        35.50,
        34.78,
        36.97
    ];

    var revenueChartCategories = [
        "Jan 01 2022", "Jan 02 2022", "jan 03 2022", "Jan 04 2022", "Jan 05 2022", "Jan 06 2022", "Jan 07 2022", "Jan 08 2022", "Jan 09 2022", "Jan 10 2022", "Jan 11 2022", "Jan 12 2022", "Jan 13 2022", "Jan 14 2022", "Jan 15 2022", "Jan 16 2022", "Jan 17 2022", "Jan 18 2022", "Jan 19 2022", "Jan 20 2022", "Jan 21 2022", "Jan 22 2022", "Jan 23 2022", "Jan 24 2022", "Jan 25 2022", "Jan 26 2022", "Jan 27 2022", "Jan 28 2022", "Jan 29 2022", "Jan 30 2022", "Jan 31 2022",
        "Feb 01 2022", "Feb 02 2022", "Feb 03 2022", "Feb 04 2022", "Feb 05 2022", "Feb 06 2022", "Feb 07 2022", "Feb 08 2022", "Feb 09 2022", "Feb 10 2022", "Feb 11 2022", "Feb 12 2022", "Feb 13 2022", "Feb 14 2022", "Feb 15 2022", "Feb 16 2022", "Feb 17 2022", "Feb 18 2022", "Feb 19 2022", "Feb 20 2022", "Feb 21 2022", "Feb 22 2022", "Feb 23 2022", "Feb 24 2022", "Feb 25 2022", "Feb 26 2022", "Feb 27 2022", "Feb 28 2022",
        "Mar 01 2022", "Mar 02 2022", "Mar 03 2022", "Mar 04 2022", "Mar 05 2022", "Mar 06 2022", "Mar 07 2022", "Mar 08 2022", "Mar 09 2022", "Mar 10 2022", "Mar 11 2022", "Mar 12 2022", "Mar 13 2022", "Mar 14 2022", "Mar 15 2022", "Mar 16 2022", "Mar 17 2022", "Mar 18 2022", "Mar 19 2022", "Mar 20 2022", "Mar 21 2022", "Mar 22 2022", "Mar 23 2022", "Mar 24 2022", "Mar 25 2022", "Mar 26 2022", "Mar 27 2022", "Mar 28 2022", "Mar 29 2022", "Mar 30 2022", "Mar 31 2022",
        "Apr 01 2022", "Apr 02 2022", "Apr 03 2022", "Apr 04 2022", "Apr 05 2022", "Apr 06 2022", "Apr 07 2022", "Apr 08 2022", "Apr 09 2022", "Apr 10 2022", "Apr 11 2022", "Apr 12 2022", "Apr 13 2022", "Apr 14 2022", "Apr 15 2022", "Apr 16 2022", "Apr 17 2022", "Apr 18 2022", "Apr 19 2022", "Apr 20 2022", "Apr 21 2022", "Apr 22 2022", "Apr 23 2022", "Apr 24 2022", "Apr 25 2022", "Apr 26 2022", "Apr 27 2022", "Apr 28 2022", "Apr 29 2022", "Apr 30 2022",
        "May 01 2022", "May 02 2022", "May 03 2022", "May 04 2022", "May 05 2022", "May 06 2022", "May 07 2022", "May 08 2022", "May 09 2022", "May 10 2022", "May 11 2022", "May 12 2022", "May 13 2022", "May 14 2022", "May 15 2022", "May 16 2022", "May 17 2022", "May 18 2022", "May 19 2022", "May 20 2022", "May 21 2022", "May 22 2022", "May 23 2022", "May 24 2022", "May 25 2022", "May 26 2022", "May 27 2022", "May 28 2022", "May 29 2022", "May 30 2022",
    ]





    // Date Picker
    if ($('#dashboardDate').length) {
        flatpickr("#dashboardDate", {
            wrap: true,
            dateFormat: "d-M-Y",
            defaultDate: "today",
        });
    }
    // Date Picker - END





    // New Customers Chart
    if ($('#customersChart').length) {
        var options1 = {
            chart: {
                type: "line",
                height: 60,
                sparkline: {
                    enabled: !0
                }
            },
            series: [{
                name: '',
                data: [3844, 3855, 3841, 3867, 3822, 3843, 3821, 3841, 3856, 3827, 3843]
            }],
            xaxis: {
                type: 'datetime',
                categories: ["Jan 01 2022", "Jan 02 2022", "Jan 03 2022", "Jan 04 2022", "Jan 05 2022", "Jan 06 2022", "Jan 07 2022", "Jan 08 2022", "Jan 09 2022", "Jan 10 2022", "Jan 11 2022", ],
            },
            stroke: {
                width: 2,
                curve: "smooth"
            },
            markers: {
                size: 0
            },
            colors: [colors.primary],
        };
        new ApexCharts(document.querySelector("#customersChart"), options1).render();
    }
    // New Customers Chart - END




    // Orders Chart
    if ($('#ordersChart').length) {
        var options2 = {
            chart: {
                type: "bar",
                height: 60,
                sparkline: {
                    enabled: !0
                }
            },
            plotOptions: {
                bar: {
                    borderRadius: 2,
                    columnWidth: "60%"
                }
            },
            colors: [colors.primary],
            series: [{
                name: '',
                data: [36, 77, 52, 90, 74, 35, 55, 23, 47, 10, 63]
            }],
            xaxis: {
                type: 'datetime',
                categories: ["Jan 01 2022", "Jan 02 2022", "Jan 03 2022", "Jan 04 2022", "Jan 05 2022", "Jan 06 2022", "Jan 07 2022", "Jan 08 2022", "Jan 09 2022", "Jan 10 2022", "Jan 11 2022", ],
            },
        };
        new ApexCharts(document.querySelector("#ordersChart"), options2).render();
    }
    // Orders Chart - END




    // Growth Chart
    if ($('#growthChart').length) {
        var options3 = {
            chart: {
                type: "line",
                height: 60,
                sparkline: {
                    enabled: !0
                }
            },
            series: [{
                name: '',
                data: [41, 45, 44, 46, 52, 54, 43, 74, 82, 82, 89]
            }],
            xaxis: {
                type: 'datetime',
                categories: ["Jan 01 2022", "Jan 02 2022", "Jan 03 2022", "Jan 04 2022", "Jan 05 2022", "Jan 06 2022", "Jan 07 2022", "Jan 08 2022", "Jan 09 2022", "Jan 10 2022", "Jan 11 2022", ],
            },
            stroke: {
                width: 2,
                curve: "smooth"
            },
            markers: {
                size: 0
            },
            colors: [colors.primary],
        };
        new ApexCharts(document.querySelector("#growthChart"), options3).render();
    }
    // Growth Chart - END





    // Revenue Chart
    if ($('#revenueChart').length) {
        var lineChartOptions = {
            chart: {
                type: "line",
                height: '400',
                parentHeightOffset: 0,
                foreColor: colors.bodyColor,
                background: colors.cardBg,
                toolbar: {
                    show: false
                },
            },
            theme: {
                mode: 'light'
            },
            tooltip: {
                theme: 'light'
            },
            colors: [colors.primary, colors.danger, colors.warning],
            grid: {
                padding: {
                    bottom: -4,
                },
                borderColor: colors.gridBorder,
                xaxis: {
                    lines: {
                        show: true
                    }
                }
            },
            series: [{
                name: "درآمد",
                data: revenueChartData
            }, ],
            xaxis: {
                type: "datetime",
                categories: revenueChartCategories,
                lines: {
                    show: true
                },
                axisBorder: {
                    color: colors.gridBorder,
                },
                axisTicks: {
                    color: colors.gridBorder,
                },
                crosshairs: {
                    stroke: {
                        color: colors.secondary,
                    },
                },
            },
            yaxis: {
                title: {
                    text: 'درآمد ( تومان1000 x )',
                    style: {
                        size: 9,
                        color: colors.muted
                    }
                },
                tickAmount: 4,
                tooltip: {
                    enabled: true
                },
                crosshairs: {
                    stroke: {
                        color: colors.secondary,
                    },
                },
            },
            markers: {
                size: 0,
            },
            stroke: {
                width: 2,
                curve: "straight",
            },
        };
        var apexLineChart = new ApexCharts(document.querySelector("#revenueChart"), lineChartOptions);
        apexLineChart.render();
    }
    // Revenue Chart - END





    // Revenue Chart - RTL
    if ($('#revenueChartRTL').length) {
        var lineChartOptions = {
            chart: {
                type: "line",
                height: '400',
                parentHeightOffset: 0,
                foreColor: colors.bodyColor,
                background: colors.cardBg,
                toolbar: {
                    show: false
                },
            },
            theme: {
                mode: 'light'
            },
            tooltip: {
                theme: 'light'
            },
            colors: [colors.primary, colors.danger, colors.warning],
            grid: {
                padding: {
                    bottom: -4,
                },
                borderColor: colors.gridBorder,
                xaxis: {
                    lines: {
                        show: true
                    }
                }
            },
            series: [{
                name: "درآمد",
                data: revenueChartData
            }, ],
            xaxis: {
                type: "datetime",
                categories: revenueChartCategories,
                lines: {
                    show: true
                },
                axisBorder: {
                    color: colors.gridBorder,
                },
                axisTicks: {
                    color: colors.gridBorder,
                },
                crosshairs: {
                    stroke: {
                        color: colors.secondary,
                    },
                },
            },
            yaxis: {
                opposite: true,
                title: {
                    text: 'درآمد ( تومان1000 x )',
                    offsetX: -5,
                    style: {
                        size: 9,
                        color: colors.muted
                    }
                },
                labels: {
                    align: 'left',
                    offsetX: -0,
                },
                tickAmount: 4,
                tooltip: {
                    enabled: true
                },
                crosshairs: {
                    stroke: {
                        color: colors.secondary,
                    },
                },
            },
            markers: {
                size: 0,
            },
            stroke: {
                width: 2,
                curve: "straight",
            },
        };
        var apexLineChart = new ApexCharts(document.querySelector("#revenueChartRTL"), lineChartOptions);
        apexLineChart.render();
    }
    // Revenue Chart - RTL - END





    // Monthly Sales Chart
    if ($('#monthlySalesChart').length) {
        var options = {
            chart: {
                type: 'bar',
                height: '318',
                parentHeightOffset: 0,
                foreColor: colors.bodyColor,
                background: colors.cardBg,
                toolbar: {
                    show: false
                },
            },
            theme: {
                mode: 'light'
            },
            tooltip: {
                theme: 'light'
            },
            colors: [colors.primary],
            fill: {
                opacity: .9
            },
            grid: {
                padding: {
                    bottom: -4
                },
                borderColor: colors.gridBorder,
                xaxis: {
                    lines: {
                        show: true
                    }
                }
            },
            series: [{
                name: 'فروش',
                data: [152, 109, 93, 113, 126, 161, 188, 143, 102, 113, 116, 124]
            }],
            xaxis: {
                type: 'datetime',
                categories: ['01/01/2022', '02/01/2022', '03/01/2022', '04/01/2022', '05/01/2022', '06/01/2022', '07/01/2022', '08/01/2022', '09/01/2022', '10/01/2022', '11/01/2022', '12/01/2022'],
                axisBorder: {
                    color: colors.gridBorder,
                },
                axisTicks: {
                    color: colors.gridBorder,
                },
            },
            yaxis: {
                title: {
                    text: 'تعداد فروش',
                    style: {
                        size: 9,
                        color: colors.muted
                    }
                },
            },
            legend: {
                show: true,
                position: "top",
                horizontalAlign: 'center',
                fontFamily: fontFamily,
                itemMargin: {
                    horizontal: 8,
                    vertical: 0
                },
            },
            stroke: {
                width: 0
            },
            dataLabels: {
                enabled: true,
                style: {
                    fontSize: '10px',
                    fontFamily: fontFamily,
                },
                offsetY: -27
            },
            plotOptions: {
                bar: {
                    columnWidth: "50%",
                    borderRadius: 4,
                    dataLabels: {
                        position: 'top',
                        orientation: 'vertical',
                    }
                },
            },
        }

        var apexBarChart = new ApexCharts(document.querySelector("#monthlySalesChart"), options);
        apexBarChart.render();
    }
    // Monthly Sales Chart - END




    // Monthly Sales Chart - RTL
    if ($('#monthlySalesChartRTL').length) {
        var options = {
            chart: {
                type: 'bar',
                height: '318',
                parentHeightOffset: 0,
                foreColor: colors.bodyColor,
                background: colors.cardBg,
                toolbar: {
                    show: false
                },
            },
            theme: {
                mode: 'light'
            },
            tooltip: {
                theme: 'light'
            },
            colors: [colors.primary],
            fill: {
                opacity: .9
            },
            grid: {
                padding: {
                    bottom: -4
                },
                borderColor: colors.gridBorder,
                xaxis: {
                    lines: {
                        show: true
                    }
                }
            },
            series: [{
                name: 'فروش',
                data: [152, 109, 93, 113, 126, 161, 188, 143, 102, 113, 116, 124]
            }],
            xaxis: {
                type: 'datetime',
                categories: ['01/01/2022', '02/01/2022', '03/01/2022', '04/01/2022', '05/01/2022', '06/01/2022', '07/01/2022', '08/01/2022', '09/01/2022', '10/01/2022', '11/01/2022', '12/01/2022'],
                axisBorder: {
                    color: colors.gridBorder,
                },
                axisTicks: {
                    color: colors.gridBorder,
                },
            },
            yaxis: {
                opposite: true,
                title: {
                    text: 'تعداد فروش',
                    offsetX: -5,
                    style: {
                        size: 9,
                        color: colors.muted
                    }
                },
                labels: {
                    align: 'left',
                    offsetX: 0,
                },
            },
            legend: {
                show: true,
                position: "top",
                horizontalAlign: 'center',
                fontFamily: fontFamily,
                itemMargin: {
                    horizontal: 8,
                    vertical: 0
                },
            },
            stroke: {
                width: 0
            },
            dataLabels: {
                enabled: true,
                style: {
                    fontSize: '10px',
                    fontFamily: fontFamily,
                },
                offsetY: -27
            },
            plotOptions: {
                bar: {
                    columnWidth: "50%",
                    borderRadius: 4,
                    dataLabels: {
                        position: 'top',
                        orientation: 'vertical',
                    }
                },
            },
        }

        var apexBarChart = new ApexCharts(document.querySelector("#monthlySalesChartRTL"), options);
        apexBarChart.render();
    }
    // Monthly Sales Chart - RTL - END





    // Cloud Storage Chart
    if ($('#storageChart').length) {
        var options = {
            chart: {
                height: 260,
                type: "radialBar"
            },
            series: [67],
            colors: [colors.primary],
            plotOptions: {
                radialBar: {
                    hollow: {
                        margin: 15,
                        size: "70%"
                    },
                    track: {
                        show: true,
                        background: colors.light,
                        strokeWidth: '100%',
                        opacity: 1,
                        margin: 5,
                    },
                    dataLabels: {
                        showOn: "always",
                        name: {
                            offsetY: -11,
                            show: true,
                            color: colors.muted,
                            fontSize: "13px"
                        },
                        value: {
                            color: colors.bodyColor,
                            fontSize: "30px",
                            show: true
                        }
                    }
                }
            },
            fill: {
                opacity: 1
            },
            stroke: {
                lineCap: "round",
            },
            labels: ["فضای استفاده شده"]
        };

        var chart = new ApexCharts(document.querySelector("#storageChart"), options);
        chart.render();
    }
    // Cloud Storage Chart - END


});
! function(e, n) {
    "object" == typeof exports && "object" == typeof module ? module.exports = n() : "function" == typeof define && define.amd ? define([], n) : "object" == typeof exports ? exports.feather = n() : e.feather = n()
}("undefined" != typeof self ? self : this, function() {
    return function(e) {
        var n = {};

        function i(t) {
            if (n[t]) return n[t].exports;
            var l = n[t] = {
                i: t,
                l: !1,
                exports: {}
            };
            return e[t].call(l.exports, l, l.exports, i), l.l = !0, l.exports
        }
        return i.m = e, i.c = n, i.d = function(e, n, t) {
            i.o(e, n) || Object.defineProperty(e, n, {
                configurable: !1,
                enumerable: !0,
                get: t
            })
        }, i.r = function(e) {
            Object.defineProperty(e, "__esModule", {
                value: !0
            })
        }, i.n = function(e) {
            var n = e && e.__esModule ? function() {
                return e.default
            } : function() {
                return e
            };
            return i.d(n, "a", n), n
        }, i.o = function(e, n) {
            return Object.prototype.hasOwnProperty.call(e, n)
        }, i.p = "", i(i.s = 80)
    }([function(e, n, i) {
        (function(n) {
            var i = "object",
                t = function(e) {
                    return e && e.Math == Math && e
                };
            e.exports = t(typeof globalThis == i && globalThis) || t(typeof window == i && window) || t(typeof self == i && self) || t(typeof n == i && n) || Function("return this")()
        }).call(this, i(75))
    }, function(e, n) {
        var i = {}.hasOwnProperty;
        e.exports = function(e, n) {
            return i.call(e, n)
        }
    }, function(e, n, i) {
        var t = i(0),
            l = i(11),
            r = i(33),
            o = i(62),
            a = t.Symbol,
            c = l("wks");
        e.exports = function(e) {
            return c[e] || (c[e] = o && a[e] || (o ? a : r)("Symbol." + e))
        }
    }, function(e, n, i) {
        var t = i(6);
        e.exports = function(e) {
            if (!t(e)) throw TypeError(String(e) + " is not an object");
            return e
        }
    }, function(e, n) {
        e.exports = function(e) {
            try {
                return !!e()
            } catch (e) {
                return !0
            }
        }
    }, function(e, n, i) {
        var t = i(8),
            l = i(7),
            r = i(10);
        e.exports = t ? function(e, n, i) {
            return l.f(e, n, r(1, i))
        } : function(e, n, i) {
            return e[n] = i, e
        }
    }, function(e, n) {
        e.exports = function(e) {
            return "object" == typeof e ? null !== e : "function" == typeof e
        }
    }, function(e, n, i) {
        var t = i(8),
            l = i(35),
            r = i(3),
            o = i(18),
            a = Object.defineProperty;
        n.f = t ? a : function(e, n, i) {
            if (r(e), n = o(n, !0), r(i), l) try {
                return a(e, n, i)
            } catch (e) {}
            if ("get" in i || "set" in i) throw TypeError("Accessors not supported");
            return "value" in i && (e[n] = i.value), e
        }
    }, function(e, n, i) {
        var t = i(4);
        e.exports = !t(function() {
            return 7 != Object.defineProperty({}, "a", {
                get: function() {
                    return 7
                }
            }).a
        })
    }, function(e, n) {
        e.exports = {}
    }, function(e, n) {
        e.exports = function(e, n) {
            return {
                enumerable: !(1 & e),
                configurable: !(2 & e),
                writable: !(4 & e),
                value: n
            }
        }
    }, function(e, n, i) {
        var t = i(0),
            l = i(19),
            r = i(17),
            o = t["__core-js_shared__"] || l("__core-js_shared__", {});
        (e.exports = function(e, n) {
            return o[e] || (o[e] = void 0 !== n ? n : {})
        })("versions", []).push({
            version: "3.1.3",
            mode: r ? "pure" : "global",
            copyright: "Â© 2019 Denis Pushkarev (zloirock.ru)"
        })
    }, function(e, n, i) {
        "use strict";
        Object.defineProperty(n, "__esModule", {
            value: !0
        });
        var t = o(i(43)),
            l = o(i(41)),
            r = o(i(40));

        function o(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        }
        n.default = Object.keys(l.default).map(function(e) {
            return new t.default(e, l.default[e], r.default[e])
        }).reduce(function(e, n) {
            return e[n.name] = n, e
        }, {})
    }, function(e, n) {
        e.exports = ["constructor", "hasOwnProperty", "isPrototypeOf", "propertyIsEnumerable", "toLocaleString", "toString", "valueOf"]
    }, function(e, n, i) {
        var t = i(72),
            l = i(20);
        e.exports = function(e) {
            return t(l(e))
        }
    }, function(e, n) {
        e.exports = {}
    }, function(e, n, i) {
        var t = i(11),
            l = i(33),
            r = t("keys");
        e.exports = function(e) {
            return r[e] || (r[e] = l(e))
        }
    }, function(e, n) {
        e.exports = !1
    }, function(e, n, i) {
        var t = i(6);
        e.exports = function(e, n) {
            if (!t(e)) return e;
            var i, l;
            if (n && "function" == typeof(i = e.toString) && !t(l = i.call(e))) return l;
            if ("function" == typeof(i = e.valueOf) && !t(l = i.call(e))) return l;
            if (!n && "function" == typeof(i = e.toString) && !t(l = i.call(e))) return l;
            throw TypeError("Can't convert object to primitive value")
        }
    }, function(e, n, i) {
        var t = i(0),
            l = i(5);
        e.exports = function(e, n) {
            try {
                l(t, e, n)
            } catch (i) {
                t[e] = n
            }
            return n
        }
    }, function(e, n) {
        e.exports = function(e) {
            if (void 0 == e) throw TypeError("Can't call method on " + e);
            return e
        }
    }, function(e, n) {
        var i = Math.ceil,
            t = Math.floor;
        e.exports = function(e) {
            return isNaN(e = +e) ? 0 : (e > 0 ? t : i)(e)
        }
    }, function(e, n, i) {
        var t;
        /*!
          Copyright (c) 2016 Jed Watson.
          Licensed under the MIT License (MIT), see
          http://jedwatson.github.io/classnames
        */
        /*!
          Copyright (c) 2016 Jed Watson.
          Licensed under the MIT License (MIT), see
          http://jedwatson.github.io/classnames
        */
        ! function() {
            "use strict";
            var i = function() {
                function e() {}

                function n(e, n) {
                    for (var i = n.length, t = 0; t < i; ++t) l(e, n[t])
                }
                e.prototype = Object.create(null);
                var i = {}.hasOwnProperty;
                var t = /\s+/;

                function l(e, l) {
                    if (l) {
                        var r = typeof l;
                        "string" === r ? function(e, n) {
                            for (var i = n.split(t), l = i.length, r = 0; r < l; ++r) e[i[r]] = !0
                        }(e, l) : Array.isArray(l) ? n(e, l) : "object" === r ? function(e, n) {
                            for (var t in n) i.call(n, t) && (e[t] = !!n[t])
                        }(e, l) : "number" === r && function(e, n) {
                            e[n] = !0
                        }(e, l)
                    }
                }
                return function() {
                    for (var i = arguments.length, t = Array(i), l = 0; l < i; l++) t[l] = arguments[l];
                    var r = new e;
                    n(r, t);
                    var o = [];
                    for (var a in r) r[a] && o.push(a);
                    return o.join(" ")
                }
            }();
            void 0 !== e && e.exports ? e.exports = i : void 0 === (t = function() {
                return i
            }.apply(n, [])) || (e.exports = t)
        }()
    }, function(e, n, i) {
        var t = i(7).f,
            l = i(1),
            r = i(2)("toStringTag");
        e.exports = function(e, n, i) {
            e && !l(e = i ? e : e.prototype, r) && t(e, r, {
                configurable: !0,
                value: n
            })
        }
    }, function(e, n, i) {
        var t = i(20);
        e.exports = function(e) {
            return Object(t(e))
        }
    }, function(e, n, i) {
        var t = i(1),
            l = i(24),
            r = i(16),
            o = i(63),
            a = r("IE_PROTO"),
            c = Object.prototype;
        e.exports = o ? Object.getPrototypeOf : function(e) {
            return e = l(e), t(e, a) ? e[a] : "function" == typeof e.constructor && e instanceof e.constructor ? e.constructor.prototype : e instanceof Object ? c : null
        }
    }, function(e, n, i) {
        "use strict";
        var t, l, r, o = i(25),
            a = i(5),
            c = i(1),
            p = i(2),
            y = i(17),
            h = p("iterator"),
            x = !1;
        [].keys && ("next" in (r = [].keys()) ? (l = o(o(r))) !== Object.prototype && (t = l) : x = !0), void 0 == t && (t = {}), y || c(t, h) || a(t, h, function() {
            return this
        }), e.exports = {
            IteratorPrototype: t,
            BUGGY_SAFARI_ITERATORS: x
        }
    }, function(e, n, i) {
        var t = i(21),
            l = Math.min;
        e.exports = function(e) {
            return e > 0 ? l(t(e), 9007199254740991) : 0
        }
    }, function(e, n, i) {
        var t = i(1),
            l = i(14),
            r = i(68),
            o = i(15),
            a = r(!1);
        e.exports = function(e, n) {
            var i, r = l(e),
                c = 0,
                p = [];
            for (i in r) !t(o, i) && t(r, i) && p.push(i);
            for (; n.length > c;) t(r, i = n[c++]) && (~a(p, i) || p.push(i));
            return p
        }
    }, function(e, n, i) {
        var t = i(0),
            l = i(11),
            r = i(5),
            o = i(1),
            a = i(19),
            c = i(36),
            p = i(37),
            y = p.get,
            h = p.enforce,
            x = String(c).split("toString");
        l("inspectSource", function(e) {
            return c.call(e)
        }), (e.exports = function(e, n, i, l) {
            var c = !!l && !!l.unsafe,
                p = !!l && !!l.enumerable,
                y = !!l && !!l.noTargetGet;
            "function" == typeof i && ("string" != typeof n || o(i, "name") || r(i, "name", n), h(i).source = x.join("string" == typeof n ? n : "")), e !== t ? (c ? !y && e[n] && (p = !0) : delete e[n], p ? e[n] = i : r(e, n, i)) : p ? e[n] = i : a(n, i)
        })(Function.prototype, "toString", function() {
            return "function" == typeof this && y(this).source || c.call(this)
        })
    }, function(e, n) {
        var i = {}.toString;
        e.exports = function(e) {
            return i.call(e).slice(8, -1)
        }
    }, function(e, n, i) {
        var t = i(8),
            l = i(73),
            r = i(10),
            o = i(14),
            a = i(18),
            c = i(1),
            p = i(35),
            y = Object.getOwnPropertyDescriptor;
        n.f = t ? y : function(e, n) {
            if (e = o(e), n = a(n, !0), p) try {
                return y(e, n)
            } catch (e) {}
            if (c(e, n)) return r(!l.f.call(e, n), e[n])
        }
    }, function(e, n, i) {
        var t = i(0),
            l = i(31).f,
            r = i(5),
            o = i(29),
            a = i(19),
            c = i(71),
            p = i(65);
        e.exports = function(e, n) {
            var i, y, h, x, s, u = e.target,
                d = e.global,
                f = e.stat;
            if (i = d ? t : f ? t[u] || a(u, {}) : (t[u] || {}).prototype)
                for (y in n) {
                    if (x = n[y], h = e.noTargetGet ? (s = l(i, y)) && s.value : i[y], !p(d ? y : u + (f ? "." : "#") + y, e.forced) && void 0 !== h) {
                        if (typeof x == typeof h) continue;
                        c(x, h)
                    }(e.sham || h && h.sham) && r(x, "sham", !0), o(i, y, x, e)
                }
        }
    }, function(e, n) {
        var i = 0,
            t = Math.random();
        e.exports = function(e) {
            return "Symbol(".concat(void 0 === e ? "" : e, ")_", (++i + t).toString(36))
        }
    }, function(e, n, i) {
        var t = i(0),
            l = i(6),
            r = t.document,
            o = l(r) && l(r.createElement);
        e.exports = function(e) {
            return o ? r.createElement(e) : {}
        }
    }, function(e, n, i) {
        var t = i(8),
            l = i(4),
            r = i(34);
        e.exports = !t && !l(function() {
            return 7 != Object.defineProperty(r("div"), "a", {
                get: function() {
                    return 7
                }
            }).a
        })
    }, function(e, n, i) {
        var t = i(11);
        e.exports = t("native-function-to-string", Function.toString)
    }, function(e, n, i) {
        var t, l, r, o = i(76),
            a = i(0),
            c = i(6),
            p = i(5),
            y = i(1),
            h = i(16),
            x = i(15),
            s = a.WeakMap;
        if (o) {
            var u = new s,
                d = u.get,
                f = u.has,
                g = u.set;
            t = function(e, n) {
                return g.call(u, e, n), n
            }, l = function(e) {
                return d.call(u, e) || {}
            }, r = function(e) {
                return f.call(u, e)
            }
        } else {
            var v = h("state");
            x[v] = !0, t = function(e, n) {
                return p(e, v, n), n
            }, l = function(e) {
                return y(e, v) ? e[v] : {}
            }, r = function(e) {
                return y(e, v)
            }
        }
        e.exports = {
            set: t,
            get: l,
            has: r,
            enforce: function(e) {
                return r(e) ? l(e) : t(e, {})
            },
            getterFor: function(e) {
                return function(n) {
                    var i;
                    if (!c(n) || (i = l(n)).type !== e) throw TypeError("Incompatible receiver, " + e + " required");
                    return i
                }
            }
        }
    }, function(e, n, i) {
        "use strict";
        Object.defineProperty(n, "__esModule", {
            value: !0
        });
        var t = Object.assign || function(e) {
                for (var n = 1; n < arguments.length; n++) {
                    var i = arguments[n];
                    for (var t in i) Object.prototype.hasOwnProperty.call(i, t) && (e[t] = i[t])
                }
                return e
            },
            l = o(i(22)),
            r = o(i(12));

        function o(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        }
        n.default = function() {
            var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
            if ("undefined" == typeof document) throw new Error("`feather.replace()` only works in a browser environment.");
            var n = document.querySelectorAll("[data-feather]");
            Array.from(n).forEach(function(n) {
                return function(e) {
                    var n = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {},
                        i = function(e) {
                            return Array.from(e.attributes).reduce(function(e, n) {
                                return e[n.name] = n.value, e
                            }, {})
                        }(e),
                        o = i["data-feather"];
                    delete i["data-feather"];
                    var a = r.default[o].toSvg(t({}, n, i, {
                            class: (0, l.default)(n.class, i.class)
                        })),
                        c = (new DOMParser).parseFromString(a, "image/svg+xml").querySelector("svg");
                    e.parentNode.replaceChild(c, e)
                }(n, e)
            })
        }
    }, function(e, n, i) {
        "use strict";
        Object.defineProperty(n, "__esModule", {
            value: !0
        });
        var t, l = i(12),
            r = (t = l) && t.__esModule ? t : {
                default: t
            };
        n.default = function(e) {
            var n = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
            if (console.warn("feather.toSvg() is deprecated. Please use feather.icons[name].toSvg() instead."), !e) throw new Error("The required `key` (icon name) parameter is missing.");
            if (!r.default[e]) throw new Error("No icon matching '" + e + "'. See the complete list of icons at https://feathericons.com");
            return r.default[e].toSvg(n)
        }
    }, function(e) {
        e.exports = {
            activity: ["pulse", "health", "action", "motion"],
            airplay: ["stream", "cast", "mirroring"],
            "alert-circle": ["warning", "alert", "danger"],
            "alert-octagon": ["warning", "alert", "danger"],
            "alert-triangle": ["warning", "alert", "danger"],
            "align-center": ["text alignment", "center"],
            "align-justify": ["text alignment", "justified"],
            "align-left": ["text alignment", "left"],
            "align-right": ["text alignment", "right"],
            anchor: [],
            archive: ["index", "box"],
            "at-sign": ["mention", "at", "email", "message"],
            award: ["achievement", "badge"],
            aperture: ["camera", "photo"],
            "bar-chart": ["statistics", "diagram", "graph"],
            "bar-chart-2": ["statistics", "diagram", "graph"],
            battery: ["power", "electricity"],
            "battery-charging": ["power", "electricity"],
            bell: ["alarm", "notification", "sound"],
            "bell-off": ["alarm", "notification", "silent"],
            bluetooth: ["wireless"],
            "book-open": ["read", "library"],
            book: ["read", "dictionary", "booklet", "magazine", "library"],
            bookmark: ["read", "clip", "marker", "tag"],
            box: ["cube"],
            briefcase: ["work", "bag", "baggage", "folder"],
            calendar: ["date"],
            camera: ["photo"],
            cast: ["chromecast", "airplay"],
            "chevron-down": ["expand"],
            "chevron-up": ["collapse"],
            circle: ["off", "zero", "record"],
            clipboard: ["copy"],
            clock: ["time", "watch", "alarm"],
            "cloud-drizzle": ["weather", "shower"],
            "cloud-lightning": ["weather", "bolt"],
            "cloud-rain": ["weather"],
            "cloud-snow": ["weather", "blizzard"],
            cloud: ["weather"],
            codepen: ["logo"],
            codesandbox: ["logo"],
            code: ["source", "programming"],
            coffee: ["drink", "cup", "mug", "tea", "cafe", "hot", "beverage"],
            columns: ["layout"],
            command: ["keyboard", "cmd", "terminal", "prompt"],
            compass: ["navigation", "safari", "travel", "direction"],
            copy: ["clone", "duplicate"],
            "corner-down-left": ["arrow", "return"],
            "corner-down-right": ["arrow"],
            "corner-left-down": ["arrow"],
            "corner-left-up": ["arrow"],
            "corner-right-down": ["arrow"],
            "corner-right-up": ["arrow"],
            "corner-up-left": ["arrow"],
            "corner-up-right": ["arrow"],
            cpu: ["processor", "technology"],
            "credit-card": ["purchase", "payment", "cc"],
            crop: ["photo", "image"],
            crosshair: ["aim", "target"],
            database: ["storage", "memory"],
            delete: ["remove"],
            disc: ["album", "cd", "dvd", "music"],
            "dollar-sign": ["currency", "money", "payment"],
            droplet: ["water"],
            edit: ["pencil", "change"],
            "edit-2": ["pencil", "change"],
            "edit-3": ["pencil", "change"],
            eye: ["view", "watch"],
            "eye-off": ["view", "watch", "hide", "hidden"],
            "external-link": ["outbound"],
            facebook: ["logo", "social"],
            "fast-forward": ["music"],
            figma: ["logo", "design", "tool"],
            "file-minus": ["delete", "remove", "erase"],
            "file-plus": ["add", "create", "new"],
            "file-text": ["data", "txt", "pdf"],
            film: ["movie", "video"],
            filter: ["funnel", "hopper"],
            flag: ["report"],
            "folder-minus": ["directory"],
            "folder-plus": ["directory"],
            folder: ["directory"],
            framer: ["logo", "design", "tool"],
            frown: ["emoji", "face", "bad", "sad", "emotion"],
            gift: ["present", "box", "birthday", "party"],
            "git-branch": ["code", "version control"],
            "git-commit": ["code", "version control"],
            "git-merge": ["code", "version control"],
            "git-pull-request": ["code", "version control"],
            github: ["logo", "version control"],
            gitlab: ["logo", "version control"],
            globe: ["world", "browser", "language", "translate"],
            "hard-drive": ["computer", "server", "memory", "data"],
            hash: ["hashtag", "number", "pound"],
            headphones: ["music", "audio", "sound"],
            heart: ["like", "love", "emotion"],
            "help-circle": ["question mark"],
            hexagon: ["shape", "node.js", "logo"],
            home: ["house", "living"],
            image: ["picture"],
            inbox: ["email"],
            instagram: ["logo", "camera"],
            key: ["password", "login", "authentication", "secure"],
            layers: ["stack"],
            layout: ["window", "webpage"],
            "life-bouy": ["help", "life ring", "support"],
            link: ["chain", "url"],
            "link-2": ["chain", "url"],
            linkedin: ["logo", "social media"],
            list: ["options"],
            lock: ["security", "password", "secure"],
            "log-in": ["sign in", "arrow", "enter"],
            "log-out": ["sign out", "arrow", "exit"],
            mail: ["email", "message"],
            "map-pin": ["location", "navigation", "travel", "marker"],
            map: ["location", "navigation", "travel"],
            maximize: ["fullscreen"],
            "maximize-2": ["fullscreen", "arrows", "expand"],
            meh: ["emoji", "face", "neutral", "emotion"],
            menu: ["bars", "navigation", "hamburger"],
            "message-circle": ["comment", "chat"],
            "message-square": ["comment", "chat"],
            "mic-off": ["record", "sound", "mute"],
            mic: ["record", "sound", "listen"],
            minimize: ["exit fullscreen", "close"],
            "minimize-2": ["exit fullscreen", "arrows", "close"],
            minus: ["subtract"],
            monitor: ["tv", "screen", "display"],
            moon: ["dark", "night"],
            "more-horizontal": ["ellipsis"],
            "more-vertical": ["ellipsis"],
            "mouse-pointer": ["arrow", "cursor"],
            move: ["arrows"],
            music: ["note"],
            navigation: ["location", "travel"],
            "navigation-2": ["location", "travel"],
            octagon: ["stop"],
            package: ["box", "container"],
            paperclip: ["attachment"],
            pause: ["music", "stop"],
            "pause-circle": ["music", "audio", "stop"],
            "pen-tool": ["vector", "drawing"],
            percent: ["discount"],
            "phone-call": ["ring"],
            "phone-forwarded": ["call"],
            "phone-incoming": ["call"],
            "phone-missed": ["call"],
            "phone-off": ["call", "mute"],
            "phone-outgoing": ["call"],
            phone: ["call"],
            play: ["music", "start"],
            "pie-chart": ["statistics", "diagram"],
            "play-circle": ["music", "start"],
            plus: ["add", "new"],
            "plus-circle": ["add", "new"],
            "plus-square": ["add", "new"],
            pocket: ["logo", "save"],
            power: ["on", "off"],
            printer: ["fax", "office", "device"],
            radio: ["signal"],
            "refresh-cw": ["synchronise", "arrows"],
            "refresh-ccw": ["arrows"],
            repeat: ["loop", "arrows"],
            rewind: ["music"],
            "rotate-ccw": ["arrow"],
            "rotate-cw": ["arrow"],
            rss: ["feed", "subscribe"],
            save: ["floppy disk"],
            scissors: ["cut"],
            search: ["find", "magnifier", "magnifying glass"],
            send: ["message", "mail", "email", "paper airplane", "paper aeroplane"],
            settings: ["cog", "edit", "gear", "preferences"],
            "share-2": ["network", "connections"],
            shield: ["security", "secure"],
            "shield-off": ["security", "insecure"],
            "shopping-bag": ["ecommerce", "cart", "purchase", "store"],
            "shopping-cart": ["ecommerce", "cart", "purchase", "store"],
            shuffle: ["music"],
            "skip-back": ["music"],
            "skip-forward": ["music"],
            slack: ["logo"],
            slash: ["ban", "no"],
            sliders: ["settings", "controls"],
            smartphone: ["cellphone", "device"],
            smile: ["emoji", "face", "happy", "good", "emotion"],
            speaker: ["audio", "music"],
            star: ["bookmark", "favorite", "like"],
            "stop-circle": ["media", "music"],
            sun: ["brightness", "weather", "light"],
            sunrise: ["weather", "time", "morning", "day"],
            sunset: ["weather", "time", "evening", "night"],
            tablet: ["device"],
            tag: ["label"],
            target: ["logo", "bullseye"],
            terminal: ["code", "command line", "prompt"],
            thermometer: ["temperature", "celsius", "fahrenheit", "weather"],
            "thumbs-down": ["dislike", "bad", "emotion"],
            "thumbs-up": ["like", "good", "emotion"],
            "toggle-left": ["on", "off", "switch"],
            "toggle-right": ["on", "off", "switch"],
            tool: ["settings", "spanner"],
            trash: ["garbage", "delete", "remove", "bin"],
            "trash-2": ["garbage", "delete", "remove", "bin"],
            triangle: ["delta"],
            truck: ["delivery", "van", "shipping", "transport", "lorry"],
            tv: ["television", "stream"],
            twitch: ["logo"],
            twitter: ["logo", "social"],
            type: ["text"],
            umbrella: ["rain", "weather"],
            unlock: ["security"],
            "user-check": ["followed", "subscribed"],
            "user-minus": ["delete", "remove", "unfollow", "unsubscribe"],
            "user-plus": ["new", "add", "create", "follow", "subscribe"],
            "user-x": ["delete", "remove", "unfollow", "unsubscribe", "unavailable"],
            user: ["person", "account"],
            users: ["group"],
            "video-off": ["camera", "movie", "film"],
            video: ["camera", "movie", "film"],
            voicemail: ["phone"],
            volume: ["music", "sound", "mute"],
            "volume-1": ["music", "sound"],
            "volume-2": ["music", "sound"],
            "volume-x": ["music", "sound", "mute"],
            watch: ["clock", "time"],
            "wifi-off": ["disabled"],
            wifi: ["connection", "signal", "wireless"],
            wind: ["weather", "air"],
            "x-circle": ["cancel", "close", "delete", "remove", "times", "clear"],
            "x-octagon": ["delete", "stop", "alert", "warning", "times", "clear"],
            "x-square": ["cancel", "close", "delete", "remove", "times", "clear"],
            x: ["cancel", "close", "delete", "remove", "times", "clear"],
            youtube: ["logo", "video", "play"],
            "zap-off": ["flash", "camera", "lightning"],
            zap: ["flash", "camera", "lightning"],
            "zoom-in": ["magnifying glass"],
            "zoom-out": ["magnifying glass"]
        }
    }, function(e) {
        e.exports = {
            activity: '<polyline points="22 12 18 12 15 21 9 3 6 12 2 12"></polyline>',
            airplay: '<path d="M5 17H4a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h16a2 2 0 0 1 2 2v10a2 2 0 0 1-2 2h-1"></path><polygon points="12 15 17 21 7 21 12 15"></polygon>',
            "alert-circle": '<circle cx="12" cy="12" r="10"></circle><line x1="12" y1="8" x2="12" y2="12"></line><line x1="12" y1="16" x2="12.01" y2="16"></line>',
            "alert-octagon": '<polygon points="7.86 2 16.14 2 22 7.86 22 16.14 16.14 22 7.86 22 2 16.14 2 7.86 7.86 2"></polygon><line x1="12" y1="8" x2="12" y2="12"></line><line x1="12" y1="16" x2="12.01" y2="16"></line>',
            "alert-triangle": '<path d="M10.29 3.86L1.82 18a2 2 0 0 0 1.71 3h16.94a2 2 0 0 0 1.71-3L13.71 3.86a2 2 0 0 0-3.42 0z"></path><line x1="12" y1="9" x2="12" y2="13"></line><line x1="12" y1="17" x2="12.01" y2="17"></line>',
            "align-center": '<line x1="18" y1="10" x2="6" y2="10"></line><line x1="21" y1="6" x2="3" y2="6"></line><line x1="21" y1="14" x2="3" y2="14"></line><line x1="18" y1="18" x2="6" y2="18"></line>',
            "align-justify": '<line x1="21" y1="10" x2="3" y2="10"></line><line x1="21" y1="6" x2="3" y2="6"></line><line x1="21" y1="14" x2="3" y2="14"></line><line x1="21" y1="18" x2="3" y2="18"></line>',
            "align-left": '<line x1="17" y1="10" x2="3" y2="10"></line><line x1="21" y1="6" x2="3" y2="6"></line><line x1="21" y1="14" x2="3" y2="14"></line><line x1="17" y1="18" x2="3" y2="18"></line>',
            "align-right": '<line x1="21" y1="10" x2="7" y2="10"></line><line x1="21" y1="6" x2="3" y2="6"></line><line x1="21" y1="14" x2="3" y2="14"></line><line x1="21" y1="18" x2="7" y2="18"></line>',
            anchor: '<circle cx="12" cy="5" r="3"></circle><line x1="12" y1="22" x2="12" y2="8"></line><path d="M5 12H2a10 10 0 0 0 20 0h-3"></path>',
            aperture: '<circle cx="12" cy="12" r="10"></circle><line x1="14.31" y1="8" x2="20.05" y2="17.94"></line><line x1="9.69" y1="8" x2="21.17" y2="8"></line><line x1="7.38" y1="12" x2="13.12" y2="2.06"></line><line x1="9.69" y1="16" x2="3.95" y2="6.06"></line><line x1="14.31" y1="16" x2="2.83" y2="16"></line><line x1="16.62" y1="12" x2="10.88" y2="21.94"></line>',
            archive: '<polyline points="21 8 21 21 3 21 3 8"></polyline><rect x="1" y="3" width="22" height="5"></rect><line x1="10" y1="12" x2="14" y2="12"></line>',
            "arrow-down-circle": '<circle cx="12" cy="12" r="10"></circle><polyline points="8 12 12 16 16 12"></polyline><line x1="12" y1="8" x2="12" y2="16"></line>',
            "arrow-down-left": '<line x1="17" y1="7" x2="7" y2="17"></line><polyline points="17 17 7 17 7 7"></polyline>',
            "arrow-down-right": '<line x1="7" y1="7" x2="17" y2="17"></line><polyline points="17 7 17 17 7 17"></polyline>',
            "arrow-down": '<line x1="12" y1="5" x2="12" y2="19"></line><polyline points="19 12 12 19 5 12"></polyline>',
            "arrow-left-circle": '<circle cx="12" cy="12" r="10"></circle><polyline points="12 8 8 12 12 16"></polyline><line x1="16" y1="12" x2="8" y2="12"></line>',
            "arrow-left": '<line x1="19" y1="12" x2="5" y2="12"></line><polyline points="12 19 5 12 12 5"></polyline>',
            "arrow-right-circle": '<circle cx="12" cy="12" r="10"></circle><polyline points="12 16 16 12 12 8"></polyline><line x1="8" y1="12" x2="16" y2="12"></line>',
            "arrow-right": '<line x1="5" y1="12" x2="19" y2="12"></line><polyline points="12 5 19 12 12 19"></polyline>',
            "arrow-up-circle": '<circle cx="12" cy="12" r="10"></circle><polyline points="16 12 12 8 8 12"></polyline><line x1="12" y1="16" x2="12" y2="8"></line>',
            "arrow-up-left": '<line x1="17" y1="17" x2="7" y2="7"></line><polyline points="7 17 7 7 17 7"></polyline>',
            "arrow-up-right": '<line x1="7" y1="17" x2="17" y2="7"></line><polyline points="7 7 17 7 17 17"></polyline>',
            "arrow-up": '<line x1="12" y1="19" x2="12" y2="5"></line><polyline points="5 12 12 5 19 12"></polyline>',
            "at-sign": '<circle cx="12" cy="12" r="4"></circle><path d="M16 8v5a3 3 0 0 0 6 0v-1a10 10 0 1 0-3.92 7.94"></path>',
            award: '<circle cx="12" cy="8" r="7"></circle><polyline points="8.21 13.89 7 23 12 20 17 23 15.79 13.88"></polyline>',
            "bar-chart-2": '<line x1="18" y1="20" x2="18" y2="10"></line><line x1="12" y1="20" x2="12" y2="4"></line><line x1="6" y1="20" x2="6" y2="14"></line>',
            "bar-chart": '<line x1="12" y1="20" x2="12" y2="10"></line><line x1="18" y1="20" x2="18" y2="4"></line><line x1="6" y1="20" x2="6" y2="16"></line>',
            "battery-charging": '<path d="M5 18H3a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h3.19M15 6h2a2 2 0 0 1 2 2v8a2 2 0 0 1-2 2h-3.19"></path><line x1="23" y1="13" x2="23" y2="11"></line><polyline points="11 6 7 12 13 12 9 18"></polyline>',
            battery: '<rect x="1" y="6" width="18" height="12" rx="2" ry="2"></rect><line x1="23" y1="13" x2="23" y2="11"></line>',
            "bell-off": '<path d="M13.73 21a2 2 0 0 1-3.46 0"></path><path d="M18.63 13A17.89 17.89 0 0 1 18 8"></path><path d="M6.26 6.26A5.86 5.86 0 0 0 6 8c0 7-3 9-3 9h14"></path><path d="M18 8a6 6 0 0 0-9.33-5"></path><line x1="1" y1="1" x2="23" y2="23"></line>',
            bell: '<path d="M18 8A6 6 0 0 0 6 8c0 7-3 9-3 9h18s-3-2-3-9"></path><path d="M13.73 21a2 2 0 0 1-3.46 0"></path>',
            bluetooth: '<polyline points="6.5 6.5 17.5 17.5 12 23 12 1 17.5 6.5 6.5 17.5"></polyline>',
            bold: '<path d="M6 4h8a4 4 0 0 1 4 4 4 4 0 0 1-4 4H6z"></path><path d="M6 12h9a4 4 0 0 1 4 4 4 4 0 0 1-4 4H6z"></path>',
            "book-open": '<path d="M2 3h6a4 4 0 0 1 4 4v14a3 3 0 0 0-3-3H2z"></path><path d="M22 3h-6a4 4 0 0 0-4 4v14a3 3 0 0 1 3-3h7z"></path>',
            book: '<path d="M4 19.5A2.5 2.5 0 0 1 6.5 17H20"></path><path d="M6.5 2H20v20H6.5A2.5 2.5 0 0 1 4 19.5v-15A2.5 2.5 0 0 1 6.5 2z"></path>',
            bookmark: '<path d="M19 21l-7-5-7 5V5a2 2 0 0 1 2-2h10a2 2 0 0 1 2 2z"></path>',
            box: '<path d="M21 16V8a2 2 0 0 0-1-1.73l-7-4a2 2 0 0 0-2 0l-7 4A2 2 0 0 0 3 8v8a2 2 0 0 0 1 1.73l7 4a2 2 0 0 0 2 0l7-4A2 2 0 0 0 21 16z"></path><polyline points="3.27 6.96 12 12.01 20.73 6.96"></polyline><line x1="12" y1="22.08" x2="12" y2="12"></line>',
            briefcase: '<rect x="2" y="7" width="20" height="14" rx="2" ry="2"></rect><path d="M16 21V5a2 2 0 0 0-2-2h-4a2 2 0 0 0-2 2v16"></path>',
            calendar: '<rect x="3" y="4" width="18" height="18" rx="2" ry="2"></rect><line x1="16" y1="2" x2="16" y2="6"></line><line x1="8" y1="2" x2="8" y2="6"></line><line x1="3" y1="10" x2="21" y2="10"></line>',
            "camera-off": '<line x1="1" y1="1" x2="23" y2="23"></line><path d="M21 21H3a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h3m3-3h6l2 3h4a2 2 0 0 1 2 2v9.34m-7.72-2.06a4 4 0 1 1-5.56-5.56"></path>',
            camera: '<path d="M23 19a2 2 0 0 1-2 2H3a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h4l2-3h6l2 3h4a2 2 0 0 1 2 2z"></path><circle cx="12" cy="13" r="4"></circle>',
            cast: '<path d="M2 16.1A5 5 0 0 1 5.9 20M2 12.05A9 9 0 0 1 9.95 20M2 8V6a2 2 0 0 1 2-2h16a2 2 0 0 1 2 2v12a2 2 0 0 1-2 2h-6"></path><line x1="2" y1="20" x2="2.01" y2="20"></line>',
            "check-circle": '<path d="M22 11.08V12a10 10 0 1 1-5.93-9.14"></path><polyline points="22 4 12 14.01 9 11.01"></polyline>',
            "check-square": '<polyline points="9 11 12 14 22 4"></polyline><path d="M21 12v7a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h11"></path>',
            check: '<polyline points="20 6 9 17 4 12"></polyline>',
            "chevron-down": '<polyline points="6 9 12 15 18 9"></polyline>',
            "chevron-left": '<polyline points="15 18 9 12 15 6"></polyline>',
            "chevron-right": '<polyline points="9 18 15 12 9 6"></polyline>',
            "chevron-up": '<polyline points="18 15 12 9 6 15"></polyline>',
            "chevrons-down": '<polyline points="7 13 12 18 17 13"></polyline><polyline points="7 6 12 11 17 6"></polyline>',
            "chevrons-left": '<polyline points="11 17 6 12 11 7"></polyline><polyline points="18 17 13 12 18 7"></polyline>',
            "chevrons-right": '<polyline points="13 17 18 12 13 7"></polyline><polyline points="6 17 11 12 6 7"></polyline>',
            "chevrons-up": '<polyline points="17 11 12 6 7 11"></polyline><polyline points="17 18 12 13 7 18"></polyline>',
            chrome: '<circle cx="12" cy="12" r="10"></circle><circle cx="12" cy="12" r="4"></circle><line x1="21.17" y1="8" x2="12" y2="8"></line><line x1="3.95" y1="6.06" x2="8.54" y2="14"></line><line x1="10.88" y1="21.94" x2="15.46" y2="14"></line>',
            circle: '<circle cx="12" cy="12" r="10"></circle>',
            clipboard: '<path d="M16 4h2a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h2"></path><rect x="8" y="2" width="8" height="4" rx="1" ry="1"></rect>',
            clock: '<circle cx="12" cy="12" r="10"></circle><polyline points="12 6 12 12 16 14"></polyline>',
            "cloud-drizzle": '<line x1="8" y1="19" x2="8" y2="21"></line><line x1="8" y1="13" x2="8" y2="15"></line><line x1="16" y1="19" x2="16" y2="21"></line><line x1="16" y1="13" x2="16" y2="15"></line><line x1="12" y1="21" x2="12" y2="23"></line><line x1="12" y1="15" x2="12" y2="17"></line><path d="M20 16.58A5 5 0 0 0 18 7h-1.26A8 8 0 1 0 4 15.25"></path>',
            "cloud-lightning": '<path d="M19 16.9A5 5 0 0 0 18 7h-1.26a8 8 0 1 0-11.62 9"></path><polyline points="13 11 9 17 15 17 11 23"></polyline>',
            "cloud-off": '<path d="M22.61 16.95A5 5 0 0 0 18 10h-1.26a8 8 0 0 0-7.05-6M5 5a8 8 0 0 0 4 15h9a5 5 0 0 0 1.7-.3"></path><line x1="1" y1="1" x2="23" y2="23"></line>',
            "cloud-rain": '<line x1="16" y1="13" x2="16" y2="21"></line><line x1="8" y1="13" x2="8" y2="21"></line><line x1="12" y1="15" x2="12" y2="23"></line><path d="M20 16.58A5 5 0 0 0 18 7h-1.26A8 8 0 1 0 4 15.25"></path>',
            "cloud-snow": '<path d="M20 17.58A5 5 0 0 0 18 8h-1.26A8 8 0 1 0 4 16.25"></path><line x1="8" y1="16" x2="8.01" y2="16"></line><line x1="8" y1="20" x2="8.01" y2="20"></line><line x1="12" y1="18" x2="12.01" y2="18"></line><line x1="12" y1="22" x2="12.01" y2="22"></line><line x1="16" y1="16" x2="16.01" y2="16"></line><line x1="16" y1="20" x2="16.01" y2="20"></line>',
            cloud: '<path d="M18 10h-1.26A8 8 0 1 0 9 20h9a5 5 0 0 0 0-10z"></path>',
            code: '<polyline points="16 18 22 12 16 6"></polyline><polyline points="8 6 2 12 8 18"></polyline>',
            codepen: '<polygon points="12 2 22 8.5 22 15.5 12 22 2 15.5 2 8.5 12 2"></polygon><line x1="12" y1="22" x2="12" y2="15.5"></line><polyline points="22 8.5 12 15.5 2 8.5"></polyline><polyline points="2 15.5 12 8.5 22 15.5"></polyline><line x1="12" y1="2" x2="12" y2="8.5"></line>',
            codesandbox: '<path d="M21 16V8a2 2 0 0 0-1-1.73l-7-4a2 2 0 0 0-2 0l-7 4A2 2 0 0 0 3 8v8a2 2 0 0 0 1 1.73l7 4a2 2 0 0 0 2 0l7-4A2 2 0 0 0 21 16z"></path><polyline points="7.5 4.21 12 6.81 16.5 4.21"></polyline><polyline points="7.5 19.79 7.5 14.6 3 12"></polyline><polyline points="21 12 16.5 14.6 16.5 19.79"></polyline><polyline points="3.27 6.96 12 12.01 20.73 6.96"></polyline><line x1="12" y1="22.08" x2="12" y2="12"></line>',
            coffee: '<path d="M18 8h1a4 4 0 0 1 0 8h-1"></path><path d="M2 8h16v9a4 4 0 0 1-4 4H6a4 4 0 0 1-4-4V8z"></path><line x1="6" y1="1" x2="6" y2="4"></line><line x1="10" y1="1" x2="10" y2="4"></line><line x1="14" y1="1" x2="14" y2="4"></line>',
            columns: '<path d="M12 3h7a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2h-7m0-18H5a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h7m0-18v18"></path>',
            command: '<path d="M18 3a3 3 0 0 0-3 3v12a3 3 0 0 0 3 3 3 3 0 0 0 3-3 3 3 0 0 0-3-3H6a3 3 0 0 0-3 3 3 3 0 0 0 3 3 3 3 0 0 0 3-3V6a3 3 0 0 0-3-3 3 3 0 0 0-3 3 3 3 0 0 0 3 3h12a3 3 0 0 0 3-3 3 3 0 0 0-3-3z"></path>',
            compass: '<circle cx="12" cy="12" r="10"></circle><polygon points="16.24 7.76 14.12 14.12 7.76 16.24 9.88 9.88 16.24 7.76"></polygon>',
            copy: '<rect x="9" y="9" width="13" height="13" rx="2" ry="2"></rect><path d="M5 15H4a2 2 0 0 1-2-2V4a2 2 0 0 1 2-2h9a2 2 0 0 1 2 2v1"></path>',
            "corner-down-left": '<polyline points="9 10 4 15 9 20"></polyline><path d="M20 4v7a4 4 0 0 1-4 4H4"></path>',
            "corner-down-right": '<polyline points="15 10 20 15 15 20"></polyline><path d="M4 4v7a4 4 0 0 0 4 4h12"></path>',
            "corner-left-down": '<polyline points="14 15 9 20 4 15"></polyline><path d="M20 4h-7a4 4 0 0 0-4 4v12"></path>',
            "corner-left-up": '<polyline points="14 9 9 4 4 9"></polyline><path d="M20 20h-7a4 4 0 0 1-4-4V4"></path>',
            "corner-right-down": '<polyline points="10 15 15 20 20 15"></polyline><path d="M4 4h7a4 4 0 0 1 4 4v12"></path>',
            "corner-right-up": '<polyline points="10 9 15 4 20 9"></polyline><path d="M4 20h7a4 4 0 0 0 4-4V4"></path>',
            "corner-up-left": '<polyline points="9 14 4 9 9 4"></polyline><path d="M20 20v-7a4 4 0 0 0-4-4H4"></path>',
            "corner-up-right": '<polyline points="15 14 20 9 15 4"></polyline><path d="M4 20v-7a4 4 0 0 1 4-4h12"></path>',
            cpu: '<rect x="4" y="4" width="16" height="16" rx="2" ry="2"></rect><rect x="9" y="9" width="6" height="6"></rect><line x1="9" y1="1" x2="9" y2="4"></line><line x1="15" y1="1" x2="15" y2="4"></line><line x1="9" y1="20" x2="9" y2="23"></line><line x1="15" y1="20" x2="15" y2="23"></line><line x1="20" y1="9" x2="23" y2="9"></line><line x1="20" y1="14" x2="23" y2="14"></line><line x1="1" y1="9" x2="4" y2="9"></line><line x1="1" y1="14" x2="4" y2="14"></line>',
            "credit-card": '<rect x="1" y="4" width="22" height="16" rx="2" ry="2"></rect><line x1="1" y1="10" x2="23" y2="10"></line>',
            crop: '<path d="M6.13 1L6 16a2 2 0 0 0 2 2h15"></path><path d="M1 6.13L16 6a2 2 0 0 1 2 2v15"></path>',
            crosshair: '<circle cx="12" cy="12" r="10"></circle><line x1="22" y1="12" x2="18" y2="12"></line><line x1="6" y1="12" x2="2" y2="12"></line><line x1="12" y1="6" x2="12" y2="2"></line><line x1="12" y1="22" x2="12" y2="18"></line>',
            database: '<ellipse cx="12" cy="5" rx="9" ry="3"></ellipse><path d="M21 12c0 1.66-4 3-9 3s-9-1.34-9-3"></path><path d="M3 5v14c0 1.66 4 3 9 3s9-1.34 9-3V5"></path>',
            delete: '<path d="M21 4H8l-7 8 7 8h13a2 2 0 0 0 2-2V6a2 2 0 0 0-2-2z"></path><line x1="18" y1="9" x2="12" y2="15"></line><line x1="12" y1="9" x2="18" y2="15"></line>',
            disc: '<circle cx="12" cy="12" r="10"></circle><circle cx="12" cy="12" r="3"></circle>',
            "divide-circle": '<line x1="8" y1="12" x2="16" y2="12"></line><line x1="12" y1="16" x2="12" y2="16"></line><line x1="12" y1="8" x2="12" y2="8"></line><circle cx="12" cy="12" r="10"></circle>',
            "divide-square": '<rect x="3" y="3" width="18" height="18" rx="2" ry="2"></rect><line x1="8" y1="12" x2="16" y2="12"></line><line x1="12" y1="16" x2="12" y2="16"></line><line x1="12" y1="8" x2="12" y2="8"></line>',
            divide: '<circle cx="12" cy="6" r="2"></circle><line x1="5" y1="12" x2="19" y2="12"></line><circle cx="12" cy="18" r="2"></circle>',
            "dollar-sign": '<line x1="12" y1="1" x2="12" y2="23"></line><path d="M17 5H9.5a3.5 3.5 0 0 0 0 7h5a3.5 3.5 0 0 1 0 7H6"></path>',
            "download-cloud": '<polyline points="8 17 12 21 16 17"></polyline><line x1="12" y1="12" x2="12" y2="21"></line><path d="M20.88 18.09A5 5 0 0 0 18 9h-1.26A8 8 0 1 0 3 16.29"></path>',
            download: '<path d="M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4"></path><polyline points="7 10 12 15 17 10"></polyline><line x1="12" y1="15" x2="12" y2="3"></line>',
            dribbble: '<circle cx="12" cy="12" r="10"></circle><path d="M8.56 2.75c4.37 6.03 6.02 9.42 8.03 17.72m2.54-15.38c-3.72 4.35-8.94 5.66-16.88 5.85m19.5 1.9c-3.5-.93-6.63-.82-8.94 0-2.58.92-5.01 2.86-7.44 6.32"></path>',
            droplet: '<path d="M12 2.69l5.66 5.66a8 8 0 1 1-11.31 0z"></path>',
            "edit-2": '<path d="M17 3a2.828 2.828 0 1 1 4 4L7.5 20.5 2 22l1.5-5.5L17 3z"></path>',
            "edit-3": '<path d="M12 20h9"></path><path d="M16.5 3.5a2.121 2.121 0 0 1 3 3L7 19l-4 1 1-4L16.5 3.5z"></path>',
            edit: '<path d="M11 4H4a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2v-7"></path><path d="M18.5 2.5a2.121 2.121 0 0 1 3 3L12 15l-4 1 1-4 9.5-9.5z"></path>',
            "external-link": '<path d="M18 13v6a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h6"></path><polyline points="15 3 21 3 21 9"></polyline><line x1="10" y1="14" x2="21" y2="3"></line>',
            "eye-off": '<path d="M17.94 17.94A10.07 10.07 0 0 1 12 20c-7 0-11-8-11-8a18.45 18.45 0 0 1 5.06-5.94M9.9 4.24A9.12 9.12 0 0 1 12 4c7 0 11 8 11 8a18.5 18.5 0 0 1-2.16 3.19m-6.72-1.07a3 3 0 1 1-4.24-4.24"></path><line x1="1" y1="1" x2="23" y2="23"></line>',
            eye: '<path d="M1 12s4-8 11-8 11 8 11 8-4 8-11 8-11-8-11-8z"></path><circle cx="12" cy="12" r="3"></circle>',
            facebook: '<path d="M18 2h-3a5 5 0 0 0-5 5v3H7v4h3v8h4v-8h3l1-4h-4V7a1 1 0 0 1 1-1h3z"></path>',
            "fast-forward": '<polygon points="13 19 22 12 13 5 13 19"></polygon><polygon points="2 19 11 12 2 5 2 19"></polygon>',
            feather: '<path d="M20.24 12.24a6 6 0 0 0-8.49-8.49L5 10.5V19h8.5z"></path><line x1="16" y1="8" x2="2" y2="22"></line><line x1="17.5" y1="15" x2="9" y2="15"></line>',
            figma: '<path d="M5 5.5A3.5 3.5 0 0 1 8.5 2H12v7H8.5A3.5 3.5 0 0 1 5 5.5z"></path><path d="M12 2h3.5a3.5 3.5 0 1 1 0 7H12V2z"></path><path d="M12 12.5a3.5 3.5 0 1 1 7 0 3.5 3.5 0 1 1-7 0z"></path><path d="M5 19.5A3.5 3.5 0 0 1 8.5 16H12v3.5a3.5 3.5 0 1 1-7 0z"></path><path d="M5 12.5A3.5 3.5 0 0 1 8.5 9H12v7H8.5A3.5 3.5 0 0 1 5 12.5z"></path>',
            "file-minus": '<path d="M14 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8z"></path><polyline points="14 2 14 8 20 8"></polyline><line x1="9" y1="15" x2="15" y2="15"></line>',
            "file-plus": '<path d="M14 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8z"></path><polyline points="14 2 14 8 20 8"></polyline><line x1="12" y1="18" x2="12" y2="12"></line><line x1="9" y1="15" x2="15" y2="15"></line>',
            "file-text": '<path d="M14 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8z"></path><polyline points="14 2 14 8 20 8"></polyline><line x1="16" y1="13" x2="8" y2="13"></line><line x1="16" y1="17" x2="8" y2="17"></line><polyline points="10 9 9 9 8 9"></polyline>',
            file: '<path d="M13 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V9z"></path><polyline points="13 2 13 9 20 9"></polyline>',
            film: '<rect x="2" y="2" width="20" height="20" rx="2.18" ry="2.18"></rect><line x1="7" y1="2" x2="7" y2="22"></line><line x1="17" y1="2" x2="17" y2="22"></line><line x1="2" y1="12" x2="22" y2="12"></line><line x1="2" y1="7" x2="7" y2="7"></line><line x1="2" y1="17" x2="7" y2="17"></line><line x1="17" y1="17" x2="22" y2="17"></line><line x1="17" y1="7" x2="22" y2="7"></line>',
            filter: '<polygon points="22 3 2 3 10 12.46 10 19 14 21 14 12.46 22 3"></polygon>',
            flag: '<path d="M4 15s1-1 4-1 5 2 8 2 4-1 4-1V3s-1 1-4 1-5-2-8-2-4 1-4 1z"></path><line x1="4" y1="22" x2="4" y2="15"></line>',
            "folder-minus": '<path d="M22 19a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h5l2 3h9a2 2 0 0 1 2 2z"></path><line x1="9" y1="14" x2="15" y2="14"></line>',
            "folder-plus": '<path d="M22 19a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h5l2 3h9a2 2 0 0 1 2 2z"></path><line x1="12" y1="11" x2="12" y2="17"></line><line x1="9" y1="14" x2="15" y2="14"></line>',
            folder: '<path d="M22 19a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h5l2 3h9a2 2 0 0 1 2 2z"></path>',
            framer: '<path d="M5 16V9h14V2H5l14 14h-7m-7 0l7 7v-7m-7 0h7"></path>',
            frown: '<circle cx="12" cy="12" r="10"></circle><path d="M16 16s-1.5-2-4-2-4 2-4 2"></path><line x1="9" y1="9" x2="9.01" y2="9"></line><line x1="15" y1="9" x2="15.01" y2="9"></line>',
            gift: '<polyline points="20 12 20 22 4 22 4 12"></polyline><rect x="2" y="7" width="20" height="5"></rect><line x1="12" y1="22" x2="12" y2="7"></line><path d="M12 7H7.5a2.5 2.5 0 0 1 0-5C11 2 12 7 12 7z"></path><path d="M12 7h4.5a2.5 2.5 0 0 0 0-5C13 2 12 7 12 7z"></path>',
            "git-branch": '<line x1="6" y1="3" x2="6" y2="15"></line><circle cx="18" cy="6" r="3"></circle><circle cx="6" cy="18" r="3"></circle><path d="M18 9a9 9 0 0 1-9 9"></path>',
            "git-commit": '<circle cx="12" cy="12" r="4"></circle><line x1="1.05" y1="12" x2="7" y2="12"></line><line x1="17.01" y1="12" x2="22.96" y2="12"></line>',
            "git-merge": '<circle cx="18" cy="18" r="3"></circle><circle cx="6" cy="6" r="3"></circle><path d="M6 21V9a9 9 0 0 0 9 9"></path>',
            "git-pull-request": '<circle cx="18" cy="18" r="3"></circle><circle cx="6" cy="6" r="3"></circle><path d="M13 6h3a2 2 0 0 1 2 2v7"></path><line x1="6" y1="9" x2="6" y2="21"></line>',
            github: '<path d="M9 19c-5 1.5-5-2.5-7-3m14 6v-3.87a3.37 3.37 0 0 0-.94-2.61c3.14-.35 6.44-1.54 6.44-7A5.44 5.44 0 0 0 20 4.77 5.07 5.07 0 0 0 19.91 1S18.73.65 16 2.48a13.38 13.38 0 0 0-7 0C6.27.65 5.09 1 5.09 1A5.07 5.07 0 0 0 5 4.77a5.44 5.44 0 0 0-1.5 3.78c0 5.42 3.3 6.61 6.44 7A3.37 3.37 0 0 0 9 18.13V22"></path>',
            gitlab: '<path d="M22.65 14.39L12 22.13 1.35 14.39a.84.84 0 0 1-.3-.94l1.22-3.78 2.44-7.51A.42.42 0 0 1 4.82 2a.43.43 0 0 1 .58 0 .42.42 0 0 1 .11.18l2.44 7.49h8.1l2.44-7.51A.42.42 0 0 1 18.6 2a.43.43 0 0 1 .58 0 .42.42 0 0 1 .11.18l2.44 7.51L23 13.45a.84.84 0 0 1-.35.94z"></path>',
            globe: '<circle cx="12" cy="12" r="10"></circle><line x1="2" y1="12" x2="22" y2="12"></line><path d="M12 2a15.3 15.3 0 0 1 4 10 15.3 15.3 0 0 1-4 10 15.3 15.3 0 0 1-4-10 15.3 15.3 0 0 1 4-10z"></path>',
            grid: '<rect x="3" y="3" width="7" height="7"></rect><rect x="14" y="3" width="7" height="7"></rect><rect x="14" y="14" width="7" height="7"></rect><rect x="3" y="14" width="7" height="7"></rect>',
            "hard-drive": '<line x1="22" y1="12" x2="2" y2="12"></line><path d="M5.45 5.11L2 12v6a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2v-6l-3.45-6.89A2 2 0 0 0 16.76 4H7.24a2 2 0 0 0-1.79 1.11z"></path><line x1="6" y1="16" x2="6.01" y2="16"></line><line x1="10" y1="16" x2="10.01" y2="16"></line>',
            hash: '<line x1="4" y1="9" x2="20" y2="9"></line><line x1="4" y1="15" x2="20" y2="15"></line><line x1="10" y1="3" x2="8" y2="21"></line><line x1="16" y1="3" x2="14" y2="21"></line>',
            headphones: '<path d="M3 18v-6a9 9 0 0 1 18 0v6"></path><path d="M21 19a2 2 0 0 1-2 2h-1a2 2 0 0 1-2-2v-3a2 2 0 0 1 2-2h3zM3 19a2 2 0 0 0 2 2h1a2 2 0 0 0 2-2v-3a2 2 0 0 0-2-2H3z"></path>',
            heart: '<path d="M20.84 4.61a5.5 5.5 0 0 0-7.78 0L12 5.67l-1.06-1.06a5.5 5.5 0 0 0-7.78 7.78l1.06 1.06L12 21.23l7.78-7.78 1.06-1.06a5.5 5.5 0 0 0 0-7.78z"></path>',
            "help-circle": '<circle cx="12" cy="12" r="10"></circle><path d="M9.09 9a3 3 0 0 1 5.83 1c0 2-3 3-3 3"></path><line x1="12" y1="17" x2="12.01" y2="17"></line>',
            hexagon: '<path d="M21 16V8a2 2 0 0 0-1-1.73l-7-4a2 2 0 0 0-2 0l-7 4A2 2 0 0 0 3 8v8a2 2 0 0 0 1 1.73l7 4a2 2 0 0 0 2 0l7-4A2 2 0 0 0 21 16z"></path>',
            home: '<path d="M3 9l9-7 9 7v11a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2z"></path><polyline points="9 22 9 12 15 12 15 22"></polyline>',
            image: '<rect x="3" y="3" width="18" height="18" rx="2" ry="2"></rect><circle cx="8.5" cy="8.5" r="1.5"></circle><polyline points="21 15 16 10 5 21"></polyline>',
            inbox: '<polyline points="22 12 16 12 14 15 10 15 8 12 2 12"></polyline><path d="M5.45 5.11L2 12v6a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2v-6l-3.45-6.89A2 2 0 0 0 16.76 4H7.24a2 2 0 0 0-1.79 1.11z"></path>',
            info: '<circle cx="12" cy="12" r="10"></circle><line x1="12" y1="16" x2="12" y2="12"></line><line x1="12" y1="8" x2="12.01" y2="8"></line>',
            instagram: '<rect x="2" y="2" width="20" height="20" rx="5" ry="5"></rect><path d="M16 11.37A4 4 0 1 1 12.63 8 4 4 0 0 1 16 11.37z"></path><line x1="17.5" y1="6.5" x2="17.51" y2="6.5"></line>',
            italic: '<line x1="19" y1="4" x2="10" y2="4"></line><line x1="14" y1="20" x2="5" y2="20"></line><line x1="15" y1="4" x2="9" y2="20"></line>',
            key: '<path d="M21 2l-2 2m-7.61 7.61a5.5 5.5 0 1 1-7.778 7.778 5.5 5.5 0 0 1 7.777-7.777zm0 0L15.5 7.5m0 0l3 3L22 7l-3-3m-3.5 3.5L19 4"></path>',
            layers: '<polygon points="12 2 2 7 12 12 22 7 12 2"></polygon><polyline points="2 17 12 22 22 17"></polyline><polyline points="2 12 12 17 22 12"></polyline>',
            layout: '<rect x="3" y="3" width="18" height="18" rx="2" ry="2"></rect><line x1="3" y1="9" x2="21" y2="9"></line><line x1="9" y1="21" x2="9" y2="9"></line>',
            "life-buoy": '<circle cx="12" cy="12" r="10"></circle><circle cx="12" cy="12" r="4"></circle><line x1="4.93" y1="4.93" x2="9.17" y2="9.17"></line><line x1="14.83" y1="14.83" x2="19.07" y2="19.07"></line><line x1="14.83" y1="9.17" x2="19.07" y2="4.93"></line><line x1="14.83" y1="9.17" x2="18.36" y2="5.64"></line><line x1="4.93" y1="19.07" x2="9.17" y2="14.83"></line>',
            "link-2": '<path d="M15 7h3a5 5 0 0 1 5 5 5 5 0 0 1-5 5h-3m-6 0H6a5 5 0 0 1-5-5 5 5 0 0 1 5-5h3"></path><line x1="8" y1="12" x2="16" y2="12"></line>',
            link: '<path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71"></path><path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71"></path>',
            linkedin: '<path d="M16 8a6 6 0 0 1 6 6v7h-4v-7a2 2 0 0 0-2-2 2 2 0 0 0-2 2v7h-4v-7a6 6 0 0 1 6-6z"></path><rect x="2" y="9" width="4" height="12"></rect><circle cx="4" cy="4" r="2"></circle>',
            list: '<line x1="8" y1="6" x2="21" y2="6"></line><line x1="8" y1="12" x2="21" y2="12"></line><line x1="8" y1="18" x2="21" y2="18"></line><line x1="3" y1="6" x2="3.01" y2="6"></line><line x1="3" y1="12" x2="3.01" y2="12"></line><line x1="3" y1="18" x2="3.01" y2="18"></line>',
            loader: '<line x1="12" y1="2" x2="12" y2="6"></line><line x1="12" y1="18" x2="12" y2="22"></line><line x1="4.93" y1="4.93" x2="7.76" y2="7.76"></line><line x1="16.24" y1="16.24" x2="19.07" y2="19.07"></line><line x1="2" y1="12" x2="6" y2="12"></line><line x1="18" y1="12" x2="22" y2="12"></line><line x1="4.93" y1="19.07" x2="7.76" y2="16.24"></line><line x1="16.24" y1="7.76" x2="19.07" y2="4.93"></line>',
            lock: '<rect x="3" y="11" width="18" height="11" rx="2" ry="2"></rect><path d="M7 11V7a5 5 0 0 1 10 0v4"></path>',
            "log-in": '<path d="M15 3h4a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2h-4"></path><polyline points="10 17 15 12 10 7"></polyline><line x1="15" y1="12" x2="3" y2="12"></line>',
            "log-out": '<path d="M9 21H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h4"></path><polyline points="16 17 21 12 16 7"></polyline><line x1="21" y1="12" x2="9" y2="12"></line>',
            mail: '<path d="M4 4h16c1.1 0 2 .9 2 2v12c0 1.1-.9 2-2 2H4c-1.1 0-2-.9-2-2V6c0-1.1.9-2 2-2z"></path><polyline points="22,6 12,13 2,6"></polyline>',
            "map-pin": '<path d="M21 10c0 7-9 13-9 13s-9-6-9-13a9 9 0 0 1 18 0z"></path><circle cx="12" cy="10" r="3"></circle>',
            map: '<polygon points="1 6 1 22 8 18 16 22 23 18 23 2 16 6 8 2 1 6"></polygon><line x1="8" y1="2" x2="8" y2="18"></line><line x1="16" y1="6" x2="16" y2="22"></line>',
            "maximize-2": '<polyline points="15 3 21 3 21 9"></polyline><polyline points="9 21 3 21 3 15"></polyline><line x1="21" y1="3" x2="14" y2="10"></line><line x1="3" y1="21" x2="10" y2="14"></line>',
            maximize: '<path d="M8 3H5a2 2 0 0 0-2 2v3m18 0V5a2 2 0 0 0-2-2h-3m0 18h3a2 2 0 0 0 2-2v-3M3 16v3a2 2 0 0 0 2 2h3"></path>',
            meh: '<circle cx="12" cy="12" r="10"></circle><line x1="8" y1="15" x2="16" y2="15"></line><line x1="9" y1="9" x2="9.01" y2="9"></line><line x1="15" y1="9" x2="15.01" y2="9"></line>',
            menu: '<line x1="3" y1="12" x2="21" y2="12"></line><line x1="3" y1="6" x2="21" y2="6"></line><line x1="3" y1="18" x2="21" y2="18"></line>',
            "message-circle": '<path d="M21 11.5a8.38 8.38 0 0 1-.9 3.8 8.5 8.5 0 0 1-7.6 4.7 8.38 8.38 0 0 1-3.8-.9L3 21l1.9-5.7a8.38 8.38 0 0 1-.9-3.8 8.5 8.5 0 0 1 4.7-7.6 8.38 8.38 0 0 1 3.8-.9h.5a8.48 8.48 0 0 1 8 8v.5z"></path>',
            "message-square": '<path d="M21 15a2 2 0 0 1-2 2H7l-4 4V5a2 2 0 0 1 2-2h14a2 2 0 0 1 2 2z"></path>',
            "mic-off": '<line x1="1" y1="1" x2="23" y2="23"></line><path d="M9 9v3a3 3 0 0 0 5.12 2.12M15 9.34V4a3 3 0 0 0-5.94-.6"></path><path d="M17 16.95A7 7 0 0 1 5 12v-2m14 0v2a7 7 0 0 1-.11 1.23"></path><line x1="12" y1="19" x2="12" y2="23"></line><line x1="8" y1="23" x2="16" y2="23"></line>',
            mic: '<path d="M12 1a3 3 0 0 0-3 3v8a3 3 0 0 0 6 0V4a3 3 0 0 0-3-3z"></path><path d="M19 10v2a7 7 0 0 1-14 0v-2"></path><line x1="12" y1="19" x2="12" y2="23"></line><line x1="8" y1="23" x2="16" y2="23"></line>',
            "minimize-2": '<polyline points="4 14 10 14 10 20"></polyline><polyline points="20 10 14 10 14 4"></polyline><line x1="14" y1="10" x2="21" y2="3"></line><line x1="3" y1="21" x2="10" y2="14"></line>',
            minimize: '<path d="M8 3v3a2 2 0 0 1-2 2H3m18 0h-3a2 2 0 0 1-2-2V3m0 18v-3a2 2 0 0 1 2-2h3M3 16h3a2 2 0 0 1 2 2v3"></path>',
            "minus-circle": '<circle cx="12" cy="12" r="10"></circle><line x1="8" y1="12" x2="16" y2="12"></line>',
            "minus-square": '<rect x="3" y="3" width="18" height="18" rx="2" ry="2"></rect><line x1="8" y1="12" x2="16" y2="12"></line>',
            minus: '<line x1="5" y1="12" x2="19" y2="12"></line>',
            monitor: '<rect x="2" y="3" width="20" height="14" rx="2" ry="2"></rect><line x1="8" y1="21" x2="16" y2="21"></line><line x1="12" y1="17" x2="12" y2="21"></line>',
            moon: '<path d="M21 12.79A9 9 0 1 1 11.21 3 7 7 0 0 0 21 12.79z"></path>',
            "more-horizontal": '<circle cx="12" cy="12" r="1"></circle><circle cx="19" cy="12" r="1"></circle><circle cx="5" cy="12" r="1"></circle>',
            "more-vertical": '<circle cx="12" cy="12" r="1"></circle><circle cx="12" cy="5" r="1"></circle><circle cx="12" cy="19" r="1"></circle>',
            "mouse-pointer": '<path d="M3 3l7.07 16.97 2.51-7.39 7.39-2.51L3 3z"></path><path d="M13 13l6 6"></path>',
            move: '<polyline points="5 9 2 12 5 15"></polyline><polyline points="9 5 12 2 15 5"></polyline><polyline points="15 19 12 22 9 19"></polyline><polyline points="19 9 22 12 19 15"></polyline><line x1="2" y1="12" x2="22" y2="12"></line><line x1="12" y1="2" x2="12" y2="22"></line>',
            music: '<path d="M9 18V5l12-2v13"></path><circle cx="6" cy="18" r="3"></circle><circle cx="18" cy="16" r="3"></circle>',
            "navigation-2": '<polygon points="12 2 19 21 12 17 5 21 12 2"></polygon>',
            navigation: '<polygon points="3 11 22 2 13 21 11 13 3 11"></polygon>',
            octagon: '<polygon points="7.86 2 16.14 2 22 7.86 22 16.14 16.14 22 7.86 22 2 16.14 2 7.86 7.86 2"></polygon>',
            package: '<line x1="16.5" y1="9.4" x2="7.5" y2="4.21"></line><path d="M21 16V8a2 2 0 0 0-1-1.73l-7-4a2 2 0 0 0-2 0l-7 4A2 2 0 0 0 3 8v8a2 2 0 0 0 1 1.73l7 4a2 2 0 0 0 2 0l7-4A2 2 0 0 0 21 16z"></path><polyline points="3.27 6.96 12 12.01 20.73 6.96"></polyline><line x1="12" y1="22.08" x2="12" y2="12"></line>',
            paperclip: '<path d="M21.44 11.05l-9.19 9.19a6 6 0 0 1-8.49-8.49l9.19-9.19a4 4 0 0 1 5.66 5.66l-9.2 9.19a2 2 0 0 1-2.83-2.83l8.49-8.48"></path>',
            "pause-circle": '<circle cx="12" cy="12" r="10"></circle><line x1="10" y1="15" x2="10" y2="9"></line><line x1="14" y1="15" x2="14" y2="9"></line>',
            pause: '<rect x="6" y="4" width="4" height="16"></rect><rect x="14" y="4" width="4" height="16"></rect>',
            "pen-tool": '<path d="M12 19l7-7 3 3-7 7-3-3z"></path><path d="M18 13l-1.5-7.5L2 2l3.5 14.5L13 18l5-5z"></path><path d="M2 2l7.586 7.586"></path><circle cx="11" cy="11" r="2"></circle>',
            percent: '<line x1="19" y1="5" x2="5" y2="19"></line><circle cx="6.5" cy="6.5" r="2.5"></circle><circle cx="17.5" cy="17.5" r="2.5"></circle>',
            "phone-call": '<path d="M15.05 5A5 5 0 0 1 19 8.95M15.05 1A9 9 0 0 1 23 8.94m-1 7.98v3a2 2 0 0 1-2.18 2 19.79 19.79 0 0 1-8.63-3.07 19.5 19.5 0 0 1-6-6 19.79 19.79 0 0 1-3.07-8.67A2 2 0 0 1 4.11 2h3a2 2 0 0 1 2 1.72 12.84 12.84 0 0 0 .7 2.81 2 2 0 0 1-.45 2.11L8.09 9.91a16 16 0 0 0 6 6l1.27-1.27a2 2 0 0 1 2.11-.45 12.84 12.84 0 0 0 2.81.7A2 2 0 0 1 22 16.92z"></path>',
            "phone-forwarded": '<polyline points="19 1 23 5 19 9"></polyline><line x1="15" y1="5" x2="23" y2="5"></line><path d="M22 16.92v3a2 2 0 0 1-2.18 2 19.79 19.79 0 0 1-8.63-3.07 19.5 19.5 0 0 1-6-6 19.79 19.79 0 0 1-3.07-8.67A2 2 0 0 1 4.11 2h3a2 2 0 0 1 2 1.72 12.84 12.84 0 0 0 .7 2.81 2 2 0 0 1-.45 2.11L8.09 9.91a16 16 0 0 0 6 6l1.27-1.27a2 2 0 0 1 2.11-.45 12.84 12.84 0 0 0 2.81.7A2 2 0 0 1 22 16.92z"></path>',
            "phone-incoming": '<polyline points="16 2 16 8 22 8"></polyline><line x1="23" y1="1" x2="16" y2="8"></line><path d="M22 16.92v3a2 2 0 0 1-2.18 2 19.79 19.79 0 0 1-8.63-3.07 19.5 19.5 0 0 1-6-6 19.79 19.79 0 0 1-3.07-8.67A2 2 0 0 1 4.11 2h3a2 2 0 0 1 2 1.72 12.84 12.84 0 0 0 .7 2.81 2 2 0 0 1-.45 2.11L8.09 9.91a16 16 0 0 0 6 6l1.27-1.27a2 2 0 0 1 2.11-.45 12.84 12.84 0 0 0 2.81.7A2 2 0 0 1 22 16.92z"></path>',
            "phone-missed": '<line x1="23" y1="1" x2="17" y2="7"></line><line x1="17" y1="1" x2="23" y2="7"></line><path d="M22 16.92v3a2 2 0 0 1-2.18 2 19.79 19.79 0 0 1-8.63-3.07 19.5 19.5 0 0 1-6-6 19.79 19.79 0 0 1-3.07-8.67A2 2 0 0 1 4.11 2h3a2 2 0 0 1 2 1.72 12.84 12.84 0 0 0 .7 2.81 2 2 0 0 1-.45 2.11L8.09 9.91a16 16 0 0 0 6 6l1.27-1.27a2 2 0 0 1 2.11-.45 12.84 12.84 0 0 0 2.81.7A2 2 0 0 1 22 16.92z"></path>',
            "phone-off": '<path d="M10.68 13.31a16 16 0 0 0 3.41 2.6l1.27-1.27a2 2 0 0 1 2.11-.45 12.84 12.84 0 0 0 2.81.7 2 2 0 0 1 1.72 2v3a2 2 0 0 1-2.18 2 19.79 19.79 0 0 1-8.63-3.07 19.42 19.42 0 0 1-3.33-2.67m-2.67-3.34a19.79 19.79 0 0 1-3.07-8.63A2 2 0 0 1 4.11 2h3a2 2 0 0 1 2 1.72 12.84 12.84 0 0 0 .7 2.81 2 2 0 0 1-.45 2.11L8.09 9.91"></path><line x1="23" y1="1" x2="1" y2="23"></line>',
            "phone-outgoing": '<polyline points="23 7 23 1 17 1"></polyline><line x1="16" y1="8" x2="23" y2="1"></line><path d="M22 16.92v3a2 2 0 0 1-2.18 2 19.79 19.79 0 0 1-8.63-3.07 19.5 19.5 0 0 1-6-6 19.79 19.79 0 0 1-3.07-8.67A2 2 0 0 1 4.11 2h3a2 2 0 0 1 2 1.72 12.84 12.84 0 0 0 .7 2.81 2 2 0 0 1-.45 2.11L8.09 9.91a16 16 0 0 0 6 6l1.27-1.27a2 2 0 0 1 2.11-.45 12.84 12.84 0 0 0 2.81.7A2 2 0 0 1 22 16.92z"></path>',
            phone: '<path d="M22 16.92v3a2 2 0 0 1-2.18 2 19.79 19.79 0 0 1-8.63-3.07 19.5 19.5 0 0 1-6-6 19.79 19.79 0 0 1-3.07-8.67A2 2 0 0 1 4.11 2h3a2 2 0 0 1 2 1.72 12.84 12.84 0 0 0 .7 2.81 2 2 0 0 1-.45 2.11L8.09 9.91a16 16 0 0 0 6 6l1.27-1.27a2 2 0 0 1 2.11-.45 12.84 12.84 0 0 0 2.81.7A2 2 0 0 1 22 16.92z"></path>',
            "pie-chart": '<path d="M21.21 15.89A10 10 0 1 1 8 2.83"></path><path d="M22 12A10 10 0 0 0 12 2v10z"></path>',
            "play-circle": '<circle cx="12" cy="12" r="10"></circle><polygon points="10 8 16 12 10 16 10 8"></polygon>',
            play: '<polygon points="5 3 19 12 5 21 5 3"></polygon>',
            "plus-circle": '<circle cx="12" cy="12" r="10"></circle><line x1="12" y1="8" x2="12" y2="16"></line><line x1="8" y1="12" x2="16" y2="12"></line>',
            "plus-square": '<rect x="3" y="3" width="18" height="18" rx="2" ry="2"></rect><line x1="12" y1="8" x2="12" y2="16"></line><line x1="8" y1="12" x2="16" y2="12"></line>',
            plus: '<line x1="12" y1="5" x2="12" y2="19"></line><line x1="5" y1="12" x2="19" y2="12"></line>',
            pocket: '<path d="M4 3h16a2 2 0 0 1 2 2v6a10 10 0 0 1-10 10A10 10 0 0 1 2 11V5a2 2 0 0 1 2-2z"></path><polyline points="8 10 12 14 16 10"></polyline>',
            power: '<path d="M18.36 6.64a9 9 0 1 1-12.73 0"></path><line x1="12" y1="2" x2="12" y2="12"></line>',
            printer: '<polyline points="6 9 6 2 18 2 18 9"></polyline><path d="M6 18H4a2 2 0 0 1-2-2v-5a2 2 0 0 1 2-2h16a2 2 0 0 1 2 2v5a2 2 0 0 1-2 2h-2"></path><rect x="6" y="14" width="12" height="8"></rect>',
            radio: '<circle cx="12" cy="12" r="2"></circle><path d="M16.24 7.76a6 6 0 0 1 0 8.49m-8.48-.01a6 6 0 0 1 0-8.49m11.31-2.82a10 10 0 0 1 0 14.14m-14.14 0a10 10 0 0 1 0-14.14"></path>',
            "refresh-ccw": '<polyline points="1 4 1 10 7 10"></polyline><polyline points="23 20 23 14 17 14"></polyline><path d="M20.49 9A9 9 0 0 0 5.64 5.64L1 10m22 4l-4.64 4.36A9 9 0 0 1 3.51 15"></path>',
            "refresh-cw": '<polyline points="23 4 23 10 17 10"></polyline><polyline points="1 20 1 14 7 14"></polyline><path d="M3.51 9a9 9 0 0 1 14.85-3.36L23 10M1 14l4.64 4.36A9 9 0 0 0 20.49 15"></path>',
            repeat: '<polyline points="17 1 21 5 17 9"></polyline><path d="M3 11V9a4 4 0 0 1 4-4h14"></path><polyline points="7 23 3 19 7 15"></polyline><path d="M21 13v2a4 4 0 0 1-4 4H3"></path>',
            rewind: '<polygon points="11 19 2 12 11 5 11 19"></polygon><polygon points="22 19 13 12 22 5 22 19"></polygon>',
            "rotate-ccw": '<polyline points="1 4 1 10 7 10"></polyline><path d="M3.51 15a9 9 0 1 0 2.13-9.36L1 10"></path>',
            "rotate-cw": '<polyline points="23 4 23 10 17 10"></polyline><path d="M20.49 15a9 9 0 1 1-2.12-9.36L23 10"></path>',
            rss: '<path d="M4 11a9 9 0 0 1 9 9"></path><path d="M4 4a16 16 0 0 1 16 16"></path><circle cx="5" cy="19" r="1"></circle>',
            save: '<path d="M19 21H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h11l5 5v11a2 2 0 0 1-2 2z"></path><polyline points="17 21 17 13 7 13 7 21"></polyline><polyline points="7 3 7 8 15 8"></polyline>',
            scissors: '<circle cx="6" cy="6" r="3"></circle><circle cx="6" cy="18" r="3"></circle><line x1="20" y1="4" x2="8.12" y2="15.88"></line><line x1="14.47" y1="14.48" x2="20" y2="20"></line><line x1="8.12" y1="8.12" x2="12" y2="12"></line>',
            search: '<circle cx="11" cy="11" r="8"></circle><line x1="21" y1="21" x2="16.65" y2="16.65"></line>',
            send: '<line x1="22" y1="2" x2="11" y2="13"></line><polygon points="22 2 15 22 11 13 2 9 22 2"></polygon>',
            server: '<rect x="2" y="2" width="20" height="8" rx="2" ry="2"></rect><rect x="2" y="14" width="20" height="8" rx="2" ry="2"></rect><line x1="6" y1="6" x2="6.01" y2="6"></line><line x1="6" y1="18" x2="6.01" y2="18"></line>',
            settings: '<circle cx="12" cy="12" r="3"></circle><path d="M19.4 15a1.65 1.65 0 0 0 .33 1.82l.06.06a2 2 0 0 1 0 2.83 2 2 0 0 1-2.83 0l-.06-.06a1.65 1.65 0 0 0-1.82-.33 1.65 1.65 0 0 0-1 1.51V21a2 2 0 0 1-2 2 2 2 0 0 1-2-2v-.09A1.65 1.65 0 0 0 9 19.4a1.65 1.65 0 0 0-1.82.33l-.06.06a2 2 0 0 1-2.83 0 2 2 0 0 1 0-2.83l.06-.06a1.65 1.65 0 0 0 .33-1.82 1.65 1.65 0 0 0-1.51-1H3a2 2 0 0 1-2-2 2 2 0 0 1 2-2h.09A1.65 1.65 0 0 0 4.6 9a1.65 1.65 0 0 0-.33-1.82l-.06-.06a2 2 0 0 1 0-2.83 2 2 0 0 1 2.83 0l.06.06a1.65 1.65 0 0 0 1.82.33H9a1.65 1.65 0 0 0 1-1.51V3a2 2 0 0 1 2-2 2 2 0 0 1 2 2v.09a1.65 1.65 0 0 0 1 1.51 1.65 1.65 0 0 0 1.82-.33l.06-.06a2 2 0 0 1 2.83 0 2 2 0 0 1 0 2.83l-.06.06a1.65 1.65 0 0 0-.33 1.82V9a1.65 1.65 0 0 0 1.51 1H21a2 2 0 0 1 2 2 2 2 0 0 1-2 2h-.09a1.65 1.65 0 0 0-1.51 1z"></path>',
            "share-2": '<circle cx="18" cy="5" r="3"></circle><circle cx="6" cy="12" r="3"></circle><circle cx="18" cy="19" r="3"></circle><line x1="8.59" y1="13.51" x2="15.42" y2="17.49"></line><line x1="15.41" y1="6.51" x2="8.59" y2="10.49"></line>',
            share: '<path d="M4 12v8a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2v-8"></path><polyline points="16 6 12 2 8 6"></polyline><line x1="12" y1="2" x2="12" y2="15"></line>',
            "shield-off": '<path d="M19.69 14a6.9 6.9 0 0 0 .31-2V5l-8-3-3.16 1.18"></path><path d="M4.73 4.73L4 5v7c0 6 8 10 8 10a20.29 20.29 0 0 0 5.62-4.38"></path><line x1="1" y1="1" x2="23" y2="23"></line>',
            shield: '<path d="M12 22s8-4 8-10V5l-8-3-8 3v7c0 6 8 10 8 10z"></path>',
            "shopping-bag": '<path d="M6 2L3 6v14a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2V6l-3-4z"></path><line x1="3" y1="6" x2="21" y2="6"></line><path d="M16 10a4 4 0 0 1-8 0"></path>',
            "shopping-cart": '<circle cx="9" cy="21" r="1"></circle><circle cx="20" cy="21" r="1"></circle><path d="M1 1h4l2.68 13.39a2 2 0 0 0 2 1.61h9.72a2 2 0 0 0 2-1.61L23 6H6"></path>',
            shuffle: '<polyline points="16 3 21 3 21 8"></polyline><line x1="4" y1="20" x2="21" y2="3"></line><polyline points="21 16 21 21 16 21"></polyline><line x1="15" y1="15" x2="21" y2="21"></line><line x1="4" y1="4" x2="9" y2="9"></line>',
            sidebar: '<rect x="3" y="3" width="18" height="18" rx="2" ry="2"></rect><line x1="9" y1="3" x2="9" y2="21"></line>',
            "skip-back": '<polygon points="19 20 9 12 19 4 19 20"></polygon><line x1="5" y1="19" x2="5" y2="5"></line>',
            "skip-forward": '<polygon points="5 4 15 12 5 20 5 4"></polygon><line x1="19" y1="5" x2="19" y2="19"></line>',
            slack: '<path d="M14.5 10c-.83 0-1.5-.67-1.5-1.5v-5c0-.83.67-1.5 1.5-1.5s1.5.67 1.5 1.5v5c0 .83-.67 1.5-1.5 1.5z"></path><path d="M20.5 10H19V8.5c0-.83.67-1.5 1.5-1.5s1.5.67 1.5 1.5-.67 1.5-1.5 1.5z"></path><path d="M9.5 14c.83 0 1.5.67 1.5 1.5v5c0 .83-.67 1.5-1.5 1.5S8 21.33 8 20.5v-5c0-.83.67-1.5 1.5-1.5z"></path><path d="M3.5 14H5v1.5c0 .83-.67 1.5-1.5 1.5S2 16.33 2 15.5 2.67 14 3.5 14z"></path><path d="M14 14.5c0-.83.67-1.5 1.5-1.5h5c.83 0 1.5.67 1.5 1.5s-.67 1.5-1.5 1.5h-5c-.83 0-1.5-.67-1.5-1.5z"></path><path d="M15.5 19H14v1.5c0 .83.67 1.5 1.5 1.5s1.5-.67 1.5-1.5-.67-1.5-1.5-1.5z"></path><path d="M10 9.5C10 8.67 9.33 8 8.5 8h-5C2.67 8 2 8.67 2 9.5S2.67 11 3.5 11h5c.83 0 1.5-.67 1.5-1.5z"></path><path d="M8.5 5H10V3.5C10 2.67 9.33 2 8.5 2S7 2.67 7 3.5 7.67 5 8.5 5z"></path>',
            slash: '<circle cx="12" cy="12" r="10"></circle><line x1="4.93" y1="4.93" x2="19.07" y2="19.07"></line>',
            sliders: '<line x1="4" y1="21" x2="4" y2="14"></line><line x1="4" y1="10" x2="4" y2="3"></line><line x1="12" y1="21" x2="12" y2="12"></line><line x1="12" y1="8" x2="12" y2="3"></line><line x1="20" y1="21" x2="20" y2="16"></line><line x1="20" y1="12" x2="20" y2="3"></line><line x1="1" y1="14" x2="7" y2="14"></line><line x1="9" y1="8" x2="15" y2="8"></line><line x1="17" y1="16" x2="23" y2="16"></line>',
            smartphone: '<rect x="5" y="2" width="14" height="20" rx="2" ry="2"></rect><line x1="12" y1="18" x2="12.01" y2="18"></line>',
            smile: '<circle cx="12" cy="12" r="10"></circle><path d="M8 14s1.5 2 4 2 4-2 4-2"></path><line x1="9" y1="9" x2="9.01" y2="9"></line><line x1="15" y1="9" x2="15.01" y2="9"></line>',
            speaker: '<rect x="4" y="2" width="16" height="20" rx="2" ry="2"></rect><circle cx="12" cy="14" r="4"></circle><line x1="12" y1="6" x2="12.01" y2="6"></line>',
            square: '<rect x="3" y="3" width="18" height="18" rx="2" ry="2"></rect>',
            star: '<polygon points="12 2 15.09 8.26 22 9.27 17 14.14 18.18 21.02 12 17.77 5.82 21.02 7 14.14 2 9.27 8.91 8.26 12 2"></polygon>',
            "stop-circle": '<circle cx="12" cy="12" r="10"></circle><rect x="9" y="9" width="6" height="6"></rect>',
            sun: '<circle cx="12" cy="12" r="5"></circle><line x1="12" y1="1" x2="12" y2="3"></line><line x1="12" y1="21" x2="12" y2="23"></line><line x1="4.22" y1="4.22" x2="5.64" y2="5.64"></line><line x1="18.36" y1="18.36" x2="19.78" y2="19.78"></line><line x1="1" y1="12" x2="3" y2="12"></line><line x1="21" y1="12" x2="23" y2="12"></line><line x1="4.22" y1="19.78" x2="5.64" y2="18.36"></line><line x1="18.36" y1="5.64" x2="19.78" y2="4.22"></line>',
            sunrise: '<path d="M17 18a5 5 0 0 0-10 0"></path><line x1="12" y1="2" x2="12" y2="9"></line><line x1="4.22" y1="10.22" x2="5.64" y2="11.64"></line><line x1="1" y1="18" x2="3" y2="18"></line><line x1="21" y1="18" x2="23" y2="18"></line><line x1="18.36" y1="11.64" x2="19.78" y2="10.22"></line><line x1="23" y1="22" x2="1" y2="22"></line><polyline points="8 6 12 2 16 6"></polyline>',
            sunset: '<path d="M17 18a5 5 0 0 0-10 0"></path><line x1="12" y1="9" x2="12" y2="2"></line><line x1="4.22" y1="10.22" x2="5.64" y2="11.64"></line><line x1="1" y1="18" x2="3" y2="18"></line><line x1="21" y1="18" x2="23" y2="18"></line><line x1="18.36" y1="11.64" x2="19.78" y2="10.22"></line><line x1="23" y1="22" x2="1" y2="22"></line><polyline points="16 5 12 9 8 5"></polyline>',
            table: '<path d="M9 3H5a2 2 0 0 0-2 2v4m6-6h10a2 2 0 0 1 2 2v4M9 3v18m0 0h10a2 2 0 0 0 2-2V9M9 21H5a2 2 0 0 1-2-2V9m0 0h18"></path>',
            tablet: '<rect x="4" y="2" width="16" height="20" rx="2" ry="2"></rect><line x1="12" y1="18" x2="12.01" y2="18"></line>',
            tag: '<path d="M20.59 13.41l-7.17 7.17a2 2 0 0 1-2.83 0L2 12V2h10l8.59 8.59a2 2 0 0 1 0 2.82z"></path><line x1="7" y1="7" x2="7.01" y2="7"></line>',
            target: '<circle cx="12" cy="12" r="10"></circle><circle cx="12" cy="12" r="6"></circle><circle cx="12" cy="12" r="2"></circle>',
            terminal: '<polyline points="4 17 10 11 4 5"></polyline><line x1="12" y1="19" x2="20" y2="19"></line>',
            thermometer: '<path d="M14 14.76V3.5a2.5 2.5 0 0 0-5 0v11.26a4.5 4.5 0 1 0 5 0z"></path>',
            "thumbs-down": '<path d="M10 15v4a3 3 0 0 0 3 3l4-9V2H5.72a2 2 0 0 0-2 1.7l-1.38 9a2 2 0 0 0 2 2.3zm7-13h2.67A2.31 2.31 0 0 1 22 4v7a2.31 2.31 0 0 1-2.33 2H17"></path>',
            "thumbs-up": '<path d="M14 9V5a3 3 0 0 0-3-3l-4 9v11h11.28a2 2 0 0 0 2-1.7l1.38-9a2 2 0 0 0-2-2.3zM7 22H4a2 2 0 0 1-2-2v-7a2 2 0 0 1 2-2h3"></path>',
            "toggle-left": '<rect x="1" y="5" width="22" height="14" rx="7" ry="7"></rect><circle cx="8" cy="12" r="3"></circle>',
            "toggle-right": '<rect x="1" y="5" width="22" height="14" rx="7" ry="7"></rect><circle cx="16" cy="12" r="3"></circle>',
            tool: '<path d="M14.7 6.3a1 1 0 0 0 0 1.4l1.6 1.6a1 1 0 0 0 1.4 0l3.77-3.77a6 6 0 0 1-7.94 7.94l-6.91 6.91a2.12 2.12 0 0 1-3-3l6.91-6.91a6 6 0 0 1 7.94-7.94l-3.76 3.76z"></path>',
            "trash-2": '<polyline points="3 6 5 6 21 6"></polyline><path d="M19 6v14a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V6m3 0V4a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v2"></path><line x1="10" y1="11" x2="10" y2="17"></line><line x1="14" y1="11" x2="14" y2="17"></line>',
            trash: '<polyline points="3 6 5 6 21 6"></polyline><path d="M19 6v14a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V6m3 0V4a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v2"></path>',
            trello: '<rect x="3" y="3" width="18" height="18" rx="2" ry="2"></rect><rect x="7" y="7" width="3" height="9"></rect><rect x="14" y="7" width="3" height="5"></rect>',
            "trending-down": '<polyline points="23 18 13.5 8.5 8.5 13.5 1 6"></polyline><polyline points="17 18 23 18 23 12"></polyline>',
            "trending-up": '<polyline points="23 6 13.5 15.5 8.5 10.5 1 18"></polyline><polyline points="17 6 23 6 23 12"></polyline>',
            triangle: '<path d="M10.29 3.86L1.82 18a2 2 0 0 0 1.71 3h16.94a2 2 0 0 0 1.71-3L13.71 3.86a2 2 0 0 0-3.42 0z"></path>',
            truck: '<rect x="1" y="3" width="15" height="13"></rect><polygon points="16 8 20 8 23 11 23 16 16 16 16 8"></polygon><circle cx="5.5" cy="18.5" r="2.5"></circle><circle cx="18.5" cy="18.5" r="2.5"></circle>',
            tv: '<rect x="2" y="7" width="20" height="15" rx="2" ry="2"></rect><polyline points="17 2 12 7 7 2"></polyline>',
            twitch: '<path d="M21 2H3v16h5v4l4-4h5l4-4V2zm-10 9V7m5 4V7"></path>',
            twitter: '<path d="M23 3a10.9 10.9 0 0 1-3.14 1.53 4.48 4.48 0 0 0-7.86 3v1A10.66 10.66 0 0 1 3 4s-4 9 5 13a11.64 11.64 0 0 1-7 2c9 5 20 0 20-11.5a4.5 4.5 0 0 0-.08-.83A7.72 7.72 0 0 0 23 3z"></path>',
            type: '<polyline points="4 7 4 4 20 4 20 7"></polyline><line x1="9" y1="20" x2="15" y2="20"></line><line x1="12" y1="4" x2="12" y2="20"></line>',
            umbrella: '<path d="M23 12a11.05 11.05 0 0 0-22 0zm-5 7a3 3 0 0 1-6 0v-7"></path>',
            underline: '<path d="M6 3v7a6 6 0 0 0 6 6 6 6 0 0 0 6-6V3"></path><line x1="4" y1="21" x2="20" y2="21"></line>',
            unlock: '<rect x="3" y="11" width="18" height="11" rx="2" ry="2"></rect><path d="M7 11V7a5 5 0 0 1 9.9-1"></path>',
            "upload-cloud": '<polyline points="16 16 12 12 8 16"></polyline><line x1="12" y1="12" x2="12" y2="21"></line><path d="M20.39 18.39A5 5 0 0 0 18 9h-1.26A8 8 0 1 0 3 16.3"></path><polyline points="16 16 12 12 8 16"></polyline>',
            upload: '<path d="M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4"></path><polyline points="17 8 12 3 7 8"></polyline><line x1="12" y1="3" x2="12" y2="15"></line>',
            "user-check": '<path d="M16 21v-2a4 4 0 0 0-4-4H5a4 4 0 0 0-4 4v2"></path><circle cx="8.5" cy="7" r="4"></circle><polyline points="17 11 19 13 23 9"></polyline>',
            "user-minus": '<path d="M16 21v-2a4 4 0 0 0-4-4H5a4 4 0 0 0-4 4v2"></path><circle cx="8.5" cy="7" r="4"></circle><line x1="23" y1="11" x2="17" y2="11"></line>',
            "user-plus": '<path d="M16 21v-2a4 4 0 0 0-4-4H5a4 4 0 0 0-4 4v2"></path><circle cx="8.5" cy="7" r="4"></circle><line x1="20" y1="8" x2="20" y2="14"></line><line x1="23" y1="11" x2="17" y2="11"></line>',
            "user-x": '<path d="M16 21v-2a4 4 0 0 0-4-4H5a4 4 0 0 0-4 4v2"></path><circle cx="8.5" cy="7" r="4"></circle><line x1="18" y1="8" x2="23" y2="13"></line><line x1="23" y1="8" x2="18" y2="13"></line>',
            user: '<path d="M20 21v-2a4 4 0 0 0-4-4H8a4 4 0 0 0-4 4v2"></path><circle cx="12" cy="7" r="4"></circle>',
            users: '<path d="M17 21v-2a4 4 0 0 0-4-4H5a4 4 0 0 0-4 4v2"></path><circle cx="9" cy="7" r="4"></circle><path d="M23 21v-2a4 4 0 0 0-3-3.87"></path><path d="M16 3.13a4 4 0 0 1 0 7.75"></path>',
            "video-off": '<path d="M16 16v1a2 2 0 0 1-2 2H3a2 2 0 0 1-2-2V7a2 2 0 0 1 2-2h2m5.66 0H14a2 2 0 0 1 2 2v3.34l1 1L23 7v10"></path><line x1="1" y1="1" x2="23" y2="23"></line>',
            video: '<polygon points="23 7 16 12 23 17 23 7"></polygon><rect x="1" y="5" width="15" height="14" rx="2" ry="2"></rect>',
            voicemail: '<circle cx="5.5" cy="11.5" r="4.5"></circle><circle cx="18.5" cy="11.5" r="4.5"></circle><line x1="5.5" y1="16" x2="18.5" y2="16"></line>',
            "volume-1": '<polygon points="11 5 6 9 2 9 2 15 6 15 11 19 11 5"></polygon><path d="M15.54 8.46a5 5 0 0 1 0 7.07"></path>',
            "volume-2": '<polygon points="11 5 6 9 2 9 2 15 6 15 11 19 11 5"></polygon><path d="M19.07 4.93a10 10 0 0 1 0 14.14M15.54 8.46a5 5 0 0 1 0 7.07"></path>',
            "volume-x": '<polygon points="11 5 6 9 2 9 2 15 6 15 11 19 11 5"></polygon><line x1="23" y1="9" x2="17" y2="15"></line><line x1="17" y1="9" x2="23" y2="15"></line>',
            volume: '<polygon points="11 5 6 9 2 9 2 15 6 15 11 19 11 5"></polygon>',
            watch: '<circle cx="12" cy="12" r="7"></circle><polyline points="12 9 12 12 13.5 13.5"></polyline><path d="M16.51 17.35l-.35 3.83a2 2 0 0 1-2 1.82H9.83a2 2 0 0 1-2-1.82l-.35-3.83m.01-10.7l.35-3.83A2 2 0 0 1 9.83 1h4.35a2 2 0 0 1 2 1.82l.35 3.83"></path>',
            "wifi-off": '<line x1="1" y1="1" x2="23" y2="23"></line><path d="M16.72 11.06A10.94 10.94 0 0 1 19 12.55"></path><path d="M5 12.55a10.94 10.94 0 0 1 5.17-2.39"></path><path d="M10.71 5.05A16 16 0 0 1 22.58 9"></path><path d="M1.42 9a15.91 15.91 0 0 1 4.7-2.88"></path><path d="M8.53 16.11a6 6 0 0 1 6.95 0"></path><line x1="12" y1="20" x2="12.01" y2="20"></line>',
            wifi: '<path d="M5 12.55a11 11 0 0 1 14.08 0"></path><path d="M1.42 9a16 16 0 0 1 21.16 0"></path><path d="M8.53 16.11a6 6 0 0 1 6.95 0"></path><line x1="12" y1="20" x2="12.01" y2="20"></line>',
            wind: '<path d="M9.59 4.59A2 2 0 1 1 11 8H2m10.59 11.41A2 2 0 1 0 14 16H2m15.73-8.27A2.5 2.5 0 1 1 19.5 12H2"></path>',
            "x-circle": '<circle cx="12" cy="12" r="10"></circle><line x1="15" y1="9" x2="9" y2="15"></line><line x1="9" y1="9" x2="15" y2="15"></line>',
            "x-octagon": '<polygon points="7.86 2 16.14 2 22 7.86 22 16.14 16.14 22 7.86 22 2 16.14 2 7.86 7.86 2"></polygon><line x1="15" y1="9" x2="9" y2="15"></line><line x1="9" y1="9" x2="15" y2="15"></line>',
            "x-square": '<rect x="3" y="3" width="18" height="18" rx="2" ry="2"></rect><line x1="9" y1="9" x2="15" y2="15"></line><line x1="15" y1="9" x2="9" y2="15"></line>',
            x: '<line x1="18" y1="6" x2="6" y2="18"></line><line x1="6" y1="6" x2="18" y2="18"></line>',
            youtube: '<path d="M22.54 6.42a2.78 2.78 0 0 0-1.94-2C18.88 4 12 4 12 4s-6.88 0-8.6.46a2.78 2.78 0 0 0-1.94 2A29 29 0 0 0 1 11.75a29 29 0 0 0 .46 5.33A2.78 2.78 0 0 0 3.4 19c1.72.46 8.6.46 8.6.46s6.88 0 8.6-.46a2.78 2.78 0 0 0 1.94-2 29 29 0 0 0 .46-5.25 29 29 0 0 0-.46-5.33z"></path><polygon points="9.75 15.02 15.5 11.75 9.75 8.48 9.75 15.02"></polygon>',
            "zap-off": '<polyline points="12.41 6.75 13 2 10.57 4.92"></polyline><polyline points="18.57 12.91 21 10 15.66 10"></polyline><polyline points="8 8 3 14 12 14 11 22 16 16"></polyline><line x1="1" y1="1" x2="23" y2="23"></line>',
            zap: '<polygon points="13 2 3 14 12 14 11 22 21 10 12 10 13 2"></polygon>',
            "zoom-in": '<circle cx="11" cy="11" r="8"></circle><line x1="21" y1="21" x2="16.65" y2="16.65"></line><line x1="11" y1="8" x2="11" y2="14"></line><line x1="8" y1="11" x2="14" y2="11"></line>',
            "zoom-out": '<circle cx="11" cy="11" r="8"></circle><line x1="21" y1="21" x2="16.65" y2="16.65"></line><line x1="8" y1="11" x2="14" y2="11"></line>'
        }
    }, function(e) {
        e.exports = {
            xmlns: "http://www.w3.org/2000/svg",
            width: 24,
            height: 24,
            viewBox: "0 0 24 24",
            fill: "none",
            stroke: "currentColor",
            "stroke-width": 2,
            "stroke-linecap": "round",
            "stroke-linejoin": "round"
        }
    }, function(e, n, i) {
        "use strict";
        Object.defineProperty(n, "__esModule", {
            value: !0
        });
        var t = Object.assign || function(e) {
                for (var n = 1; n < arguments.length; n++) {
                    var i = arguments[n];
                    for (var t in i) Object.prototype.hasOwnProperty.call(i, t) && (e[t] = i[t])
                }
                return e
            },
            l = function() {
                function e(e, n) {
                    for (var i = 0; i < n.length; i++) {
                        var t = n[i];
                        t.enumerable = t.enumerable || !1, t.configurable = !0, "value" in t && (t.writable = !0), Object.defineProperty(e, t.key, t)
                    }
                }
                return function(n, i, t) {
                    return i && e(n.prototype, i), t && e(n, t), n
                }
            }(),
            r = a(i(22)),
            o = a(i(42));

        function a(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        }
        var c = function() {
            function e(n, i) {
                var l = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : [];
                ! function(e, n) {
                    if (!(e instanceof n)) throw new TypeError("Cannot call a class as a function")
                }(this, e), this.name = n, this.contents = i, this.tags = l, this.attrs = t({}, o.default, {
                    class: "feather feather-" + n
                })
            }
            return l(e, [{
                key: "toSvg",
                value: function() {
                    var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
                    return "<svg " + function(e) {
                        return Object.keys(e).map(function(n) {
                            return n + '="' + e[n] + '"'
                        }).join(" ")
                    }(t({}, this.attrs, e, {
                        class: (0, r.default)(this.attrs.class, e.class)
                    })) + ">" + this.contents + "</svg>"
                }
            }, {
                key: "toString",
                value: function() {
                    return this.contents
                }
            }]), e
        }();
        n.default = c
    }, function(e, n, i) {
        "use strict";
        var t = o(i(12)),
            l = o(i(39)),
            r = o(i(38));

        function o(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        }
        e.exports = {
            icons: t.default,
            toSvg: l.default,
            replace: r.default
        }
    }, function(e, n, i) {
        e.exports = i(0)
    }, function(e, n, i) {
        var t = i(2)("iterator"),
            l = !1;
        try {
            var r = 0,
                o = {
                    next: function() {
                        return {
                            done: !!r++
                        }
                    },
                    return: function() {
                        l = !0
                    }
                };
            o[t] = function() {
                return this
            }, Array.from(o, function() {
                throw 2
            })
        } catch (e) {}
        e.exports = function(e, n) {
            if (!n && !l) return !1;
            var i = !1;
            try {
                var r = {};
                r[t] = function() {
                    return {
                        next: function() {
                            return {
                                done: i = !0
                            }
                        }
                    }
                }, e(r)
            } catch (e) {}
            return i
        }
    }, function(e, n, i) {
        var t = i(30),
            l = i(2)("toStringTag"),
            r = "Arguments" == t(function() {
                return arguments
            }());
        e.exports = function(e) {
            var n, i, o;
            return void 0 === e ? "Undefined" : null === e ? "Null" : "string" == typeof(i = function(e, n) {
                try {
                    return e[n]
                } catch (e) {}
            }(n = Object(e), l)) ? i : r ? t(n) : "Object" == (o = t(n)) && "function" == typeof n.callee ? "Arguments" : o
        }
    }, function(e, n, i) {
        var t = i(47),
            l = i(9),
            r = i(2)("iterator");
        e.exports = function(e) {
            if (void 0 != e) return e[r] || e["@@iterator"] || l[t(e)]
        }
    }, function(e, n, i) {
        "use strict";
        var t = i(18),
            l = i(7),
            r = i(10);
        e.exports = function(e, n, i) {
            var o = t(n);
            o in e ? l.f(e, o, r(0, i)) : e[o] = i
        }
    }, function(e, n, i) {
        var t = i(2),
            l = i(9),
            r = t("iterator"),
            o = Array.prototype;
        e.exports = function(e) {
            return void 0 !== e && (l.Array === e || o[r] === e)
        }
    }, function(e, n, i) {
        var t = i(3);
        e.exports = function(e, n, i, l) {
            try {
                return l ? n(t(i)[0], i[1]) : n(i)
            } catch (n) {
                var r = e.return;
                throw void 0 !== r && t(r.call(e)), n
            }
        }
    }, function(e, n) {
        e.exports = function(e) {
            if ("function" != typeof e) throw TypeError(String(e) + " is not a function");
            return e
        }
    }, function(e, n, i) {
        var t = i(52);
        e.exports = function(e, n, i) {
            if (t(e), void 0 === n) return e;
            switch (i) {
                case 0:
                    return function() {
                        return e.call(n)
                    };
                case 1:
                    return function(i) {
                        return e.call(n, i)
                    };
                case 2:
                    return function(i, t) {
                        return e.call(n, i, t)
                    };
                case 3:
                    return function(i, t, l) {
                        return e.call(n, i, t, l)
                    }
            }
            return function() {
                return e.apply(n, arguments)
            }
        }
    }, function(e, n, i) {
        "use strict";
        var t = i(53),
            l = i(24),
            r = i(51),
            o = i(50),
            a = i(27),
            c = i(49),
            p = i(48);
        e.exports = function(e) {
            var n, i, y, h, x = l(e),
                s = "function" == typeof this ? this : Array,
                u = arguments.length,
                d = u > 1 ? arguments[1] : void 0,
                f = void 0 !== d,
                g = 0,
                v = p(x);
            if (f && (d = t(d, u > 2 ? arguments[2] : void 0, 2)), void 0 == v || s == Array && o(v))
                for (i = new s(n = a(x.length)); n > g; g++) c(i, g, f ? d(x[g], g) : x[g]);
            else
                for (h = v.call(x), i = new s; !(y = h.next()).done; g++) c(i, g, f ? r(h, d, [y.value, g], !0) : y.value);
            return i.length = g, i
        }
    }, function(e, n, i) {
        var t = i(32),
            l = i(54);
        t({
            target: "Array",
            stat: !0,
            forced: !i(46)(function(e) {
                Array.from(e)
            })
        }, {
            from: l
        })
    }, function(e, n, i) {
        var t = i(6),
            l = i(3);
        e.exports = function(e, n) {
            if (l(e), !t(n) && null !== n) throw TypeError("Can't set " + String(n) + " as a prototype")
        }
    }, function(e, n, i) {
        var t = i(56);
        e.exports = Object.setPrototypeOf || ("__proto__" in {} ? function() {
            var e, n = !1,
                i = {};
            try {
                (e = Object.getOwnPropertyDescriptor(Object.prototype, "__proto__").set).call(i, []), n = i instanceof Array
            } catch (e) {}
            return function(i, l) {
                return t(i, l), n ? e.call(i, l) : i.__proto__ = l, i
            }
        }() : void 0)
    }, function(e, n, i) {
        var t = i(0).document;
        e.exports = t && t.documentElement
    }, function(e, n, i) {
        var t = i(28),
            l = i(13);
        e.exports = Object.keys || function(e) {
            return t(e, l)
        }
    }, function(e, n, i) {
        var t = i(8),
            l = i(7),
            r = i(3),
            o = i(59);
        e.exports = t ? Object.defineProperties : function(e, n) {
            r(e);
            for (var i, t = o(n), a = t.length, c = 0; a > c;) l.f(e, i = t[c++], n[i]);
            return e
        }
    }, function(e, n, i) {
        var t = i(3),
            l = i(60),
            r = i(13),
            o = i(15),
            a = i(58),
            c = i(34),
            p = i(16)("IE_PROTO"),
            y = function() {},
            h = function() {
                var e, n = c("iframe"),
                    i = r.length;
                for (n.style.display = "none", a.appendChild(n), n.src = String("javascript:"), (e = n.contentWindow.document).open(), e.write("<script>document.F=Object<\/script>"), e.close(), h = e.F; i--;) delete h.prototype[r[i]];
                return h()
            };
        e.exports = Object.create || function(e, n) {
            var i;
            return null !== e ? (y.prototype = t(e), i = new y, y.prototype = null, i[p] = e) : i = h(), void 0 === n ? i : l(i, n)
        }, o[p] = !0
    }, function(e, n, i) {
        var t = i(4);
        e.exports = !!Object.getOwnPropertySymbols && !t(function() {
            return !String(Symbol())
        })
    }, function(e, n, i) {
        var t = i(4);
        e.exports = !t(function() {
            function e() {}
            return e.prototype.constructor = null, Object.getPrototypeOf(new e) !== e.prototype
        })
    }, function(e, n, i) {
        "use strict";
        var t = i(26).IteratorPrototype,
            l = i(61),
            r = i(10),
            o = i(23),
            a = i(9),
            c = function() {
                return this
            };
        e.exports = function(e, n, i) {
            var p = n + " Iterator";
            return e.prototype = l(t, {
                next: r(1, i)
            }), o(e, p, !1, !0), a[p] = c, e
        }
    }, function(e, n, i) {
        var t = i(4),
            l = /#|\.prototype\./,
            r = function(e, n) {
                var i = a[o(e)];
                return i == p || i != c && ("function" == typeof n ? t(n) : !!n)
            },
            o = r.normalize = function(e) {
                return String(e).replace(l, ".").toLowerCase()
            },
            a = r.data = {},
            c = r.NATIVE = "N",
            p = r.POLYFILL = "P";
        e.exports = r
    }, function(e, n) {
        n.f = Object.getOwnPropertySymbols
    }, function(e, n, i) {
        var t = i(21),
            l = Math.max,
            r = Math.min;
        e.exports = function(e, n) {
            var i = t(e);
            return i < 0 ? l(i + n, 0) : r(i, n)
        }
    }, function(e, n, i) {
        var t = i(14),
            l = i(27),
            r = i(67);
        e.exports = function(e) {
            return function(n, i, o) {
                var a, c = t(n),
                    p = l(c.length),
                    y = r(o, p);
                if (e && i != i) {
                    for (; p > y;)
                        if ((a = c[y++]) != a) return !0
                } else
                    for (; p > y; y++)
                        if ((e || y in c) && c[y] === i) return e || y || 0;
                return !e && -1
            }
        }
    }, function(e, n, i) {
        var t = i(28),
            l = i(13).concat("length", "prototype");
        n.f = Object.getOwnPropertyNames || function(e) {
            return t(e, l)
        }
    }, function(e, n, i) {
        var t = i(0),
            l = i(69),
            r = i(66),
            o = i(3),
            a = t.Reflect;
        e.exports = a && a.ownKeys || function(e) {
            var n = l.f(o(e)),
                i = r.f;
            return i ? n.concat(i(e)) : n
        }
    }, function(e, n, i) {
        var t = i(1),
            l = i(70),
            r = i(31),
            o = i(7);
        e.exports = function(e, n) {
            for (var i = l(n), a = o.f, c = r.f, p = 0; p < i.length; p++) {
                var y = i[p];
                t(e, y) || a(e, y, c(n, y))
            }
        }
    }, function(e, n, i) {
        var t = i(4),
            l = i(30),
            r = "".split;
        e.exports = t(function() {
            return !Object("z").propertyIsEnumerable(0)
        }) ? function(e) {
            return "String" == l(e) ? r.call(e, "") : Object(e)
        } : Object
    }, function(e, n, i) {
        "use strict";
        var t = {}.propertyIsEnumerable,
            l = Object.getOwnPropertyDescriptor,
            r = l && !t.call({
                1: 2
            }, 1);
        n.f = r ? function(e) {
            var n = l(this, e);
            return !!n && n.enumerable
        } : t
    }, function(e, n, i) {
        "use strict";
        var t = i(32),
            l = i(64),
            r = i(25),
            o = i(57),
            a = i(23),
            c = i(5),
            p = i(29),
            y = i(2),
            h = i(17),
            x = i(9),
            s = i(26),
            u = s.IteratorPrototype,
            d = s.BUGGY_SAFARI_ITERATORS,
            f = y("iterator"),
            g = function() {
                return this
            };
        e.exports = function(e, n, i, y, s, v, m) {
            l(i, n, y);
            var w, M, b, z = function(e) {
                    if (e === s && O) return O;
                    if (!d && e in H) return H[e];
                    switch (e) {
                        case "keys":
                        case "values":
                        case "entries":
                            return function() {
                                return new i(this, e)
                            }
                    }
                    return function() {
                        return new i(this)
                    }
                },
                A = n + " Iterator",
                k = !1,
                H = e.prototype,
                V = H[f] || H["@@iterator"] || s && H[s],
                O = !d && V || z(s),
                j = "Array" == n && H.entries || V;
            if (j && (w = r(j.call(new e)), u !== Object.prototype && w.next && (h || r(w) === u || (o ? o(w, u) : "function" != typeof w[f] && c(w, f, g)), a(w, A, !0, !0), h && (x[A] = g))), "values" == s && V && "values" !== V.name && (k = !0, O = function() {
                    return V.call(this)
                }), h && !m || H[f] === O || c(H, f, O), x[n] = O, s)
                if (M = {
                        values: z("values"),
                        keys: v ? O : z("keys"),
                        entries: z("entries")
                    }, m)
                    for (b in M) !d && !k && b in H || p(H, b, M[b]);
                else t({
                    target: n,
                    proto: !0,
                    forced: d || k
                }, M);
            return M
        }
    }, function(e, n) {
        var i;
        i = function() {
            return this
        }();
        try {
            i = i || Function("return this")() || (0, eval)("this")
        } catch (e) {
            "object" == typeof window && (i = window)
        }
        e.exports = i
    }, function(e, n, i) {
        var t = i(0),
            l = i(36),
            r = t.WeakMap;
        e.exports = "function" == typeof r && /native code/.test(l.call(r))
    }, function(e, n, i) {
        var t = i(21),
            l = i(20);
        e.exports = function(e, n, i) {
            var r, o, a = String(l(e)),
                c = t(n),
                p = a.length;
            return c < 0 || c >= p ? i ? "" : void 0 : (r = a.charCodeAt(c)) < 55296 || r > 56319 || c + 1 === p || (o = a.charCodeAt(c + 1)) < 56320 || o > 57343 ? i ? a.charAt(c) : r : i ? a.slice(c, c + 2) : o - 56320 + (r - 55296 << 10) + 65536
        }
    }, function(e, n, i) {
        "use strict";
        var t = i(77),
            l = i(37),
            r = i(74),
            o = l.set,
            a = l.getterFor("String Iterator");
        r(String, "String", function(e) {
            o(this, {
                type: "String Iterator",
                string: String(e),
                index: 0
            })
        }, function() {
            var e, n = a(this),
                i = n.string,
                l = n.index;
            return l >= i.length ? {
                value: void 0,
                done: !0
            } : (e = t(i, l, !0), n.index += e.length, {
                value: e,
                done: !1
            })
        })
    }, function(e, n, i) {
        i(78), i(55);
        var t = i(45);
        e.exports = t.Array.from
    }, function(e, n, i) {
        i(79), e.exports = i(44)
    }])
});
//# sourceMappingURL=feather.min.js.map
(function($) {
    'use strict';
    $(function() {
        var body = $('body');
        var mainWrapper = $('.main-wrapper');
        var footer = $('footer');
        var sidebar = $('.sidebar');
        var navbar = $('.navbar').not('.top-navbar');


        // Enable feather-icons with SVG markup
        feather.replace();


        // initialize clipboard plugin
        if ($('.btn-clipboard').length) {
            // Enabling tooltip to all clipboard buttons
            $('.btn-clipboard').attr('data-bs-toggle', 'tooltip').attr('title', 'کپی در کلیپ بورد');

            var clipboard = new ClipboardJS('.btn-clipboard');

            clipboard.on('success', function(e) {
                console.log(e);
                e.trigger.innerHTML = 'کپی شد';
                setTimeout(function() {
                    e.trigger.innerHTML = 'کپی';
                    e.clearSelection();
                }, 700)
            });
        }


        // initializing bootstrap tooltip
        var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'))
        var tooltipList = tooltipTriggerList.map(function(tooltipTriggerEl) {
            return new bootstrap.Tooltip(tooltipTriggerEl)
        })


        // initializing bootstrap popover
        var popoverTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="popover"]'))
        var popoverList = popoverTriggerList.map(function(popoverTriggerEl) {
            return new bootstrap.Popover(popoverTriggerEl)
        })


        // Applying perfect-scrollbar 
        if ($('.sidebar .sidebar-body').length) {
            const sidebarBodyScroll = new PerfectScrollbar('.sidebar-body');
        }
        // commented beacuse of hang (scroll from  dropdown.html with small height)
        // if ($('.content-nav-wrapper').length) {
        //   const contentNavWrapper = new PerfectScrollbar('.content-nav-wrapper');
        // }


        // Close other submenu in sidebar on opening any
        sidebar.on('show.bs.collapse', '.collapse', function() {
            sidebar.find('.collapse.show').collapse('hide');
        });


        // Sidebar toggle to sidebar-folded
        $('.sidebar-toggler').on('click', function(e) {
            e.preventDefault();
            $('.sidebar-header .sidebar-toggler').toggleClass('active not-active');
            if (window.matchMedia('(min-width: 992px)').matches) {
                e.preventDefault();
                body.toggleClass('sidebar-folded');
            } else if (window.matchMedia('(max-width: 991px)').matches) {
                e.preventDefault();
                body.toggleClass('sidebar-open');
            }
        });


        // commmented because of apex chart width issue in desktop (in lg not in xl)
        // // sidebar-folded on large devices
        // function iconSidebar(e) {
        //   if (e.matches) {
        //     body.addClass('sidebar-folded');
        //   } else {
        //     body.removeClass('sidebar-folded');
        //   }
        // }
        // var desktopMedium = window.matchMedia('(min-width:992px) and (max-width: 1199px)');
        // desktopMedium.addListener(iconSidebar);
        // iconSidebar(desktopMedium);


        // Settings sidebar toggle
        $('.settings-sidebar-toggler').on('click', function(e) {
            $('body').toggleClass('settings-open');
        });


        // Sidebar theme settings
        $("input:radio[name=sidebarThemeSettings]").click(function() {
            $('body').removeClass('sidebar-light sidebar-dark');
            $('body').addClass($(this).val());
        })



        //Add active class to nav-link based on url dynamically
        function addActiveClass(element) {
            if (current === "") {
                //for root url
                if (element.attr('href').indexOf("index.html") !== -1) {
                    element.parents('.nav-item').last().addClass('active');
                    if (element.parents('.sub-menu').length) {
                        element.closest('.collapse').addClass('show');
                        element.addClass('active');
                    }
                }
            } else {
                //for other url
                if (element.attr('href').indexOf(current) !== -1) {
                    element.parents('.nav-item').last().addClass('active');
                    if (element.parents('.sub-menu').length) {
                        element.closest('.collapse').addClass('show');
                        element.addClass('active');
                    }
                    if (element.parents('.submenu-item').length) {
                        element.addClass('active');
                    }
                }
            }
        }

        var current = location.pathname.split("/").slice(-1)[0].replace(/^\/|\/$/g, '');
        $('.nav li a', sidebar).each(function() {
            var $this = $(this);
            addActiveClass($this);
        });

        $('.horizontal-menu .nav li a').each(function() {
            var $this = $(this);
            addActiveClass($this);
        })


        //  open sidebar-folded when hover
        $(".sidebar .sidebar-body").hover(
            function() {
                if (body.hasClass('sidebar-folded')) {
                    body.addClass("open-sidebar-folded");
                }
            },
            function() {
                if (body.hasClass('sidebar-folded')) {
                    body.removeClass("open-sidebar-folded");
                }
            });


        // close sidebar when click outside on mobile/table    
        $(document).on('click touchstart', function(e) {
            e.stopPropagation();

            // closing of sidebar menu when clicking outside of it
            if (!$(e.target).closest('.sidebar-toggler').length) {
                var sidebar = $(e.target).closest('.sidebar').length;
                var sidebarBody = $(e.target).closest('.sidebar-body').length;
                if (!sidebar && !sidebarBody) {
                    if ($('body').hasClass('sidebar-open')) {
                        $('body').removeClass('sidebar-open');
                    }
                }
            }
        });


        //Horizontal menu in mobile
        $('[data-toggle="horizontal-menu-toggle"]').on("click", function() {
            $(".horizontal-menu .bottom-navbar").toggleClass("header-toggled");
        });
        // Horizontal menu navigation in mobile menu on click
        var navItemClicked = $('.horizontal-menu .page-navigation >.nav-item');
        navItemClicked.on("click", function(event) {
            if (window.matchMedia('(max-width: 991px)').matches) {
                if (!($(this).hasClass('show-submenu'))) {
                    navItemClicked.removeClass('show-submenu');
                }
                $(this).toggleClass('show-submenu');
            }
        })

        $(window).scroll(function() {
            if (window.matchMedia('(min-width: 992px)').matches) {
                var header = $('.horizontal-menu');
                if ($(window).scrollTop() >= 60) {
                    $(header).addClass('fixed-on-scroll');
                } else {
                    $(header).removeClass('fixed-on-scroll');
                }
            }
        });

        // tarikh
        $(".tarikh").persianDatepicker({
            format: "YYYY/MM/DD",
            autoclose: true
        });


        // Prevent body scrolling while sidebar scroll
        // $('.sidebar .sidebar-body').hover(function () {
        //   $('body').addClass('overflow-hidden');
        // }, function () {
        //   $('body').removeClass('overflow-hidden');
        // });


    });
})(jQuery);
/*
Template Name: Minia - Bootstrap 5 Admin & Dashboard Template
Author: Themesbrand
Version: 1.0.0
Website: https://themesbrand.com/
Contact: themesbrand@gmail.com
File: Main Js File
*/

(function ($) {

    'use strict';

    var language = localStorage.getItem('language');
    // Default Language
    var default_lang = 'en';

    function setLanguage(lang) {
        if (document.getElementById("header-lang-img")) {
            if (lang == 'en') {
                document.getElementById("header-lang-img").src = "assets/images/flags/us.jpg";
            } else if (lang == 'sp') {
                document.getElementById("header-lang-img").src = "assets/images/flags/spain.jpg";
            } else if (lang == 'gr') {
                document.getElementById("header-lang-img").src = "assets/images/flags/germany.jpg";
            } else if (lang == 'it') {
                document.getElementById("header-lang-img").src = "assets/images/flags/italy.jpg";
            } else if (lang == 'ru') {
                document.getElementById("header-lang-img").src = "assets/images/flags/russia.jpg";
            }
            localStorage.setItem('language', lang);
            language = localStorage.getItem('language');
            getLanguage();
        }
    }

    // Multi language setting
    function getLanguage() {
        (language == null) ? setLanguage(default_lang): false;
        $.getJSON('assets/lang/' + language + '.json', function (lang) {
            $('html').attr('lang', language);
            $.each(lang, function (index, val) {
                (index === 'head') ? $(document).attr("title", val['title']): false;
                $("[data-key='" + index + "']").text(val);
            });
        });
    }

    function initMetisMenu() {
        //metis menu
        $("#side-menu").metisMenu();
    }

    function initCounterNumber() {
        var counter = document.querySelectorAll('.counter-value');
        var speed = 250; // The lower the slower
        counter.forEach(function (counter_value) {
            function updateCount() {
                var target = +counter_value.getAttribute('data-target');
                var count = +counter_value.innerText;
                var inc = target / speed;
                if (inc < 1) {
                    inc = 1;
                }
                // Check if target is reached
                if (count < target) {
                    // Add inc to count and output in counter_value
                    counter_value.innerText = (count + inc).toFixed(0);
                    // Call function every ms
                    setTimeout(updateCount, 1);
                } else {
                    counter_value.innerText = target;
                }
            };
            updateCount();
        });
    }

    function initLeftMenuCollapse() {
        var currentSIdebarSize = document.body.getAttribute('data-sidebar-size');
        $(window).on('load', function () {

            $('.switch').on('switch-change', function () {
                toggleWeather();
            });

            if (window.innerWidth >= 1024 && window.innerWidth <= 1366) {
                document.body.setAttribute('data-sidebar-size', 'sm');
                updateRadio('sidebar-size-small')
            }
        });

        $('#vertical-menu-btn').on('click', function (event) {
            event.preventDefault();
            $('body').toggleClass('sidebar-enable');
            if ($(window).width() >= 992) {
                if (currentSIdebarSize == null) {
                    (document.body.getAttribute('data-sidebar-size') == null || document.body.getAttribute('data-sidebar-size') == "lg") ? document.body.setAttribute('data-sidebar-size', 'sm'): document.body.setAttribute('data-sidebar-size', 'lg')
                } else if (currentSIdebarSize == "md") {
                    (document.body.getAttribute('data-sidebar-size') == "md") ? document.body.setAttribute('data-sidebar-size', 'sm'): document.body.setAttribute('data-sidebar-size', 'md')
                } else {
                    (document.body.getAttribute('data-sidebar-size') == "sm") ? document.body.setAttribute('data-sidebar-size', 'lg'): document.body.setAttribute('data-sidebar-size', 'sm')
                }
            } else {
                // $('body').removeClass('vertical-collpsed');
                // document.body.removeAttribute('data-sidebar-size')
            }
        });
    }

    function initActiveMenu() {
        // === following js will activate the menu in left side bar based on url ====
        $("#sidebar-menu a").each(function () {
            var pageUrl = window.location.href.split(/[?#]/)[0];
            if (this.href == pageUrl) {
                $(this).addClass("active");
                $(this).parent().addClass("mm-active"); // add active to li of the current link
                $(this).parent().parent().addClass("mm-show");
                $(this).parent().parent().prev().addClass("mm-active"); // add active class to an anchor
                $(this).parent().parent().parent().addClass("mm-active");
                $(this).parent().parent().parent().parent().addClass("mm-show"); // add active to li of the current link
                $(this).parent().parent().parent().parent().parent().addClass("mm-active");
            }
        });
    }

    function initMenuItemScroll() {
        // focus active menu in left sidebar
        $(document).ready(function () {
            if ($("#sidebar-menu").length > 0 && $("#sidebar-menu .mm-active .active").length > 0) {
                var activeMenu = $("#sidebar-menu .mm-active .active").offset().top;
                if (activeMenu > 300) {
                    activeMenu = activeMenu - 300;
                    $(".vertical-menu .simplebar-content-wrapper").animate({
                        scrollTop: activeMenu
                    }, "slow");
                }
            }
        });
    }

    function initHoriMenuActive() {
        $(".navbar-nav a").each(function () {
            var pageUrl = window.location.href.split(/[?#]/)[0];
            if (this.href == pageUrl) {
                $(this).addClass("active");
                $(this).parent().addClass("active");
                $(this).parent().parent().addClass("active");
                $(this).parent().parent().parent().addClass("active");
                $(this).parent().parent().parent().parent().addClass("active");
                $(this).parent().parent().parent().parent().parent().addClass("active");
                $(this).parent().parent().parent().parent().parent().parent().addClass("active");
            }
        });
    }

    function initFullScreen() {
        $('[data-toggle="fullscreen"]').on("click", function (e) {
            e.preventDefault();
            $('body').toggleClass('fullscreen-enable');
            if (!document.fullscreenElement && /* alternative standard method */ !document.mozFullScreenElement && !document.webkitFullscreenElement) { // current working methods
                if (document.documentElement.requestFullscreen) {
                    document.documentElement.requestFullscreen();
                } else if (document.documentElement.mozRequestFullScreen) {
                    document.documentElement.mozRequestFullScreen();
                } else if (document.documentElement.webkitRequestFullscreen) {
                    document.documentElement.webkitRequestFullscreen(Element.ALLOW_KEYBOARD_INPUT);
                }
            } else {
                if (document.cancelFullScreen) {
                    document.cancelFullScreen();
                } else if (document.mozCancelFullScreen) {
                    document.mozCancelFullScreen();
                } else if (document.webkitCancelFullScreen) {
                    document.webkitCancelFullScreen();
                }
            }
        });
        document.addEventListener('fullscreenchange', exitHandler);
        document.addEventListener("webkitfullscreenchange", exitHandler);
        document.addEventListener("mozfullscreenchange", exitHandler);

        function exitHandler() {
            if (!document.webkitIsFullScreen && !document.mozFullScreen && !document.msFullscreenElement) {
                $('body').removeClass('fullscreen-enable');
            }
        }
    }

    function initDropdownMenu() {
        if (document.getElementById("topnav-menu-content")) {
            var elements = document.getElementById("topnav-menu-content").getElementsByTagName("a");
            for (var i = 0, len = elements.length; i < len; i++) {
                elements[i].onclick = function (elem) {
                    if (elem && elem.target && elem.target.getAttribute("href") === "#") {
                        elem.target.parentElement.classList.toggle("active");
                        if(elem.target.nextElementSibling)
                        elem.target.nextElementSibling.classList.toggle("show");
                    }
                }
            }
            window.addEventListener("resize", updateMenu);
        }
    }

    function updateMenu() {
        var elements = document.getElementById("topnav-menu-content").getElementsByTagName("a");
        for (var i = 0, len = elements.length; i < len; i++) {
            if (elements[i] && elements[i].parentElement && elements[i].parentElement.getAttribute("class") === "nav-item dropdown active") {
                elements[i].parentElement.classList.remove("active");
                if(elements[i].nextElementSibling)
                elements[i].nextElementSibling.classList.remove("show");
            }
        }
    }

    function initComponents() {
        // tooltip
        var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'))
        var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {
            return new bootstrap.Tooltip(tooltipTriggerEl)
        });

        // popover
        var popoverTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="popover"]'))
        var popoverList = popoverTriggerList.map(function (popoverTriggerEl) {
            return new bootstrap.Popover(popoverTriggerEl)
        });

        // toast
        var toastElList = [].slice.call(document.querySelectorAll('.toast'))
        var toastList = toastElList.map(function (toastEl) {
            return new bootstrap.Toast(toastEl)
        })
    }

    function initPreloader() {
        $(window).on('load', function () {
            $('#status').fadeOut();
            $('#preloader').delay(350).fadeOut('slow');
        });
    }

    function initSettings() {
        if (window.sessionStorage) {
            var alreadyVisited = sessionStorage.getItem("is_visited");
            if (!alreadyVisited) {
                sessionStorage.setItem("is_visited", "layout-ltr");
            } else {
                $("#" + alreadyVisited).prop('checked', true);
                // changeDirection(alreadyVisited);
            }
        }
    }

    function initLanguage() {
        // Auto Loader
        if (language != null && language !== default_lang)
            setLanguage(language);
        $('.language').on('click', function (e) {
            setLanguage($(this).attr('data-lang'));
        });
    }

    function initCheckAll() {
        $('#checkAll').on('change', function () {
            $('.table-check .form-check-input').prop('checked', $(this).prop("checked"));
        });
        $('.table-check .form-check-input').change(function () {
            if ($('.table-check .form-check-input:checked').length == $('.table-check .form-check-input').length) {
                $('#checkAll').prop('checked', true);
            } else {
                $('#checkAll').prop('checked', false);
            }
        });
    }

    function updateRadio(radioId) {
        document.getElementById(radioId).checked = true;
    }

    function layoutSetting() {
        var body = document.getElementsByTagName("body")[0];
        // right side-bar toggle
        $('.right-bar-toggle').on('click', function (e) {
            $('body').toggleClass('right-bar-enabled');
        });

        $('#mode-setting-btn').on('click', function (e) {
            if(body.hasAttribute("data-layout-mode") && body.getAttribute("data-layout-mode") == "dark") {
                document.body.setAttribute('data-layout-mode', 'light');
                document.body.setAttribute('data-topbar', 'light');
                document.body.setAttribute('data-sidebar', 'light');
                (body.hasAttribute("data-layout") && body.getAttribute("data-layout") == "horizontal") ? '' : document.body.setAttribute('data-sidebar', 'light');
                updateRadio('topbar-color-light')
                updateRadio('sidebar-color-light')
            } else {
                document.body.setAttribute('data-layout-mode', 'dark');
                document.body.setAttribute('data-topbar', 'dark');
                document.body.setAttribute('data-sidebar', 'dark');
                (body.hasAttribute("data-layout") && body.getAttribute("data-layout") == "horizontal") ? '' : document.body.setAttribute('data-sidebar', 'dark');
                updateRadio('layout-mode-dark')
                updateRadio('sidebar-color-dark')
            }
        });

        $(document).on('click', 'body', function (e) {
            if ($(e.target).closest('.right-bar-toggle, .right-bar').length > 0) {
                return;
            }
            $('body').removeClass('right-bar-enabled');
            return;
        });

        if(body.hasAttribute("data-layout") && body.getAttribute("data-layout") == "horizontal") {
            updateRadio('layout-horizontal');
            $(".sidebar-setting").hide();
        } else {
            updateRadio('layout-vertical');
        }
        (body.hasAttribute("data-layout-mode") && body.getAttribute("data-layout-mode") == "dark") ? updateRadio('layout-mode-dark'): updateRadio('layout-mode-light');
        (body.hasAttribute("data-layout-size") && body.getAttribute("data-layout-size") == "boxed") ? updateRadio('layout-width-boxed'): updateRadio('layout-width-fuild');
        (body.hasAttribute("data-layout-scrollable") && body.getAttribute("data-layout-scrollable") == "true") ? updateRadio('layout-position-scrollable'): updateRadio('layout-position-fixed');
        (body.hasAttribute("data-topbar") && body.getAttribute("data-topbar") == "dark") ? updateRadio('topbar-color-dark'): updateRadio('topbar-color-light');
        (body.hasAttribute("data-sidebar-size") && body.getAttribute("data-sidebar-size") == "sm") ? updateRadio('sidebar-size-small') : (body.hasAttribute("data-sidebar-size") && body.getAttribute("data-sidebar-size") == "md") ? updateRadio('sidebar-size-compact') : updateRadio('sidebar-size-default');
        (body.hasAttribute("data-sidebar") && body.getAttribute("data-sidebar") == "brand") ? updateRadio('sidebar-color-brand') : (body.hasAttribute("data-sidebar") && body.getAttribute("data-sidebar") == "dark") ? updateRadio('sidebar-color-dark') : updateRadio('sidebar-color-light');
        (document.getElementsByTagName("html")[0].hasAttribute("dir") && document.getElementsByTagName("html")[0].getAttribute("dir") == "rtl") ? updateRadio('layout-direction-rtl'): updateRadio('layout-direction-ltr');

        // on layou change
        $("input[name='layout']").on('change', function () {
            window.location.href = ($(this).val() == "vertical") ? "index.php": "layouts-horizontal.php";
        });

        // on layout mode change
        $("input[name='layout-mode']").on('change', function () {
            if($(this).val() == "light") {
                document.body.setAttribute('data-layout-mode', 'light');
                document.body.setAttribute('data-topbar', 'light');
                document.body.setAttribute('data-sidebar', 'light');
                (body.hasAttribute("data-layout") && body.getAttribute("data-layout") == "horizontal") ? '' : document.body.setAttribute('data-sidebar', 'light');
                updateRadio('topbar-color-light')
                updateRadio('sidebar-color-light')
            } else {
                document.body.setAttribute('data-layout-mode', 'dark');
                document.body.setAttribute('data-topbar', 'dark');
                document.body.setAttribute('data-sidebar', 'dark');
                (body.hasAttribute("data-layout") && body.getAttribute("data-layout") == "horizontal") ? '' : document.body.setAttribute('data-sidebar', 'dark');
                updateRadio('topbar-color-dark')
                updateRadio('sidebar-color-dark')
            }
        });

        // on RTL-LTR mode change
        $("input[name='layout-direction']").on('change', function () {
            if($(this).val() == "ltr") {
                document.getElementsByTagName("html")[0].removeAttribute("dir");
                document.getElementById('bootstrap-style').setAttribute('href', 'assets/css/bootstrap.min.css');
                document.getElementById('app-style').setAttribute('href', 'assets/css/app.min.css');
            } else {
                document.getElementById('bootstrap-style').setAttribute('href', 'assets/css/bootstrap-rtl.min.css');
                document.getElementById('app-style').setAttribute('href', 'assets/css/app-rtl.min.css');
                document.getElementsByTagName("html")[0].setAttribute("dir", "rtl");
            }
        });
    }

    function init() {
        initMetisMenu();
        initCounterNumber();
        initLeftMenuCollapse();
        initActiveMenu();
        initMenuItemScroll();
        initHoriMenuActive();
        initFullScreen();
        initDropdownMenu();
        initComponents();
        initSettings();
        initLanguage();
        initPreloader();
        layoutSetting();
        Waves.init();
        initCheckAll();
    }

    init();

})(jQuery)


feather.replace()
